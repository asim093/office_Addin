{"version":3,"file":"taskpane.js","mappings":"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A0BF,EAAa9K,eASlK,OARA,aAAgB,KACZ,IAAKA,aAAuD,EAASA,EAAeyE,cAAgBsG,EAAS1iG,QACzG,OAAO6hG,GAA0Ba,EAAS1iG,QAAS23F,EAAeyE,YACtE,GACD,CACCsG,EACA/K,IAEG+K,CACX,CCRW,SAASE,GAAOliG,EAAOnD,GAC9B,MAAM,aAAEoC,EAAY,YAAEw3F,GAAgB55F,EAChCuC,EAuCC,SAA0BY,GACjC,MAAqB,iBAAVA,GAAuC,iBAAVA,GAAsBwhC,MAAMkuD,QAAQ1vF,IAC5E,iBAAqBA,GACV,CACH0N,SAAU1N,GAWXA,CACX,CAvDkBmiG,CAAiBniG,GAMvBoiG,EAAoB,IACrBnjG,KACAG,EACH,CAACy2F,IAA2BY,GAMhC,OAJIr3F,GAAmC,mBAAnBA,EAAMsO,WACtB00F,EAAkBxM,IAA+Bx2F,EAAMsO,SACvD00F,EAAkB10F,SAAWzO,aAAmD,EAASA,EAAayO,UAEnG00F,CACX,CC3BA,MAAMC,GAAc,IAAIhP,KACpB,MAAM9kF,EAAS,CAAC,EAChB,IAAK,MAAMhI,KAAQ8sF,EAAM,CACrB,MAAMhvF,EAAOm9B,MAAMkuD,QAAQnpF,GAAQA,EAAOnJ,OAAOiH,KAAKkC,GACtD,IAAK,MAAMnI,KAAOiG,EACdkK,EAAOnQ,GAAO,CAEtB,CACA,OAAOmQ,CAAM,EAMA+zF,GAAoBD,GAAY,CAC7C,aACA,iBACA,mBACA,SACA,QACA,UACA,mBACA,qBACA,sBACA,UACA,iBACA,SACA,gBACA,WACA,UACA,WACA,SACA,UACA,YACA,mBACA,aACA,UACA,UACA,YACA,mBACA,mBACA,YACA,cACA,UACA,eACA,mBACA,cACA,UACA,SACA,YACA,aACA,eACA,WACA,YACA,YACA,YACA,eACA,iBACA,YACA,UACA,iBACA,gBACA,gBACA,SACA,YACA,cACA,aACA,cACA,aACA,cACA,SACA,cACA,qBACA,eACA,eACA,cACA,aACA,cACA,YACA,mBACA,WACA,gBACA,aACA,cACA,eACA,WACA,UACA,kBACA,gBACA,iBACA,iBACA,gBACA,eACA,gBACA,cACA,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","sources":["webpack://office-addin-taskpane-react-js/./node_modules/react-dom/client.js","webpack://office-addin-taskpane-react-js/./node_modules/style-loader/dist/runtime/insertStyleElement.js","webpack://office-addin-taskpane-react-js/./node_modules/react-router/node_modules/cookie/dist/index.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/SignOut/index.scss","webpack://office-addin-taskpane-react-js/./node_modules/react/cjs/react-jsx-runtime.production.min.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Export/ExcelImport.scss","webpack://office-addin-taskpane-react-js/./src/taskpane/components/MultiSelectDropdown/MultiSelectDropdown.scss","webpack://office-addin-taskpane-react-js/./node_modules/react-is/cjs/react-is.production.min.js","webpack://office-addin-taskpane-react-js/./src/taskpane/office-init.js","webpack://office-addin-taskpane-react-js/./node_modules/style-loader/dist/runtime/styleTagTransform.js","webpack://office-addin-taskpane-react-js/./node_modules/react-is/index.js","webpack://office-addin-taskpane-react-js/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/App.css","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Tabs/CustomTabs.scss","webpack://office-addin-taskpane-react-js/./node_modules/css-loader/dist/runtime/sourceMaps.js","webpack://office-addin-taskpane-react-js/./node_modules/react/jsx-runtime.js","webpack://office-addin-taskpane-react-js/./node_modules/css-loader/dist/runtime/api.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/ExpandableTable/ExpandableTable.scss","webpack://office-addin-taskpane-react-js/./node_modules/style-loader/dist/runtime/insertBySelector.js","webpack://office-addin-taskpane-react-js/./node_modules/react-router/dist/development/chunk-K6CSEXPM.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/Constants.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/logger/Logger.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/ProtocolMode.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/AuthorityOptions.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/AuthErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/AuthError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/ClientAuthErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/ClientAuthError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/crypto/ICrypto.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/packageMetadata.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/account/AuthToken.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/TimeUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/cache/utils/CacheHelpers.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/ClientConfigurationErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/ClientConfigurationError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/StringUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/request/ScopeSet.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/account/ClientInfo.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/account/AccountInfo.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/account/TokenClaims.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/cache/entities/AccountEntity.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/AuthorityType.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/UrlUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/url/UrlString.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/AuthorityMetadata.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/CacheErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/CacheError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/cache/CacheManager.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/config/ClientConfiguration.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/network/INetworkModule.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/telemetry/performance/PerformanceEvent.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/telemetry/performance/StubPerformanceClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/utils/BrowserConstants.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/navigation/NavigationClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/NetworkError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/error/BrowserAuthErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/error/BrowserAuthError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/network/FetchClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/encode/Base64Encode.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/encode/Base64Decode.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/crypto/BrowserCrypto.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/error/BrowserConfigurationAuthError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/utils/BrowserUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/config/Configuration.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/packageMetadata.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/operatingcontext/BaseOperatingContext.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/operatingcontext/StandardOperatingContext.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/JoseHeaderErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/JoseHeaderError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/crypto/JoseHeader.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/DatabaseStorage.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/MemoryStorage.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/AsyncMemoryStorage.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/crypto/CryptoOps.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/FunctionWrappers.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/RegionDiscovery.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/Authority.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/OpenIdConfigResponse.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryResponse.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/CloudInstanceDiscoveryErrorResponse.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/InteractionRequiredAuthError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/network/RequestThumbprint.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/ProtocolUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/account/CcsCredential.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/CookieStorage.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/CacheHelpers.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/LocalStorage.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/SessionStorage.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/utils/BrowserProtocolUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/event/EventType.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/BrowserCacheManager.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/event/EventHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/error/ServerError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/network/ThrottlingUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/constants/AADServerParamKeys.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/request/RequestValidator.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/request/RequestParameterBuilder.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/authority/AuthorityFactory.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/client/BaseClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/crypto/PopTokenGenerator.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/cache/persistence/TokenCacheContext.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/response/ResponseHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/utils/ClientAssertionUtils.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/client/AuthorizationCodeClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/telemetry/server/ServerTelemetryManager.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/BaseInteractionClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/crypto/PkceGenerator.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/request/RequestHelpers.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/StandardInteractionClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/error/NativeAuthErrorCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/error/NativeAuthError.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeStatusCodes.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/client/SilentFlowClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/SilentCacheClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/NativeInteractionClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/broker/nativeBroker/NativeMessageHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_handler/InteractionHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/response/ResponseHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/PopupClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_handler/RedirectHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/RedirectClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_handler/SilentHandler.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/SilentIframeClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-common/dist/client/RefreshTokenClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/SilentRefreshClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/TokenCache.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/HybridSpaAuthorizationCodeClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/interaction_client/SilentAuthCodeClient.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/controllers/StandardController.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/cache/AccountManager.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/app/PublicClientApplication.mjs","webpack://office-addin-taskpane-react-js/./node_modules/@azure/msal-browser/dist/controllers/ControllerFactory.mjs","webpack://office-addin-taskpane-react-js/./node_modules/jwt-decode/build/esm/index.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Home/HomeScreen.scss?25b5","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Home/HomeScreen.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/App.css?57a1","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Export/ExcelImport.scss?4dcc","webpack://office-addin-taskpane-react-js/./src/taskpane/components/MultiSelectDropdown/MultiSelectDropdown.scss?af15","webpack://office-addin-taskpane-react-js/./src/taskpane/components/MultiSelectDropdown/MultiSelectDropdown.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Tabs/CustomTabs.scss?3f96","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Tabs/CustomTabs.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/ExpandableTable/ExpandableTable.scss?bc0e","webpack://office-addin-taskpane-react-js/./src/taskpane/components/ExpandableTable/ExpandableTable.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Export/Export.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Export/ExportExcel.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/SignOut/index.scss?9f35","webpack://office-addin-taskpane-react-js/./src/taskpane/components/SignOut/SignOutUser.js","webpack://office-addin-taskpane-react-js/./src/taskpane/components/App.jsx","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/compose/constants.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/compose/isSlot.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/jsx/createJSX.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/utils/createCompatSlotComponent.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/utils/getMetadataFromSlotComponent.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/utils/Runtime.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/jsx-runtime.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/jsx/jsxSlot.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-jsx-runtime/lib/jsx/jsxsSlot.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/ssr/canUseDOM.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/react/TextDirectionContext.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-shared-contexts/lib/ProviderContext/ProviderContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-shared-contexts/lib/ThemeContext/ThemeContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-shared-contexts/lib/ThemeClassNameContext/ThemeClassNameContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-shared-contexts/lib/CustomStyleHooksContext/CustomStyleHooksContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-shared-contexts/lib/TooltipVisibilityContext/TooltipContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-shared-contexts/lib/OverridesContext/OverridesContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-icons/lib/contexts/IconDirectionContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/constants.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/renderer/getStyleSheetForBucket.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/renderer/createIsomorphicStyleSheet.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/renderer/safeInsertRule.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/renderer/createDOMRenderer.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/runtime/utils/normalizeCSSBucketEntry.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/react/RendererContext.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/utils/isHTMLElement.js","webpack://office-addin-taskpane-react-js/./node_modules/keyborg/dist/esm/index.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-tabster/lib/focus/constants.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-tabster/lib/focus/focusVisiblePolyfill.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-tabster/lib/hooks/useFocusVisible.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/compose/slot.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/utils/properties.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/utils/getNativeElementProps.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/compose/getIntrinsicElementProps.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/hooks/useMergedRefs.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/hooks/useIsomorphicLayoutEffect.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/ssr/SSRContext.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-utilities/lib/hooks/useId.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/insertionFactory.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/runtime/utils/hashSequence.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@emotion/hash/dist/emotion-hash.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/runtime/reduceToClassNameForSlots.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/__styles.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@griffel/core/mergeClasses.esm.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderStyles.styles.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderThemeStyleTag.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProvider.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/createCSSRuleFromTheme.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/FluentProvider.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/useFluentProviderContextValues.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/react-provider/lib/components/FluentProvider/renderFluentProvider.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/colors.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/colorPalette.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/statusColorMapping.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/alias/lightColorPalette.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/sharedColorNames.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/alias/lightColor.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/borderRadius.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/fonts.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/strokeWidths.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/utils/shadows.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/durations.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/curves.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/spacings.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/themes/web/lightTheme.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/utils/createLightTheme.js","webpack://office-addin-taskpane-react-js/./node_modules/@fluentui/tokens/lib/global/brandColors.js","webpack://office-addin-taskpane-react-js/./src/taskpane/index.jsx","webpack://office-addin-taskpane-react-js/./src/taskpane/components/Home/HomeScreen.scss","webpack://office-addin-taskpane-react-js/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js","webpack://office-addin-taskpane-react-js/./node_modules/style-loader/dist/runtime/styleDomAPI.js"],"sourcesContent":["'use strict';\r\n\r\nvar m = require('react-dom');\r\nif (process.env.NODE_ENV === 'production') {\r\n  exports.createRoot = m.createRoot;\r\n  exports.hydrateRoot = m.hydrateRoot;\r\n} else {\r\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\r\n  exports.createRoot = function(c, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.createRoot(c, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n  exports.hydrateRoot = function(c, h, o) {\r\n    i.usingClientEntryPoint = true;\r\n    try {\r\n      return m.hydrateRoot(c, h, o);\r\n    } finally {\r\n      i.usingClientEntryPoint = false;\r\n    }\r\n  };\r\n}\r\n","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction insertStyleElement(options) {\r\n  var element = document.createElement(\"style\");\r\n  options.setAttributes(element, options.attributes);\r\n  options.insert(element, options.options);\r\n  return element;\r\n}\r\nmodule.exports = insertStyleElement;","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n/**\r\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\r\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\r\n * which has been replaced by the token definition in RFC 7230 appendix B.\r\n *\r\n * cookie-name       = token\r\n * token             = 1*tchar\r\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\r\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\r\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\r\n *\r\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\r\n * Allow same range as cookie value, except `=`, which delimits end of name.\r\n */\r\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\r\n/**\r\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\r\n *\r\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\r\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\r\n *                     ; US-ASCII characters excluding CTLs,\r\n *                     ; whitespace DQUOTE, comma, semicolon,\r\n *                     ; and backslash\r\n *\r\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\r\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\r\n */\r\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\r\n/**\r\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\r\n *\r\n * domain-value      = <subdomain>\r\n *                     ; defined in [RFC1034], Section 3.5, as\r\n *                     ; enhanced by [RFC1123], Section 2.1\r\n * <subdomain>       = <label> | <subdomain> \".\" <label>\r\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\r\n *                     Labels must be 63 characters or less.\r\n *                     'let-dig' not 'letter' in the first char, per RFC1123\r\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\r\n * <let-dig-hyp>     = <let-dig> | \"-\"\r\n * <let-dig>         = <letter> | <digit>\r\n * <letter>          = any one of the 52 alphabetic characters A through Z in\r\n *                     upper case and a through z in lower case\r\n * <digit>           = any one of the ten digits 0 through 9\r\n *\r\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\r\n *\r\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\r\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\r\n * cause the user agent to ignore the attribute.)\r\n */\r\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\r\n/**\r\n * RegExp to match path-value in RFC 6265 sec 4.1.1\r\n *\r\n * path-value        = <any CHAR except CTLs or \";\">\r\n * CHAR              = %x01-7F\r\n *                     ; defined in RFC 5234 appendix B.1\r\n */\r\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\r\nconst __toString = Object.prototype.toString;\r\nconst NullObject = /* @__PURE__ */ (() => {\r\n    const C = function () { };\r\n    C.prototype = Object.create(null);\r\n    return C;\r\n})();\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n */\r\nfunction parse(str, options) {\r\n    const obj = new NullObject();\r\n    const len = str.length;\r\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\r\n    if (len < 2)\r\n        return obj;\r\n    const dec = options?.decode || decode;\r\n    let index = 0;\r\n    do {\r\n        const eqIdx = str.indexOf(\"=\", index);\r\n        if (eqIdx === -1)\r\n            break; // No more cookie pairs.\r\n        const colonIdx = str.indexOf(\";\", index);\r\n        const endIdx = colonIdx === -1 ? len : colonIdx;\r\n        if (eqIdx > endIdx) {\r\n            // backtrack on prior semicolon\r\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\r\n            continue;\r\n        }\r\n        const keyStartIdx = startIndex(str, index, eqIdx);\r\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\r\n        const key = str.slice(keyStartIdx, keyEndIdx);\r\n        // only assign once\r\n        if (obj[key] === undefined) {\r\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\r\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\r\n            const value = dec(str.slice(valStartIdx, valEndIdx));\r\n            obj[key] = value;\r\n        }\r\n        index = endIdx + 1;\r\n    } while (index < len);\r\n    return obj;\r\n}\r\nfunction startIndex(str, index, max) {\r\n    do {\r\n        const code = str.charCodeAt(index);\r\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\r\n            return index;\r\n    } while (++index < max);\r\n    return max;\r\n}\r\nfunction endIndex(str, index, min) {\r\n    while (index > min) {\r\n        const code = str.charCodeAt(--index);\r\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\r\n            return index + 1;\r\n    }\r\n    return min;\r\n}\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specifies cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n */\r\nfunction serialize(name, val, options) {\r\n    const enc = options?.encode || encodeURIComponent;\r\n    if (!cookieNameRegExp.test(name)) {\r\n        throw new TypeError(`argument name is invalid: ${name}`);\r\n    }\r\n    const value = enc(val);\r\n    if (!cookieValueRegExp.test(value)) {\r\n        throw new TypeError(`argument val is invalid: ${val}`);\r\n    }\r\n    let str = name + \"=\" + value;\r\n    if (!options)\r\n        return str;\r\n    if (options.maxAge !== undefined) {\r\n        if (!Number.isInteger(options.maxAge)) {\r\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\r\n        }\r\n        str += \"; Max-Age=\" + options.maxAge;\r\n    }\r\n    if (options.domain) {\r\n        if (!domainValueRegExp.test(options.domain)) {\r\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\r\n        }\r\n        str += \"; Domain=\" + options.domain;\r\n    }\r\n    if (options.path) {\r\n        if (!pathValueRegExp.test(options.path)) {\r\n            throw new TypeError(`option path is invalid: ${options.path}`);\r\n        }\r\n        str += \"; Path=\" + options.path;\r\n    }\r\n    if (options.expires) {\r\n        if (!isDate(options.expires) ||\r\n            !Number.isFinite(options.expires.valueOf())) {\r\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\r\n        }\r\n        str += \"; Expires=\" + options.expires.toUTCString();\r\n    }\r\n    if (options.httpOnly) {\r\n        str += \"; HttpOnly\";\r\n    }\r\n    if (options.secure) {\r\n        str += \"; Secure\";\r\n    }\r\n    if (options.partitioned) {\r\n        str += \"; Partitioned\";\r\n    }\r\n    if (options.priority) {\r\n        const priority = typeof options.priority === \"string\"\r\n            ? options.priority.toLowerCase()\r\n            : undefined;\r\n        switch (priority) {\r\n            case \"low\":\r\n                str += \"; Priority=Low\";\r\n                break;\r\n            case \"medium\":\r\n                str += \"; Priority=Medium\";\r\n                break;\r\n            case \"high\":\r\n                str += \"; Priority=High\";\r\n                break;\r\n            default:\r\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\r\n        }\r\n    }\r\n    if (options.sameSite) {\r\n        const sameSite = typeof options.sameSite === \"string\"\r\n            ? options.sameSite.toLowerCase()\r\n            : options.sameSite;\r\n        switch (sameSite) {\r\n            case true:\r\n            case \"strict\":\r\n                str += \"; SameSite=Strict\";\r\n                break;\r\n            case \"lax\":\r\n                str += \"; SameSite=Lax\";\r\n                break;\r\n            case \"none\":\r\n                str += \"; SameSite=None\";\r\n                break;\r\n            default:\r\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\r\n        }\r\n    }\r\n    return str;\r\n}\r\n/**\r\n * URL-decode string value. Optimized to skip native call when no %.\r\n */\r\nfunction decode(str) {\r\n    if (str.indexOf(\"%\") === -1)\r\n        return str;\r\n    try {\r\n        return decodeURIComponent(str);\r\n    }\r\n    catch (e) {\r\n        return str;\r\n    }\r\n}\r\n/**\r\n * Determine if value is a Date.\r\n */\r\nfunction isDate(val) {\r\n    return __toString.call(val) === \"[object Date]\";\r\n}\r\n//# sourceMappingURL=index.js.map","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".profile-container{display:flex;flex-direction:column;align-items:center;padding:20px;font-family:Arial,sans-serif}.profile-container .back-button{display:flex;align-items:center;width:100%;cursor:pointer;margin-bottom:20px}.profile-container .back-button img{width:20px;height:20px;margin-right:10px}.profile-container .back-button span{font-size:16px;font-weight:bold}.profile-container .profile-info{text-align:center}.profile-container .profile-info .profile-avatar{width:80px;height:80px;border-radius:50%;background-color:#d5d8fc;padding:10px}.profile-container .profile-info h2{font-size:20px;margin-top:10px;font-weight:600;font-size:16px;color:#242424}.profile-container .profile-info p{font-weight:400;font-size:12px;color:#424242;font-size:14px}.profile-container .profile-details{background:#fafafa;padding:15px;border-radius:10px;width:100%;max-width:300px;margin-top:20px}.profile-container .profile-details .detail-row{display:flex;justify-content:space-between;padding:5px 0}.profile-container .profile-details .detail-row .label{color:#707070;font-size:12px;font-weight:600}.profile-container .profile-details .detail-row .label_line{color:#000;font-size:12px;font-weight:600}.profile-container .signout-button{display:flex;align-items:center;justify-content:center;margin-top:20px;padding:10px;width:100%;max-width:300px;border:1px solid #ccc;background:#fff;border-radius:8px;color:#000;cursor:pointer;font-size:14px;font-weight:600}.profile-container .signout-button img{width:20px;margin-right:10px}.profile-container .signout-button:hover{background:#f0f0f0}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/SignOut/index.scss\"],\"names\":[],\"mappings\":\"AAAA,mBACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,YAAA,CACA,4BAAA,CAEA,gCACE,YAAA,CACA,kBAAA,CACA,UAAA,CACA,cAAA,CACA,kBAAA,CAEA,oCACE,UAAA,CACA,WAAA,CACA,iBAAA,CAGF,qCACE,cAAA,CACA,gBAAA,CAIJ,iCACE,iBAAA,CAEA,iDACE,UAAA,CACA,WAAA,CACA,iBAAA,CACA,wBAAA,CACA,YAAA,CAGF,oCACE,cAAA,CACA,eAAA,CACA,eAAA,CACA,cAAA,CACA,aAAA,CAGF,mCACE,eAAA,CACA,cAAA,CACA,aAAA,CACA,cAAA,CAIJ,oCACE,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,UAAA,CACA,eAAA,CACA,eAAA,CAEA,gDACE,YAAA,CACA,6BAAA,CACA,aAAA,CAEA,uDACE,aAAA,CACA,cAAA,CACA,eAAA,CAGF,4DACI,UAAA,CACA,cAAA,CACA,eAAA,CAKR,mCACE,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,eAAA,CACA,YAAA,CACA,UAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CACA,iBAAA,CACA,UAAA,CACA,cAAA,CACA,cAAA,CACA,eAAA,CAGA,uCACE,UAAA,CACA,iBAAA,CAGF,yCACE,kBAAA\",\"sourcesContent\":[\".profile-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    padding: 20px;\\r\\n    font-family: Arial, sans-serif;\\r\\n  \\r\\n    .back-button {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      width: 100%;\\r\\n      cursor: pointer;\\r\\n      margin-bottom: 20px;\\r\\n      \\r\\n      img {\\r\\n        width: 20px;\\r\\n        height: 20px;\\r\\n        margin-right: 10px;\\r\\n      }\\r\\n  \\r\\n      span {\\r\\n        font-size: 16px;\\r\\n        font-weight: bold;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .profile-info {\\r\\n      text-align: center;\\r\\n  \\r\\n      .profile-avatar {\\r\\n        width: 80px;\\r\\n        height: 80px;\\r\\n        border-radius: 50%;\\r\\n        background-color: #d5d8fc;\\r\\n        padding: 10px;\\r\\n      }\\r\\n  \\r\\n      h2 {\\r\\n        font-size: 20px;\\r\\n        margin-top: 10px;\\r\\n        font-weight: 600;\\r\\n        font-size: 16px;\\r\\n        color: rgba(36, 36, 36, 1);\\r\\n      }\\r\\n  \\r\\n      p {\\r\\n        font-weight: 400;\\r\\n        font-size: 12px;\\r\\n        color: rgba(66, 66, 66, 1);\\r\\n        font-size: 14px;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .profile-details {\\r\\n      background: rgba(250, 250, 250, 1);\\r\\n      padding: 15px;\\r\\n      border-radius: 10px;\\r\\n      width: 100%;\\r\\n      max-width: 300px;\\r\\n      margin-top: 20px;\\r\\n  \\r\\n      .detail-row {\\r\\n        display: flex;\\r\\n        justify-content: space-between;\\r\\n        padding: 5px 0;\\r\\n  \\r\\n        .label {\\r\\n          color: rgba(112, 112, 112, 1);\\r\\n          font-size: 12px;\\r\\n          font-weight: 600;\\r\\n\\r\\n        }\\r\\n        .label_line {\\r\\n            color: rgba(0, 0, 0, 1);\\r\\n            font-size: 12px;\\r\\n            font-weight: 600;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .signout-button {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      justify-content: center;\\r\\n      margin-top: 20px;\\r\\n      padding: 10px;\\r\\n      width: 100%;\\r\\n      max-width: 300px;\\r\\n      border: 1px solid #ccc;\\r\\n      background: white;\\r\\n      border-radius: 8px;\\r\\n      color: rgba(0, 0, 0, 1);\\r\\n      cursor: pointer;\\r\\n      font-size: 14px;\\r\\n      font-weight: 600;\\r\\n      \\r\\n  \\r\\n      img {\\r\\n        width: 20px;\\r\\n        margin-right: 10px;\\r\\n      }\\r\\n  \\r\\n      &:hover {\\r\\n        background: #f0f0f0;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/**\r\n * @license React\r\n * react-jsx-runtime.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\r\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".excel-import-container{font-family:Arial,sans-serif;max-width:450px;margin:auto;padding:20px;height:auto}.excel-import-container .success-message{display:flex;align-items:center;background:#e6f4ea;padding:10px;border-radius:5px;margin-bottom:20px}.excel-import-container .success-message img{width:16px;height:16px}.excel-import-container .success-message .dismiss-icon{margin-left:auto;cursor:pointer}.excel-import-container .success-message span{margin-left:10px;color:#242424;font-weight:bold}.excel-import-container .user-info{display:flex;align-items:center;background:#f5f5f5;padding:10px;border-radius:10px;margin-bottom:20px}.excel-import-container .user-info .user-icon{width:40px;height:40px;border-radius:50%;margin-right:10px}.excel-import-container .user-info .user-details{flex-grow:1}.excel-import-container .user-info .user-details .user-name{font-weight:400;font-size:14px;color:#242424}.excel-import-container .user-info .user-details .user-role{font-weight:400;font-size:12px;color:#424242}.excel-import-container .user-info .help-icon{width:18px;height:18px;cursor:pointer}.excel-import-container .import-section h2{margin-bottom:5px;font-weight:600;font-size:20px;color:#242424}.excel-import-container .import-section p{font-weight:400;font-size:14px;color:#424242}.excel-import-container .import-section .import-btn{display:flex;align-items:center;background:#295cb7;color:#fff;border:none;padding:10px;border-radius:5px;cursor:pointer;justify-content:center;width:100%;margin:10px 0;font-size:14px;font-weight:600;color:#fff}.excel-import-container .import-section .import-btn img{width:20px;margin-right:10px}.excel-import-container .import-section .update-btn{display:flex;align-items:center;background:#fff;color:#000;border:1px solid #d2d2d2;justify-content:center;padding:10px;border-radius:5px;cursor:pointer;width:100%;font-size:16px;font-weight:600}.excel-import-container .import-section .update-btn img{width:18px;margin-right:10px}.excel-import-container .import-section .last-update{font-size:12px;color:#424242;margin-top:10px;text-align:center}.excel-import-container .imported-items{margin-top:20px}.excel-import-container .imported-items h2{margin-bottom:5px;font-weight:600;font-size:20px;color:#242424}.excel-import-container .imported-items p{font-weight:400;font-size:14px;color:#424242}.linked-fields-table{font-family:Arial,sans-serif;width:400px;background:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 10px rgba(0,0,0,.1)}.header{display:flex;align-items:center;gap:8px;margin-bottom:10px}.header input{width:16px;height:16px;cursor:pointer}.header label{font-size:14px;cursor:pointer}.insert-btn{width:100%;background:#005cc5;color:#fff;border:none;padding:10px;border-radius:5px;display:flex;align-items:center;justify-content:center;cursor:pointer;margin-bottom:10px;transition:background .3s ease}.insert-btn:hover{background:#004099}.insert-btn img{width:20px;margin-right:5px}.table-container{border-top:1px solid #ddd}.table-header{display:flex;justify-content:space-between;font-weight:bold;padding:10px;background:#f5f5f5}.update-icon{width:18px;cursor:pointer}.table-row{display:flex;justify-content:space-between;padding:10px;border-bottom:1px solid #ddd;align-items:center;cursor:pointer;transition:background .3s ease}.table-row:hover{background:#f1f1f1}.search-icon{width:16px;cursor:pointer}.expanded-info{background:#f9f9f9;padding:10px;border-left:3px solid #005cc5;display:flex;flex-direction:column;gap:5px;margin-top:5px}.expanded-info .table-icon{width:30px}.expanded-info p{margin:0;font-size:14px}.linked-fields-table{font-family:Arial,sans-serif;width:100%;max-width:400px;background:#fff;border-radius:8px;padding:15px;box-shadow:0 2px 10px rgba(0,0,0,.1)}.table-header{display:flex;justify-content:space-between;font-weight:bold;padding:10px;background:#f5f5f5;border-radius:5px}.update-icon{width:18px;cursor:pointer}.table-row{display:flex;justify-content:space-between;padding:10px;border-bottom:1px solid #ddd;align-items:center;transition:background .3s ease;cursor:pointer}.table-row:hover{background:#f1f1f1}.icons{display:flex;gap:8px}.search-icon{width:16px;cursor:pointer}.arrow-icon{width:16px;cursor:pointer;transition:transform .3s ease}.arrow-icon.rotated{transform:rotate(180deg)}.expanded-info{background:#f9f9f9;padding:10px;border-left:3px solid #005cc5;display:flex;flex-direction:column;gap:5px;margin-top:5px}.expanded-info .table-icon{width:30px}.expanded-info p{margin:0;font-size:14px}.LoggedSuccessfully{font-weight:600;font-size:12px;color:#242424}.m-minus-t{margin-bottom:-8px}.button-container{display:flex;flex-direction:column;gap:10px;align-items:start}.checkbox-container{display:flex;align-items:center;gap:8px;font-size:16px;margin-top:10px;cursor:pointer}.checkbox-container input{display:none}.checkbox-container .checkbox-icon{width:20px;height:20px}.insert-button{display:flex;align-items:center;gap:8px;background-color:#2d64c3;color:#fff;border:none;padding:12px 24px;justify-content:center;width:100%;font-size:16px;font-weight:600;color:#fff;cursor:pointer;margin:12px 0px;border-radius:6px}.insert-button img{width:20px;height:20px}.main-loading-container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;width:100%;margin:auto}.disabled_image{display:none}.maxWidth_rt{width:20px;height:20px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/Export/ExcelImport.scss\"],\"names\":[],\"mappings\":\"AAAA,wBACI,4BAAA,CACA,eAAA,CACA,WAAA,CACA,YAAA,CACA,WAAA,CAEA,yCACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,YAAA,CACA,iBAAA,CACA,kBAAA,CAEA,6CACE,UAAA,CACA,WAAA,CAGF,uDACE,gBAAA,CACA,cAAA,CAGF,8CACE,gBAAA,CACA,aAAA,CACA,gBAAA,CAIJ,mCACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,YAAA,CACA,kBAAA,CACA,kBAAA,CAEA,8CACE,UAAA,CACA,WAAA,CACA,iBAAA,CACA,iBAAA,CAGF,iDACE,WAAA,CAEA,4DAEE,eAAA,CACA,cAAA,CACA,aAAA,CAGF,4DACE,eAAA,CACA,cAAA,CACA,aAAA,CAIJ,8CACE,UAAA,CACA,WAAA,CACA,cAAA,CAKF,2CACE,iBAAA,CACA,eAAA,CACA,cAAA,CACA,aAAA,CAEF,0CAEE,eAAA,CACA,cAAA,CACA,aAAA,CAGF,oDACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,YAAA,CACA,iBAAA,CACA,cAAA,CACA,sBAAA,CACA,UAAA,CACA,aAAA,CACA,cAAA,CACA,eAAA,CACA,UAAA,CACA,wDACE,UAAA,CACA,iBAAA,CAIJ,oDACE,YAAA,CACA,kBAAA,CACA,eAAA,CAEA,UAAA,CACA,wBAAA,CACA,sBAAA,CACA,YAAA,CACA,iBAAA,CACA,cAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CAEA,wDACE,UAAA,CACA,iBAAA,CAKJ,qDACE,cAAA,CACA,aAAA,CACA,eAAA,CACA,iBAAA,CAKJ,wCACE,eAAA,CAEA,2CACE,iBAAA,CACA,eAAA,CACN,cAAA,CACA,aAAA,CAGI,0CACE,eAAA,CACA,cAAA,CACA,aAAA,CAIN,qBACA,4BAAA,CACA,WAAA,CACA,eAAA,CACA,iBAAA,CACA,YAAA,CACA,oCAAA,CAGF,QACE,YAAA,CACA,kBAAA,CACA,OAAA,CACA,kBAAA,CAEA,cACE,UAAA,CACA,WAAA,CACA,cAAA,CAGF,cACE,cAAA,CACA,cAAA,CAIJ,YACE,UAAA,CACA,kBAAA,CACA,UAAA,CACA,WAAA,CACA,YAAA,CACA,iBAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,kBAAA,CACA,8BAAA,CAEA,kBACE,kBAAA,CAGF,gBACE,UAAA,CACA,gBAAA,CAIJ,iBACE,yBAAA,CAGF,cACE,YAAA,CACA,6BAAA,CACA,gBAAA,CACA,YAAA,CACA,kBAAA,CAGF,aACE,UAAA,CACA,cAAA,CAGF,WACE,YAAA,CACA,6BAAA,CACA,YAAA,CACA,4BAAA,CACA,kBAAA,CACA,cAAA,CACA,8BAAA,CAEA,iBACE,kBAAA,CAIJ,aACE,UAAA,CACA,cAAA,CAGF,eACE,kBAAA,CACA,YAAA,CACA,6BAAA,CACA,YAAA,CACA,qBAAA,CACA,OAAA,CACA,cAAA,CAEA,2BACE,UAAA,CAGF,iBACE,QAAA,CACA,cAAA,CAGJ,qBACE,4BAAA,CACA,UAAA,CACA,eAAA,CACA,eAAA,CACA,iBAAA,CACA,YAAA,CACA,oCAAA,CAGF,cACE,YAAA,CACA,6BAAA,CACA,gBAAA,CACA,YAAA,CACA,kBAAA,CACA,iBAAA,CAGF,aACE,UAAA,CACA,cAAA,CAGF,WACE,YAAA,CACA,6BAAA,CACA,YAAA,CACA,4BAAA,CACA,kBAAA,CACA,8BAAA,CACA,cAAA,CAEA,iBACE,kBAAA,CAIJ,OACE,YAAA,CACA,OAAA,CAGF,aACE,UAAA,CACA,cAAA,CAGF,YACE,UAAA,CACA,cAAA,CACA,6BAAA,CAEA,oBACE,wBAAA,CAIJ,eACE,kBAAA,CACA,YAAA,CACA,6BAAA,CACA,YAAA,CACA,qBAAA,CACA,OAAA,CACA,cAAA,CAEA,2BACE,UAAA,CAGF,iBACE,QAAA,CACA,cAAA,CAKJ,oBACE,eAAA,CACA,cAAA,CACA,aAAA,CAGF,WACE,kBAAA,CAGF,kBACE,YAAA,CACA,qBAAA,CACA,QAAA,CACA,iBAAA,CAGF,oBACE,YAAA,CACA,kBAAA,CACA,OAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEA,0BACE,YAAA,CAGF,mCACE,UAAA,CACA,WAAA,CAIJ,eACE,YAAA,CACA,kBAAA,CACA,OAAA,CACA,wBAAA,CACA,UAAA,CACA,WAAA,CACA,iBAAA,CACA,sBAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CACA,UAAA,CACA,cAAA,CACA,eAAA,CACA,iBAAA,CAEA,mBACE,UAAA,CACA,WAAA,CAKJ,wBACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,YAAA,CACA,UAAA,CACA,WAAA,CAGF,gBACE,YAAA,CAGF,aACE,UAAA,CACA,WAAA\",\"sourcesContent\":[\".excel-import-container {\\r\\n    font-family: Arial, sans-serif;\\r\\n    max-width: 450px;\\r\\n    margin: auto;\\r\\n    padding: 20px;\\r\\n    height: auto;\\r\\n    \\r\\n    .success-message {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      background: #e6f4ea;\\r\\n      padding: 10px;\\r\\n      border-radius: 5px;\\r\\n      margin-bottom: 20px;\\r\\n      \\r\\n      img {\\r\\n        width: 16px;\\r\\n        height: 16px;\\r\\n      }\\r\\n  \\r\\n      .dismiss-icon {\\r\\n        margin-left: auto;\\r\\n        cursor: pointer;\\r\\n      }\\r\\n  \\r\\n      span {\\r\\n        margin-left: 10px;\\r\\n        color: rgba(36, 36, 36, 1);\\r\\n        font-weight: bold;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .user-info {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      background: #f5f5f5;\\r\\n      padding: 10px;\\r\\n      border-radius: 10px;\\r\\n      margin-bottom: 20px;\\r\\n  \\r\\n      .user-icon {\\r\\n        width: 40px;\\r\\n        height: 40px;\\r\\n        border-radius: 50%;\\r\\n        margin-right: 10px;\\r\\n      }\\r\\n  \\r\\n      .user-details {\\r\\n        flex-grow: 1;\\r\\n        \\r\\n        .user-name {\\r\\n          // font-weight: bold;\\r\\n          font-weight: 400;\\r\\n          font-size: 14px;\\r\\n          color: rgba(36, 36, 36, 1)\\r\\n        }\\r\\n  \\r\\n        .user-role {\\r\\n          font-weight: 400;\\r\\n          font-size: 12px;\\r\\n          color:rgba(66, 66, 66, 1)\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .help-icon {\\r\\n        width: 18px;\\r\\n        height: 18px;\\r\\n        cursor: pointer;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .import-section {\\r\\n      h2 {\\r\\n        margin-bottom: 5px;\\r\\n        font-weight: 600;\\r\\n        font-size: 20px;\\r\\n        color:rgba(36, 36, 36, 1)\\r\\n      }\\r\\n      p {\\r\\n        \\r\\n        font-weight: 400;\\r\\n        font-size: 14px;\\r\\n        color:rgba(66, 66, 66, 1);\\r\\n      }\\r\\n  \\r\\n      .import-btn {\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        background:rgba(41, 92, 183, 1);\\r\\n        color: white;\\r\\n        border: none;\\r\\n        padding: 10px;\\r\\n        border-radius: 5px;\\r\\n        cursor: pointer;\\r\\n        justify-content: center;\\r\\n        width: 100%;\\r\\n        margin: 10px 0;\\r\\n        font-size: 14px;\\r\\n        font-weight: 600;\\r\\n        color: #fff;\\r\\n        img {\\r\\n          width: 20px;\\r\\n          margin-right: 10px;\\r\\n        }\\r\\n      }\\r\\n  \\r\\n      .update-btn {\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        background: #fff;\\r\\n\\r\\n        color: rgba(0, 0, 0, 1);\\r\\n        border: 1px solid rgba(210, 210, 210, 1);\\r\\n        justify-content: center;\\r\\n        padding: 10px;\\r\\n        border-radius: 5px;\\r\\n        cursor: pointer;\\r\\n        width: 100%;\\r\\n        font-size: 16px;\\r\\n        font-weight: 600;\\r\\n  \\r\\n        img {\\r\\n          width: 18px;\\r\\n          margin-right: 10px;\\r\\n        }\\r\\n      }\\r\\n      \\r\\n  \\r\\n      .last-update {\\r\\n        font-size: 12px;\\r\\n        color: rgba(66, 66, 66, 1);\\r\\n        margin-top: 10px;\\r\\n        text-align: center;\\r\\n\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .imported-items {\\r\\n      margin-top: 20px;\\r\\n  \\r\\n      h2 {\\r\\n        margin-bottom: 5px;\\r\\n        font-weight: 600;\\r\\n  font-size: 20px;\\r\\n  color: rgba(36, 36, 36, 1);\\r\\n      }\\r\\n  \\r\\n      p {\\r\\n        font-weight: 400;\\r\\n        font-size: 14px;\\r\\n        color: rgba(66, 66, 66, 1)\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  .linked-fields-table {\\r\\n  font-family: Arial, sans-serif;\\r\\n  width: 400px;\\r\\n  background: #ffffff;\\r\\n  border-radius: 8px;\\r\\n  padding: 15px;\\r\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.header {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 8px;\\r\\n  margin-bottom: 10px;\\r\\n\\r\\n  input {\\r\\n    width: 16px;\\r\\n    height: 16px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n\\r\\n  label {\\r\\n    font-size: 14px;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n}\\r\\n\\r\\n.insert-btn {\\r\\n  width: 100%;\\r\\n  background: #005cc5;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  padding: 10px;\\r\\n  border-radius: 5px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  cursor: pointer;\\r\\n  margin-bottom: 10px;\\r\\n  transition: background 0.3s ease;\\r\\n\\r\\n  &:hover {\\r\\n    background: #004099;\\r\\n  }\\r\\n\\r\\n  img {\\r\\n    width: 20px;\\r\\n    margin-right: 5px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.table-container {\\r\\n  border-top: 1px solid #ddd;\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  font-weight: bold;\\r\\n  padding: 10px;\\r\\n  background: #f5f5f5;\\r\\n}\\r\\n\\r\\n.update-icon {\\r\\n  width: 18px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.table-row {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  padding: 10px;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n  transition: background 0.3s ease;\\r\\n\\r\\n  &:hover {\\r\\n    background: #f1f1f1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.search-icon {\\r\\n  width: 16px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.expanded-info {\\r\\n  background: #f9f9f9;\\r\\n  padding: 10px;\\r\\n  border-left: 3px solid #005cc5;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 5px;\\r\\n  margin-top: 5px;\\r\\n\\r\\n  .table-icon {\\r\\n    width: 30px;\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    margin: 0;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n}\\r\\n.linked-fields-table {\\r\\n  font-family: Arial, sans-serif;\\r\\n  width: 100%;\\r\\n  max-width: 400px;\\r\\n  background: #ffffff;\\r\\n  border-radius: 8px;\\r\\n  padding: 15px;\\r\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.table-header {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  font-weight: bold;\\r\\n  padding: 10px;\\r\\n  background: #f5f5f5;\\r\\n  border-radius: 5px;\\r\\n}\\r\\n\\r\\n.update-icon {\\r\\n  width: 18px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.table-row {\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  padding: 10px;\\r\\n  border-bottom: 1px solid #ddd;\\r\\n  align-items: center;\\r\\n  transition: background 0.3s ease;\\r\\n  cursor: pointer;\\r\\n\\r\\n  &:hover {\\r\\n    background: #f1f1f1;\\r\\n  }\\r\\n}\\r\\n\\r\\n.icons {\\r\\n  display: flex;\\r\\n  gap: 8px;\\r\\n}\\r\\n\\r\\n.search-icon {\\r\\n  width: 16px;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.arrow-icon {\\r\\n  width: 16px;\\r\\n  cursor: pointer;\\r\\n  transition: transform 0.3s ease;\\r\\n\\r\\n  &.rotated {\\r\\n    transform: rotate(180deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n.expanded-info {\\r\\n  background: #f9f9f9;\\r\\n  padding: 10px;\\r\\n  border-left: 3px solid #005cc5;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 5px;\\r\\n  margin-top: 5px;\\r\\n\\r\\n  .table-icon {\\r\\n    width: 30px;\\r\\n  }\\r\\n\\r\\n  p {\\r\\n    margin: 0;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.LoggedSuccessfully {\\r\\n  font-weight: 600;\\r\\n  font-size: 12px;\\r\\n  color: rgba(36, 36, 36, 1);\\r\\n}\\r\\n\\r\\n.m-minus-t {\\r\\n  margin-bottom: -8px;\\r\\n}\\r\\n\\r\\n.button-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 10px;\\r\\n  align-items: start;\\r\\n}\\r\\n\\r\\n.checkbox-container {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 8px;\\r\\n  font-size: 16px;\\r\\n  margin-top: 10px;\\r\\n  cursor: pointer;\\r\\n\\r\\n  input {\\r\\n    display: none;\\r\\n  }\\r\\n\\r\\n  .checkbox-icon {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.insert-button {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 8px;\\r\\n  background-color: #2d64c3;\\r\\n  color: white;\\r\\n  border: none;\\r\\n  padding: 12px 24px;\\r\\n  justify-content: center;\\r\\n  width: 100%;\\r\\n  font-size: 16px;\\r\\n  font-weight: 600;\\r\\n  color: rgba(255, 255, 255, 1);\\r\\n  cursor: pointer;\\r\\n  margin: 12px 0px;\\r\\n  border-radius: 6px;\\r\\n\\r\\n  img {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n  }\\r\\n}\\r\\n\\r\\n\\r\\n.main-loading-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  height: 100vh;\\r\\n  width: 100%;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.disabled_image {\\r\\n  display: none ;\\r\\n}\\r\\n\\r\\n.maxWidth_rt {\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n}\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".dropdown-container{width:100%;font-family:Arial,sans-serif;position:relative}.dropdown-container .dropdown-header{display:flex;justify-content:space-between;align-items:center;padding:8px;border:1px solid #ccc;border-radius:5px;cursor:pointer;background-color:#fff}.dropdown-container .dropdown-header span{font-weight:400;font-size:14px;color:#707070}.dropdown-container .dropdown-list{margin-top:5px;border:1px solid #ccc;border-radius:5px;background-color:#fff;padding:10px 0px;box-shadow:0px 2px 10px rgba(0,0,0,.1);position:absolute;width:100%}.dropdown-container .dropdown-list .dropdown-action{font-weight:400;font-size:14px;color:#707070;margin-bottom:5px;padding:5px 10px;margin-top:0px !important}.dropdown-container .dropdown-list .dropdown-item{display:flex;align-items:center;justify-content:space-between;padding:5px 10px;cursor:pointer;position:relative}.dropdown-container .dropdown-list .dropdown-item img{width:18px;height:18px;cursor:pointer}.dropdown-container .dropdown-list .dropdown-item span{flex-grow:1;margin-left:10px}.dropdown-container .dropdown-list .dropdown-item .help-icon{width:16px;height:16px;margin-left:auto;cursor:pointer}.dropdown-container .dropdown-list .dropdown-item:hover{background-color:#f1f1f1}.dropdown-container .dropdown-list .dropdown-item .tooltip{position:absolute;top:30px;right:-10px;background-color:#333;color:#fff;border-radius:8px;padding:10px;font-size:12px;white-space:nowrap;box-shadow:0px 2px 5px rgba(0,0,0,.2);width:250px;text-align:left;z-index:20}.dropdown-container .dropdown-list .dropdown-item .tooltip .tooltip-arrow{position:absolute;top:-8px;right:15px;width:0;height:0;border-left:8px solid rgba(0,0,0,0);border-right:8px solid rgba(0,0,0,0);border-bottom:8px solid #333}.z-index_rt{z-index:400}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/MultiSelectDropdown/MultiSelectDropdown.scss\"],\"names\":[],\"mappings\":\"AAAA,oBACI,UAAA,CACA,4BAAA,CACA,iBAAA,CAEA,qCACE,YAAA,CACA,6BAAA,CACA,kBAAA,CACA,WAAA,CACA,qBAAA,CACA,iBAAA,CACA,cAAA,CACA,qBAAA,CACA,0CACE,eAAA,CACA,cAAA,CACA,aAAA,CAIJ,mCACE,cAAA,CACA,qBAAA,CACA,iBAAA,CACA,qBAAA,CACA,gBAAA,CACA,sCAAA,CACA,iBAAA,CACA,UAAA,CAEA,oDACE,eAAA,CACA,cAAA,CACA,aAAA,CACA,iBAAA,CACA,gBAAA,CACA,yBAAA,CAGF,kDACE,YAAA,CACA,kBAAA,CACA,6BAAA,CACA,gBAAA,CACA,cAAA,CACA,iBAAA,CAEA,sDACE,UAAA,CACA,WAAA,CACA,cAAA,CAGF,uDACE,WAAA,CACA,gBAAA,CAGF,6DACE,UAAA,CACA,WAAA,CACA,gBAAA,CACA,cAAA,CAGF,wDACE,wBAAA,CAGF,2DACE,iBAAA,CACA,QAAA,CACA,WAAA,CACA,qBAAA,CACA,UAAA,CACA,iBAAA,CACA,YAAA,CACA,cAAA,CACA,kBAAA,CACA,qCAAA,CACA,WAAA,CACA,eAAA,CACA,UAAA,CAEA,0EACE,iBAAA,CACA,QAAA,CACA,UAAA,CACA,OAAA,CACA,QAAA,CACA,mCAAA,CACA,oCAAA,CACA,4BAAA,CAMV,YACE,WAAA\",\"sourcesContent\":[\".dropdown-container {\\r\\n    width: 100%;\\r\\n    font-family: Arial, sans-serif;\\r\\n    position: relative;\\r\\n  \\r\\n    .dropdown-header {\\r\\n      display: flex;\\r\\n      justify-content: space-between;\\r\\n      align-items: center;\\r\\n      padding: 8px;\\r\\n      border: 1px solid #ccc;\\r\\n      border-radius: 5px;\\r\\n      cursor: pointer;\\r\\n      background-color: #fff;\\r\\n      span {\\r\\n        font-weight: 400;\\r\\n        font-size: 14px;\\r\\n        color: rgba(112, 112, 112, 1);\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .dropdown-list {\\r\\n      margin-top: 5px;\\r\\n      border: 1px solid #ccc;\\r\\n      border-radius: 5px;\\r\\n      background-color: #fff;\\r\\n      padding: 10px 0px;\\r\\n      box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);\\r\\n      position: absolute;\\r\\n      width: 100%;\\r\\n\\r\\n      .dropdown-action {\\r\\n        font-weight: 400;\\r\\n        font-size: 14px;\\r\\n        color: rgba(112, 112, 112, 1);\\r\\n        margin-bottom: 5px;\\r\\n        padding: 5px 10px;\\r\\n        margin-top: 0px !important ;\\r\\n      }\\r\\n  \\r\\n      .dropdown-item {\\r\\n        display: flex;\\r\\n        align-items: center;\\r\\n        justify-content: space-between;\\r\\n        padding: 5px 10px;\\r\\n        cursor: pointer;\\r\\n        position: relative;\\r\\n  \\r\\n        img {\\r\\n          width: 18px;\\r\\n          height: 18px;\\r\\n          cursor: pointer;\\r\\n        }\\r\\n  \\r\\n        span {\\r\\n          flex-grow: 1;\\r\\n          margin-left: 10px;\\r\\n        }\\r\\n  \\r\\n        .help-icon {\\r\\n          width: 16px;\\r\\n          height: 16px;\\r\\n          margin-left: auto;\\r\\n          cursor: pointer;\\r\\n        }\\r\\n  \\r\\n        &:hover {\\r\\n          background-color: #f1f1f1;\\r\\n        }\\r\\n  \\r\\n        .tooltip {\\r\\n          position: absolute;\\r\\n          top: 30px;\\r\\n          right: -10px;\\r\\n          background-color: #333;\\r\\n          color: #fff;\\r\\n          border-radius: 8px;\\r\\n          padding: 10px;\\r\\n          font-size: 12px;\\r\\n          white-space: nowrap;\\r\\n          box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.2);\\r\\n          width: 250px;\\r\\n          text-align: left;\\r\\n          z-index: 20;\\r\\n  \\r\\n          .tooltip-arrow {\\r\\n            position: absolute;\\r\\n            top: -8px;\\r\\n            right: 15px;\\r\\n            width: 0;\\r\\n            height: 0;\\r\\n            border-left: 8px solid transparent;\\r\\n            border-right: 8px solid transparent;\\r\\n            border-bottom: 8px solid #333;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  .z-index_rt {\\r\\n    z-index: 400;\\r\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","/** @license React v17.0.2\r\n * react-is.production.min.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n'use strict';var b=60103,c=60106,d=60107,e=60108,f=60114,g=60109,h=60110,k=60112,l=60113,m=60120,n=60115,p=60116,q=60121,r=60122,u=60117,v=60129,w=60131;\r\nif(\"function\"===typeof Symbol&&Symbol.for){var x=Symbol.for;b=x(\"react.element\");c=x(\"react.portal\");d=x(\"react.fragment\");e=x(\"react.strict_mode\");f=x(\"react.profiler\");g=x(\"react.provider\");h=x(\"react.context\");k=x(\"react.forward_ref\");l=x(\"react.suspense\");m=x(\"react.suspense_list\");n=x(\"react.memo\");p=x(\"react.lazy\");q=x(\"react.block\");r=x(\"react.server.block\");u=x(\"react.fundamental\");v=x(\"react.debug_trace_mode\");w=x(\"react.legacy_hidden\")}\r\nfunction y(a){if(\"object\"===typeof a&&null!==a){var t=a.$$typeof;switch(t){case b:switch(a=a.type,a){case d:case f:case e:case l:case m:return a;default:switch(a=a&&a.$$typeof,a){case h:case k:case p:case n:case g:return a;default:return t}}case c:return t}}}var z=g,A=b,B=k,C=d,D=p,E=n,F=c,G=f,H=e,I=l;exports.ContextConsumer=h;exports.ContextProvider=z;exports.Element=A;exports.ForwardRef=B;exports.Fragment=C;exports.Lazy=D;exports.Memo=E;exports.Portal=F;exports.Profiler=G;exports.StrictMode=H;\r\nexports.Suspense=I;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return y(a)===h};exports.isContextProvider=function(a){return y(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return y(a)===k};exports.isFragment=function(a){return y(a)===d};exports.isLazy=function(a){return y(a)===p};exports.isMemo=function(a){return y(a)===n};\r\nexports.isPortal=function(a){return y(a)===c};exports.isProfiler=function(a){return y(a)===f};exports.isStrictMode=function(a){return y(a)===e};exports.isSuspense=function(a){return y(a)===l};exports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===v||a===e||a===l||a===m||a===w||\"object\"===typeof a&&null!==a&&(a.$$typeof===p||a.$$typeof===n||a.$$typeof===g||a.$$typeof===h||a.$$typeof===k||a.$$typeof===u||a.$$typeof===q||a[0]===r)?!0:!1};\r\nexports.typeOf=y;\r\n","(async function () {\r\n    await Office.onReady();\r\n    console.log(\"Office.js initialized\");\r\n  })();","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction styleTagTransform(css, styleElement) {\r\n  if (styleElement.styleSheet) {\r\n    styleElement.styleSheet.cssText = css;\r\n  } else {\r\n    while (styleElement.firstChild) {\r\n      styleElement.removeChild(styleElement.firstChild);\r\n    }\r\n    styleElement.appendChild(document.createTextNode(css));\r\n  }\r\n}\r\nmodule.exports = styleTagTransform;","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-is.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-is.development.js');\r\n}\r\n","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction setAttributesWithoutAttributes(styleElement) {\r\n  var nonce = typeof __webpack_nonce__ !== \"undefined\" ? __webpack_nonce__ : null;\r\n  if (nonce) {\r\n    styleElement.setAttribute(\"nonce\", nonce);\r\n  }\r\n}\r\nmodule.exports = setAttributesWithoutAttributes;","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".root {\\r\\n  font-family: 'Segoe UI Variable Static Text';\\r\\n}\\r\\n\\r\\n.App {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.App-logo {\\r\\n  height: 40vmin;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n@media (prefers-reduced-motion: no-preference) {\\r\\n  .App-logo {\\r\\n    animation: App-logo-spin infinite 20s linear;\\r\\n  }\\r\\n}\\r\\n\\r\\n.App-header {\\r\\n  background-color: #282c34;\\r\\n  min-height: 100vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-size: calc(10px + 2vmin);\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-link {\\r\\n  color: #61dafb;\\r\\n}\\r\\n\\r\\n@keyframes App-logo-spin {\\r\\n  from {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/App.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,4CAA4C;AAC9C;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,cAAc;EACd,oBAAoB;AACtB;;AAEA;EACE;IACE,4CAA4C;EAC9C;AACF;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;EACjB,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,6BAA6B;EAC7B,YAAY;AACd;;AAEA;EACE,cAAc;AAChB;;AAEA;EACE;IACE,uBAAuB;EACzB;EACA;IACE,yBAAyB;EAC3B;AACF\",\"sourcesContent\":[\".root {\\r\\n  font-family: 'Segoe UI Variable Static Text';\\r\\n}\\r\\n\\r\\n.App {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.App-logo {\\r\\n  height: 40vmin;\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\n@media (prefers-reduced-motion: no-preference) {\\r\\n  .App-logo {\\r\\n    animation: App-logo-spin infinite 20s linear;\\r\\n  }\\r\\n}\\r\\n\\r\\n.App-header {\\r\\n  background-color: #282c34;\\r\\n  min-height: 100vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  font-size: calc(10px + 2vmin);\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.App-link {\\r\\n  color: #61dafb;\\r\\n}\\r\\n\\r\\n@keyframes App-logo-spin {\\r\\n  from {\\r\\n    transform: rotate(0deg);\\r\\n  }\\r\\n  to {\\r\\n    transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".custom-tabs{display:flex;flex-direction:column;gap:10px;margin-top:12px}.custom-tabs .tabs{display:flex;gap:20px;font-size:16px;font-weight:500;cursor:pointer}.custom-tabs .tabs .tab{position:relative;color:#444;padding-bottom:5px}.custom-tabs .tabs .tab.active{color:#000;font-weight:bold}.custom-tabs .tabs .tab.active::after{content:\\\"\\\";position:absolute;left:0;bottom:-2px;width:100%;height:3px;background:blue;border-radius:5px}.custom-tabs .search-bar{display:flex;align-items:center;gap:10px;border:1px solid #ccc;padding:8px 0px;border-radius:6px;width:100%}.custom-tabs .search-bar .search-icon{width:16px;height:16px;margin-left:5px}.custom-tabs .search-bar input{border:none;outline:none;font-size:14px;width:100%}.custom-tabs .tab-content{margin-top:10px;font-size:14px;background:#f8f8f8;padding:10px;border-radius:6px}.item_margin{margin-top:-1px !important}.bg_background_color{background:#f6f6f6 !important;position:relative !important}.z_index{z-index:300}.mt-tr{margin-top:8px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/Tabs/CustomTabs.scss\"],\"names\":[],\"mappings\":\"AAAA,aACI,YAAA,CACA,qBAAA,CACA,QAAA,CACA,eAAA,CAGA,mBACE,YAAA,CACA,QAAA,CACA,cAAA,CACA,eAAA,CACA,cAAA,CAEA,wBACE,iBAAA,CACA,UAAA,CACA,kBAAA,CAEA,+BACE,UAAA,CACA,gBAAA,CAEA,sCACE,UAAA,CACA,iBAAA,CACA,MAAA,CACA,WAAA,CACA,UAAA,CACA,UAAA,CACA,eAAA,CACA,iBAAA,CAMR,yBACE,YAAA,CACA,kBAAA,CACA,QAAA,CACA,qBAAA,CACA,eAAA,CAEA,iBAAA,CACA,UAAA,CAEA,sCACE,UAAA,CACA,WAAA,CACA,eAAA,CAGF,+BACE,WAAA,CACA,YAAA,CACA,cAAA,CACA,UAAA,CAIJ,0BACE,eAAA,CACA,cAAA,CACA,kBAAA,CACA,YAAA,CACA,iBAAA,CAKJ,aACE,0BAAA,CAGF,qBACE,6BAAA,CACA,4BAAA,CAGF,SACE,WAAA,CAGF,OACE,cAAA\",\"sourcesContent\":[\".custom-tabs {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    gap: 10px;\\r\\n    margin-top: 12px;\\r\\n\\r\\n  \\r\\n    .tabs {\\r\\n      display: flex;\\r\\n      gap: 20px;\\r\\n      font-size: 16px;\\r\\n      font-weight: 500;\\r\\n      cursor: pointer;\\r\\n  \\r\\n      .tab {\\r\\n        position: relative;\\r\\n        color: #444;\\r\\n        padding-bottom: 5px;\\r\\n  \\r\\n        &.active {\\r\\n          color: black;\\r\\n          font-weight: bold;\\r\\n  \\r\\n          &::after {\\r\\n            content: \\\"\\\";\\r\\n            position: absolute;\\r\\n            left: 0;\\r\\n            bottom: -2px;\\r\\n            width: 100%;\\r\\n            height: 3px;\\r\\n            background: blue;\\r\\n            border-radius: 5px;\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .search-bar {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      gap: 10px;\\r\\n      border: 1px solid #ccc;\\r\\n      padding: 8px 0px;\\r\\n      \\r\\n      border-radius: 6px;\\r\\n      width: 100%;\\r\\n  \\r\\n      .search-icon {\\r\\n        width: 16px;\\r\\n        height: 16px;\\r\\n        margin-left: 5px;\\r\\n      }\\r\\n  \\r\\n      input {\\r\\n        border: none;\\r\\n        outline: none;\\r\\n        font-size: 14px;\\r\\n        width: 100%;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .tab-content {\\r\\n      margin-top: 10px;\\r\\n      font-size: 14px;\\r\\n      background: #f8f8f8;\\r\\n      padding: 10px;\\r\\n      border-radius: 6px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n\\r\\n  .item_margin {\\r\\n    margin-top: -1px !important;\\r\\n  }\\r\\n\\r\\n  .bg_background_color {\\r\\n    background: rgba(246, 246, 246, 1) !important;\\r\\n    position: relative !important ;\\r\\n    \\r\\n  }\\r\\n  .z_index {\\r\\n    z-index: 300;\\r\\n  }\\r\\n\\r\\n  .mt-tr {\\r\\n    margin-top: 8px;\\r\\n  }\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\r\n\r\nmodule.exports = function (item) {\r\n  var content = item[1];\r\n  var cssMapping = item[3];\r\n  if (!cssMapping) {\r\n    return content;\r\n  }\r\n  if (typeof btoa === \"function\") {\r\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(cssMapping))));\r\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\r\n    var sourceMapping = \"/*# \".concat(data, \" */\");\r\n    return [content].concat([sourceMapping]).join(\"\\n\");\r\n  }\r\n  return [content].join(\"\\n\");\r\n};","'use strict';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\r\n} else {\r\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\r\n}\r\n","\"use strict\";\r\n\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function (cssWithMappingToString) {\r\n  var list = [];\r\n\r\n  // return the list of modules as css string\r\n  list.toString = function toString() {\r\n    return this.map(function (item) {\r\n      var content = \"\";\r\n      var needLayer = typeof item[5] !== \"undefined\";\r\n      if (item[4]) {\r\n        content += \"@supports (\".concat(item[4], \") {\");\r\n      }\r\n      if (item[2]) {\r\n        content += \"@media \".concat(item[2], \" {\");\r\n      }\r\n      if (needLayer) {\r\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\r\n      }\r\n      content += cssWithMappingToString(item);\r\n      if (needLayer) {\r\n        content += \"}\";\r\n      }\r\n      if (item[2]) {\r\n        content += \"}\";\r\n      }\r\n      if (item[4]) {\r\n        content += \"}\";\r\n      }\r\n      return content;\r\n    }).join(\"\");\r\n  };\r\n\r\n  // import a list of modules into the list\r\n  list.i = function i(modules, media, dedupe, supports, layer) {\r\n    if (typeof modules === \"string\") {\r\n      modules = [[null, modules, undefined]];\r\n    }\r\n    var alreadyImportedModules = {};\r\n    if (dedupe) {\r\n      for (var k = 0; k < this.length; k++) {\r\n        var id = this[k][0];\r\n        if (id != null) {\r\n          alreadyImportedModules[id] = true;\r\n        }\r\n      }\r\n    }\r\n    for (var _k = 0; _k < modules.length; _k++) {\r\n      var item = [].concat(modules[_k]);\r\n      if (dedupe && alreadyImportedModules[item[0]]) {\r\n        continue;\r\n      }\r\n      if (typeof layer !== \"undefined\") {\r\n        if (typeof item[5] === \"undefined\") {\r\n          item[5] = layer;\r\n        } else {\r\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\r\n          item[5] = layer;\r\n        }\r\n      }\r\n      if (media) {\r\n        if (!item[2]) {\r\n          item[2] = media;\r\n        } else {\r\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\r\n          item[2] = media;\r\n        }\r\n      }\r\n      if (supports) {\r\n        if (!item[4]) {\r\n          item[4] = \"\".concat(supports);\r\n        } else {\r\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\r\n          item[4] = supports;\r\n        }\r\n      }\r\n      list.push(item);\r\n    }\r\n  };\r\n  return list;\r\n};","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".containerlink{display:flex;flex-direction:row;align-items:center;justify-content:space-between;margin-top:20px;margin-bottom:20px}.text,.updateText{font-size:16px;font-weight:500;color:#000}.updateButton{display:flex;flex-direction:row;align-items:center;background:none;border:none;cursor:pointer}.icon{width:20px;height:20px;margin-right:5px}.header{display:flex;justify-content:space-between;padding:12px;border-radius:2px;border-bottom:1px solid #ddd;background-color:#f0f0f0}.headerText{font-weight:600;font-family:\\\"Segoe UI Variable Static Text\\\",sans-serif;font-size:13px;color:#707070}.row{display:flex;justify-content:space-between;padding:10px 12px;border-bottom:1px solid #eee;align-items:center}.cell{flex:1;font-weight:400;font-family:\\\"Segoe UI Variable Static Text\\\",sans-serif;font-size:14px;color:#242424}.updateIcon,.arrowIcon,.bottomIcon{width:20px;height:20px;tint-color:#444}.bottomIcon{transform:rotate(0deg);transition:transform .3s ease}.arrowRotated{transform:rotate(180deg)}.expandedContainer{background-color:#f9f9f9;padding:10px;margin-bottom:5px;border-radius:5px;box-shadow:0px 2px 5px rgba(0,0,0,.1)}.tableIcon{width:30px;height:30px;margin-bottom:5px}.infoText{font-size:14px;margin:8px 0}.infoText span{font-size:12px;font-weight:600;color:#707070}.boldText{font-weight:bold;font-size:12px;font-family:\\\"Segoe UI Variable Static Text\\\",sans-serif;color:#707070}.iconContainer{display:flex;flex-direction:row;align-items:center}.iconContainer button{background:none;border:none}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/ExpandableTable/ExpandableTable.scss\"],\"names\":[],\"mappings\":\"AAGE,eACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,6BAAA,CAEA,eAAA,CACA,kBAAA,CAGF,kBACE,cAAA,CACA,eAAA,CACA,UAAA,CAGF,cACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,eAAA,CACA,WAAA,CACA,cAAA,CAGF,MACE,UAAA,CACA,WAAA,CACA,gBAAA,CAGF,QACE,YAAA,CACA,6BAAA,CACA,YAAA,CACA,iBAAA,CACA,4BAAA,CACA,wBAAA,CAGF,YACE,eAAA,CACA,sDAAA,CACA,cAAA,CACA,aAAA,CAGF,KACE,YAAA,CACA,6BAAA,CACA,iBAAA,CACA,4BAAA,CACA,kBAAA,CAGF,MACE,MAAA,CACA,eAAA,CACA,sDAAA,CACA,cAAA,CACA,aAAA,CAGF,mCACE,UAAA,CACA,WAAA,CACA,eAAA,CAGF,YACE,sBAAA,CACA,6BAAA,CAGF,cACE,wBAAA,CAGF,mBACE,wBAAA,CACA,YAAA,CACA,iBAAA,CACA,iBAAA,CACA,qCAAA,CAGF,WACE,UAAA,CACA,WAAA,CACA,iBAAA,CAGF,UACE,cAAA,CACA,YAAA,CACA,eACE,cAAA,CACA,eAAA,CACA,aAAA,CAIJ,UACE,gBAAA,CACA,cAAA,CACA,sDAAA,CACA,aAAA,CAGF,eACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,sBACE,eAAA,CACA,WAAA\",\"sourcesContent\":[\".container {\\r\\n  }\\r\\n  \\r\\n  .containerlink {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    // padding: 10px;\\r\\n    margin-top: 20px;\\r\\n    margin-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .text, .updateText {\\r\\n    font-size: 16px;\\r\\n    font-weight: 500;\\r\\n    color: #000;\\r\\n  }\\r\\n  \\r\\n  .updateButton {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    background: none;\\r\\n    border: none;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .icon {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    margin-right: 5px;\\r\\n  }\\r\\n  \\r\\n  .header {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    padding: 12px;\\r\\n    border-radius: 2px;\\r\\n    border-bottom: 1px solid #ddd;\\r\\n    background-color: rgba(240, 240, 240, 1);\\r\\n  }\\r\\n  \\r\\n  .headerText {\\r\\n    font-weight: 600;\\r\\n    font-family: \\\"Segoe UI Variable Static Text\\\", sans-serif;\\r\\n    font-size: 13px;\\r\\n    color: rgba(112, 112, 112, 1);\\r\\n  }\\r\\n  \\r\\n  .row {\\r\\n    display: flex;\\r\\n    justify-content: space-between;\\r\\n    padding: 10px 12px;\\r\\n    border-bottom: 1px solid #eee;\\r\\n    align-items: center;\\r\\n  }\\r\\n  \\r\\n  .cell {\\r\\n    flex: 1;\\r\\n    font-weight: 400;\\r\\n    font-family: \\\"Segoe UI Variable Static Text\\\", sans-serif;\\r\\n    font-size: 14px;\\r\\n    color: rgba(36, 36, 36, 1)\\r\\n  }\\r\\n  \\r\\n  .updateIcon, .arrowIcon, .bottomIcon {\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    tint-color: #444;\\r\\n  }\\r\\n  \\r\\n  .bottomIcon {\\r\\n    transform: rotate(0deg);\\r\\n    transition: transform 0.3s ease;\\r\\n  }\\r\\n  \\r\\n  .arrowRotated {\\r\\n    transform: rotate(180deg);\\r\\n  }\\r\\n  \\r\\n  .expandedContainer {\\r\\n    background-color: #f9f9f9;\\r\\n    padding: 10px;\\r\\n    margin-bottom: 5px;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);\\r\\n  }\\r\\n  \\r\\n  .tableIcon {\\r\\n    width: 30px;\\r\\n    height: 30px;\\r\\n    margin-bottom: 5px;\\r\\n  }\\r\\n  \\r\\n  .infoText {\\r\\n    font-size: 14px;\\r\\n    margin: 8px 0;\\r\\n    span {\\r\\n      font-size: 12px;\\r\\n      font-weight: 600;\\r\\n      color: rgba(112, 112, 112, 1);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .boldText {\\r\\n    font-weight: bold;\\r\\n    font-size: 12px;\\r\\n    font-family: \\\"Segoe UI Variable Static Text\\\", sans-serif;\\r\\n    color: rgba(112, 112, 112, 1);\\r\\n  }\\r\\n  \\r\\n  .iconContainer {\\r\\n    display: flex;\\r\\n    flex-direction: row;\\r\\n    align-items: center;\\r\\n    button {\\r\\n      background: none;\\r\\n      border: none;\\r\\n    }\\r\\n  }\\r\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\r\n\r\nvar memo = {};\r\n\r\n/* istanbul ignore next  */\r\nfunction getTarget(target) {\r\n  if (typeof memo[target] === \"undefined\") {\r\n    var styleTarget = document.querySelector(target);\r\n\r\n    // Special case to return head of iframe instead of iframe itself\r\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n      try {\r\n        // This will throw an exception if access to iframe is blocked\r\n        // due to cross-origin restrictions\r\n        styleTarget = styleTarget.contentDocument.head;\r\n      } catch (e) {\r\n        // istanbul ignore next\r\n        styleTarget = null;\r\n      }\r\n    }\r\n    memo[target] = styleTarget;\r\n  }\r\n  return memo[target];\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction insertBySelector(insert, style) {\r\n  var target = getTarget(insert);\r\n  if (!target) {\r\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n  }\r\n  target.appendChild(style);\r\n}\r\nmodule.exports = insertBySelector;","/**\r\n * react-router v7.3.0\r\n *\r\n * Copyright (c) Remix Software Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE.md file in the root directory of this source tree.\r\n *\r\n * @license MIT\r\n */\r\nvar __typeError = (msg) => {\r\n  throw TypeError(msg);\r\n};\r\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\r\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\r\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\r\n\r\n// lib/router/history.ts\r\nvar Action = /* @__PURE__ */ ((Action2) => {\r\n  Action2[\"Pop\"] = \"POP\";\r\n  Action2[\"Push\"] = \"PUSH\";\r\n  Action2[\"Replace\"] = \"REPLACE\";\r\n  return Action2;\r\n})(Action || {});\r\nvar PopStateEventType = \"popstate\";\r\nfunction createMemoryHistory(options = {}) {\r\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\r\n  let entries;\r\n  entries = initialEntries.map(\r\n    (entry, index2) => createMemoryLocation(\r\n      entry,\r\n      typeof entry === \"string\" ? null : entry.state,\r\n      index2 === 0 ? \"default\" : void 0\r\n    )\r\n  );\r\n  let index = clampIndex(\r\n    initialIndex == null ? entries.length - 1 : initialIndex\r\n  );\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  function clampIndex(n) {\r\n    return Math.min(Math.max(n, 0), entries.length - 1);\r\n  }\r\n  function getCurrentLocation() {\r\n    return entries[index];\r\n  }\r\n  function createMemoryLocation(to, state = null, key) {\r\n    let location = createLocation(\r\n      entries ? getCurrentLocation().pathname : \"/\",\r\n      to,\r\n      state,\r\n      key\r\n    );\r\n    warning(\r\n      location.pathname.charAt(0) === \"/\",\r\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\r\n        to\r\n      )}`\r\n    );\r\n    return location;\r\n  }\r\n  function createHref2(to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  let history = {\r\n    get index() {\r\n      return index;\r\n    },\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getCurrentLocation();\r\n    },\r\n    createHref: createHref2,\r\n    createURL(to) {\r\n      return new URL(createHref2(to), \"http://localhost\");\r\n    },\r\n    encodeLocation(to) {\r\n      let path = typeof to === \"string\" ? parsePath(to) : to;\r\n      return {\r\n        pathname: path.pathname || \"\",\r\n        search: path.search || \"\",\r\n        hash: path.hash || \"\"\r\n      };\r\n    },\r\n    push(to, state) {\r\n      action = \"PUSH\" /* Push */;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      index += 1;\r\n      entries.splice(index, entries.length, nextLocation);\r\n      if (v5Compat && listener) {\r\n        listener({ action, location: nextLocation, delta: 1 });\r\n      }\r\n    },\r\n    replace(to, state) {\r\n      action = \"REPLACE\" /* Replace */;\r\n      let nextLocation = createMemoryLocation(to, state);\r\n      entries[index] = nextLocation;\r\n      if (v5Compat && listener) {\r\n        listener({ action, location: nextLocation, delta: 0 });\r\n      }\r\n    },\r\n    go(delta) {\r\n      action = \"POP\" /* Pop */;\r\n      let nextIndex = clampIndex(index + delta);\r\n      let nextLocation = entries[nextIndex];\r\n      index = nextIndex;\r\n      if (listener) {\r\n        listener({ action, location: nextLocation, delta });\r\n      }\r\n    },\r\n    listen(fn) {\r\n      listener = fn;\r\n      return () => {\r\n        listener = null;\r\n      };\r\n    }\r\n  };\r\n  return history;\r\n}\r\nfunction createBrowserHistory(options = {}) {\r\n  function createBrowserLocation(window2, globalHistory) {\r\n    let { pathname, search, hash } = window2.location;\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createBrowserHref(window2, to) {\r\n    return typeof to === \"string\" ? to : createPath(to);\r\n  }\r\n  return getUrlBasedHistory(\r\n    createBrowserLocation,\r\n    createBrowserHref,\r\n    null,\r\n    options\r\n  );\r\n}\r\nfunction createHashHistory(options = {}) {\r\n  function createHashLocation(window2, globalHistory) {\r\n    let {\r\n      pathname = \"/\",\r\n      search = \"\",\r\n      hash = \"\"\r\n    } = parsePath(window2.location.hash.substring(1));\r\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\r\n      pathname = \"/\" + pathname;\r\n    }\r\n    return createLocation(\r\n      \"\",\r\n      { pathname, search, hash },\r\n      // state defaults to `null` because `window.history.state` does\r\n      globalHistory.state && globalHistory.state.usr || null,\r\n      globalHistory.state && globalHistory.state.key || \"default\"\r\n    );\r\n  }\r\n  function createHashHref(window2, to) {\r\n    let base = window2.document.querySelector(\"base\");\r\n    let href2 = \"\";\r\n    if (base && base.getAttribute(\"href\")) {\r\n      let url = window2.location.href;\r\n      let hashIndex = url.indexOf(\"#\");\r\n      href2 = hashIndex === -1 ? url : url.slice(0, hashIndex);\r\n    }\r\n    return href2 + \"#\" + (typeof to === \"string\" ? to : createPath(to));\r\n  }\r\n  function validateHashLocation(location, to) {\r\n    warning(\r\n      location.pathname.charAt(0) === \"/\",\r\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\r\n        to\r\n      )})`\r\n    );\r\n  }\r\n  return getUrlBasedHistory(\r\n    createHashLocation,\r\n    createHashHref,\r\n    validateHashLocation,\r\n    options\r\n  );\r\n}\r\nfunction invariant(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\nfunction warning(cond, message) {\r\n  if (!cond) {\r\n    if (typeof console !== \"undefined\") console.warn(message);\r\n    try {\r\n      throw new Error(message);\r\n    } catch (e) {\r\n    }\r\n  }\r\n}\r\nfunction createKey() {\r\n  return Math.random().toString(36).substring(2, 10);\r\n}\r\nfunction getHistoryState(location, index) {\r\n  return {\r\n    usr: location.state,\r\n    key: location.key,\r\n    idx: index\r\n  };\r\n}\r\nfunction createLocation(current, to, state = null, key) {\r\n  let location = {\r\n    pathname: typeof current === \"string\" ? current : current.pathname,\r\n    search: \"\",\r\n    hash: \"\",\r\n    ...typeof to === \"string\" ? parsePath(to) : to,\r\n    state,\r\n    // TODO: This could be cleaned up.  push/replace should probably just take\r\n    // full Locations now and avoid the need to run through this flow at all\r\n    // But that's a pretty big refactor to the current test suite so going to\r\n    // keep as is for the time being and just let any incoming keys take precedence\r\n    key: to && to.key || key || createKey()\r\n  };\r\n  return location;\r\n}\r\nfunction createPath({\r\n  pathname = \"/\",\r\n  search = \"\",\r\n  hash = \"\"\r\n}) {\r\n  if (search && search !== \"?\")\r\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\r\n  if (hash && hash !== \"#\")\r\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\r\n  return pathname;\r\n}\r\nfunction parsePath(path) {\r\n  let parsedPath = {};\r\n  if (path) {\r\n    let hashIndex = path.indexOf(\"#\");\r\n    if (hashIndex >= 0) {\r\n      parsedPath.hash = path.substring(hashIndex);\r\n      path = path.substring(0, hashIndex);\r\n    }\r\n    let searchIndex = path.indexOf(\"?\");\r\n    if (searchIndex >= 0) {\r\n      parsedPath.search = path.substring(searchIndex);\r\n      path = path.substring(0, searchIndex);\r\n    }\r\n    if (path) {\r\n      parsedPath.pathname = path;\r\n    }\r\n  }\r\n  return parsedPath;\r\n}\r\nfunction getUrlBasedHistory(getLocation, createHref2, validateLocation, options = {}) {\r\n  let { window: window2 = document.defaultView, v5Compat = false } = options;\r\n  let globalHistory = window2.history;\r\n  let action = \"POP\" /* Pop */;\r\n  let listener = null;\r\n  let index = getIndex();\r\n  if (index == null) {\r\n    index = 0;\r\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\r\n  }\r\n  function getIndex() {\r\n    let state = globalHistory.state || { idx: null };\r\n    return state.idx;\r\n  }\r\n  function handlePop() {\r\n    action = \"POP\" /* Pop */;\r\n    let nextIndex = getIndex();\r\n    let delta = nextIndex == null ? null : nextIndex - index;\r\n    index = nextIndex;\r\n    if (listener) {\r\n      listener({ action, location: history.location, delta });\r\n    }\r\n  }\r\n  function push(to, state) {\r\n    action = \"PUSH\" /* Push */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex() + 1;\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    try {\r\n      globalHistory.pushState(historyState, \"\", url);\r\n    } catch (error) {\r\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\r\n        throw error;\r\n      }\r\n      window2.location.assign(url);\r\n    }\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 1 });\r\n    }\r\n  }\r\n  function replace2(to, state) {\r\n    action = \"REPLACE\" /* Replace */;\r\n    let location = createLocation(history.location, to, state);\r\n    if (validateLocation) validateLocation(location, to);\r\n    index = getIndex();\r\n    let historyState = getHistoryState(location, index);\r\n    let url = history.createHref(location);\r\n    globalHistory.replaceState(historyState, \"\", url);\r\n    if (v5Compat && listener) {\r\n      listener({ action, location: history.location, delta: 0 });\r\n    }\r\n  }\r\n  function createURL(to) {\r\n    let base = window2.location.origin !== \"null\" ? window2.location.origin : window2.location.href;\r\n    let href2 = typeof to === \"string\" ? to : createPath(to);\r\n    href2 = href2.replace(/ $/, \"%20\");\r\n    invariant(\r\n      base,\r\n      `No window.location.(origin|href) available to create URL for href: ${href2}`\r\n    );\r\n    return new URL(href2, base);\r\n  }\r\n  let history = {\r\n    get action() {\r\n      return action;\r\n    },\r\n    get location() {\r\n      return getLocation(window2, globalHistory);\r\n    },\r\n    listen(fn) {\r\n      if (listener) {\r\n        throw new Error(\"A history only accepts one active listener\");\r\n      }\r\n      window2.addEventListener(PopStateEventType, handlePop);\r\n      listener = fn;\r\n      return () => {\r\n        window2.removeEventListener(PopStateEventType, handlePop);\r\n        listener = null;\r\n      };\r\n    },\r\n    createHref(to) {\r\n      return createHref2(window2, to);\r\n    },\r\n    createURL,\r\n    encodeLocation(to) {\r\n      let url = createURL(to);\r\n      return {\r\n        pathname: url.pathname,\r\n        search: url.search,\r\n        hash: url.hash\r\n      };\r\n    },\r\n    push,\r\n    replace: replace2,\r\n    go(n) {\r\n      return globalHistory.go(n);\r\n    }\r\n  };\r\n  return history;\r\n}\r\n\r\n// lib/router/utils.ts\r\nfunction unstable_createContext(defaultValue) {\r\n  return { defaultValue };\r\n}\r\nvar _map;\r\nvar unstable_RouterContextProvider = class {\r\n  constructor(init) {\r\n    __privateAdd(this, _map, /* @__PURE__ */ new Map());\r\n    if (init) {\r\n      for (let [context, value] of init) {\r\n        this.set(context, value);\r\n      }\r\n    }\r\n  }\r\n  get(context) {\r\n    if (__privateGet(this, _map).has(context)) {\r\n      return __privateGet(this, _map).get(context);\r\n    }\r\n    if (context.defaultValue !== void 0) {\r\n      return context.defaultValue;\r\n    }\r\n    throw new Error(\"No value found for context\");\r\n  }\r\n  set(context, value) {\r\n    __privateGet(this, _map).set(context, value);\r\n  }\r\n};\r\n_map = new WeakMap();\r\nvar immutableRouteKeys = /* @__PURE__ */ new Set([\r\n  \"lazy\",\r\n  \"caseSensitive\",\r\n  \"path\",\r\n  \"id\",\r\n  \"index\",\r\n  \"children\"\r\n]);\r\nfunction isIndexRoute(route) {\r\n  return route.index === true;\r\n}\r\nfunction convertRoutesToDataRoutes(routes, mapRouteProperties2, parentPath = [], manifest = {}) {\r\n  return routes.map((route, index) => {\r\n    let treePath = [...parentPath, String(index)];\r\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\r\n    invariant(\r\n      route.index !== true || !route.children,\r\n      `Cannot specify children on an index route`\r\n    );\r\n    invariant(\r\n      !manifest[id],\r\n      `Found a route id collision on id \"${id}\".  Route id's must be globally unique within Data Router usages`\r\n    );\r\n    if (isIndexRoute(route)) {\r\n      let indexRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id\r\n      };\r\n      manifest[id] = indexRoute;\r\n      return indexRoute;\r\n    } else {\r\n      let pathOrLayoutRoute = {\r\n        ...route,\r\n        ...mapRouteProperties2(route),\r\n        id,\r\n        children: void 0\r\n      };\r\n      manifest[id] = pathOrLayoutRoute;\r\n      if (route.children) {\r\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\r\n          route.children,\r\n          mapRouteProperties2,\r\n          treePath,\r\n          manifest\r\n        );\r\n      }\r\n      return pathOrLayoutRoute;\r\n    }\r\n  });\r\n}\r\nfunction matchRoutes(routes, locationArg, basename = \"/\") {\r\n  return matchRoutesImpl(routes, locationArg, basename, false);\r\n}\r\nfunction matchRoutesImpl(routes, locationArg, basename, allowPartial) {\r\n  let location = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n  let pathname = stripBasename(location.pathname || \"/\", basename);\r\n  if (pathname == null) {\r\n    return null;\r\n  }\r\n  let branches = flattenRoutes(routes);\r\n  rankRouteBranches(branches);\r\n  let matches = null;\r\n  for (let i = 0; matches == null && i < branches.length; ++i) {\r\n    let decoded = decodePath(pathname);\r\n    matches = matchRouteBranch(\r\n      branches[i],\r\n      decoded,\r\n      allowPartial\r\n    );\r\n  }\r\n  return matches;\r\n}\r\nfunction convertRouteMatchToUiMatch(match, loaderData) {\r\n  let { route, pathname, params } = match;\r\n  return {\r\n    id: route.id,\r\n    pathname,\r\n    params,\r\n    data: loaderData[route.id],\r\n    handle: route.handle\r\n  };\r\n}\r\nfunction flattenRoutes(routes, branches = [], parentsMeta = [], parentPath = \"\") {\r\n  let flattenRoute = (route, index, relativePath) => {\r\n    let meta = {\r\n      relativePath: relativePath === void 0 ? route.path || \"\" : relativePath,\r\n      caseSensitive: route.caseSensitive === true,\r\n      childrenIndex: index,\r\n      route\r\n    };\r\n    if (meta.relativePath.startsWith(\"/\")) {\r\n      invariant(\r\n        meta.relativePath.startsWith(parentPath),\r\n        `Absolute route path \"${meta.relativePath}\" nested under path \"${parentPath}\" is not valid. An absolute child route path must start with the combined path of all its parent routes.`\r\n      );\r\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\r\n    }\r\n    let path = joinPaths([parentPath, meta.relativePath]);\r\n    let routesMeta = parentsMeta.concat(meta);\r\n    if (route.children && route.children.length > 0) {\r\n      invariant(\r\n        // Our types know better, but runtime JS may not!\r\n        // @ts-expect-error\r\n        route.index !== true,\r\n        `Index routes must not have child routes. Please remove all child routes from route path \"${path}\".`\r\n      );\r\n      flattenRoutes(route.children, branches, routesMeta, path);\r\n    }\r\n    if (route.path == null && !route.index) {\r\n      return;\r\n    }\r\n    branches.push({\r\n      path,\r\n      score: computeScore(path, route.index),\r\n      routesMeta\r\n    });\r\n  };\r\n  routes.forEach((route, index) => {\r\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\r\n      flattenRoute(route, index);\r\n    } else {\r\n      for (let exploded of explodeOptionalSegments(route.path)) {\r\n        flattenRoute(route, index, exploded);\r\n      }\r\n    }\r\n  });\r\n  return branches;\r\n}\r\nfunction explodeOptionalSegments(path) {\r\n  let segments = path.split(\"/\");\r\n  if (segments.length === 0) return [];\r\n  let [first, ...rest] = segments;\r\n  let isOptional = first.endsWith(\"?\");\r\n  let required = first.replace(/\\?$/, \"\");\r\n  if (rest.length === 0) {\r\n    return isOptional ? [required, \"\"] : [required];\r\n  }\r\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\r\n  let result = [];\r\n  result.push(\r\n    ...restExploded.map(\r\n      (subpath) => subpath === \"\" ? required : [required, subpath].join(\"/\")\r\n    )\r\n  );\r\n  if (isOptional) {\r\n    result.push(...restExploded);\r\n  }\r\n  return result.map(\r\n    (exploded) => path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\r\n  );\r\n}\r\nfunction rankRouteBranches(branches) {\r\n  branches.sort(\r\n    (a, b) => a.score !== b.score ? b.score - a.score : compareIndexes(\r\n      a.routesMeta.map((meta) => meta.childrenIndex),\r\n      b.routesMeta.map((meta) => meta.childrenIndex)\r\n    )\r\n  );\r\n}\r\nvar paramRe = /^:[\\w-]+$/;\r\nvar dynamicSegmentValue = 3;\r\nvar indexRouteValue = 2;\r\nvar emptySegmentValue = 1;\r\nvar staticSegmentValue = 10;\r\nvar splatPenalty = -2;\r\nvar isSplat = (s) => s === \"*\";\r\nfunction computeScore(path, index) {\r\n  let segments = path.split(\"/\");\r\n  let initialScore = segments.length;\r\n  if (segments.some(isSplat)) {\r\n    initialScore += splatPenalty;\r\n  }\r\n  if (index) {\r\n    initialScore += indexRouteValue;\r\n  }\r\n  return segments.filter((s) => !isSplat(s)).reduce(\r\n    (score, segment) => score + (paramRe.test(segment) ? dynamicSegmentValue : segment === \"\" ? emptySegmentValue : staticSegmentValue),\r\n    initialScore\r\n  );\r\n}\r\nfunction compareIndexes(a, b) {\r\n  let siblings = a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\r\n  return siblings ? (\r\n    // If two routes are siblings, we should try to match the earlier sibling\r\n    // first. This allows people to have fine-grained control over the matching\r\n    // behavior by simply putting routes with identical paths in the order they\r\n    // want them tried.\r\n    a[a.length - 1] - b[b.length - 1]\r\n  ) : (\r\n    // Otherwise, it doesn't really make sense to rank non-siblings by index,\r\n    // so they sort equally.\r\n    0\r\n  );\r\n}\r\nfunction matchRouteBranch(branch, pathname, allowPartial = false) {\r\n  let { routesMeta } = branch;\r\n  let matchedParams = {};\r\n  let matchedPathname = \"/\";\r\n  let matches = [];\r\n  for (let i = 0; i < routesMeta.length; ++i) {\r\n    let meta = routesMeta[i];\r\n    let end = i === routesMeta.length - 1;\r\n    let remainingPathname = matchedPathname === \"/\" ? pathname : pathname.slice(matchedPathname.length) || \"/\";\r\n    let match = matchPath(\r\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\r\n      remainingPathname\r\n    );\r\n    let route = meta.route;\r\n    if (!match && end && allowPartial && !routesMeta[routesMeta.length - 1].route.index) {\r\n      match = matchPath(\r\n        {\r\n          path: meta.relativePath,\r\n          caseSensitive: meta.caseSensitive,\r\n          end: false\r\n        },\r\n        remainingPathname\r\n      );\r\n    }\r\n    if (!match) {\r\n      return null;\r\n    }\r\n    Object.assign(matchedParams, match.params);\r\n    matches.push({\r\n      // TODO: Can this as be avoided?\r\n      params: matchedParams,\r\n      pathname: joinPaths([matchedPathname, match.pathname]),\r\n      pathnameBase: normalizePathname(\r\n        joinPaths([matchedPathname, match.pathnameBase])\r\n      ),\r\n      route\r\n    });\r\n    if (match.pathnameBase !== \"/\") {\r\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\r\n    }\r\n  }\r\n  return matches;\r\n}\r\nfunction generatePath(originalPath, params = {}) {\r\n  let path = originalPath;\r\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\r\n    warning(\r\n      false,\r\n      `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n    );\r\n    path = path.replace(/\\*$/, \"/*\");\r\n  }\r\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\r\n  const stringify = (p) => p == null ? \"\" : typeof p === \"string\" ? p : String(p);\r\n  const segments = path.split(/\\/+/).map((segment, index, array) => {\r\n    const isLastSegment = index === array.length - 1;\r\n    if (isLastSegment && segment === \"*\") {\r\n      const star = \"*\";\r\n      return stringify(params[star]);\r\n    }\r\n    const keyMatch = segment.match(/^:([\\w-]+)(\\??)$/);\r\n    if (keyMatch) {\r\n      const [, key, optional] = keyMatch;\r\n      let param = params[key];\r\n      invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\r\n      return stringify(param);\r\n    }\r\n    return segment.replace(/\\?$/g, \"\");\r\n  }).filter((segment) => !!segment);\r\n  return prefix + segments.join(\"/\");\r\n}\r\nfunction matchPath(pattern, pathname) {\r\n  if (typeof pattern === \"string\") {\r\n    pattern = { path: pattern, caseSensitive: false, end: true };\r\n  }\r\n  let [matcher, compiledParams] = compilePath(\r\n    pattern.path,\r\n    pattern.caseSensitive,\r\n    pattern.end\r\n  );\r\n  let match = pathname.match(matcher);\r\n  if (!match) return null;\r\n  let matchedPathname = match[0];\r\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\r\n  let captureGroups = match.slice(1);\r\n  let params = compiledParams.reduce(\r\n    (memo2, { paramName, isOptional }, index) => {\r\n      if (paramName === \"*\") {\r\n        let splatValue = captureGroups[index] || \"\";\r\n        pathnameBase = matchedPathname.slice(0, matchedPathname.length - splatValue.length).replace(/(.)\\/+$/, \"$1\");\r\n      }\r\n      const value = captureGroups[index];\r\n      if (isOptional && !value) {\r\n        memo2[paramName] = void 0;\r\n      } else {\r\n        memo2[paramName] = (value || \"\").replace(/%2F/g, \"/\");\r\n      }\r\n      return memo2;\r\n    },\r\n    {}\r\n  );\r\n  return {\r\n    params,\r\n    pathname: matchedPathname,\r\n    pathnameBase,\r\n    pattern\r\n  };\r\n}\r\nfunction compilePath(path, caseSensitive = false, end = true) {\r\n  warning(\r\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\r\n    `Route path \"${path}\" will be treated as if it were \"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must always follow a \\`/\\` in the pattern. To get rid of this warning, please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\r\n  );\r\n  let params = [];\r\n  let regexpSource = \"^\" + path.replace(/\\/*\\*?$/, \"\").replace(/^\\/*/, \"/\").replace(/[\\\\.*+^${}|()[\\]]/g, \"\\\\$&\").replace(\r\n    /\\/:([\\w-]+)(\\?)?/g,\r\n    (_, paramName, isOptional) => {\r\n      params.push({ paramName, isOptional: isOptional != null });\r\n      return isOptional ? \"/?([^\\\\/]+)?\" : \"/([^\\\\/]+)\";\r\n    }\r\n  );\r\n  if (path.endsWith(\"*\")) {\r\n    params.push({ paramName: \"*\" });\r\n    regexpSource += path === \"*\" || path === \"/*\" ? \"(.*)$\" : \"(?:\\\\/(.+)|\\\\/*)$\";\r\n  } else if (end) {\r\n    regexpSource += \"\\\\/*$\";\r\n  } else if (path !== \"\" && path !== \"/\") {\r\n    regexpSource += \"(?:(?=\\\\/|$))\";\r\n  } else {\r\n  }\r\n  let matcher = new RegExp(regexpSource, caseSensitive ? void 0 : \"i\");\r\n  return [matcher, params];\r\n}\r\nfunction decodePath(value) {\r\n  try {\r\n    return value.split(\"/\").map((v) => decodeURIComponent(v).replace(/\\//g, \"%2F\")).join(\"/\");\r\n  } catch (error) {\r\n    warning(\r\n      false,\r\n      `The URL path \"${value}\" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${error}).`\r\n    );\r\n    return value;\r\n  }\r\n}\r\nfunction stripBasename(pathname, basename) {\r\n  if (basename === \"/\") return pathname;\r\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\r\n    return null;\r\n  }\r\n  let startIndex = basename.endsWith(\"/\") ? basename.length - 1 : basename.length;\r\n  let nextChar = pathname.charAt(startIndex);\r\n  if (nextChar && nextChar !== \"/\") {\r\n    return null;\r\n  }\r\n  return pathname.slice(startIndex) || \"/\";\r\n}\r\nfunction resolvePath(to, fromPathname = \"/\") {\r\n  let {\r\n    pathname: toPathname,\r\n    search = \"\",\r\n    hash = \"\"\r\n  } = typeof to === \"string\" ? parsePath(to) : to;\r\n  let pathname = toPathname ? toPathname.startsWith(\"/\") ? toPathname : resolvePathname(toPathname, fromPathname) : fromPathname;\r\n  return {\r\n    pathname,\r\n    search: normalizeSearch(search),\r\n    hash: normalizeHash(hash)\r\n  };\r\n}\r\nfunction resolvePathname(relativePath, fromPathname) {\r\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\r\n  let relativeSegments = relativePath.split(\"/\");\r\n  relativeSegments.forEach((segment) => {\r\n    if (segment === \"..\") {\r\n      if (segments.length > 1) segments.pop();\r\n    } else if (segment !== \".\") {\r\n      segments.push(segment);\r\n    }\r\n  });\r\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\r\n}\r\nfunction getInvalidPathError(char, field, dest, path) {\r\n  return `Cannot include a '${char}' character in a manually specified \\`to.${field}\\` field [${JSON.stringify(\r\n    path\r\n  )}].  Please separate it out to the \\`to.${dest}\\` field. Alternatively you may provide the full path as a string in <Link to=\"...\"> and the router will parse it for you.`;\r\n}\r\nfunction getPathContributingMatches(matches) {\r\n  return matches.filter(\r\n    (match, index) => index === 0 || match.route.path && match.route.path.length > 0\r\n  );\r\n}\r\nfunction getResolveToMatches(matches) {\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches.map(\r\n    (match, idx) => idx === pathMatches.length - 1 ? match.pathname : match.pathnameBase\r\n  );\r\n}\r\nfunction resolveTo(toArg, routePathnames, locationPathname, isPathRelative = false) {\r\n  let to;\r\n  if (typeof toArg === \"string\") {\r\n    to = parsePath(toArg);\r\n  } else {\r\n    to = { ...toArg };\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"?\"),\r\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\r\n    );\r\n    invariant(\r\n      !to.pathname || !to.pathname.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\r\n    );\r\n    invariant(\r\n      !to.search || !to.search.includes(\"#\"),\r\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\r\n    );\r\n  }\r\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\r\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\r\n  let from;\r\n  if (toPathname == null) {\r\n    from = locationPathname;\r\n  } else {\r\n    let routePathnameIndex = routePathnames.length - 1;\r\n    if (!isPathRelative && toPathname.startsWith(\"..\")) {\r\n      let toSegments = toPathname.split(\"/\");\r\n      while (toSegments[0] === \"..\") {\r\n        toSegments.shift();\r\n        routePathnameIndex -= 1;\r\n      }\r\n      to.pathname = toSegments.join(\"/\");\r\n    }\r\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\r\n  }\r\n  let path = resolvePath(to, from);\r\n  let hasExplicitTrailingSlash = toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\r\n  let hasCurrentTrailingSlash = (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\r\n  if (!path.pathname.endsWith(\"/\") && (hasExplicitTrailingSlash || hasCurrentTrailingSlash)) {\r\n    path.pathname += \"/\";\r\n  }\r\n  return path;\r\n}\r\nvar joinPaths = (paths) => paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\r\nvar normalizePathname = (pathname) => pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\r\nvar normalizeSearch = (search) => !search || search === \"?\" ? \"\" : search.startsWith(\"?\") ? search : \"?\" + search;\r\nvar normalizeHash = (hash) => !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\r\nvar DataWithResponseInit = class {\r\n  constructor(data2, init) {\r\n    this.type = \"DataWithResponseInit\";\r\n    this.data = data2;\r\n    this.init = init || null;\r\n  }\r\n};\r\nfunction data(data2, init) {\r\n  return new DataWithResponseInit(\r\n    data2,\r\n    typeof init === \"number\" ? { status: init } : init\r\n  );\r\n}\r\nvar redirect = (url, init = 302) => {\r\n  let responseInit = init;\r\n  if (typeof responseInit === \"number\") {\r\n    responseInit = { status: responseInit };\r\n  } else if (typeof responseInit.status === \"undefined\") {\r\n    responseInit.status = 302;\r\n  }\r\n  let headers = new Headers(responseInit.headers);\r\n  headers.set(\"Location\", url);\r\n  return new Response(null, { ...responseInit, headers });\r\n};\r\nvar redirectDocument = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\r\n  return response;\r\n};\r\nvar replace = (url, init) => {\r\n  let response = redirect(url, init);\r\n  response.headers.set(\"X-Remix-Replace\", \"true\");\r\n  return response;\r\n};\r\nvar ErrorResponseImpl = class {\r\n  constructor(status, statusText, data2, internal = false) {\r\n    this.status = status;\r\n    this.statusText = statusText || \"\";\r\n    this.internal = internal;\r\n    if (data2 instanceof Error) {\r\n      this.data = data2.toString();\r\n      this.error = data2;\r\n    } else {\r\n      this.data = data2;\r\n    }\r\n  }\r\n};\r\nfunction isRouteErrorResponse(error) {\r\n  return error != null && typeof error.status === \"number\" && typeof error.statusText === \"string\" && typeof error.internal === \"boolean\" && \"data\" in error;\r\n}\r\n\r\n// lib/router/router.ts\r\nvar validMutationMethodsArr = [\r\n  \"POST\",\r\n  \"PUT\",\r\n  \"PATCH\",\r\n  \"DELETE\"\r\n];\r\nvar validMutationMethods = new Set(\r\n  validMutationMethodsArr\r\n);\r\nvar validRequestMethodsArr = [\r\n  \"GET\",\r\n  ...validMutationMethodsArr\r\n];\r\nvar validRequestMethods = new Set(validRequestMethodsArr);\r\nvar redirectStatusCodes = /* @__PURE__ */ new Set([301, 302, 303, 307, 308]);\r\nvar redirectPreserveMethodStatusCodes = /* @__PURE__ */ new Set([307, 308]);\r\nvar IDLE_NAVIGATION = {\r\n  state: \"idle\",\r\n  location: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_FETCHER = {\r\n  state: \"idle\",\r\n  data: void 0,\r\n  formMethod: void 0,\r\n  formAction: void 0,\r\n  formEncType: void 0,\r\n  formData: void 0,\r\n  json: void 0,\r\n  text: void 0\r\n};\r\nvar IDLE_BLOCKER = {\r\n  state: \"unblocked\",\r\n  proceed: void 0,\r\n  reset: void 0,\r\n  location: void 0\r\n};\r\nvar ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar defaultMapRouteProperties = (route) => ({\r\n  hasErrorBoundary: Boolean(route.hasErrorBoundary)\r\n});\r\nvar TRANSITIONS_STORAGE_KEY = \"remix-router-transitions\";\r\nvar ResetLoaderDataSymbol = Symbol(\"ResetLoaderData\");\r\nfunction createRouter(init) {\r\n  const routerWindow = init.window ? init.window : typeof window !== \"undefined\" ? window : void 0;\r\n  const isBrowser2 = typeof routerWindow !== \"undefined\" && typeof routerWindow.document !== \"undefined\" && typeof routerWindow.document.createElement !== \"undefined\";\r\n  invariant(\r\n    init.routes.length > 0,\r\n    \"You must provide a non-empty routes array to createRouter\"\r\n  );\r\n  let mapRouteProperties2 = init.mapRouteProperties || defaultMapRouteProperties;\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    init.routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let inFlightDataRoutes;\r\n  let basename = init.basename || \"/\";\r\n  let dataStrategyImpl = init.dataStrategy || defaultDataStrategyWithMiddleware;\r\n  let future = {\r\n    unstable_middleware: false,\r\n    ...init.future\r\n  };\r\n  let unlistenHistory = null;\r\n  let subscribers = /* @__PURE__ */ new Set();\r\n  let savedScrollPositions2 = null;\r\n  let getScrollRestorationKey2 = null;\r\n  let getScrollPosition = null;\r\n  let initialScrollRestored = init.hydrationData != null;\r\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\r\n  let initialMatchesIsFOW = false;\r\n  let initialErrors = null;\r\n  if (initialMatches == null && !init.patchRoutesOnNavigation) {\r\n    let error = getInternalRouterError(404, {\r\n      pathname: init.history.location.pathname\r\n    });\r\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\r\n    initialMatches = matches;\r\n    initialErrors = { [route.id]: error };\r\n  }\r\n  if (initialMatches && !init.hydrationData) {\r\n    let fogOfWar = checkFogOfWar(\r\n      initialMatches,\r\n      dataRoutes,\r\n      init.history.location.pathname\r\n    );\r\n    if (fogOfWar.active) {\r\n      initialMatches = null;\r\n    }\r\n  }\r\n  let initialized;\r\n  if (!initialMatches) {\r\n    initialized = false;\r\n    initialMatches = [];\r\n    let fogOfWar = checkFogOfWar(\r\n      null,\r\n      dataRoutes,\r\n      init.history.location.pathname\r\n    );\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      initialMatchesIsFOW = true;\r\n      initialMatches = fogOfWar.matches;\r\n    }\r\n  } else if (initialMatches.some((m) => m.route.lazy)) {\r\n    initialized = false;\r\n  } else if (!initialMatches.some((m) => m.route.loader)) {\r\n    initialized = true;\r\n  } else {\r\n    let loaderData = init.hydrationData ? init.hydrationData.loaderData : null;\r\n    let errors = init.hydrationData ? init.hydrationData.errors : null;\r\n    if (errors) {\r\n      let idx = initialMatches.findIndex(\r\n        (m) => errors[m.route.id] !== void 0\r\n      );\r\n      initialized = initialMatches.slice(0, idx + 1).every((m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors));\r\n    } else {\r\n      initialized = initialMatches.every(\r\n        (m) => !shouldLoadRouteOnHydration(m.route, loaderData, errors)\r\n      );\r\n    }\r\n  }\r\n  let router;\r\n  let state = {\r\n    historyAction: init.history.action,\r\n    location: init.history.location,\r\n    matches: initialMatches,\r\n    initialized,\r\n    navigation: IDLE_NAVIGATION,\r\n    // Don't restore on initial updateState() if we were SSR'd\r\n    restoreScrollPosition: init.hydrationData != null ? false : null,\r\n    preventScrollReset: false,\r\n    revalidation: \"idle\",\r\n    loaderData: init.hydrationData && init.hydrationData.loaderData || {},\r\n    actionData: init.hydrationData && init.hydrationData.actionData || null,\r\n    errors: init.hydrationData && init.hydrationData.errors || initialErrors,\r\n    fetchers: /* @__PURE__ */ new Map(),\r\n    blockers: /* @__PURE__ */ new Map()\r\n  };\r\n  let pendingAction = \"POP\" /* Pop */;\r\n  let pendingPreventScrollReset = false;\r\n  let pendingNavigationController;\r\n  let pendingViewTransitionEnabled = false;\r\n  let appliedViewTransitions = /* @__PURE__ */ new Map();\r\n  let removePageHideEventListener = null;\r\n  let isUninterruptedRevalidation = false;\r\n  let isRevalidationRequired = false;\r\n  let cancelledFetcherLoads = /* @__PURE__ */ new Set();\r\n  let fetchControllers = /* @__PURE__ */ new Map();\r\n  let incrementingLoadId = 0;\r\n  let pendingNavigationLoadId = -1;\r\n  let fetchReloadIds = /* @__PURE__ */ new Map();\r\n  let fetchRedirectIds = /* @__PURE__ */ new Set();\r\n  let fetchLoadMatches = /* @__PURE__ */ new Map();\r\n  let activeFetchers = /* @__PURE__ */ new Map();\r\n  let fetchersQueuedForDeletion = /* @__PURE__ */ new Set();\r\n  let blockerFunctions = /* @__PURE__ */ new Map();\r\n  let unblockBlockerHistoryUpdate = void 0;\r\n  let pendingRevalidationDfd = null;\r\n  function initialize() {\r\n    unlistenHistory = init.history.listen(\r\n      ({ action: historyAction, location, delta }) => {\r\n        if (unblockBlockerHistoryUpdate) {\r\n          unblockBlockerHistoryUpdate();\r\n          unblockBlockerHistoryUpdate = void 0;\r\n          return;\r\n        }\r\n        warning(\r\n          blockerFunctions.size === 0 || delta != null,\r\n          \"You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.\"\r\n        );\r\n        let blockerKey = shouldBlockNavigation({\r\n          currentLocation: state.location,\r\n          nextLocation: location,\r\n          historyAction\r\n        });\r\n        if (blockerKey && delta != null) {\r\n          let nextHistoryUpdatePromise = new Promise((resolve) => {\r\n            unblockBlockerHistoryUpdate = resolve;\r\n          });\r\n          init.history.go(delta * -1);\r\n          updateBlocker(blockerKey, {\r\n            state: \"blocked\",\r\n            location,\r\n            proceed() {\r\n              updateBlocker(blockerKey, {\r\n                state: \"proceeding\",\r\n                proceed: void 0,\r\n                reset: void 0,\r\n                location\r\n              });\r\n              nextHistoryUpdatePromise.then(() => init.history.go(delta));\r\n            },\r\n            reset() {\r\n              let blockers = new Map(state.blockers);\r\n              blockers.set(blockerKey, IDLE_BLOCKER);\r\n              updateState({ blockers });\r\n            }\r\n          });\r\n          return;\r\n        }\r\n        return startNavigation(historyAction, location);\r\n      }\r\n    );\r\n    if (isBrowser2) {\r\n      restoreAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      let _saveAppliedTransitions = () => persistAppliedTransitions(routerWindow, appliedViewTransitions);\r\n      routerWindow.addEventListener(\"pagehide\", _saveAppliedTransitions);\r\n      removePageHideEventListener = () => routerWindow.removeEventListener(\"pagehide\", _saveAppliedTransitions);\r\n    }\r\n    if (!state.initialized) {\r\n      startNavigation(\"POP\" /* Pop */, state.location, {\r\n        initialHydration: true\r\n      });\r\n    }\r\n    return router;\r\n  }\r\n  function dispose() {\r\n    if (unlistenHistory) {\r\n      unlistenHistory();\r\n    }\r\n    if (removePageHideEventListener) {\r\n      removePageHideEventListener();\r\n    }\r\n    subscribers.clear();\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\r\n    state.blockers.forEach((_, key) => deleteBlocker(key));\r\n  }\r\n  function subscribe(fn) {\r\n    subscribers.add(fn);\r\n    return () => subscribers.delete(fn);\r\n  }\r\n  function updateState(newState, opts = {}) {\r\n    state = {\r\n      ...state,\r\n      ...newState\r\n    };\r\n    let unmountedFetchers = [];\r\n    let mountedFetchers = [];\r\n    state.fetchers.forEach((fetcher, key) => {\r\n      if (fetcher.state === \"idle\") {\r\n        if (fetchersQueuedForDeletion.has(key)) {\r\n          unmountedFetchers.push(key);\r\n        } else {\r\n          mountedFetchers.push(key);\r\n        }\r\n      }\r\n    });\r\n    fetchersQueuedForDeletion.forEach((key) => {\r\n      if (!state.fetchers.has(key) && !fetchControllers.has(key)) {\r\n        unmountedFetchers.push(key);\r\n      }\r\n    });\r\n    [...subscribers].forEach(\r\n      (subscriber) => subscriber(state, {\r\n        deletedFetchers: unmountedFetchers,\r\n        viewTransitionOpts: opts.viewTransitionOpts,\r\n        flushSync: opts.flushSync === true\r\n      })\r\n    );\r\n    unmountedFetchers.forEach((key) => deleteFetcher(key));\r\n    mountedFetchers.forEach((key) => state.fetchers.delete(key));\r\n  }\r\n  function completeNavigation(location, newState, { flushSync } = {}) {\r\n    let isActionReload = state.actionData != null && state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && state.navigation.state === \"loading\" && location.state?._isRedirect !== true;\r\n    let actionData;\r\n    if (newState.actionData) {\r\n      if (Object.keys(newState.actionData).length > 0) {\r\n        actionData = newState.actionData;\r\n      } else {\r\n        actionData = null;\r\n      }\r\n    } else if (isActionReload) {\r\n      actionData = state.actionData;\r\n    } else {\r\n      actionData = null;\r\n    }\r\n    let loaderData = newState.loaderData ? mergeLoaderData(\r\n      state.loaderData,\r\n      newState.loaderData,\r\n      newState.matches || [],\r\n      newState.errors\r\n    ) : state.loaderData;\r\n    let blockers = state.blockers;\r\n    if (blockers.size > 0) {\r\n      blockers = new Map(blockers);\r\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\r\n    }\r\n    let preventScrollReset = pendingPreventScrollReset === true || state.navigation.formMethod != null && isMutationMethod(state.navigation.formMethod) && location.state?._isRedirect !== true;\r\n    if (inFlightDataRoutes) {\r\n      dataRoutes = inFlightDataRoutes;\r\n      inFlightDataRoutes = void 0;\r\n    }\r\n    if (isUninterruptedRevalidation) {\r\n    } else if (pendingAction === \"POP\" /* Pop */) {\r\n    } else if (pendingAction === \"PUSH\" /* Push */) {\r\n      init.history.push(location, location.state);\r\n    } else if (pendingAction === \"REPLACE\" /* Replace */) {\r\n      init.history.replace(location, location.state);\r\n    }\r\n    let viewTransitionOpts;\r\n    if (pendingAction === \"POP\" /* Pop */) {\r\n      let priorPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (priorPaths && priorPaths.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: state.location,\r\n          nextLocation: location\r\n        };\r\n      } else if (appliedViewTransitions.has(location.pathname)) {\r\n        viewTransitionOpts = {\r\n          currentLocation: location,\r\n          nextLocation: state.location\r\n        };\r\n      }\r\n    } else if (pendingViewTransitionEnabled) {\r\n      let toPaths = appliedViewTransitions.get(state.location.pathname);\r\n      if (toPaths) {\r\n        toPaths.add(location.pathname);\r\n      } else {\r\n        toPaths = /* @__PURE__ */ new Set([location.pathname]);\r\n        appliedViewTransitions.set(state.location.pathname, toPaths);\r\n      }\r\n      viewTransitionOpts = {\r\n        currentLocation: state.location,\r\n        nextLocation: location\r\n      };\r\n    }\r\n    updateState(\r\n      {\r\n        ...newState,\r\n        // matches, errors, fetchers go through as-is\r\n        actionData,\r\n        loaderData,\r\n        historyAction: pendingAction,\r\n        location,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        revalidation: \"idle\",\r\n        restoreScrollPosition: getSavedScrollPosition(\r\n          location,\r\n          newState.matches || state.matches\r\n        ),\r\n        preventScrollReset,\r\n        blockers\r\n      },\r\n      {\r\n        viewTransitionOpts,\r\n        flushSync: flushSync === true\r\n      }\r\n    );\r\n    pendingAction = \"POP\" /* Pop */;\r\n    pendingPreventScrollReset = false;\r\n    pendingViewTransitionEnabled = false;\r\n    isUninterruptedRevalidation = false;\r\n    isRevalidationRequired = false;\r\n    pendingRevalidationDfd?.resolve();\r\n    pendingRevalidationDfd = null;\r\n  }\r\n  async function navigate(to, opts) {\r\n    if (typeof to === \"number\") {\r\n      init.history.go(to);\r\n      return;\r\n    }\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      to,\r\n      opts?.fromRouteId,\r\n      opts?.relative\r\n    );\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      false,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    let currentLocation = state.location;\r\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\r\n    nextLocation = {\r\n      ...nextLocation,\r\n      ...init.history.encodeLocation(nextLocation)\r\n    };\r\n    let userReplace = opts && opts.replace != null ? opts.replace : void 0;\r\n    let historyAction = \"PUSH\" /* Push */;\r\n    if (userReplace === true) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    } else if (userReplace === false) {\r\n    } else if (submission != null && isMutationMethod(submission.formMethod) && submission.formAction === state.location.pathname + state.location.search) {\r\n      historyAction = \"REPLACE\" /* Replace */;\r\n    }\r\n    let preventScrollReset = opts && \"preventScrollReset\" in opts ? opts.preventScrollReset === true : void 0;\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let blockerKey = shouldBlockNavigation({\r\n      currentLocation,\r\n      nextLocation,\r\n      historyAction\r\n    });\r\n    if (blockerKey) {\r\n      updateBlocker(blockerKey, {\r\n        state: \"blocked\",\r\n        location: nextLocation,\r\n        proceed() {\r\n          updateBlocker(blockerKey, {\r\n            state: \"proceeding\",\r\n            proceed: void 0,\r\n            reset: void 0,\r\n            location: nextLocation\r\n          });\r\n          navigate(to, opts);\r\n        },\r\n        reset() {\r\n          let blockers = new Map(state.blockers);\r\n          blockers.set(blockerKey, IDLE_BLOCKER);\r\n          updateState({ blockers });\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    await startNavigation(historyAction, nextLocation, {\r\n      submission,\r\n      // Send through the formData serialization error if we have one so we can\r\n      // render at the right error boundary after we match routes\r\n      pendingError: error,\r\n      preventScrollReset,\r\n      replace: opts && opts.replace,\r\n      enableViewTransition: opts && opts.viewTransition,\r\n      flushSync\r\n    });\r\n  }\r\n  function revalidate() {\r\n    if (!pendingRevalidationDfd) {\r\n      pendingRevalidationDfd = createDeferred();\r\n    }\r\n    interruptActiveLoads();\r\n    updateState({ revalidation: \"loading\" });\r\n    let promise = pendingRevalidationDfd.promise;\r\n    if (state.navigation.state === \"submitting\") {\r\n      return promise;\r\n    }\r\n    if (state.navigation.state === \"idle\") {\r\n      startNavigation(state.historyAction, state.location, {\r\n        startUninterruptedRevalidation: true\r\n      });\r\n      return promise;\r\n    }\r\n    startNavigation(\r\n      pendingAction || state.historyAction,\r\n      state.navigation.location,\r\n      {\r\n        overrideNavigation: state.navigation,\r\n        // Proxy through any rending view transition\r\n        enableViewTransition: pendingViewTransitionEnabled === true\r\n      }\r\n    );\r\n    return promise;\r\n  }\r\n  async function startNavigation(historyAction, location, opts) {\r\n    pendingNavigationController && pendingNavigationController.abort();\r\n    pendingNavigationController = null;\r\n    pendingAction = historyAction;\r\n    isUninterruptedRevalidation = (opts && opts.startUninterruptedRevalidation) === true;\r\n    saveScrollPosition(state.location, state.matches);\r\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    pendingViewTransitionEnabled = (opts && opts.enableViewTransition) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let loadingNavigation = opts && opts.overrideNavigation;\r\n    let matches = opts?.initialHydration && state.matches && state.matches.length > 0 && !initialMatchesIsFOW ? (\r\n      // `matchRoutes()` has already been called if we're in here via `router.initialize()`\r\n      state.matches\r\n    ) : matchRoutes(routesToUse, location, basename);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    if (matches && state.initialized && !isRevalidationRequired && isHashChangeOnly(state.location, location) && !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))) {\r\n      completeNavigation(location, { matches }, { flushSync });\r\n      return;\r\n    }\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, location.pathname);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      let { error, notFoundMatches, route } = handleNavigational404(\r\n        location.pathname\r\n      );\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        },\r\n        { flushSync }\r\n      );\r\n      return;\r\n    }\r\n    pendingNavigationController = new AbortController();\r\n    let request = createClientSideRequest(\r\n      init.history,\r\n      location,\r\n      pendingNavigationController.signal,\r\n      opts && opts.submission\r\n    );\r\n    let scopedContext = new unstable_RouterContextProvider(\r\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\r\n    );\r\n    let pendingActionResult;\r\n    if (opts && opts.pendingError) {\r\n      pendingActionResult = [\r\n        findNearestBoundary(matches).route.id,\r\n        { type: \"error\" /* error */, error: opts.pendingError }\r\n      ];\r\n    } else if (opts && opts.submission && isMutationMethod(opts.submission.formMethod)) {\r\n      let actionResult = await handleAction(\r\n        request,\r\n        location,\r\n        opts.submission,\r\n        matches,\r\n        scopedContext,\r\n        fogOfWar.active,\r\n        { replace: opts.replace, flushSync }\r\n      );\r\n      if (actionResult.shortCircuited) {\r\n        return;\r\n      }\r\n      if (actionResult.pendingActionResult) {\r\n        let [routeId, result] = actionResult.pendingActionResult;\r\n        if (isErrorResult(result) && isRouteErrorResponse(result.error) && result.error.status === 404) {\r\n          pendingNavigationController = null;\r\n          completeNavigation(location, {\r\n            matches: actionResult.matches,\r\n            loaderData: {},\r\n            errors: {\r\n              [routeId]: result.error\r\n            }\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      matches = actionResult.matches || matches;\r\n      pendingActionResult = actionResult.pendingActionResult;\r\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\r\n      flushSync = false;\r\n      fogOfWar.active = false;\r\n      request = createClientSideRequest(\r\n        init.history,\r\n        request.url,\r\n        request.signal\r\n      );\r\n    }\r\n    let {\r\n      shortCircuited,\r\n      matches: updatedMatches,\r\n      loaderData,\r\n      errors\r\n    } = await handleLoaders(\r\n      request,\r\n      location,\r\n      matches,\r\n      scopedContext,\r\n      fogOfWar.active,\r\n      loadingNavigation,\r\n      opts && opts.submission,\r\n      opts && opts.fetcherSubmission,\r\n      opts && opts.replace,\r\n      opts && opts.initialHydration === true,\r\n      flushSync,\r\n      pendingActionResult\r\n    );\r\n    if (shortCircuited) {\r\n      return;\r\n    }\r\n    pendingNavigationController = null;\r\n    completeNavigation(location, {\r\n      matches: updatedMatches || matches,\r\n      ...getActionDataForCommit(pendingActionResult),\r\n      loaderData,\r\n      errors\r\n    });\r\n  }\r\n  async function handleAction(request, location, submission, matches, scopedContext, isFogOfWar, opts = {}) {\r\n    interruptActiveLoads();\r\n    let navigation = getSubmittingNavigation(location, submission);\r\n    updateState({ navigation }, { flushSync: opts.flushSync === true });\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          pendingActionResult: [\r\n            boundaryId,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error: discoverResult.error\r\n            }\r\n          ]\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { notFoundMatches, error, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          pendingActionResult: [\r\n            route.id,\r\n            {\r\n              type: \"error\" /* error */,\r\n              error\r\n            }\r\n          ]\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let result;\r\n    let actionMatch = getTargetMatch(matches, location);\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error: getInternalRouterError(405, {\r\n          method: request.method,\r\n          pathname: location.pathname,\r\n          routeId: actionMatch.route.id\r\n        })\r\n      };\r\n    } else {\r\n      let results = await callDataStrategy(\r\n        \"action\",\r\n        request,\r\n        [actionMatch],\r\n        matches,\r\n        scopedContext,\r\n        null\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (!result) {\r\n        for (let match of matches) {\r\n          if (results[match.route.id]) {\r\n            result = results[match.route.id];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      if (request.signal.aborted) {\r\n        return { shortCircuited: true };\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      let replace2;\r\n      if (opts && opts.replace != null) {\r\n        replace2 = opts.replace;\r\n      } else {\r\n        let location2 = normalizeRedirectLocation(\r\n          result.response.headers.get(\"Location\"),\r\n          new URL(request.url),\r\n          basename\r\n        );\r\n        replace2 = location2 === state.location.pathname + state.location.search;\r\n      }\r\n      await startRedirectNavigation(request, result, true, {\r\n        submission,\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\r\n      if ((opts && opts.replace) !== true) {\r\n        pendingAction = \"PUSH\" /* Push */;\r\n      }\r\n      return {\r\n        matches,\r\n        pendingActionResult: [boundaryMatch.route.id, result]\r\n      };\r\n    }\r\n    return {\r\n      matches,\r\n      pendingActionResult: [actionMatch.route.id, result]\r\n    };\r\n  }\r\n  async function handleLoaders(request, location, matches, scopedContext, isFogOfWar, overrideNavigation, submission, fetcherSubmission, replace2, initialHydration, flushSync, pendingActionResult) {\r\n    let loadingNavigation = overrideNavigation || getLoadingNavigation(location, submission);\r\n    let activeSubmission = submission || fetcherSubmission || getSubmissionFromNavigation(loadingNavigation);\r\n    let shouldUpdateNavigationState = !isUninterruptedRevalidation && !initialHydration;\r\n    if (isFogOfWar) {\r\n      if (shouldUpdateNavigationState) {\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        updateState(\r\n          {\r\n            navigation: loadingNavigation,\r\n            ...actionData !== void 0 ? { actionData } : {}\r\n          },\r\n          {\r\n            flushSync\r\n          }\r\n        );\r\n      }\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        location.pathname,\r\n        request.signal\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return { shortCircuited: true };\r\n      } else if (discoverResult.type === \"error\") {\r\n        let boundaryId = findNearestBoundary(discoverResult.partialMatches).route.id;\r\n        return {\r\n          matches: discoverResult.partialMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryId]: discoverResult.error\r\n          }\r\n        };\r\n      } else if (!discoverResult.matches) {\r\n        let { error, notFoundMatches, route } = handleNavigational404(\r\n          location.pathname\r\n        );\r\n        return {\r\n          matches: notFoundMatches,\r\n          loaderData: {},\r\n          errors: {\r\n            [route.id]: error\r\n          }\r\n        };\r\n      } else {\r\n        matches = discoverResult.matches;\r\n      }\r\n    }\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\r\n      init.history,\r\n      state,\r\n      matches,\r\n      activeSubmission,\r\n      location,\r\n      initialHydration === true,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      pendingActionResult\r\n    );\r\n    pendingNavigationLoadId = ++incrementingLoadId;\r\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\r\n      let updatedFetchers2 = markFetchRedirectsDone();\r\n      completeNavigation(\r\n        location,\r\n        {\r\n          matches,\r\n          loaderData: {},\r\n          // Commit pending error if we're short circuiting\r\n          errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? { [pendingActionResult[0]]: pendingActionResult[1].error } : null,\r\n          ...getActionDataForCommit(pendingActionResult),\r\n          ...updatedFetchers2 ? { fetchers: new Map(state.fetchers) } : {}\r\n        },\r\n        { flushSync }\r\n      );\r\n      return { shortCircuited: true };\r\n    }\r\n    if (shouldUpdateNavigationState) {\r\n      let updates = {};\r\n      if (!isFogOfWar) {\r\n        updates.navigation = loadingNavigation;\r\n        let actionData = getUpdatedActionData(pendingActionResult);\r\n        if (actionData !== void 0) {\r\n          updates.actionData = actionData;\r\n        }\r\n      }\r\n      if (revalidatingFetchers.length > 0) {\r\n        updates.fetchers = getUpdatedRevalidatingFetchers(revalidatingFetchers);\r\n      }\r\n      updateState(updates, { flushSync });\r\n    }\r\n    revalidatingFetchers.forEach((rf) => {\r\n      abortFetcher(rf.key);\r\n      if (rf.controller) {\r\n        fetchControllers.set(rf.key, rf.controller);\r\n      }\r\n    });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((f) => abortFetcher(f.key));\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.addEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      matches,\r\n      matchesToLoad,\r\n      revalidatingFetchers,\r\n      request,\r\n      scopedContext\r\n    );\r\n    if (request.signal.aborted) {\r\n      return { shortCircuited: true };\r\n    }\r\n    if (pendingNavigationController) {\r\n      pendingNavigationController.signal.removeEventListener(\r\n        \"abort\",\r\n        abortPendingFetchRevalidations\r\n      );\r\n    }\r\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      await startRedirectNavigation(request, redirect2.result, true, {\r\n        replace: replace2\r\n      });\r\n      return { shortCircuited: true };\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      pendingActionResult,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (initialHydration && state.errors) {\r\n      errors = { ...state.errors, ...errors };\r\n    }\r\n    let updatedFetchers = markFetchRedirectsDone();\r\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\r\n    let shouldUpdateFetchers = updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\r\n    return {\r\n      matches,\r\n      loaderData,\r\n      errors,\r\n      ...shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}\r\n    };\r\n  }\r\n  function getUpdatedActionData(pendingActionResult) {\r\n    if (pendingActionResult && !isErrorResult(pendingActionResult[1])) {\r\n      return {\r\n        [pendingActionResult[0]]: pendingActionResult[1].data\r\n      };\r\n    } else if (state.actionData) {\r\n      if (Object.keys(state.actionData).length === 0) {\r\n        return null;\r\n      } else {\r\n        return state.actionData;\r\n      }\r\n    }\r\n  }\r\n  function getUpdatedRevalidatingFetchers(revalidatingFetchers) {\r\n    revalidatingFetchers.forEach((rf) => {\r\n      let fetcher = state.fetchers.get(rf.key);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        fetcher ? fetcher.data : void 0\r\n      );\r\n      state.fetchers.set(rf.key, revalidatingFetcher);\r\n    });\r\n    return new Map(state.fetchers);\r\n  }\r\n  async function fetch2(key, routeId, href2, opts) {\r\n    abortFetcher(key);\r\n    let flushSync = (opts && opts.flushSync) === true;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let normalizedPath = normalizeTo(\r\n      state.location,\r\n      state.matches,\r\n      basename,\r\n      href2,\r\n      routeId,\r\n      opts?.relative\r\n    );\r\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\r\n    let fogOfWar = checkFogOfWar(matches, routesToUse, normalizedPath);\r\n    if (fogOfWar.active && fogOfWar.matches) {\r\n      matches = fogOfWar.matches;\r\n    }\r\n    if (!matches) {\r\n      setFetcherError(\r\n        key,\r\n        routeId,\r\n        getInternalRouterError(404, { pathname: normalizedPath }),\r\n        { flushSync }\r\n      );\r\n      return;\r\n    }\r\n    let { path, submission, error } = normalizeNavigateOptions(\r\n      true,\r\n      normalizedPath,\r\n      opts\r\n    );\r\n    if (error) {\r\n      setFetcherError(key, routeId, error, { flushSync });\r\n      return;\r\n    }\r\n    let match = getTargetMatch(matches, path);\r\n    let scopedContext = new unstable_RouterContextProvider(\r\n      init.unstable_getContext ? await init.unstable_getContext() : void 0\r\n    );\r\n    let preventScrollReset = (opts && opts.preventScrollReset) === true;\r\n    if (submission && isMutationMethod(submission.formMethod)) {\r\n      await handleFetcherAction(\r\n        key,\r\n        routeId,\r\n        path,\r\n        match,\r\n        matches,\r\n        scopedContext,\r\n        fogOfWar.active,\r\n        flushSync,\r\n        preventScrollReset,\r\n        submission\r\n      );\r\n      return;\r\n    }\r\n    fetchLoadMatches.set(key, { routeId, path });\r\n    await handleFetcherLoader(\r\n      key,\r\n      routeId,\r\n      path,\r\n      match,\r\n      matches,\r\n      scopedContext,\r\n      fogOfWar.active,\r\n      flushSync,\r\n      preventScrollReset,\r\n      submission\r\n    );\r\n  }\r\n  async function handleFetcherAction(key, routeId, path, match, requestMatches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    interruptActiveLoads();\r\n    fetchLoadMatches.delete(key);\r\n    function detectAndHandle405Error(m) {\r\n      if (!m.route.action && !m.route.lazy) {\r\n        let error = getInternalRouterError(405, {\r\n          method: submission.formMethod,\r\n          pathname: path,\r\n          routeId\r\n        });\r\n        setFetcherError(key, routeId, error, { flushSync });\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    if (!isFogOfWar && detectAndHandle405Error(match)) {\r\n      return;\r\n    }\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(key, getSubmittingFetcher(submission, existingFetcher), {\r\n      flushSync\r\n    });\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal,\r\n      submission\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        requestMatches,\r\n        path,\r\n        fetchRequest.signal,\r\n        key\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync }\r\n        );\r\n        return;\r\n      } else {\r\n        requestMatches = discoverResult.matches;\r\n        match = getTargetMatch(requestMatches, path);\r\n        if (detectAndHandle405Error(match)) {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let actionResults = await callDataStrategy(\r\n      \"action\",\r\n      fetchRequest,\r\n      [match],\r\n      requestMatches,\r\n      scopedContext,\r\n      key\r\n    );\r\n    let actionResult = actionResults[match.route.id];\r\n    if (fetchRequest.signal.aborted) {\r\n      if (fetchControllers.get(key) === abortController) {\r\n        fetchControllers.delete(key);\r\n      }\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      if (isRedirectResult(actionResult) || isErrorResult(actionResult)) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      }\r\n    } else {\r\n      if (isRedirectResult(actionResult)) {\r\n        fetchControllers.delete(key);\r\n        if (pendingNavigationLoadId > originatingLoadId) {\r\n          updateFetcherState(key, getDoneFetcher(void 0));\r\n          return;\r\n        } else {\r\n          fetchRedirectIds.add(key);\r\n          updateFetcherState(key, getLoadingFetcher(submission));\r\n          return startRedirectNavigation(fetchRequest, actionResult, false, {\r\n            fetcherSubmission: submission,\r\n            preventScrollReset\r\n          });\r\n        }\r\n      }\r\n      if (isErrorResult(actionResult)) {\r\n        setFetcherError(key, routeId, actionResult.error);\r\n        return;\r\n      }\r\n    }\r\n    let nextLocation = state.navigation.location || state.location;\r\n    let revalidationRequest = createClientSideRequest(\r\n      init.history,\r\n      nextLocation,\r\n      abortController.signal\r\n    );\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let matches = state.navigation.state !== \"idle\" ? matchRoutes(routesToUse, state.navigation.location, basename) : state.matches;\r\n    invariant(matches, \"Didn't find any matches after fetcher action\");\r\n    let loadId = ++incrementingLoadId;\r\n    fetchReloadIds.set(key, loadId);\r\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\r\n    state.fetchers.set(key, loadFetcher);\r\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\r\n      init.history,\r\n      state,\r\n      matches,\r\n      submission,\r\n      nextLocation,\r\n      false,\r\n      isRevalidationRequired,\r\n      cancelledFetcherLoads,\r\n      fetchersQueuedForDeletion,\r\n      fetchLoadMatches,\r\n      fetchRedirectIds,\r\n      routesToUse,\r\n      basename,\r\n      [match.route.id, actionResult]\r\n    );\r\n    revalidatingFetchers.filter((rf) => rf.key !== key).forEach((rf) => {\r\n      let staleKey = rf.key;\r\n      let existingFetcher2 = state.fetchers.get(staleKey);\r\n      let revalidatingFetcher = getLoadingFetcher(\r\n        void 0,\r\n        existingFetcher2 ? existingFetcher2.data : void 0\r\n      );\r\n      state.fetchers.set(staleKey, revalidatingFetcher);\r\n      abortFetcher(staleKey);\r\n      if (rf.controller) {\r\n        fetchControllers.set(staleKey, rf.controller);\r\n      }\r\n    });\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n    let abortPendingFetchRevalidations = () => revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\r\n    abortController.signal.addEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    let { loaderResults, fetcherResults } = await callLoadersAndMaybeResolveData(\r\n      matches,\r\n      matchesToLoad,\r\n      revalidatingFetchers,\r\n      revalidationRequest,\r\n      scopedContext\r\n    );\r\n    if (abortController.signal.aborted) {\r\n      return;\r\n    }\r\n    abortController.signal.removeEventListener(\r\n      \"abort\",\r\n      abortPendingFetchRevalidations\r\n    );\r\n    fetchReloadIds.delete(key);\r\n    fetchControllers.delete(key);\r\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\r\n    let redirect2 = findRedirect(loaderResults);\r\n    if (redirect2) {\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    redirect2 = findRedirect(fetcherResults);\r\n    if (redirect2) {\r\n      fetchRedirectIds.add(redirect2.key);\r\n      return startRedirectNavigation(\r\n        revalidationRequest,\r\n        redirect2.result,\r\n        false,\r\n        { preventScrollReset }\r\n      );\r\n    }\r\n    let { loaderData, errors } = processLoaderData(\r\n      state,\r\n      matches,\r\n      loaderResults,\r\n      void 0,\r\n      revalidatingFetchers,\r\n      fetcherResults\r\n    );\r\n    if (state.fetchers.has(key)) {\r\n      let doneFetcher = getDoneFetcher(actionResult.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n    abortStaleFetchLoads(loadId);\r\n    if (state.navigation.state === \"loading\" && loadId > pendingNavigationLoadId) {\r\n      invariant(pendingAction, \"Expected pending action\");\r\n      pendingNavigationController && pendingNavigationController.abort();\r\n      completeNavigation(state.navigation.location, {\r\n        matches,\r\n        loaderData,\r\n        errors,\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n    } else {\r\n      updateState({\r\n        errors,\r\n        loaderData: mergeLoaderData(\r\n          state.loaderData,\r\n          loaderData,\r\n          matches,\r\n          errors\r\n        ),\r\n        fetchers: new Map(state.fetchers)\r\n      });\r\n      isRevalidationRequired = false;\r\n    }\r\n  }\r\n  async function handleFetcherLoader(key, routeId, path, match, matches, scopedContext, isFogOfWar, flushSync, preventScrollReset, submission) {\r\n    let existingFetcher = state.fetchers.get(key);\r\n    updateFetcherState(\r\n      key,\r\n      getLoadingFetcher(\r\n        submission,\r\n        existingFetcher ? existingFetcher.data : void 0\r\n      ),\r\n      { flushSync }\r\n    );\r\n    let abortController = new AbortController();\r\n    let fetchRequest = createClientSideRequest(\r\n      init.history,\r\n      path,\r\n      abortController.signal\r\n    );\r\n    if (isFogOfWar) {\r\n      let discoverResult = await discoverRoutes(\r\n        matches,\r\n        path,\r\n        fetchRequest.signal,\r\n        key\r\n      );\r\n      if (discoverResult.type === \"aborted\") {\r\n        return;\r\n      } else if (discoverResult.type === \"error\") {\r\n        setFetcherError(key, routeId, discoverResult.error, { flushSync });\r\n        return;\r\n      } else if (!discoverResult.matches) {\r\n        setFetcherError(\r\n          key,\r\n          routeId,\r\n          getInternalRouterError(404, { pathname: path }),\r\n          { flushSync }\r\n        );\r\n        return;\r\n      } else {\r\n        matches = discoverResult.matches;\r\n        match = getTargetMatch(matches, path);\r\n      }\r\n    }\r\n    fetchControllers.set(key, abortController);\r\n    let originatingLoadId = incrementingLoadId;\r\n    let results = await callDataStrategy(\r\n      \"loader\",\r\n      fetchRequest,\r\n      [match],\r\n      matches,\r\n      scopedContext,\r\n      key\r\n    );\r\n    let result = results[match.route.id];\r\n    if (fetchControllers.get(key) === abortController) {\r\n      fetchControllers.delete(key);\r\n    }\r\n    if (fetchRequest.signal.aborted) {\r\n      return;\r\n    }\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      updateFetcherState(key, getDoneFetcher(void 0));\r\n      return;\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      if (pendingNavigationLoadId > originatingLoadId) {\r\n        updateFetcherState(key, getDoneFetcher(void 0));\r\n        return;\r\n      } else {\r\n        fetchRedirectIds.add(key);\r\n        await startRedirectNavigation(fetchRequest, result, false, {\r\n          preventScrollReset\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    if (isErrorResult(result)) {\r\n      setFetcherError(key, routeId, result.error);\r\n      return;\r\n    }\r\n    updateFetcherState(key, getDoneFetcher(result.data));\r\n  }\r\n  async function startRedirectNavigation(request, redirect2, isNavigation, {\r\n    submission,\r\n    fetcherSubmission,\r\n    preventScrollReset,\r\n    replace: replace2\r\n  } = {}) {\r\n    if (redirect2.response.headers.has(\"X-Remix-Revalidate\")) {\r\n      isRevalidationRequired = true;\r\n    }\r\n    let location = redirect2.response.headers.get(\"Location\");\r\n    invariant(location, \"Expected a Location header on the redirect Response\");\r\n    location = normalizeRedirectLocation(\r\n      location,\r\n      new URL(request.url),\r\n      basename\r\n    );\r\n    let redirectLocation = createLocation(state.location, location, {\r\n      _isRedirect: true\r\n    });\r\n    if (isBrowser2) {\r\n      let isDocumentReload = false;\r\n      if (redirect2.response.headers.has(\"X-Remix-Reload-Document\")) {\r\n        isDocumentReload = true;\r\n      } else if (ABSOLUTE_URL_REGEX.test(location)) {\r\n        const url = init.history.createURL(location);\r\n        isDocumentReload = // Hard reload if it's an absolute URL to a new origin\r\n        url.origin !== routerWindow.location.origin || // Hard reload if it's an absolute URL that does not match our basename\r\n        stripBasename(url.pathname, basename) == null;\r\n      }\r\n      if (isDocumentReload) {\r\n        if (replace2) {\r\n          routerWindow.location.replace(location);\r\n        } else {\r\n          routerWindow.location.assign(location);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n    pendingNavigationController = null;\r\n    let redirectNavigationType = replace2 === true || redirect2.response.headers.has(\"X-Remix-Replace\") ? \"REPLACE\" /* Replace */ : \"PUSH\" /* Push */;\r\n    let { formMethod, formAction, formEncType } = state.navigation;\r\n    if (!submission && !fetcherSubmission && formMethod && formAction && formEncType) {\r\n      submission = getSubmissionFromNavigation(state.navigation);\r\n    }\r\n    let activeSubmission = submission || fetcherSubmission;\r\n    if (redirectPreserveMethodStatusCodes.has(redirect2.response.status) && activeSubmission && isMutationMethod(activeSubmission.formMethod)) {\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        submission: {\r\n          ...activeSubmission,\r\n          formAction: location\r\n        },\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    } else {\r\n      let overrideNavigation = getLoadingNavigation(\r\n        redirectLocation,\r\n        submission\r\n      );\r\n      await startNavigation(redirectNavigationType, redirectLocation, {\r\n        overrideNavigation,\r\n        // Send fetcher submissions through for shouldRevalidate\r\n        fetcherSubmission,\r\n        // Preserve these flags across redirects\r\n        preventScrollReset: preventScrollReset || pendingPreventScrollReset,\r\n        enableViewTransition: isNavigation ? pendingViewTransitionEnabled : void 0\r\n      });\r\n    }\r\n  }\r\n  async function callDataStrategy(type, request, matchesToLoad, matches, scopedContext, fetcherKey) {\r\n    let results;\r\n    let dataResults = {};\r\n    try {\r\n      results = await callDataStrategyImpl(\r\n        dataStrategyImpl,\r\n        type,\r\n        request,\r\n        matchesToLoad,\r\n        matches,\r\n        fetcherKey,\r\n        manifest,\r\n        mapRouteProperties2,\r\n        scopedContext,\r\n        future.unstable_middleware\r\n      );\r\n    } catch (e) {\r\n      matchesToLoad.forEach((m) => {\r\n        dataResults[m.route.id] = {\r\n          type: \"error\" /* error */,\r\n          error: e\r\n        };\r\n      });\r\n      return dataResults;\r\n    }\r\n    for (let [routeId, result] of Object.entries(results)) {\r\n      if (isRedirectDataStrategyResult(result)) {\r\n        let response = result.result;\r\n        dataResults[routeId] = {\r\n          type: \"redirect\" /* redirect */,\r\n          response: normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            routeId,\r\n            matches,\r\n            basename\r\n          )\r\n        };\r\n      } else {\r\n        dataResults[routeId] = await convertDataStrategyResultToDataResult(\r\n          result\r\n        );\r\n      }\r\n    }\r\n    return dataResults;\r\n  }\r\n  async function callLoadersAndMaybeResolveData(matches, matchesToLoad, fetchersToLoad, request, scopedContext) {\r\n    let loaderResultsPromise = callDataStrategy(\r\n      \"loader\",\r\n      request,\r\n      matchesToLoad,\r\n      matches,\r\n      scopedContext,\r\n      null\r\n    );\r\n    let fetcherResultsPromise = Promise.all(\r\n      fetchersToLoad.map(async (f) => {\r\n        if (f.matches && f.match && f.controller) {\r\n          let results = await callDataStrategy(\r\n            \"loader\",\r\n            createClientSideRequest(init.history, f.path, f.controller.signal),\r\n            [f.match],\r\n            f.matches,\r\n            scopedContext,\r\n            f.key\r\n          );\r\n          let result = results[f.match.route.id];\r\n          return { [f.key]: result };\r\n        } else {\r\n          return Promise.resolve({\r\n            [f.key]: {\r\n              type: \"error\" /* error */,\r\n              error: getInternalRouterError(404, {\r\n                pathname: f.path\r\n              })\r\n            }\r\n          });\r\n        }\r\n      })\r\n    );\r\n    let loaderResults = await loaderResultsPromise;\r\n    let fetcherResults = (await fetcherResultsPromise).reduce(\r\n      (acc, r) => Object.assign(acc, r),\r\n      {}\r\n    );\r\n    return {\r\n      loaderResults,\r\n      fetcherResults\r\n    };\r\n  }\r\n  function interruptActiveLoads() {\r\n    isRevalidationRequired = true;\r\n    fetchLoadMatches.forEach((_, key) => {\r\n      if (fetchControllers.has(key)) {\r\n        cancelledFetcherLoads.add(key);\r\n      }\r\n      abortFetcher(key);\r\n    });\r\n  }\r\n  function updateFetcherState(key, fetcher, opts = {}) {\r\n    state.fetchers.set(key, fetcher);\r\n    updateState(\r\n      { fetchers: new Map(state.fetchers) },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function setFetcherError(key, routeId, error, opts = {}) {\r\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\r\n    deleteFetcher(key);\r\n    updateState(\r\n      {\r\n        errors: {\r\n          [boundaryMatch.route.id]: error\r\n        },\r\n        fetchers: new Map(state.fetchers)\r\n      },\r\n      { flushSync: (opts && opts.flushSync) === true }\r\n    );\r\n  }\r\n  function getFetcher(key) {\r\n    activeFetchers.set(key, (activeFetchers.get(key) || 0) + 1);\r\n    if (fetchersQueuedForDeletion.has(key)) {\r\n      fetchersQueuedForDeletion.delete(key);\r\n    }\r\n    return state.fetchers.get(key) || IDLE_FETCHER;\r\n  }\r\n  function deleteFetcher(key) {\r\n    let fetcher = state.fetchers.get(key);\r\n    if (fetchControllers.has(key) && !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))) {\r\n      abortFetcher(key);\r\n    }\r\n    fetchLoadMatches.delete(key);\r\n    fetchReloadIds.delete(key);\r\n    fetchRedirectIds.delete(key);\r\n    fetchersQueuedForDeletion.delete(key);\r\n    cancelledFetcherLoads.delete(key);\r\n    state.fetchers.delete(key);\r\n  }\r\n  function queueFetcherForDeletion(key) {\r\n    let count = (activeFetchers.get(key) || 0) - 1;\r\n    if (count <= 0) {\r\n      activeFetchers.delete(key);\r\n      fetchersQueuedForDeletion.add(key);\r\n    } else {\r\n      activeFetchers.set(key, count);\r\n    }\r\n    updateState({ fetchers: new Map(state.fetchers) });\r\n  }\r\n  function abortFetcher(key) {\r\n    let controller = fetchControllers.get(key);\r\n    if (controller) {\r\n      controller.abort();\r\n      fetchControllers.delete(key);\r\n    }\r\n  }\r\n  function markFetchersDone(keys) {\r\n    for (let key of keys) {\r\n      let fetcher = getFetcher(key);\r\n      let doneFetcher = getDoneFetcher(fetcher.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  }\r\n  function markFetchRedirectsDone() {\r\n    let doneKeys = [];\r\n    let updatedFetchers = false;\r\n    for (let key of fetchRedirectIds) {\r\n      let fetcher = state.fetchers.get(key);\r\n      invariant(fetcher, `Expected fetcher: ${key}`);\r\n      if (fetcher.state === \"loading\") {\r\n        fetchRedirectIds.delete(key);\r\n        doneKeys.push(key);\r\n        updatedFetchers = true;\r\n      }\r\n    }\r\n    markFetchersDone(doneKeys);\r\n    return updatedFetchers;\r\n  }\r\n  function abortStaleFetchLoads(landedId) {\r\n    let yeetedKeys = [];\r\n    for (let [key, id] of fetchReloadIds) {\r\n      if (id < landedId) {\r\n        let fetcher = state.fetchers.get(key);\r\n        invariant(fetcher, `Expected fetcher: ${key}`);\r\n        if (fetcher.state === \"loading\") {\r\n          abortFetcher(key);\r\n          fetchReloadIds.delete(key);\r\n          yeetedKeys.push(key);\r\n        }\r\n      }\r\n    }\r\n    markFetchersDone(yeetedKeys);\r\n    return yeetedKeys.length > 0;\r\n  }\r\n  function getBlocker(key, fn) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    if (blockerFunctions.get(key) !== fn) {\r\n      blockerFunctions.set(key, fn);\r\n    }\r\n    return blocker;\r\n  }\r\n  function deleteBlocker(key) {\r\n    state.blockers.delete(key);\r\n    blockerFunctions.delete(key);\r\n  }\r\n  function updateBlocker(key, newBlocker) {\r\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\r\n    invariant(\r\n      blocker.state === \"unblocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"blocked\" || blocker.state === \"blocked\" && newBlocker.state === \"proceeding\" || blocker.state === \"blocked\" && newBlocker.state === \"unblocked\" || blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\",\r\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\r\n    );\r\n    let blockers = new Map(state.blockers);\r\n    blockers.set(key, newBlocker);\r\n    updateState({ blockers });\r\n  }\r\n  function shouldBlockNavigation({\r\n    currentLocation,\r\n    nextLocation,\r\n    historyAction\r\n  }) {\r\n    if (blockerFunctions.size === 0) {\r\n      return;\r\n    }\r\n    if (blockerFunctions.size > 1) {\r\n      warning(false, \"A router only supports one blocker at a time\");\r\n    }\r\n    let entries = Array.from(blockerFunctions.entries());\r\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\r\n    let blocker = state.blockers.get(blockerKey);\r\n    if (blocker && blocker.state === \"proceeding\") {\r\n      return;\r\n    }\r\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\r\n      return blockerKey;\r\n    }\r\n  }\r\n  function handleNavigational404(pathname) {\r\n    let error = getInternalRouterError(404, { pathname });\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    let { matches, route } = getShortCircuitMatches(routesToUse);\r\n    return { notFoundMatches: matches, route, error };\r\n  }\r\n  function enableScrollRestoration(positions, getPosition, getKey) {\r\n    savedScrollPositions2 = positions;\r\n    getScrollPosition = getPosition;\r\n    getScrollRestorationKey2 = getKey || null;\r\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\r\n      initialScrollRestored = true;\r\n      let y = getSavedScrollPosition(state.location, state.matches);\r\n      if (y != null) {\r\n        updateState({ restoreScrollPosition: y });\r\n      }\r\n    }\r\n    return () => {\r\n      savedScrollPositions2 = null;\r\n      getScrollPosition = null;\r\n      getScrollRestorationKey2 = null;\r\n    };\r\n  }\r\n  function getScrollKey(location, matches) {\r\n    if (getScrollRestorationKey2) {\r\n      let key = getScrollRestorationKey2(\r\n        location,\r\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\r\n      );\r\n      return key || location.key;\r\n    }\r\n    return location.key;\r\n  }\r\n  function saveScrollPosition(location, matches) {\r\n    if (savedScrollPositions2 && getScrollPosition) {\r\n      let key = getScrollKey(location, matches);\r\n      savedScrollPositions2[key] = getScrollPosition();\r\n    }\r\n  }\r\n  function getSavedScrollPosition(location, matches) {\r\n    if (savedScrollPositions2) {\r\n      let key = getScrollKey(location, matches);\r\n      let y = savedScrollPositions2[key];\r\n      if (typeof y === \"number\") {\r\n        return y;\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  function checkFogOfWar(matches, routesToUse, pathname) {\r\n    if (init.patchRoutesOnNavigation) {\r\n      if (!matches) {\r\n        let fogMatches = matchRoutesImpl(\r\n          routesToUse,\r\n          pathname,\r\n          basename,\r\n          true\r\n        );\r\n        return { active: true, matches: fogMatches || [] };\r\n      } else {\r\n        if (Object.keys(matches[0].params).length > 0) {\r\n          let partialMatches = matchRoutesImpl(\r\n            routesToUse,\r\n            pathname,\r\n            basename,\r\n            true\r\n          );\r\n          return { active: true, matches: partialMatches };\r\n        }\r\n      }\r\n    }\r\n    return { active: false, matches: null };\r\n  }\r\n  async function discoverRoutes(matches, pathname, signal, fetcherKey) {\r\n    if (!init.patchRoutesOnNavigation) {\r\n      return { type: \"success\", matches };\r\n    }\r\n    let partialMatches = matches;\r\n    while (true) {\r\n      let isNonHMR = inFlightDataRoutes == null;\r\n      let routesToUse = inFlightDataRoutes || dataRoutes;\r\n      let localManifest = manifest;\r\n      try {\r\n        await init.patchRoutesOnNavigation({\r\n          signal,\r\n          path: pathname,\r\n          matches: partialMatches,\r\n          fetcherKey,\r\n          patch: (routeId, children) => {\r\n            if (signal.aborted) return;\r\n            patchRoutesImpl(\r\n              routeId,\r\n              children,\r\n              routesToUse,\r\n              localManifest,\r\n              mapRouteProperties2\r\n            );\r\n          }\r\n        });\r\n      } catch (e) {\r\n        return { type: \"error\", error: e, partialMatches };\r\n      } finally {\r\n        if (isNonHMR && !signal.aborted) {\r\n          dataRoutes = [...dataRoutes];\r\n        }\r\n      }\r\n      if (signal.aborted) {\r\n        return { type: \"aborted\" };\r\n      }\r\n      let newMatches = matchRoutes(routesToUse, pathname, basename);\r\n      if (newMatches) {\r\n        return { type: \"success\", matches: newMatches };\r\n      }\r\n      let newPartialMatches = matchRoutesImpl(\r\n        routesToUse,\r\n        pathname,\r\n        basename,\r\n        true\r\n      );\r\n      if (!newPartialMatches || partialMatches.length === newPartialMatches.length && partialMatches.every(\r\n        (m, i) => m.route.id === newPartialMatches[i].route.id\r\n      )) {\r\n        return { type: \"success\", matches: null };\r\n      }\r\n      partialMatches = newPartialMatches;\r\n    }\r\n  }\r\n  function _internalSetRoutes(newRoutes) {\r\n    manifest = {};\r\n    inFlightDataRoutes = convertRoutesToDataRoutes(\r\n      newRoutes,\r\n      mapRouteProperties2,\r\n      void 0,\r\n      manifest\r\n    );\r\n  }\r\n  function patchRoutes(routeId, children) {\r\n    let isNonHMR = inFlightDataRoutes == null;\r\n    let routesToUse = inFlightDataRoutes || dataRoutes;\r\n    patchRoutesImpl(\r\n      routeId,\r\n      children,\r\n      routesToUse,\r\n      manifest,\r\n      mapRouteProperties2\r\n    );\r\n    if (isNonHMR) {\r\n      dataRoutes = [...dataRoutes];\r\n      updateState({});\r\n    }\r\n  }\r\n  router = {\r\n    get basename() {\r\n      return basename;\r\n    },\r\n    get future() {\r\n      return future;\r\n    },\r\n    get state() {\r\n      return state;\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return routerWindow;\r\n    },\r\n    initialize,\r\n    subscribe,\r\n    enableScrollRestoration,\r\n    navigate,\r\n    fetch: fetch2,\r\n    revalidate,\r\n    // Passthrough to history-aware createHref used by useHref so we get proper\r\n    // hash-aware URLs in DOM paths\r\n    createHref: (to) => init.history.createHref(to),\r\n    encodeLocation: (to) => init.history.encodeLocation(to),\r\n    getFetcher,\r\n    deleteFetcher: queueFetcherForDeletion,\r\n    dispose,\r\n    getBlocker,\r\n    deleteBlocker,\r\n    patchRoutes,\r\n    _internalFetchControllers: fetchControllers,\r\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\r\n    // updating the tree while validating the update algorithm.\r\n    _internalSetRoutes\r\n  };\r\n  return router;\r\n}\r\nfunction createStaticHandler(routes, opts) {\r\n  invariant(\r\n    routes.length > 0,\r\n    \"You must provide a non-empty routes array to createStaticHandler\"\r\n  );\r\n  let manifest = {};\r\n  let basename = (opts ? opts.basename : null) || \"/\";\r\n  let mapRouteProperties2 = opts?.mapRouteProperties || defaultMapRouteProperties;\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    routes,\r\n    mapRouteProperties2,\r\n    void 0,\r\n    manifest\r\n  );\r\n  async function query(request, {\r\n    requestContext,\r\n    filterMatchesToLoad,\r\n    skipLoaderErrorBubbling,\r\n    skipRevalidation,\r\n    dataStrategy,\r\n    unstable_respond: respond\r\n  } = {}) {\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\r\n    if (!isValidMethod(method) && method !== \"HEAD\") {\r\n      let error = getInternalRouterError(405, { method });\r\n      let { matches: methodNotAllowedMatches, route } = getShortCircuitMatches(dataRoutes);\r\n      let staticContext = {\r\n        basename,\r\n        location,\r\n        matches: methodNotAllowedMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n      return respond ? respond(staticContext) : staticContext;\r\n    } else if (!matches) {\r\n      let error = getInternalRouterError(404, { pathname: location.pathname });\r\n      let { matches: notFoundMatches, route } = getShortCircuitMatches(dataRoutes);\r\n      let staticContext = {\r\n        basename,\r\n        location,\r\n        matches: notFoundMatches,\r\n        loaderData: {},\r\n        actionData: null,\r\n        errors: {\r\n          [route.id]: error\r\n        },\r\n        statusCode: error.status,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n      return respond ? respond(staticContext) : staticContext;\r\n    }\r\n    if (respond && matches.some((m) => m.route.unstable_middleware)) {\r\n      invariant(\r\n        requestContext instanceof unstable_RouterContextProvider,\r\n        \"When using middleware in `staticHandler.query()`, any provided `requestContext` must bean instance of `unstable_RouterContextProvider`\"\r\n      );\r\n      try {\r\n        let renderedStaticContext;\r\n        let response = await runMiddlewarePipeline(\r\n          {\r\n            request,\r\n            matches,\r\n            params: matches[0].params,\r\n            // If we're calling middleware then it must be enabled so we can cast\r\n            // this to the proper type knowing it's not an `AppLoadContext`\r\n            context: requestContext\r\n          },\r\n          true,\r\n          async () => {\r\n            let result2 = await queryImpl(\r\n              request,\r\n              location,\r\n              matches,\r\n              requestContext,\r\n              dataStrategy || null,\r\n              skipLoaderErrorBubbling === true,\r\n              null,\r\n              filterMatchesToLoad || null,\r\n              skipRevalidation === true\r\n            );\r\n            if (isResponse(result2)) {\r\n              return result2;\r\n            }\r\n            renderedStaticContext = { location, basename, ...result2 };\r\n            let res = await respond(renderedStaticContext);\r\n            return res;\r\n          },\r\n          async (e) => {\r\n            if (isResponse(e.error)) {\r\n              return e.error;\r\n            }\r\n            if (renderedStaticContext) {\r\n              if (e.routeId in renderedStaticContext.loaderData) {\r\n                renderedStaticContext.loaderData[e.routeId] = void 0;\r\n              }\r\n              return respond(\r\n                getStaticContextFromError(\r\n                  dataRoutes,\r\n                  renderedStaticContext,\r\n                  e.error,\r\n                  findNearestBoundary(matches, e.routeId).route.id\r\n                )\r\n              );\r\n            } else {\r\n              let loaderIdx = matches.findIndex((m) => m.route.loader);\r\n              let boundary = loaderIdx >= 0 ? findNearestBoundary(matches, matches[loaderIdx].route.id) : findNearestBoundary(matches);\r\n              return respond({\r\n                matches,\r\n                location,\r\n                basename,\r\n                loaderData: {},\r\n                actionData: null,\r\n                errors: {\r\n                  [boundary.route.id]: e.error\r\n                },\r\n                statusCode: isRouteErrorResponse(e.error) ? e.error.status : 500,\r\n                actionHeaders: {},\r\n                loaderHeaders: {}\r\n              });\r\n            }\r\n          }\r\n        );\r\n        invariant(isResponse(response), \"Expected a response in query()\");\r\n        return response;\r\n      } catch (e) {\r\n        if (isResponse(e)) {\r\n          return e;\r\n        }\r\n        throw e;\r\n      }\r\n    }\r\n    let result = await queryImpl(\r\n      request,\r\n      location,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy || null,\r\n      skipLoaderErrorBubbling === true,\r\n      null,\r\n      filterMatchesToLoad || null,\r\n      skipRevalidation === true\r\n    );\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    return { location, basename, ...result };\r\n  }\r\n  async function queryRoute(request, {\r\n    routeId,\r\n    requestContext,\r\n    dataStrategy,\r\n    unstable_respond: respond\r\n  } = {}) {\r\n    let url = new URL(request.url);\r\n    let method = request.method;\r\n    let location = createLocation(\"\", createPath(url), null, \"default\");\r\n    let matches = matchRoutes(dataRoutes, location, basename);\r\n    requestContext = requestContext != null ? requestContext : new unstable_RouterContextProvider();\r\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\r\n      throw getInternalRouterError(405, { method });\r\n    } else if (!matches) {\r\n      throw getInternalRouterError(404, { pathname: location.pathname });\r\n    }\r\n    let match = routeId ? matches.find((m) => m.route.id === routeId) : getTargetMatch(matches, location);\r\n    if (routeId && !match) {\r\n      throw getInternalRouterError(403, {\r\n        pathname: location.pathname,\r\n        routeId\r\n      });\r\n    } else if (!match) {\r\n      throw getInternalRouterError(404, { pathname: location.pathname });\r\n    }\r\n    if (respond && matches.some((m) => m.route.unstable_middleware)) {\r\n      invariant(\r\n        requestContext instanceof unstable_RouterContextProvider,\r\n        \"When using middleware in `staticHandler.queryRoute()`, any provided `requestContext` must bean instance of `unstable_RouterContextProvider`\"\r\n      );\r\n      let response = await runMiddlewarePipeline(\r\n        {\r\n          request,\r\n          matches,\r\n          params: matches[0].params,\r\n          // If we're calling middleware then it must be enabled so we can cast\r\n          // this to the proper type knowing it's not an `AppLoadContext`\r\n          context: requestContext\r\n        },\r\n        true,\r\n        async () => {\r\n          let result2 = await queryImpl(\r\n            request,\r\n            location,\r\n            matches,\r\n            requestContext,\r\n            dataStrategy || null,\r\n            false,\r\n            match,\r\n            null,\r\n            false\r\n          );\r\n          if (isResponse(result2)) {\r\n            return respond(result2);\r\n          }\r\n          let error2 = result2.errors ? Object.values(result2.errors)[0] : void 0;\r\n          if (error2 !== void 0) {\r\n            throw error2;\r\n          }\r\n          let value = result2.actionData ? Object.values(result2.actionData)[0] : Object.values(result2.loaderData)[0];\r\n          return typeof value === \"string\" ? new Response(value) : Response.json(value);\r\n        },\r\n        (e) => {\r\n          if (isResponse(e.error)) {\r\n            return respond(e.error);\r\n          }\r\n          return new Response(String(e.error), {\r\n            status: 500,\r\n            statusText: \"Unexpected Server Error\"\r\n          });\r\n        }\r\n      );\r\n      return response;\r\n    }\r\n    let result = await queryImpl(\r\n      request,\r\n      location,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy || null,\r\n      false,\r\n      match,\r\n      null,\r\n      false\r\n    );\r\n    if (isResponse(result)) {\r\n      return result;\r\n    }\r\n    let error = result.errors ? Object.values(result.errors)[0] : void 0;\r\n    if (error !== void 0) {\r\n      throw error;\r\n    }\r\n    if (result.actionData) {\r\n      return Object.values(result.actionData)[0];\r\n    }\r\n    if (result.loaderData) {\r\n      return Object.values(result.loaderData)[0];\r\n    }\r\n    return void 0;\r\n  }\r\n  async function queryImpl(request, location, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, skipRevalidation) {\r\n    invariant(\r\n      request.signal,\r\n      \"query()/queryRoute() requests must contain an AbortController signal\"\r\n    );\r\n    try {\r\n      if (isMutationMethod(request.method)) {\r\n        let result2 = await submit(\r\n          request,\r\n          matches,\r\n          routeMatch || getTargetMatch(matches, location),\r\n          requestContext,\r\n          dataStrategy,\r\n          skipLoaderErrorBubbling,\r\n          routeMatch != null,\r\n          filterMatchesToLoad,\r\n          skipRevalidation\r\n        );\r\n        return result2;\r\n      }\r\n      let result = await loadRouteData(\r\n        request,\r\n        matches,\r\n        requestContext,\r\n        dataStrategy,\r\n        skipLoaderErrorBubbling,\r\n        routeMatch,\r\n        filterMatchesToLoad\r\n      );\r\n      return isResponse(result) ? result : {\r\n        ...result,\r\n        actionData: null,\r\n        actionHeaders: {}\r\n      };\r\n    } catch (e) {\r\n      if (isDataStrategyResult(e) && isResponse(e.result)) {\r\n        if (e.type === \"error\" /* error */) {\r\n          throw e.result;\r\n        }\r\n        return e.result;\r\n      }\r\n      if (isRedirectResponse(e)) {\r\n        return e;\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n  async function submit(request, matches, actionMatch, requestContext, dataStrategy, skipLoaderErrorBubbling, isRouteRequest, filterMatchesToLoad, skipRevalidation) {\r\n    let result;\r\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\r\n      let error = getInternalRouterError(405, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: actionMatch.route.id\r\n      });\r\n      if (isRouteRequest) {\r\n        throw error;\r\n      }\r\n      result = {\r\n        type: \"error\" /* error */,\r\n        error\r\n      };\r\n    } else {\r\n      let results = await callDataStrategy(\r\n        \"action\",\r\n        request,\r\n        [actionMatch],\r\n        matches,\r\n        isRouteRequest,\r\n        requestContext,\r\n        dataStrategy\r\n      );\r\n      result = results[actionMatch.route.id];\r\n      if (request.signal.aborted) {\r\n        throwStaticHandlerAbortedError(request, isRouteRequest);\r\n      }\r\n    }\r\n    if (isRedirectResult(result)) {\r\n      throw new Response(null, {\r\n        status: result.response.status,\r\n        headers: {\r\n          Location: result.response.headers.get(\"Location\")\r\n        }\r\n      });\r\n    }\r\n    if (isRouteRequest) {\r\n      if (isErrorResult(result)) {\r\n        throw result.error;\r\n      }\r\n      return {\r\n        matches: [actionMatch],\r\n        loaderData: {},\r\n        actionData: { [actionMatch.route.id]: result.data },\r\n        errors: null,\r\n        // Note: statusCode + headers are unused here since queryRoute will\r\n        // return the raw Response or value\r\n        statusCode: 200,\r\n        loaderHeaders: {},\r\n        actionHeaders: {}\r\n      };\r\n    }\r\n    if (skipRevalidation) {\r\n      if (isErrorResult(result)) {\r\n        let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\r\n        return {\r\n          statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\r\n          actionData: null,\r\n          actionHeaders: {\r\n            ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n          },\r\n          matches,\r\n          loaderData: {},\r\n          errors: {\r\n            [boundaryMatch.route.id]: result.error\r\n          },\r\n          loaderHeaders: {}\r\n        };\r\n      } else {\r\n        return {\r\n          actionData: {\r\n            [actionMatch.route.id]: result.data\r\n          },\r\n          actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {},\r\n          matches,\r\n          loaderData: {},\r\n          errors: null,\r\n          statusCode: result.statusCode || 200,\r\n          loaderHeaders: {}\r\n        };\r\n      }\r\n    }\r\n    let loaderRequest = new Request(request.url, {\r\n      headers: request.headers,\r\n      redirect: request.redirect,\r\n      signal: request.signal\r\n    });\r\n    if (isErrorResult(result)) {\r\n      let boundaryMatch = skipLoaderErrorBubbling ? actionMatch : findNearestBoundary(matches, actionMatch.route.id);\r\n      let handlerContext2 = await loadRouteData(\r\n        loaderRequest,\r\n        matches,\r\n        requestContext,\r\n        dataStrategy,\r\n        skipLoaderErrorBubbling,\r\n        null,\r\n        filterMatchesToLoad,\r\n        [boundaryMatch.route.id, result]\r\n      );\r\n      return {\r\n        ...handlerContext2,\r\n        statusCode: isRouteErrorResponse(result.error) ? result.error.status : result.statusCode != null ? result.statusCode : 500,\r\n        actionData: null,\r\n        actionHeaders: {\r\n          ...result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n        }\r\n      };\r\n    }\r\n    let handlerContext = await loadRouteData(\r\n      loaderRequest,\r\n      matches,\r\n      requestContext,\r\n      dataStrategy,\r\n      skipLoaderErrorBubbling,\r\n      null,\r\n      filterMatchesToLoad\r\n    );\r\n    return {\r\n      ...handlerContext,\r\n      actionData: {\r\n        [actionMatch.route.id]: result.data\r\n      },\r\n      // action status codes take precedence over loader status codes\r\n      ...result.statusCode ? { statusCode: result.statusCode } : {},\r\n      actionHeaders: result.headers ? { [actionMatch.route.id]: result.headers } : {}\r\n    };\r\n  }\r\n  async function loadRouteData(request, matches, requestContext, dataStrategy, skipLoaderErrorBubbling, routeMatch, filterMatchesToLoad, pendingActionResult) {\r\n    let isRouteRequest = routeMatch != null;\r\n    if (isRouteRequest && !routeMatch?.route.loader && !routeMatch?.route.lazy) {\r\n      throw getInternalRouterError(400, {\r\n        method: request.method,\r\n        pathname: new URL(request.url).pathname,\r\n        routeId: routeMatch?.route.id\r\n      });\r\n    }\r\n    let requestMatches = routeMatch ? [routeMatch] : pendingActionResult && isErrorResult(pendingActionResult[1]) ? getLoaderMatchesUntilBoundary(matches, pendingActionResult[0]) : matches;\r\n    let matchesToLoad = requestMatches.filter(\r\n      (m) => (m.route.loader || m.route.lazy) && (!filterMatchesToLoad || filterMatchesToLoad(m))\r\n    );\r\n    if (matchesToLoad.length === 0) {\r\n      return {\r\n        matches,\r\n        // Add a null for all matched routes for proper revalidation on the client\r\n        loaderData: matches.reduce(\r\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\r\n          {}\r\n        ),\r\n        errors: pendingActionResult && isErrorResult(pendingActionResult[1]) ? {\r\n          [pendingActionResult[0]]: pendingActionResult[1].error\r\n        } : null,\r\n        statusCode: 200,\r\n        loaderHeaders: {}\r\n      };\r\n    }\r\n    let results = await callDataStrategy(\r\n      \"loader\",\r\n      request,\r\n      matchesToLoad,\r\n      matches,\r\n      isRouteRequest,\r\n      requestContext,\r\n      dataStrategy\r\n    );\r\n    if (request.signal.aborted) {\r\n      throwStaticHandlerAbortedError(request, isRouteRequest);\r\n    }\r\n    let handlerContext = processRouteLoaderData(\r\n      matches,\r\n      results,\r\n      pendingActionResult,\r\n      true,\r\n      skipLoaderErrorBubbling\r\n    );\r\n    let executedLoaders = new Set(\r\n      matchesToLoad.map((match) => match.route.id)\r\n    );\r\n    matches.forEach((match) => {\r\n      if (!executedLoaders.has(match.route.id)) {\r\n        handlerContext.loaderData[match.route.id] = null;\r\n      }\r\n    });\r\n    return {\r\n      ...handlerContext,\r\n      matches\r\n    };\r\n  }\r\n  async function callDataStrategy(type, request, matchesToLoad, matches, isRouteRequest, requestContext, dataStrategy) {\r\n    let results = await callDataStrategyImpl(\r\n      dataStrategy || defaultDataStrategy,\r\n      type,\r\n      request,\r\n      matchesToLoad,\r\n      matches,\r\n      null,\r\n      manifest,\r\n      mapRouteProperties2,\r\n      requestContext,\r\n      false\r\n      // middleware not done via dataStrategy in the static handler\r\n    );\r\n    let dataResults = {};\r\n    await Promise.all(\r\n      matches.map(async (match) => {\r\n        if (!(match.route.id in results)) {\r\n          return;\r\n        }\r\n        let result = results[match.route.id];\r\n        if (isRedirectDataStrategyResult(result)) {\r\n          let response = result.result;\r\n          throw normalizeRelativeRoutingRedirectResponse(\r\n            response,\r\n            request,\r\n            match.route.id,\r\n            matches,\r\n            basename\r\n          );\r\n        }\r\n        if (isResponse(result.result) && isRouteRequest) {\r\n          throw result;\r\n        }\r\n        dataResults[match.route.id] = await convertDataStrategyResultToDataResult(result);\r\n      })\r\n    );\r\n    return dataResults;\r\n  }\r\n  return {\r\n    dataRoutes,\r\n    query,\r\n    queryRoute\r\n  };\r\n}\r\nfunction getStaticContextFromError(routes, handlerContext, error, boundaryId) {\r\n  let errorBoundaryId = boundaryId || handlerContext._deepestRenderedBoundaryId || routes[0].id;\r\n  return {\r\n    ...handlerContext,\r\n    statusCode: isRouteErrorResponse(error) ? error.status : 500,\r\n    errors: {\r\n      [errorBoundaryId]: error\r\n    }\r\n  };\r\n}\r\nfunction throwStaticHandlerAbortedError(request, isRouteRequest) {\r\n  if (request.signal.reason !== void 0) {\r\n    throw request.signal.reason;\r\n  }\r\n  let method = isRouteRequest ? \"queryRoute\" : \"query\";\r\n  throw new Error(\r\n    `${method}() call aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\r\n  );\r\n}\r\nfunction isSubmissionNavigation(opts) {\r\n  return opts != null && (\"formData\" in opts && opts.formData != null || \"body\" in opts && opts.body !== void 0);\r\n}\r\nfunction normalizeTo(location, matches, basename, to, fromRouteId, relative) {\r\n  let contextualMatches;\r\n  let activeRouteMatch;\r\n  if (fromRouteId) {\r\n    contextualMatches = [];\r\n    for (let match of matches) {\r\n      contextualMatches.push(match);\r\n      if (match.route.id === fromRouteId) {\r\n        activeRouteMatch = match;\r\n        break;\r\n      }\r\n    }\r\n  } else {\r\n    contextualMatches = matches;\r\n    activeRouteMatch = matches[matches.length - 1];\r\n  }\r\n  let path = resolveTo(\r\n    to ? to : \".\",\r\n    getResolveToMatches(contextualMatches),\r\n    stripBasename(location.pathname, basename) || location.pathname,\r\n    relative === \"path\"\r\n  );\r\n  if (to == null) {\r\n    path.search = location.search;\r\n    path.hash = location.hash;\r\n  }\r\n  if ((to == null || to === \"\" || to === \".\") && activeRouteMatch) {\r\n    let nakedIndex = hasNakedIndexQuery(path.search);\r\n    if (activeRouteMatch.route.index && !nakedIndex) {\r\n      path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n    } else if (!activeRouteMatch.route.index && nakedIndex) {\r\n      let params = new URLSearchParams(path.search);\r\n      let indexValues = params.getAll(\"index\");\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction normalizeNavigateOptions(isFetcher, path, opts) {\r\n  if (!opts || !isSubmissionNavigation(opts)) {\r\n    return { path };\r\n  }\r\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\r\n    return {\r\n      path,\r\n      error: getInternalRouterError(405, { method: opts.formMethod })\r\n    };\r\n  }\r\n  let getInvalidBodyError = () => ({\r\n    path,\r\n    error: getInternalRouterError(400, { type: \"invalid-body\" })\r\n  });\r\n  let rawFormMethod = opts.formMethod || \"get\";\r\n  let formMethod = rawFormMethod.toUpperCase();\r\n  let formAction = stripHashFromPath(path);\r\n  if (opts.body !== void 0) {\r\n    if (opts.formEncType === \"text/plain\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      let text = typeof opts.body === \"string\" ? opts.body : opts.body instanceof FormData || opts.body instanceof URLSearchParams ? (\r\n        // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\r\n        Array.from(opts.body.entries()).reduce(\r\n          (acc, [name, value]) => `${acc}${name}=${value}\r\n`,\r\n          \"\"\r\n        )\r\n      ) : String(opts.body);\r\n      return {\r\n        path,\r\n        submission: {\r\n          formMethod,\r\n          formAction,\r\n          formEncType: opts.formEncType,\r\n          formData: void 0,\r\n          json: void 0,\r\n          text\r\n        }\r\n      };\r\n    } else if (opts.formEncType === \"application/json\") {\r\n      if (!isMutationMethod(formMethod)) {\r\n        return getInvalidBodyError();\r\n      }\r\n      try {\r\n        let json = typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\r\n        return {\r\n          path,\r\n          submission: {\r\n            formMethod,\r\n            formAction,\r\n            formEncType: opts.formEncType,\r\n            formData: void 0,\r\n            json,\r\n            text: void 0\r\n          }\r\n        };\r\n      } catch (e) {\r\n        return getInvalidBodyError();\r\n      }\r\n    }\r\n  }\r\n  invariant(\r\n    typeof FormData === \"function\",\r\n    \"FormData is not available in this environment\"\r\n  );\r\n  let searchParams;\r\n  let formData;\r\n  if (opts.formData) {\r\n    searchParams = convertFormDataToSearchParams(opts.formData);\r\n    formData = opts.formData;\r\n  } else if (opts.body instanceof FormData) {\r\n    searchParams = convertFormDataToSearchParams(opts.body);\r\n    formData = opts.body;\r\n  } else if (opts.body instanceof URLSearchParams) {\r\n    searchParams = opts.body;\r\n    formData = convertSearchParamsToFormData(searchParams);\r\n  } else if (opts.body == null) {\r\n    searchParams = new URLSearchParams();\r\n    formData = new FormData();\r\n  } else {\r\n    try {\r\n      searchParams = new URLSearchParams(opts.body);\r\n      formData = convertSearchParamsToFormData(searchParams);\r\n    } catch (e) {\r\n      return getInvalidBodyError();\r\n    }\r\n  }\r\n  let submission = {\r\n    formMethod,\r\n    formAction,\r\n    formEncType: opts && opts.formEncType || \"application/x-www-form-urlencoded\",\r\n    formData,\r\n    json: void 0,\r\n    text: void 0\r\n  };\r\n  if (isMutationMethod(submission.formMethod)) {\r\n    return { path, submission };\r\n  }\r\n  let parsedPath = parsePath(path);\r\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\r\n    searchParams.append(\"index\", \"\");\r\n  }\r\n  parsedPath.search = `?${searchParams}`;\r\n  return { path: createPath(parsedPath), submission };\r\n}\r\nfunction getLoaderMatchesUntilBoundary(matches, boundaryId, includeBoundary = false) {\r\n  let index = matches.findIndex((m) => m.route.id === boundaryId);\r\n  if (index >= 0) {\r\n    return matches.slice(0, includeBoundary ? index + 1 : index);\r\n  }\r\n  return matches;\r\n}\r\nfunction getMatchesToLoad(history, state, matches, submission, location, initialHydration, isRevalidationRequired, cancelledFetcherLoads, fetchersQueuedForDeletion, fetchLoadMatches, fetchRedirectIds, routesToUse, basename, pendingActionResult) {\r\n  let actionResult = pendingActionResult ? isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : pendingActionResult[1].data : void 0;\r\n  let currentUrl = history.createURL(state.location);\r\n  let nextUrl = history.createURL(location);\r\n  let boundaryMatches = matches;\r\n  if (initialHydration && state.errors) {\r\n    boundaryMatches = getLoaderMatchesUntilBoundary(\r\n      matches,\r\n      Object.keys(state.errors)[0],\r\n      true\r\n    );\r\n  } else if (pendingActionResult && isErrorResult(pendingActionResult[1])) {\r\n    boundaryMatches = getLoaderMatchesUntilBoundary(\r\n      matches,\r\n      pendingActionResult[0]\r\n    );\r\n  }\r\n  let actionStatus = pendingActionResult ? pendingActionResult[1].statusCode : void 0;\r\n  let shouldSkipRevalidation = actionStatus && actionStatus >= 400;\r\n  let navigationMatches = boundaryMatches.filter((match, index) => {\r\n    let { route } = match;\r\n    if (route.lazy) {\r\n      return true;\r\n    }\r\n    if (route.loader == null) {\r\n      return false;\r\n    }\r\n    if (initialHydration) {\r\n      return shouldLoadRouteOnHydration(route, state.loaderData, state.errors);\r\n    }\r\n    if (isNewLoader(state.loaderData, state.matches[index], match)) {\r\n      return true;\r\n    }\r\n    let currentRouteMatch = state.matches[index];\r\n    let nextRouteMatch = match;\r\n    return shouldRevalidateLoader(match, {\r\n      currentUrl,\r\n      currentParams: currentRouteMatch.params,\r\n      nextUrl,\r\n      nextParams: nextRouteMatch.params,\r\n      ...submission,\r\n      actionResult,\r\n      actionStatus,\r\n      defaultShouldRevalidate: shouldSkipRevalidation ? false : (\r\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\r\n        isRevalidationRequired || currentUrl.pathname + currentUrl.search === nextUrl.pathname + nextUrl.search || // Search params affect all loaders\r\n        currentUrl.search !== nextUrl.search || isNewRouteInstance(currentRouteMatch, nextRouteMatch)\r\n      )\r\n    });\r\n  });\r\n  let revalidatingFetchers = [];\r\n  fetchLoadMatches.forEach((f, key) => {\r\n    if (initialHydration || !matches.some((m) => m.route.id === f.routeId) || fetchersQueuedForDeletion.has(key)) {\r\n      return;\r\n    }\r\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\r\n    if (!fetcherMatches) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: null,\r\n        match: null,\r\n        controller: null\r\n      });\r\n      return;\r\n    }\r\n    let fetcher = state.fetchers.get(key);\r\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\r\n    let shouldRevalidate = false;\r\n    if (fetchRedirectIds.has(key)) {\r\n      shouldRevalidate = false;\r\n    } else if (cancelledFetcherLoads.has(key)) {\r\n      cancelledFetcherLoads.delete(key);\r\n      shouldRevalidate = true;\r\n    } else if (fetcher && fetcher.state !== \"idle\" && fetcher.data === void 0) {\r\n      shouldRevalidate = isRevalidationRequired;\r\n    } else {\r\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\r\n        currentUrl,\r\n        currentParams: state.matches[state.matches.length - 1].params,\r\n        nextUrl,\r\n        nextParams: matches[matches.length - 1].params,\r\n        ...submission,\r\n        actionResult,\r\n        actionStatus,\r\n        defaultShouldRevalidate: shouldSkipRevalidation ? false : isRevalidationRequired\r\n      });\r\n    }\r\n    if (shouldRevalidate) {\r\n      revalidatingFetchers.push({\r\n        key,\r\n        routeId: f.routeId,\r\n        path: f.path,\r\n        matches: fetcherMatches,\r\n        match: fetcherMatch,\r\n        controller: new AbortController()\r\n      });\r\n    }\r\n  });\r\n  return [navigationMatches, revalidatingFetchers];\r\n}\r\nfunction shouldLoadRouteOnHydration(route, loaderData, errors) {\r\n  if (route.lazy) {\r\n    return true;\r\n  }\r\n  if (!route.loader) {\r\n    return false;\r\n  }\r\n  let hasData = loaderData != null && loaderData[route.id] !== void 0;\r\n  let hasError = errors != null && errors[route.id] !== void 0;\r\n  if (!hasData && hasError) {\r\n    return false;\r\n  }\r\n  if (typeof route.loader === \"function\" && route.loader.hydrate === true) {\r\n    return true;\r\n  }\r\n  return !hasData && !hasError;\r\n}\r\nfunction isNewLoader(currentLoaderData, currentMatch, match) {\r\n  let isNew = (\r\n    // [a] -> [a, b]\r\n    !currentMatch || // [a, b] -> [a, c]\r\n    match.route.id !== currentMatch.route.id\r\n  );\r\n  let isMissingData = !currentLoaderData.hasOwnProperty(match.route.id);\r\n  return isNew || isMissingData;\r\n}\r\nfunction isNewRouteInstance(currentMatch, match) {\r\n  let currentPath = currentMatch.route.path;\r\n  return (\r\n    // param change for this match, /users/123 -> /users/456\r\n    currentMatch.pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n    currentPath != null && currentPath.endsWith(\"*\") && currentMatch.params[\"*\"] !== match.params[\"*\"]\r\n  );\r\n}\r\nfunction shouldRevalidateLoader(loaderMatch, arg) {\r\n  if (loaderMatch.route.shouldRevalidate) {\r\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\r\n    if (typeof routeChoice === \"boolean\") {\r\n      return routeChoice;\r\n    }\r\n  }\r\n  return arg.defaultShouldRevalidate;\r\n}\r\nfunction patchRoutesImpl(routeId, children, routesToUse, manifest, mapRouteProperties2) {\r\n  let childrenToPatch;\r\n  if (routeId) {\r\n    let route = manifest[routeId];\r\n    invariant(\r\n      route,\r\n      `No route found to patch children into: routeId = ${routeId}`\r\n    );\r\n    if (!route.children) {\r\n      route.children = [];\r\n    }\r\n    childrenToPatch = route.children;\r\n  } else {\r\n    childrenToPatch = routesToUse;\r\n  }\r\n  let uniqueChildren = children.filter(\r\n    (newRoute) => !childrenToPatch.some(\r\n      (existingRoute) => isSameRoute(newRoute, existingRoute)\r\n    )\r\n  );\r\n  let newRoutes = convertRoutesToDataRoutes(\r\n    uniqueChildren,\r\n    mapRouteProperties2,\r\n    [routeId || \"_\", \"patch\", String(childrenToPatch?.length || \"0\")],\r\n    manifest\r\n  );\r\n  childrenToPatch.push(...newRoutes);\r\n}\r\nfunction isSameRoute(newRoute, existingRoute) {\r\n  if (\"id\" in newRoute && \"id\" in existingRoute && newRoute.id === existingRoute.id) {\r\n    return true;\r\n  }\r\n  if (!(newRoute.index === existingRoute.index && newRoute.path === existingRoute.path && newRoute.caseSensitive === existingRoute.caseSensitive)) {\r\n    return false;\r\n  }\r\n  if ((!newRoute.children || newRoute.children.length === 0) && (!existingRoute.children || existingRoute.children.length === 0)) {\r\n    return true;\r\n  }\r\n  return newRoute.children.every(\r\n    (aChild, i) => existingRoute.children?.some((bChild) => isSameRoute(aChild, bChild))\r\n  );\r\n}\r\nasync function loadLazyRouteModule(route, mapRouteProperties2, manifest) {\r\n  if (!route.lazy) {\r\n    return;\r\n  }\r\n  let lazyRoute = await route.lazy();\r\n  if (!route.lazy) {\r\n    return;\r\n  }\r\n  let routeToUpdate = manifest[route.id];\r\n  invariant(routeToUpdate, \"No route found in manifest\");\r\n  let routeUpdates = {};\r\n  for (let lazyRouteProperty in lazyRoute) {\r\n    let staticRouteValue = routeToUpdate[lazyRouteProperty];\r\n    let isPropertyStaticallyDefined = staticRouteValue !== void 0 && // This property isn't static since it should always be updated based\r\n    // on the route updates\r\n    lazyRouteProperty !== \"hasErrorBoundary\";\r\n    warning(\r\n      !isPropertyStaticallyDefined,\r\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" defined but its lazy function is also returning a value for this property. The lazy route property \"${lazyRouteProperty}\" will be ignored.`\r\n    );\r\n    if (!isPropertyStaticallyDefined && !immutableRouteKeys.has(lazyRouteProperty)) {\r\n      routeUpdates[lazyRouteProperty] = lazyRoute[lazyRouteProperty];\r\n    }\r\n  }\r\n  Object.assign(routeToUpdate, routeUpdates);\r\n  Object.assign(routeToUpdate, {\r\n    // To keep things framework agnostic, we use the provided `mapRouteProperties`\r\n    // function to set the framework-aware properties (`element`/`hasErrorBoundary`)\r\n    // since the logic will differ between frameworks.\r\n    ...mapRouteProperties2(routeToUpdate),\r\n    lazy: void 0\r\n  });\r\n}\r\nasync function defaultDataStrategy(args) {\r\n  let matchesToLoad = args.matches.filter((m) => m.shouldLoad);\r\n  let keyedResults = {};\r\n  let results = await Promise.all(matchesToLoad.map((m) => m.resolve()));\r\n  results.forEach((result, i) => {\r\n    keyedResults[matchesToLoad[i].route.id] = result;\r\n  });\r\n  return keyedResults;\r\n}\r\nasync function defaultDataStrategyWithMiddleware(args) {\r\n  if (!args.matches.some((m) => m.route.unstable_middleware)) {\r\n    return defaultDataStrategy(args);\r\n  }\r\n  return runMiddlewarePipeline(\r\n    args,\r\n    false,\r\n    () => defaultDataStrategy(args),\r\n    (e) => ({ [e.routeId]: { type: \"error\", result: e.error } })\r\n  );\r\n}\r\nasync function runMiddlewarePipeline(args, propagateResult, handler, errorHandler) {\r\n  let { matches, request, params, context } = args;\r\n  let middlewareState = {\r\n    handlerResult: void 0,\r\n    propagateResult\r\n  };\r\n  try {\r\n    let tuples = matches.flatMap(\r\n      (m) => m.route.unstable_middleware ? m.route.unstable_middleware.map((fn) => [m.route.id, fn]) : []\r\n    );\r\n    let result = await callRouteMiddleware(\r\n      { request, params, context },\r\n      tuples,\r\n      middlewareState,\r\n      handler\r\n    );\r\n    return middlewareState.propagateResult ? result : middlewareState.handlerResult;\r\n  } catch (e) {\r\n    if (!(e instanceof MiddlewareError)) {\r\n      throw e;\r\n    }\r\n    let result = await errorHandler(e);\r\n    if (propagateResult || !middlewareState.handlerResult) {\r\n      return result;\r\n    }\r\n    return Object.assign(middlewareState.handlerResult, result);\r\n  }\r\n}\r\nvar MiddlewareError = class {\r\n  constructor(routeId, error) {\r\n    this.routeId = routeId;\r\n    this.error = error;\r\n  }\r\n};\r\nasync function callRouteMiddleware(args, middlewares, middlewareState, handler, idx = 0) {\r\n  let { request } = args;\r\n  if (request.signal.aborted) {\r\n    if (request.signal.reason) {\r\n      throw request.signal.reason;\r\n    }\r\n    throw new Error(\r\n      `Request aborted without an \\`AbortSignal.reason\\`: ${request.method} ${request.url}`\r\n    );\r\n  }\r\n  let tuple = middlewares[idx];\r\n  if (!tuple) {\r\n    middlewareState.handlerResult = await handler();\r\n    return middlewareState.handlerResult;\r\n  }\r\n  let [routeId, middleware] = tuple;\r\n  let nextCalled = false;\r\n  let nextResult = void 0;\r\n  let next = async () => {\r\n    if (nextCalled) {\r\n      throw new Error(\"You may only call `next()` once per middleware\");\r\n    }\r\n    nextCalled = true;\r\n    let result = await callRouteMiddleware(\r\n      args,\r\n      middlewares,\r\n      middlewareState,\r\n      handler,\r\n      idx + 1\r\n    );\r\n    if (middlewareState.propagateResult) {\r\n      nextResult = result;\r\n      return nextResult;\r\n    }\r\n  };\r\n  try {\r\n    let result = await middleware(\r\n      {\r\n        request: args.request,\r\n        params: args.params,\r\n        context: args.context\r\n      },\r\n      next\r\n    );\r\n    if (nextCalled) {\r\n      if (result === void 0) {\r\n        return nextResult;\r\n      } else {\r\n        return result;\r\n      }\r\n    } else {\r\n      return next();\r\n    }\r\n  } catch (e) {\r\n    if (e instanceof MiddlewareError) {\r\n      throw e;\r\n    }\r\n    throw new MiddlewareError(routeId, e);\r\n  }\r\n}\r\nasync function callDataStrategyImpl(dataStrategyImpl, type, request, matchesToLoad, matches, fetcherKey, manifest, mapRouteProperties2, scopedContext, enableMiddleware) {\r\n  let loadRouteDefinitionsPromises = matches.map(\r\n    (m) => m.route.lazy ? loadLazyRouteModule(m.route, mapRouteProperties2, manifest) : void 0\r\n  );\r\n  if (enableMiddleware) {\r\n    await Promise.all(loadRouteDefinitionsPromises);\r\n  }\r\n  let dsMatches = matches.map((match, i) => {\r\n    let loadRoutePromise = loadRouteDefinitionsPromises[i];\r\n    let shouldLoad = matchesToLoad.some((m) => m.route.id === match.route.id);\r\n    let resolve = async (handlerOverride) => {\r\n      if (handlerOverride && request.method === \"GET\" && (match.route.lazy || match.route.loader)) {\r\n        shouldLoad = true;\r\n      }\r\n      return shouldLoad ? callLoaderOrAction(\r\n        type,\r\n        request,\r\n        match,\r\n        loadRoutePromise,\r\n        handlerOverride,\r\n        scopedContext\r\n      ) : Promise.resolve({ type: \"data\" /* data */, result: void 0 });\r\n    };\r\n    return {\r\n      ...match,\r\n      shouldLoad,\r\n      resolve\r\n    };\r\n  });\r\n  let results = await dataStrategyImpl({\r\n    matches: dsMatches,\r\n    request,\r\n    params: matches[0].params,\r\n    fetcherKey,\r\n    context: scopedContext\r\n  });\r\n  try {\r\n    await Promise.all(loadRouteDefinitionsPromises);\r\n  } catch (e) {\r\n  }\r\n  return results;\r\n}\r\nasync function callLoaderOrAction(type, request, match, loadRoutePromise, handlerOverride, scopedContext) {\r\n  let result;\r\n  let onReject;\r\n  let runHandler = (handler) => {\r\n    let reject;\r\n    let abortPromise = new Promise((_, r) => reject = r);\r\n    onReject = () => reject();\r\n    request.signal.addEventListener(\"abort\", onReject);\r\n    let actualHandler = (ctx) => {\r\n      if (typeof handler !== \"function\") {\r\n        return Promise.reject(\r\n          new Error(\r\n            `You cannot call the handler for a route which defines a boolean \"${type}\" [routeId: ${match.route.id}]`\r\n          )\r\n        );\r\n      }\r\n      return handler(\r\n        {\r\n          request,\r\n          params: match.params,\r\n          context: scopedContext\r\n        },\r\n        ...ctx !== void 0 ? [ctx] : []\r\n      );\r\n    };\r\n    let handlerPromise = (async () => {\r\n      try {\r\n        let val = await (handlerOverride ? handlerOverride((ctx) => actualHandler(ctx)) : actualHandler());\r\n        return { type: \"data\", result: val };\r\n      } catch (e) {\r\n        return { type: \"error\", result: e };\r\n      }\r\n    })();\r\n    return Promise.race([handlerPromise, abortPromise]);\r\n  };\r\n  try {\r\n    let handler = match.route[type];\r\n    if (loadRoutePromise) {\r\n      if (handler) {\r\n        let handlerError;\r\n        let [value] = await Promise.all([\r\n          // If the handler throws, don't let it immediately bubble out,\r\n          // since we need to let the lazy() execution finish so we know if this\r\n          // route has a boundary that can handle the error\r\n          runHandler(handler).catch((e) => {\r\n            handlerError = e;\r\n          }),\r\n          loadRoutePromise\r\n        ]);\r\n        if (handlerError !== void 0) {\r\n          throw handlerError;\r\n        }\r\n        result = value;\r\n      } else {\r\n        await loadRoutePromise;\r\n        handler = match.route[type];\r\n        if (handler) {\r\n          result = await runHandler(handler);\r\n        } else if (type === \"action\") {\r\n          let url = new URL(request.url);\r\n          let pathname = url.pathname + url.search;\r\n          throw getInternalRouterError(405, {\r\n            method: request.method,\r\n            pathname,\r\n            routeId: match.route.id\r\n          });\r\n        } else {\r\n          return { type: \"data\" /* data */, result: void 0 };\r\n        }\r\n      }\r\n    } else if (!handler) {\r\n      let url = new URL(request.url);\r\n      let pathname = url.pathname + url.search;\r\n      throw getInternalRouterError(404, {\r\n        pathname\r\n      });\r\n    } else {\r\n      result = await runHandler(handler);\r\n    }\r\n  } catch (e) {\r\n    return { type: \"error\" /* error */, result: e };\r\n  } finally {\r\n    if (onReject) {\r\n      request.signal.removeEventListener(\"abort\", onReject);\r\n    }\r\n  }\r\n  return result;\r\n}\r\nasync function convertDataStrategyResultToDataResult(dataStrategyResult) {\r\n  let { result, type } = dataStrategyResult;\r\n  if (isResponse(result)) {\r\n    let data2;\r\n    try {\r\n      let contentType = result.headers.get(\"Content-Type\");\r\n      if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n        if (result.body == null) {\r\n          data2 = null;\r\n        } else {\r\n          data2 = await result.json();\r\n        }\r\n      } else {\r\n        data2 = await result.text();\r\n      }\r\n    } catch (e) {\r\n      return { type: \"error\" /* error */, error: e };\r\n    }\r\n    if (type === \"error\" /* error */) {\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(result.status, result.statusText, data2),\r\n        statusCode: result.status,\r\n        headers: result.headers\r\n      };\r\n    }\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: data2,\r\n      statusCode: result.status,\r\n      headers: result.headers\r\n    };\r\n  }\r\n  if (type === \"error\" /* error */) {\r\n    if (isDataWithResponseInit(result)) {\r\n      if (result.data instanceof Error) {\r\n        return {\r\n          type: \"error\" /* error */,\r\n          error: result.data,\r\n          statusCode: result.init?.status,\r\n          headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n        };\r\n      }\r\n      return {\r\n        type: \"error\" /* error */,\r\n        error: new ErrorResponseImpl(\r\n          result.init?.status || 500,\r\n          void 0,\r\n          result.data\r\n        ),\r\n        statusCode: isRouteErrorResponse(result) ? result.status : void 0,\r\n        headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n      };\r\n    }\r\n    return {\r\n      type: \"error\" /* error */,\r\n      error: result,\r\n      statusCode: isRouteErrorResponse(result) ? result.status : void 0\r\n    };\r\n  }\r\n  if (isDataWithResponseInit(result)) {\r\n    return {\r\n      type: \"data\" /* data */,\r\n      data: result.data,\r\n      statusCode: result.init?.status,\r\n      headers: result.init?.headers ? new Headers(result.init.headers) : void 0\r\n    };\r\n  }\r\n  return { type: \"data\" /* data */, data: result };\r\n}\r\nfunction normalizeRelativeRoutingRedirectResponse(response, request, routeId, matches, basename) {\r\n  let location = response.headers.get(\"Location\");\r\n  invariant(\r\n    location,\r\n    \"Redirects returned/thrown from loaders/actions must have a Location header\"\r\n  );\r\n  if (!ABSOLUTE_URL_REGEX.test(location)) {\r\n    let trimmedMatches = matches.slice(\r\n      0,\r\n      matches.findIndex((m) => m.route.id === routeId) + 1\r\n    );\r\n    location = normalizeTo(\r\n      new URL(request.url),\r\n      trimmedMatches,\r\n      basename,\r\n      location\r\n    );\r\n    response.headers.set(\"Location\", location);\r\n  }\r\n  return response;\r\n}\r\nfunction normalizeRedirectLocation(location, currentUrl, basename) {\r\n  if (ABSOLUTE_URL_REGEX.test(location)) {\r\n    let normalizedLocation = location;\r\n    let url = normalizedLocation.startsWith(\"//\") ? new URL(currentUrl.protocol + normalizedLocation) : new URL(normalizedLocation);\r\n    let isSameBasename = stripBasename(url.pathname, basename) != null;\r\n    if (url.origin === currentUrl.origin && isSameBasename) {\r\n      return url.pathname + url.search + url.hash;\r\n    }\r\n  }\r\n  return location;\r\n}\r\nfunction createClientSideRequest(history, location, signal, submission) {\r\n  let url = history.createURL(stripHashFromPath(location)).toString();\r\n  let init = { signal };\r\n  if (submission && isMutationMethod(submission.formMethod)) {\r\n    let { formMethod, formEncType } = submission;\r\n    init.method = formMethod.toUpperCase();\r\n    if (formEncType === \"application/json\") {\r\n      init.headers = new Headers({ \"Content-Type\": formEncType });\r\n      init.body = JSON.stringify(submission.json);\r\n    } else if (formEncType === \"text/plain\") {\r\n      init.body = submission.text;\r\n    } else if (formEncType === \"application/x-www-form-urlencoded\" && submission.formData) {\r\n      init.body = convertFormDataToSearchParams(submission.formData);\r\n    } else {\r\n      init.body = submission.formData;\r\n    }\r\n  }\r\n  return new Request(url, init);\r\n}\r\nfunction convertFormDataToSearchParams(formData) {\r\n  let searchParams = new URLSearchParams();\r\n  for (let [key, value] of formData.entries()) {\r\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\r\n  }\r\n  return searchParams;\r\n}\r\nfunction convertSearchParamsToFormData(searchParams) {\r\n  let formData = new FormData();\r\n  for (let [key, value] of searchParams.entries()) {\r\n    formData.append(key, value);\r\n  }\r\n  return formData;\r\n}\r\nfunction processRouteLoaderData(matches, results, pendingActionResult, isStaticHandler = false, skipLoaderErrorBubbling = false) {\r\n  let loaderData = {};\r\n  let errors = null;\r\n  let statusCode;\r\n  let foundError = false;\r\n  let loaderHeaders = {};\r\n  let pendingError = pendingActionResult && isErrorResult(pendingActionResult[1]) ? pendingActionResult[1].error : void 0;\r\n  matches.forEach((match) => {\r\n    if (!(match.route.id in results)) {\r\n      return;\r\n    }\r\n    let id = match.route.id;\r\n    let result = results[id];\r\n    invariant(\r\n      !isRedirectResult(result),\r\n      \"Cannot handle redirect results in processLoaderData\"\r\n    );\r\n    if (isErrorResult(result)) {\r\n      let error = result.error;\r\n      if (pendingError !== void 0) {\r\n        error = pendingError;\r\n        pendingError = void 0;\r\n      }\r\n      errors = errors || {};\r\n      if (skipLoaderErrorBubbling) {\r\n        errors[id] = error;\r\n      } else {\r\n        let boundaryMatch = findNearestBoundary(matches, id);\r\n        if (errors[boundaryMatch.route.id] == null) {\r\n          errors[boundaryMatch.route.id] = error;\r\n        }\r\n      }\r\n      if (!isStaticHandler) {\r\n        loaderData[id] = ResetLoaderDataSymbol;\r\n      }\r\n      if (!foundError) {\r\n        foundError = true;\r\n        statusCode = isRouteErrorResponse(result.error) ? result.error.status : 500;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    } else {\r\n      loaderData[id] = result.data;\r\n      if (result.statusCode && result.statusCode !== 200 && !foundError) {\r\n        statusCode = result.statusCode;\r\n      }\r\n      if (result.headers) {\r\n        loaderHeaders[id] = result.headers;\r\n      }\r\n    }\r\n  });\r\n  if (pendingError !== void 0 && pendingActionResult) {\r\n    errors = { [pendingActionResult[0]]: pendingError };\r\n    loaderData[pendingActionResult[0]] = void 0;\r\n  }\r\n  return {\r\n    loaderData,\r\n    errors,\r\n    statusCode: statusCode || 200,\r\n    loaderHeaders\r\n  };\r\n}\r\nfunction processLoaderData(state, matches, results, pendingActionResult, revalidatingFetchers, fetcherResults) {\r\n  let { loaderData, errors } = processRouteLoaderData(\r\n    matches,\r\n    results,\r\n    pendingActionResult\r\n  );\r\n  revalidatingFetchers.forEach((rf) => {\r\n    let { key, match, controller } = rf;\r\n    let result = fetcherResults[key];\r\n    invariant(result, \"Did not find corresponding fetcher result\");\r\n    if (controller && controller.signal.aborted) {\r\n      return;\r\n    } else if (isErrorResult(result)) {\r\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\r\n      if (!(errors && errors[boundaryMatch.route.id])) {\r\n        errors = {\r\n          ...errors,\r\n          [boundaryMatch.route.id]: result.error\r\n        };\r\n      }\r\n      state.fetchers.delete(key);\r\n    } else if (isRedirectResult(result)) {\r\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\r\n    } else {\r\n      let doneFetcher = getDoneFetcher(result.data);\r\n      state.fetchers.set(key, doneFetcher);\r\n    }\r\n  });\r\n  return { loaderData, errors };\r\n}\r\nfunction mergeLoaderData(loaderData, newLoaderData, matches, errors) {\r\n  let mergedLoaderData = Object.entries(newLoaderData).filter(([, v]) => v !== ResetLoaderDataSymbol).reduce((merged, [k, v]) => {\r\n    merged[k] = v;\r\n    return merged;\r\n  }, {});\r\n  for (let match of matches) {\r\n    let id = match.route.id;\r\n    if (!newLoaderData.hasOwnProperty(id) && loaderData.hasOwnProperty(id) && match.route.loader) {\r\n      mergedLoaderData[id] = loaderData[id];\r\n    }\r\n    if (errors && errors.hasOwnProperty(id)) {\r\n      break;\r\n    }\r\n  }\r\n  return mergedLoaderData;\r\n}\r\nfunction getActionDataForCommit(pendingActionResult) {\r\n  if (!pendingActionResult) {\r\n    return {};\r\n  }\r\n  return isErrorResult(pendingActionResult[1]) ? {\r\n    // Clear out prior actionData on errors\r\n    actionData: {}\r\n  } : {\r\n    actionData: {\r\n      [pendingActionResult[0]]: pendingActionResult[1].data\r\n    }\r\n  };\r\n}\r\nfunction findNearestBoundary(matches, routeId) {\r\n  let eligibleMatches = routeId ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1) : [...matches];\r\n  return eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) || matches[0];\r\n}\r\nfunction getShortCircuitMatches(routes) {\r\n  let route = routes.length === 1 ? routes[0] : routes.find((r) => r.index || !r.path || r.path === \"/\") || {\r\n    id: `__shim-error-route__`\r\n  };\r\n  return {\r\n    matches: [\r\n      {\r\n        params: {},\r\n        pathname: \"\",\r\n        pathnameBase: \"\",\r\n        route\r\n      }\r\n    ],\r\n    route\r\n  };\r\n}\r\nfunction getInternalRouterError(status, {\r\n  pathname,\r\n  routeId,\r\n  method,\r\n  type,\r\n  message\r\n} = {}) {\r\n  let statusText = \"Unknown Server Error\";\r\n  let errorMessage = \"Unknown @remix-run/router error\";\r\n  if (status === 400) {\r\n    statusText = \"Bad Request\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method} request to \"${pathname}\" but did not provide a \\`loader\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (type === \"invalid-body\") {\r\n      errorMessage = \"Unable to encode submission body\";\r\n    }\r\n  } else if (status === 403) {\r\n    statusText = \"Forbidden\";\r\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\r\n  } else if (status === 404) {\r\n    statusText = \"Not Found\";\r\n    errorMessage = `No route matches URL \"${pathname}\"`;\r\n  } else if (status === 405) {\r\n    statusText = \"Method Not Allowed\";\r\n    if (method && pathname && routeId) {\r\n      errorMessage = `You made a ${method.toUpperCase()} request to \"${pathname}\" but did not provide an \\`action\\` for route \"${routeId}\", so there is no way to handle the request.`;\r\n    } else if (method) {\r\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\r\n    }\r\n  }\r\n  return new ErrorResponseImpl(\r\n    status || 500,\r\n    statusText,\r\n    new Error(errorMessage),\r\n    true\r\n  );\r\n}\r\nfunction findRedirect(results) {\r\n  let entries = Object.entries(results);\r\n  for (let i = entries.length - 1; i >= 0; i--) {\r\n    let [key, result] = entries[i];\r\n    if (isRedirectResult(result)) {\r\n      return { key, result };\r\n    }\r\n  }\r\n}\r\nfunction stripHashFromPath(path) {\r\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\r\n  return createPath({ ...parsedPath, hash: \"\" });\r\n}\r\nfunction isHashChangeOnly(a, b) {\r\n  if (a.pathname !== b.pathname || a.search !== b.search) {\r\n    return false;\r\n  }\r\n  if (a.hash === \"\") {\r\n    return b.hash !== \"\";\r\n  } else if (a.hash === b.hash) {\r\n    return true;\r\n  } else if (b.hash !== \"\") {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\nfunction isDataStrategyResult(result) {\r\n  return result != null && typeof result === \"object\" && \"type\" in result && \"result\" in result && (result.type === \"data\" /* data */ || result.type === \"error\" /* error */);\r\n}\r\nfunction isRedirectDataStrategyResult(result) {\r\n  return isResponse(result.result) && redirectStatusCodes.has(result.result.status);\r\n}\r\nfunction isErrorResult(result) {\r\n  return result.type === \"error\" /* error */;\r\n}\r\nfunction isRedirectResult(result) {\r\n  return (result && result.type) === \"redirect\" /* redirect */;\r\n}\r\nfunction isDataWithResponseInit(value) {\r\n  return typeof value === \"object\" && value != null && \"type\" in value && \"data\" in value && \"init\" in value && value.type === \"DataWithResponseInit\";\r\n}\r\nfunction isResponse(value) {\r\n  return value != null && typeof value.status === \"number\" && typeof value.statusText === \"string\" && typeof value.headers === \"object\" && typeof value.body !== \"undefined\";\r\n}\r\nfunction isRedirectStatusCode(statusCode) {\r\n  return redirectStatusCodes.has(statusCode);\r\n}\r\nfunction isRedirectResponse(result) {\r\n  return isResponse(result) && isRedirectStatusCode(result.status) && result.headers.has(\"Location\");\r\n}\r\nfunction isValidMethod(method) {\r\n  return validRequestMethods.has(method.toUpperCase());\r\n}\r\nfunction isMutationMethod(method) {\r\n  return validMutationMethods.has(method.toUpperCase());\r\n}\r\nfunction hasNakedIndexQuery(search) {\r\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\r\n}\r\nfunction getTargetMatch(matches, location) {\r\n  let search = typeof location === \"string\" ? parsePath(location).search : location.search;\r\n  if (matches[matches.length - 1].route.index && hasNakedIndexQuery(search || \"\")) {\r\n    return matches[matches.length - 1];\r\n  }\r\n  let pathMatches = getPathContributingMatches(matches);\r\n  return pathMatches[pathMatches.length - 1];\r\n}\r\nfunction getSubmissionFromNavigation(navigation) {\r\n  let { formMethod, formAction, formEncType, text, formData, json } = navigation;\r\n  if (!formMethod || !formAction || !formEncType) {\r\n    return;\r\n  }\r\n  if (text != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text\r\n    };\r\n  } else if (formData != null) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n  } else if (json !== void 0) {\r\n    return {\r\n      formMethod,\r\n      formAction,\r\n      formEncType,\r\n      formData: void 0,\r\n      json,\r\n      text: void 0\r\n    };\r\n  }\r\n}\r\nfunction getLoadingNavigation(location, submission) {\r\n  if (submission) {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text\r\n    };\r\n    return navigation;\r\n  } else {\r\n    let navigation = {\r\n      state: \"loading\",\r\n      location,\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0\r\n    };\r\n    return navigation;\r\n  }\r\n}\r\nfunction getSubmittingNavigation(location, submission) {\r\n  let navigation = {\r\n    state: \"submitting\",\r\n    location,\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text\r\n  };\r\n  return navigation;\r\n}\r\nfunction getLoadingFetcher(submission, data2) {\r\n  if (submission) {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: submission.formMethod,\r\n      formAction: submission.formAction,\r\n      formEncType: submission.formEncType,\r\n      formData: submission.formData,\r\n      json: submission.json,\r\n      text: submission.text,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  } else {\r\n    let fetcher = {\r\n      state: \"loading\",\r\n      formMethod: void 0,\r\n      formAction: void 0,\r\n      formEncType: void 0,\r\n      formData: void 0,\r\n      json: void 0,\r\n      text: void 0,\r\n      data: data2\r\n    };\r\n    return fetcher;\r\n  }\r\n}\r\nfunction getSubmittingFetcher(submission, existingFetcher) {\r\n  let fetcher = {\r\n    state: \"submitting\",\r\n    formMethod: submission.formMethod,\r\n    formAction: submission.formAction,\r\n    formEncType: submission.formEncType,\r\n    formData: submission.formData,\r\n    json: submission.json,\r\n    text: submission.text,\r\n    data: existingFetcher ? existingFetcher.data : void 0\r\n  };\r\n  return fetcher;\r\n}\r\nfunction getDoneFetcher(data2) {\r\n  let fetcher = {\r\n    state: \"idle\",\r\n    formMethod: void 0,\r\n    formAction: void 0,\r\n    formEncType: void 0,\r\n    formData: void 0,\r\n    json: void 0,\r\n    text: void 0,\r\n    data: data2\r\n  };\r\n  return fetcher;\r\n}\r\nfunction restoreAppliedTransitions(_window, transitions) {\r\n  try {\r\n    let sessionPositions = _window.sessionStorage.getItem(\r\n      TRANSITIONS_STORAGE_KEY\r\n    );\r\n    if (sessionPositions) {\r\n      let json = JSON.parse(sessionPositions);\r\n      for (let [k, v] of Object.entries(json || {})) {\r\n        if (v && Array.isArray(v)) {\r\n          transitions.set(k, new Set(v || []));\r\n        }\r\n      }\r\n    }\r\n  } catch (e) {\r\n  }\r\n}\r\nfunction persistAppliedTransitions(_window, transitions) {\r\n  if (transitions.size > 0) {\r\n    let json = {};\r\n    for (let [k, v] of transitions) {\r\n      json[k] = [...v];\r\n    }\r\n    try {\r\n      _window.sessionStorage.setItem(\r\n        TRANSITIONS_STORAGE_KEY,\r\n        JSON.stringify(json)\r\n      );\r\n    } catch (error) {\r\n      warning(\r\n        false,\r\n        `Failed to save applied view transitions in sessionStorage (${error}).`\r\n      );\r\n    }\r\n  }\r\n}\r\nfunction createDeferred() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/components.tsx\r\nimport * as React3 from \"react\";\r\n\r\n// lib/context.ts\r\nimport * as React from \"react\";\r\nvar DataRouterContext = React.createContext(null);\r\nDataRouterContext.displayName = \"DataRouter\";\r\nvar DataRouterStateContext = React.createContext(null);\r\nDataRouterStateContext.displayName = \"DataRouterState\";\r\nvar ViewTransitionContext = React.createContext({\r\n  isTransitioning: false\r\n});\r\nViewTransitionContext.displayName = \"ViewTransition\";\r\nvar FetchersContext = React.createContext(\r\n  /* @__PURE__ */ new Map()\r\n);\r\nFetchersContext.displayName = \"Fetchers\";\r\nvar AwaitContext = React.createContext(null);\r\nAwaitContext.displayName = \"Await\";\r\nvar NavigationContext = React.createContext(\r\n  null\r\n);\r\nNavigationContext.displayName = \"Navigation\";\r\nvar LocationContext = React.createContext(\r\n  null\r\n);\r\nLocationContext.displayName = \"Location\";\r\nvar RouteContext = React.createContext({\r\n  outlet: null,\r\n  matches: [],\r\n  isDataRoute: false\r\n});\r\nRouteContext.displayName = \"Route\";\r\nvar RouteErrorContext = React.createContext(null);\r\nRouteErrorContext.displayName = \"RouteError\";\r\n\r\n// lib/hooks.tsx\r\nimport * as React2 from \"react\";\r\nvar ENABLE_DEV_WARNINGS = true;\r\nfunction useHref(to, { relative } = {}) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useHref() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\r\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\r\n  let joinedPathname = pathname;\r\n  if (basename !== \"/\") {\r\n    joinedPathname = pathname === \"/\" ? basename : joinPaths([basename, pathname]);\r\n  }\r\n  return navigator2.createHref({ pathname: joinedPathname, search, hash });\r\n}\r\nfunction useInRouterContext() {\r\n  return React2.useContext(LocationContext) != null;\r\n}\r\nfunction useLocation() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useLocation() may be used only in the context of a <Router> component.`\r\n  );\r\n  return React2.useContext(LocationContext).location;\r\n}\r\nfunction useNavigationType() {\r\n  return React2.useContext(LocationContext).navigationType;\r\n}\r\nfunction useMatch(pattern) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useMatch() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { pathname } = useLocation();\r\n  return React2.useMemo(\r\n    () => matchPath(pattern, decodePath(pathname)),\r\n    [pathname, pattern]\r\n  );\r\n}\r\nvar navigateEffectWarning = `You should call navigate() in a React.useEffect(), not when your component is first rendered.`;\r\nfunction useIsomorphicLayoutEffect(cb) {\r\n  let isStatic = React2.useContext(NavigationContext).static;\r\n  if (!isStatic) {\r\n    React2.useLayoutEffect(cb);\r\n  }\r\n}\r\nfunction useNavigate() {\r\n  let { isDataRoute } = React2.useContext(RouteContext);\r\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\r\n}\r\nfunction useNavigateUnstable() {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useNavigate() may be used only in the context of a <Router> component.`\r\n  );\r\n  let dataRouterContext = React2.useContext(DataRouterContext);\r\n  let { basename, navigator: navigator2 } = React2.useContext(NavigationContext);\r\n  let { matches } = React2.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\r\n  let activeRef = React2.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = React2.useCallback(\r\n    (to, options = {}) => {\r\n      warning(activeRef.current, navigateEffectWarning);\r\n      if (!activeRef.current) return;\r\n      if (typeof to === \"number\") {\r\n        navigator2.go(to);\r\n        return;\r\n      }\r\n      let path = resolveTo(\r\n        to,\r\n        JSON.parse(routePathnamesJson),\r\n        locationPathname,\r\n        options.relative === \"path\"\r\n      );\r\n      if (dataRouterContext == null && basename !== \"/\") {\r\n        path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n      }\r\n      (!!options.replace ? navigator2.replace : navigator2.push)(\r\n        path,\r\n        options.state,\r\n        options\r\n      );\r\n    },\r\n    [\r\n      basename,\r\n      navigator2,\r\n      routePathnamesJson,\r\n      locationPathname,\r\n      dataRouterContext\r\n    ]\r\n  );\r\n  return navigate;\r\n}\r\nvar OutletContext = React2.createContext(null);\r\nfunction useOutletContext() {\r\n  return React2.useContext(OutletContext);\r\n}\r\nfunction useOutlet(context) {\r\n  let outlet = React2.useContext(RouteContext).outlet;\r\n  if (outlet) {\r\n    return /* @__PURE__ */ React2.createElement(OutletContext.Provider, { value: context }, outlet);\r\n  }\r\n  return outlet;\r\n}\r\nfunction useParams() {\r\n  let { matches } = React2.useContext(RouteContext);\r\n  let routeMatch = matches[matches.length - 1];\r\n  return routeMatch ? routeMatch.params : {};\r\n}\r\nfunction useResolvedPath(to, { relative } = {}) {\r\n  let { matches } = React2.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let routePathnamesJson = JSON.stringify(getResolveToMatches(matches));\r\n  return React2.useMemo(\r\n    () => resolveTo(\r\n      to,\r\n      JSON.parse(routePathnamesJson),\r\n      locationPathname,\r\n      relative === \"path\"\r\n    ),\r\n    [to, routePathnamesJson, locationPathname, relative]\r\n  );\r\n}\r\nfunction useRoutes(routes, locationArg) {\r\n  return useRoutesImpl(routes, locationArg);\r\n}\r\nfunction useRoutesImpl(routes, locationArg, dataRouterState, future) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of the\r\n    // router loaded. We can help them understand how to avoid that.\r\n    `useRoutes() may be used only in the context of a <Router> component.`\r\n  );\r\n  let { navigator: navigator2, static: isStatic } = React2.useContext(NavigationContext);\r\n  let { matches: parentMatches } = React2.useContext(RouteContext);\r\n  let routeMatch = parentMatches[parentMatches.length - 1];\r\n  let parentParams = routeMatch ? routeMatch.params : {};\r\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\r\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\r\n  let parentRoute = routeMatch && routeMatch.route;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    let parentPath = parentRoute && parentRoute.path || \"\";\r\n    warningOnce(\r\n      parentPathname,\r\n      !parentRoute || parentPath.endsWith(\"*\") || parentPath.endsWith(\"*?\"),\r\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at \"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the parent route path has no trailing \"*\". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\r\n\r\nPlease change the parent <Route path=\"${parentPath}\"> to <Route path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\r\n    );\r\n  }\r\n  let locationFromContext = useLocation();\r\n  let location;\r\n  if (locationArg) {\r\n    let parsedLocationArg = typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\r\n    invariant(\r\n      parentPathnameBase === \"/\" || parsedLocationArg.pathname?.startsWith(parentPathnameBase),\r\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\r\n    );\r\n    location = parsedLocationArg;\r\n  } else {\r\n    location = locationFromContext;\r\n  }\r\n  let pathname = location.pathname || \"/\";\r\n  let remainingPathname = pathname;\r\n  if (parentPathnameBase !== \"/\") {\r\n    let parentSegments = parentPathnameBase.replace(/^\\//, \"\").split(\"/\");\r\n    let segments = pathname.replace(/^\\//, \"\").split(\"/\");\r\n    remainingPathname = \"/\" + segments.slice(parentSegments.length).join(\"/\");\r\n  }\r\n  let matches = !isStatic && dataRouterState && dataRouterState.matches && dataRouterState.matches.length > 0 ? dataRouterState.matches : matchRoutes(routes, { pathname: remainingPathname });\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    warning(\r\n      parentRoute || matches != null,\r\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\r\n    );\r\n    warning(\r\n      matches == null || matches[matches.length - 1].route.element !== void 0 || matches[matches.length - 1].route.Component !== void 0 || matches[matches.length - 1].route.lazy !== void 0,\r\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an \"empty\" page.`\r\n    );\r\n  }\r\n  let renderedMatches = _renderMatches(\r\n    matches && matches.map(\r\n      (match) => Object.assign({}, match, {\r\n        params: Object.assign({}, parentParams, match.params),\r\n        pathname: joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathname).pathname : match.pathname\r\n        ]),\r\n        pathnameBase: match.pathnameBase === \"/\" ? parentPathnameBase : joinPaths([\r\n          parentPathnameBase,\r\n          // Re-encode pathnames that were decoded inside matchRoutes\r\n          navigator2.encodeLocation ? navigator2.encodeLocation(match.pathnameBase).pathname : match.pathnameBase\r\n        ])\r\n      })\r\n    ),\r\n    parentMatches,\r\n    dataRouterState,\r\n    future\r\n  );\r\n  if (locationArg && renderedMatches) {\r\n    return /* @__PURE__ */ React2.createElement(\r\n      LocationContext.Provider,\r\n      {\r\n        value: {\r\n          location: {\r\n            pathname: \"/\",\r\n            search: \"\",\r\n            hash: \"\",\r\n            state: null,\r\n            key: \"default\",\r\n            ...location\r\n          },\r\n          navigationType: \"POP\" /* Pop */\r\n        }\r\n      },\r\n      renderedMatches\r\n    );\r\n  }\r\n  return renderedMatches;\r\n}\r\nfunction DefaultErrorComponent() {\r\n  let error = useRouteError();\r\n  let message = isRouteErrorResponse(error) ? `${error.status} ${error.statusText}` : error instanceof Error ? error.message : JSON.stringify(error);\r\n  let stack = error instanceof Error ? error.stack : null;\r\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\r\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\r\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\r\n  let devInfo = null;\r\n  if (ENABLE_DEV_WARNINGS) {\r\n    console.error(\r\n      \"Error handled by React Router default ErrorBoundary:\",\r\n      error\r\n    );\r\n    devInfo = /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"p\", null, \"\\u{1F4BF} Hey developer \\u{1F44B}\"), /* @__PURE__ */ React2.createElement(\"p\", null, \"You can provide a way better UX than this when your app throws errors by providing your own \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"ErrorBoundary\"), \" or\", \" \", /* @__PURE__ */ React2.createElement(\"code\", { style: codeStyles }, \"errorElement\"), \" prop on your route.\"));\r\n  }\r\n  return /* @__PURE__ */ React2.createElement(React2.Fragment, null, /* @__PURE__ */ React2.createElement(\"h2\", null, \"Unexpected Application Error!\"), /* @__PURE__ */ React2.createElement(\"h3\", { style: { fontStyle: \"italic\" } }, message), stack ? /* @__PURE__ */ React2.createElement(\"pre\", { style: preStyles }, stack) : null, devInfo);\r\n}\r\nvar defaultErrorElement = /* @__PURE__ */ React2.createElement(DefaultErrorComponent, null);\r\nvar RenderErrorBoundary = class extends React2.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      location: props.location,\r\n      revalidation: props.revalidation,\r\n      error: props.error\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location || state.revalidation !== \"idle\" && props.revalidation === \"idle\") {\r\n      return {\r\n        error: props.error,\r\n        location: props.location,\r\n        revalidation: props.revalidation\r\n      };\r\n    }\r\n    return {\r\n      error: props.error !== void 0 ? props.error : state.error,\r\n      location: state.location,\r\n      revalidation: props.revalidation || state.revalidation\r\n    };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"React Router caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    return this.state.error !== void 0 ? /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: this.props.routeContext }, /* @__PURE__ */ React2.createElement(\r\n      RouteErrorContext.Provider,\r\n      {\r\n        value: this.state.error,\r\n        children: this.props.component\r\n      }\r\n    )) : this.props.children;\r\n  }\r\n};\r\nfunction RenderedRoute({ routeContext, match, children }) {\r\n  let dataRouterContext = React2.useContext(DataRouterContext);\r\n  if (dataRouterContext && dataRouterContext.static && dataRouterContext.staticContext && (match.route.errorElement || match.route.ErrorBoundary)) {\r\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\r\n  }\r\n  return /* @__PURE__ */ React2.createElement(RouteContext.Provider, { value: routeContext }, children);\r\n}\r\nfunction _renderMatches(matches, parentMatches = [], dataRouterState = null, future = null) {\r\n  if (matches == null) {\r\n    if (!dataRouterState) {\r\n      return null;\r\n    }\r\n    if (dataRouterState.errors) {\r\n      matches = dataRouterState.matches;\r\n    } else if (parentMatches.length === 0 && !dataRouterState.initialized && dataRouterState.matches.length > 0) {\r\n      matches = dataRouterState.matches;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n  let renderedMatches = matches;\r\n  let errors = dataRouterState?.errors;\r\n  if (errors != null) {\r\n    let errorIndex = renderedMatches.findIndex(\r\n      (m) => m.route.id && errors?.[m.route.id] !== void 0\r\n    );\r\n    invariant(\r\n      errorIndex >= 0,\r\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\r\n        errors\r\n      ).join(\",\")}`\r\n    );\r\n    renderedMatches = renderedMatches.slice(\r\n      0,\r\n      Math.min(renderedMatches.length, errorIndex + 1)\r\n    );\r\n  }\r\n  let renderFallback = false;\r\n  let fallbackIndex = -1;\r\n  if (dataRouterState) {\r\n    for (let i = 0; i < renderedMatches.length; i++) {\r\n      let match = renderedMatches[i];\r\n      if (match.route.HydrateFallback || match.route.hydrateFallbackElement) {\r\n        fallbackIndex = i;\r\n      }\r\n      if (match.route.id) {\r\n        let { loaderData, errors: errors2 } = dataRouterState;\r\n        let needsToRunLoader = match.route.loader && !loaderData.hasOwnProperty(match.route.id) && (!errors2 || errors2[match.route.id] === void 0);\r\n        if (match.route.lazy || needsToRunLoader) {\r\n          renderFallback = true;\r\n          if (fallbackIndex >= 0) {\r\n            renderedMatches = renderedMatches.slice(0, fallbackIndex + 1);\r\n          } else {\r\n            renderedMatches = [renderedMatches[0]];\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return renderedMatches.reduceRight((outlet, match, index) => {\r\n    let error;\r\n    let shouldRenderHydrateFallback = false;\r\n    let errorElement = null;\r\n    let hydrateFallbackElement = null;\r\n    if (dataRouterState) {\r\n      error = errors && match.route.id ? errors[match.route.id] : void 0;\r\n      errorElement = match.route.errorElement || defaultErrorElement;\r\n      if (renderFallback) {\r\n        if (fallbackIndex < 0 && index === 0) {\r\n          warningOnce(\r\n            \"route-fallback\",\r\n            false,\r\n            \"No `HydrateFallback` element provided to render during initial hydration\"\r\n          );\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = null;\r\n        } else if (fallbackIndex === index) {\r\n          shouldRenderHydrateFallback = true;\r\n          hydrateFallbackElement = match.route.hydrateFallbackElement || null;\r\n        }\r\n      }\r\n    }\r\n    let matches2 = parentMatches.concat(renderedMatches.slice(0, index + 1));\r\n    let getChildren = () => {\r\n      let children;\r\n      if (error) {\r\n        children = errorElement;\r\n      } else if (shouldRenderHydrateFallback) {\r\n        children = hydrateFallbackElement;\r\n      } else if (match.route.Component) {\r\n        children = /* @__PURE__ */ React2.createElement(match.route.Component, null);\r\n      } else if (match.route.element) {\r\n        children = match.route.element;\r\n      } else {\r\n        children = outlet;\r\n      }\r\n      return /* @__PURE__ */ React2.createElement(\r\n        RenderedRoute,\r\n        {\r\n          match,\r\n          routeContext: {\r\n            outlet,\r\n            matches: matches2,\r\n            isDataRoute: dataRouterState != null\r\n          },\r\n          children\r\n        }\r\n      );\r\n    };\r\n    return dataRouterState && (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? /* @__PURE__ */ React2.createElement(\r\n      RenderErrorBoundary,\r\n      {\r\n        location: dataRouterState.location,\r\n        revalidation: dataRouterState.revalidation,\r\n        component: errorElement,\r\n        error,\r\n        children: getChildren(),\r\n        routeContext: { outlet: null, matches: matches2, isDataRoute: true }\r\n      }\r\n    ) : getChildren();\r\n  }, null);\r\n}\r\nfunction getDataRouterConsoleError(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterContext(hookName) {\r\n  let ctx = React2.useContext(DataRouterContext);\r\n  invariant(ctx, getDataRouterConsoleError(hookName));\r\n  return ctx;\r\n}\r\nfunction useDataRouterState(hookName) {\r\n  let state = React2.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError(hookName));\r\n  return state;\r\n}\r\nfunction useRouteContext(hookName) {\r\n  let route = React2.useContext(RouteContext);\r\n  invariant(route, getDataRouterConsoleError(hookName));\r\n  return route;\r\n}\r\nfunction useCurrentRouteId(hookName) {\r\n  let route = useRouteContext(hookName);\r\n  let thisRoute = route.matches[route.matches.length - 1];\r\n  invariant(\r\n    thisRoute.route.id,\r\n    `${hookName} can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  return thisRoute.route.id;\r\n}\r\nfunction useRouteId() {\r\n  return useCurrentRouteId(\"useRouteId\" /* UseRouteId */);\r\n}\r\nfunction useNavigation() {\r\n  let state = useDataRouterState(\"useNavigation\" /* UseNavigation */);\r\n  return state.navigation;\r\n}\r\nfunction useRevalidator() {\r\n  let dataRouterContext = useDataRouterContext(\"useRevalidator\" /* UseRevalidator */);\r\n  let state = useDataRouterState(\"useRevalidator\" /* UseRevalidator */);\r\n  return React2.useMemo(\r\n    () => ({\r\n      async revalidate() {\r\n        await dataRouterContext.router.revalidate();\r\n      },\r\n      state: state.revalidation\r\n    }),\r\n    [dataRouterContext.router, state.revalidation]\r\n  );\r\n}\r\nfunction useMatches() {\r\n  let { matches, loaderData } = useDataRouterState(\r\n    \"useMatches\" /* UseMatches */\r\n  );\r\n  return React2.useMemo(\r\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\r\n    [matches, loaderData]\r\n  );\r\n}\r\nfunction useLoaderData() {\r\n  let state = useDataRouterState(\"useLoaderData\" /* UseLoaderData */);\r\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\r\n  return state.loaderData[routeId];\r\n}\r\nfunction useRouteLoaderData(routeId) {\r\n  let state = useDataRouterState(\"useRouteLoaderData\" /* UseRouteLoaderData */);\r\n  return state.loaderData[routeId];\r\n}\r\nfunction useActionData() {\r\n  let state = useDataRouterState(\"useActionData\" /* UseActionData */);\r\n  let routeId = useCurrentRouteId(\"useLoaderData\" /* UseLoaderData */);\r\n  return state.actionData ? state.actionData[routeId] : void 0;\r\n}\r\nfunction useRouteError() {\r\n  let error = React2.useContext(RouteErrorContext);\r\n  let state = useDataRouterState(\"useRouteError\" /* UseRouteError */);\r\n  let routeId = useCurrentRouteId(\"useRouteError\" /* UseRouteError */);\r\n  if (error !== void 0) {\r\n    return error;\r\n  }\r\n  return state.errors?.[routeId];\r\n}\r\nfunction useAsyncValue() {\r\n  let value = React2.useContext(AwaitContext);\r\n  return value?._data;\r\n}\r\nfunction useAsyncError() {\r\n  let value = React2.useContext(AwaitContext);\r\n  return value?._error;\r\n}\r\nvar blockerId = 0;\r\nfunction useBlocker(shouldBlock) {\r\n  let { router, basename } = useDataRouterContext(\"useBlocker\" /* UseBlocker */);\r\n  let state = useDataRouterState(\"useBlocker\" /* UseBlocker */);\r\n  let [blockerKey, setBlockerKey] = React2.useState(\"\");\r\n  let blockerFunction = React2.useCallback(\r\n    (arg) => {\r\n      if (typeof shouldBlock !== \"function\") {\r\n        return !!shouldBlock;\r\n      }\r\n      if (basename === \"/\") {\r\n        return shouldBlock(arg);\r\n      }\r\n      let { currentLocation, nextLocation, historyAction } = arg;\r\n      return shouldBlock({\r\n        currentLocation: {\r\n          ...currentLocation,\r\n          pathname: stripBasename(currentLocation.pathname, basename) || currentLocation.pathname\r\n        },\r\n        nextLocation: {\r\n          ...nextLocation,\r\n          pathname: stripBasename(nextLocation.pathname, basename) || nextLocation.pathname\r\n        },\r\n        historyAction\r\n      });\r\n    },\r\n    [basename, shouldBlock]\r\n  );\r\n  React2.useEffect(() => {\r\n    let key = String(++blockerId);\r\n    setBlockerKey(key);\r\n    return () => router.deleteBlocker(key);\r\n  }, [router]);\r\n  React2.useEffect(() => {\r\n    if (blockerKey !== \"\") {\r\n      router.getBlocker(blockerKey, blockerFunction);\r\n    }\r\n  }, [router, blockerKey, blockerFunction]);\r\n  return blockerKey && state.blockers.has(blockerKey) ? state.blockers.get(blockerKey) : IDLE_BLOCKER;\r\n}\r\nfunction useNavigateStable() {\r\n  let { router } = useDataRouterContext(\"useNavigate\" /* UseNavigateStable */);\r\n  let id = useCurrentRouteId(\"useNavigate\" /* UseNavigateStable */);\r\n  let activeRef = React2.useRef(false);\r\n  useIsomorphicLayoutEffect(() => {\r\n    activeRef.current = true;\r\n  });\r\n  let navigate = React2.useCallback(\r\n    async (to, options = {}) => {\r\n      warning(activeRef.current, navigateEffectWarning);\r\n      if (!activeRef.current) return;\r\n      if (typeof to === \"number\") {\r\n        router.navigate(to);\r\n      } else {\r\n        await router.navigate(to, { fromRouteId: id, ...options });\r\n      }\r\n    },\r\n    [router, id]\r\n  );\r\n  return navigate;\r\n}\r\nvar alreadyWarned = {};\r\nfunction warningOnce(key, cond, message) {\r\n  if (!cond && !alreadyWarned[key]) {\r\n    alreadyWarned[key] = true;\r\n    warning(false, message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/warnings.ts\r\nvar alreadyWarned2 = {};\r\nfunction warnOnce(condition, message) {\r\n  if (!condition && !alreadyWarned2[message]) {\r\n    alreadyWarned2[message] = true;\r\n    console.warn(message);\r\n  }\r\n}\r\n\r\n// lib/components.tsx\r\nvar ENABLE_DEV_WARNINGS2 = true;\r\nfunction mapRouteProperties(route) {\r\n  let updates = {\r\n    // Note: this check also occurs in createRoutesFromChildren so update\r\n    // there if you change this -- please and thank you!\r\n    hasErrorBoundary: route.hasErrorBoundary || route.ErrorBoundary != null || route.errorElement != null\r\n  };\r\n  if (route.Component) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.element) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `Component` and `element` on your route - `Component` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      element: React3.createElement(route.Component),\r\n      Component: void 0\r\n    });\r\n  }\r\n  if (route.HydrateFallback) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.hydrateFallbackElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `HydrateFallback` and `hydrateFallbackElement` on your route - `HydrateFallback` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      hydrateFallbackElement: React3.createElement(route.HydrateFallback),\r\n      HydrateFallback: void 0\r\n    });\r\n  }\r\n  if (route.ErrorBoundary) {\r\n    if (ENABLE_DEV_WARNINGS2) {\r\n      if (route.errorElement) {\r\n        warning(\r\n          false,\r\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - `ErrorBoundary` will be used.\"\r\n        );\r\n      }\r\n    }\r\n    Object.assign(updates, {\r\n      errorElement: React3.createElement(route.ErrorBoundary),\r\n      ErrorBoundary: void 0\r\n    });\r\n  }\r\n  return updates;\r\n}\r\nfunction createMemoryRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    unstable_getContext: opts?.unstable_getContext,\r\n    future: opts?.future,\r\n    history: createMemoryHistory({\r\n      initialEntries: opts?.initialEntries,\r\n      initialIndex: opts?.initialIndex\r\n    }),\r\n    hydrationData: opts?.hydrationData,\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation\r\n  }).initialize();\r\n}\r\nvar Deferred = class {\r\n  constructor() {\r\n    this.status = \"pending\";\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = (value) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"resolved\";\r\n          resolve(value);\r\n        }\r\n      };\r\n      this.reject = (reason) => {\r\n        if (this.status === \"pending\") {\r\n          this.status = \"rejected\";\r\n          reject(reason);\r\n        }\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction RouterProvider({\r\n  router,\r\n  flushSync: reactDomFlushSyncImpl\r\n}) {\r\n  let [state, setStateImpl] = React3.useState(router.state);\r\n  let [pendingState, setPendingState] = React3.useState();\r\n  let [vtContext, setVtContext] = React3.useState({\r\n    isTransitioning: false\r\n  });\r\n  let [renderDfd, setRenderDfd] = React3.useState();\r\n  let [transition, setTransition] = React3.useState();\r\n  let [interruption, setInterruption] = React3.useState();\r\n  let fetcherData = React3.useRef(/* @__PURE__ */ new Map());\r\n  let setState = React3.useCallback(\r\n    (newState, { deletedFetchers, flushSync, viewTransitionOpts }) => {\r\n      newState.fetchers.forEach((fetcher, key) => {\r\n        if (fetcher.data !== void 0) {\r\n          fetcherData.current.set(key, fetcher.data);\r\n        }\r\n      });\r\n      deletedFetchers.forEach((key) => fetcherData.current.delete(key));\r\n      warnOnce(\r\n        flushSync === false || reactDomFlushSyncImpl != null,\r\n        'You provided the `flushSync` option to a router update, but you are not using the `<RouterProvider>` from `react-router/dom` so `ReactDOM.flushSync()` is unavailable.  Please update your app to `import { RouterProvider } from \"react-router/dom\"` and ensure you have `react-dom` installed as a dependency to use the `flushSync` option.'\r\n      );\r\n      let isViewTransitionAvailable = router.window != null && router.window.document != null && typeof router.window.document.startViewTransition === \"function\";\r\n      warnOnce(\r\n        viewTransitionOpts == null || isViewTransitionAvailable,\r\n        \"You provided the `viewTransition` option to a router update, but you do not appear to be running in a DOM environment as `window.startViewTransition` is not available.\"\r\n      );\r\n      if (!viewTransitionOpts || !isViewTransitionAvailable) {\r\n        if (reactDomFlushSyncImpl && flushSync) {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        } else {\r\n          React3.startTransition(() => setStateImpl(newState));\r\n        }\r\n        return;\r\n      }\r\n      if (reactDomFlushSyncImpl && flushSync) {\r\n        reactDomFlushSyncImpl(() => {\r\n          if (transition) {\r\n            renderDfd && renderDfd.resolve();\r\n            transition.skipTransition();\r\n          }\r\n          setVtContext({\r\n            isTransitioning: true,\r\n            flushSync: true,\r\n            currentLocation: viewTransitionOpts.currentLocation,\r\n            nextLocation: viewTransitionOpts.nextLocation\r\n          });\r\n        });\r\n        let t = router.window.document.startViewTransition(() => {\r\n          reactDomFlushSyncImpl(() => setStateImpl(newState));\r\n        });\r\n        t.finished.finally(() => {\r\n          reactDomFlushSyncImpl(() => {\r\n            setRenderDfd(void 0);\r\n            setTransition(void 0);\r\n            setPendingState(void 0);\r\n            setVtContext({ isTransitioning: false });\r\n          });\r\n        });\r\n        reactDomFlushSyncImpl(() => setTransition(t));\r\n        return;\r\n      }\r\n      if (transition) {\r\n        renderDfd && renderDfd.resolve();\r\n        transition.skipTransition();\r\n        setInterruption({\r\n          state: newState,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      } else {\r\n        setPendingState(newState);\r\n        setVtContext({\r\n          isTransitioning: true,\r\n          flushSync: false,\r\n          currentLocation: viewTransitionOpts.currentLocation,\r\n          nextLocation: viewTransitionOpts.nextLocation\r\n        });\r\n      }\r\n    },\r\n    [router.window, reactDomFlushSyncImpl, transition, renderDfd]\r\n  );\r\n  React3.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\r\n  React3.useEffect(() => {\r\n    if (vtContext.isTransitioning && !vtContext.flushSync) {\r\n      setRenderDfd(new Deferred());\r\n    }\r\n  }, [vtContext]);\r\n  React3.useEffect(() => {\r\n    if (renderDfd && pendingState && router.window) {\r\n      let newState = pendingState;\r\n      let renderPromise = renderDfd.promise;\r\n      let transition2 = router.window.document.startViewTransition(async () => {\r\n        React3.startTransition(() => setStateImpl(newState));\r\n        await renderPromise;\r\n      });\r\n      transition2.finished.finally(() => {\r\n        setRenderDfd(void 0);\r\n        setTransition(void 0);\r\n        setPendingState(void 0);\r\n        setVtContext({ isTransitioning: false });\r\n      });\r\n      setTransition(transition2);\r\n    }\r\n  }, [pendingState, renderDfd, router.window]);\r\n  React3.useEffect(() => {\r\n    if (renderDfd && pendingState && state.location.key === pendingState.location.key) {\r\n      renderDfd.resolve();\r\n    }\r\n  }, [renderDfd, transition, state.location, pendingState]);\r\n  React3.useEffect(() => {\r\n    if (!vtContext.isTransitioning && interruption) {\r\n      setPendingState(interruption.state);\r\n      setVtContext({\r\n        isTransitioning: true,\r\n        flushSync: false,\r\n        currentLocation: interruption.currentLocation,\r\n        nextLocation: interruption.nextLocation\r\n      });\r\n      setInterruption(void 0);\r\n    }\r\n  }, [vtContext.isTransitioning, interruption]);\r\n  let navigator2 = React3.useMemo(() => {\r\n    return {\r\n      createHref: router.createHref,\r\n      encodeLocation: router.encodeLocation,\r\n      go: (n) => router.navigate(n),\r\n      push: (to, state2, opts) => router.navigate(to, {\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      }),\r\n      replace: (to, state2, opts) => router.navigate(to, {\r\n        replace: true,\r\n        state: state2,\r\n        preventScrollReset: opts?.preventScrollReset\r\n      })\r\n    };\r\n  }, [router]);\r\n  let basename = router.basename || \"/\";\r\n  let dataRouterContext = React3.useMemo(\r\n    () => ({\r\n      router,\r\n      navigator: navigator2,\r\n      static: false,\r\n      basename\r\n    }),\r\n    [router, navigator2, basename]\r\n  );\r\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, /* @__PURE__ */ React3.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React3.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React3.createElement(FetchersContext.Provider, { value: fetcherData.current }, /* @__PURE__ */ React3.createElement(ViewTransitionContext.Provider, { value: vtContext }, /* @__PURE__ */ React3.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator: navigator2\r\n    },\r\n    /* @__PURE__ */ React3.createElement(\r\n      MemoizedDataRoutes,\r\n      {\r\n        routes: router.routes,\r\n        future: router.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), null);\r\n}\r\nvar MemoizedDataRoutes = React3.memo(DataRoutes);\r\nfunction DataRoutes({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction MemoryRouter({\r\n  basename,\r\n  children,\r\n  initialEntries,\r\n  initialIndex\r\n}) {\r\n  let historyRef = React3.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createMemoryHistory({\r\n      initialEntries,\r\n      initialIndex,\r\n      v5Compat: true\r\n    });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React3.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React3.useCallback(\r\n    (newState) => {\r\n      React3.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React3.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React3.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction Navigate({\r\n  to,\r\n  replace: replace2,\r\n  state,\r\n  relative\r\n}) {\r\n  invariant(\r\n    useInRouterContext(),\r\n    // TODO: This error is probably because they somehow have 2 versions of\r\n    // the router loaded. We can help them understand how to avoid that.\r\n    `<Navigate> may be used only in the context of a <Router> component.`\r\n  );\r\n  let { static: isStatic } = React3.useContext(NavigationContext);\r\n  warning(\r\n    !isStatic,\r\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. This is a no-op, but you should modify your code so the <Navigate> is only ever rendered in response to some user interaction or state change.`\r\n  );\r\n  let { matches } = React3.useContext(RouteContext);\r\n  let { pathname: locationPathname } = useLocation();\r\n  let navigate = useNavigate();\r\n  let path = resolveTo(\r\n    to,\r\n    getResolveToMatches(matches),\r\n    locationPathname,\r\n    relative === \"path\"\r\n  );\r\n  let jsonPath = JSON.stringify(path);\r\n  React3.useEffect(() => {\r\n    navigate(JSON.parse(jsonPath), { replace: replace2, state, relative });\r\n  }, [navigate, jsonPath, relative, replace2, state]);\r\n  return null;\r\n}\r\nfunction Outlet(props) {\r\n  return useOutlet(props.context);\r\n}\r\nfunction Route(_props) {\r\n  invariant(\r\n    false,\r\n    `A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.`\r\n  );\r\n}\r\nfunction Router({\r\n  basename: basenameProp = \"/\",\r\n  children = null,\r\n  location: locationProp,\r\n  navigationType = \"POP\" /* Pop */,\r\n  navigator: navigator2,\r\n  static: staticProp = false\r\n}) {\r\n  invariant(\r\n    !useInRouterContext(),\r\n    `You cannot render a <Router> inside another <Router>. You should never have more than one in your app.`\r\n  );\r\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\r\n  let navigationContext = React3.useMemo(\r\n    () => ({\r\n      basename,\r\n      navigator: navigator2,\r\n      static: staticProp,\r\n      future: {}\r\n    }),\r\n    [basename, navigator2, staticProp]\r\n  );\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let {\r\n    pathname = \"/\",\r\n    search = \"\",\r\n    hash = \"\",\r\n    state = null,\r\n    key = \"default\"\r\n  } = locationProp;\r\n  let locationContext = React3.useMemo(() => {\r\n    let trailingPathname = stripBasename(pathname, basename);\r\n    if (trailingPathname == null) {\r\n      return null;\r\n    }\r\n    return {\r\n      location: {\r\n        pathname: trailingPathname,\r\n        search,\r\n        hash,\r\n        state,\r\n        key\r\n      },\r\n      navigationType\r\n    };\r\n  }, [basename, pathname, search, hash, state, key, navigationType]);\r\n  warning(\r\n    locationContext != null,\r\n    `<Router basename=\"${basename}\"> is not able to match the URL \"${pathname}${search}${hash}\" because it does not start with the basename, so the <Router> won't render anything.`\r\n  );\r\n  if (locationContext == null) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ React3.createElement(NavigationContext.Provider, { value: navigationContext }, /* @__PURE__ */ React3.createElement(LocationContext.Provider, { children, value: locationContext }));\r\n}\r\nfunction Routes({\r\n  children,\r\n  location\r\n}) {\r\n  return useRoutes(createRoutesFromChildren(children), location);\r\n}\r\nfunction Await({\r\n  children,\r\n  errorElement,\r\n  resolve\r\n}) {\r\n  return /* @__PURE__ */ React3.createElement(AwaitErrorBoundary, { resolve, errorElement }, /* @__PURE__ */ React3.createElement(ResolveAwait, null, children));\r\n}\r\nvar AwaitErrorBoundary = class extends React3.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  componentDidCatch(error, errorInfo) {\r\n    console.error(\r\n      \"<Await> caught the following error during render\",\r\n      error,\r\n      errorInfo\r\n    );\r\n  }\r\n  render() {\r\n    let { children, errorElement, resolve } = this.props;\r\n    let promise = null;\r\n    let status = 0 /* pending */;\r\n    if (!(resolve instanceof Promise)) {\r\n      status = 1 /* success */;\r\n      promise = Promise.resolve();\r\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\r\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\r\n    } else if (this.state.error) {\r\n      status = 2 /* error */;\r\n      let renderError = this.state.error;\r\n      promise = Promise.reject().catch(() => {\r\n      });\r\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\r\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\r\n    } else if (resolve._tracked) {\r\n      promise = resolve;\r\n      status = \"_error\" in promise ? 2 /* error */ : \"_data\" in promise ? 1 /* success */ : 0 /* pending */;\r\n    } else {\r\n      status = 0 /* pending */;\r\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\r\n      promise = resolve.then(\r\n        (data2) => Object.defineProperty(resolve, \"_data\", { get: () => data2 }),\r\n        (error) => Object.defineProperty(resolve, \"_error\", { get: () => error })\r\n      );\r\n    }\r\n    if (status === 2 /* error */ && !errorElement) {\r\n      throw promise._error;\r\n    }\r\n    if (status === 2 /* error */) {\r\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children: errorElement });\r\n    }\r\n    if (status === 1 /* success */) {\r\n      return /* @__PURE__ */ React3.createElement(AwaitContext.Provider, { value: promise, children });\r\n    }\r\n    throw promise;\r\n  }\r\n};\r\nfunction ResolveAwait({\r\n  children\r\n}) {\r\n  let data2 = useAsyncValue();\r\n  let toRender = typeof children === \"function\" ? children(data2) : children;\r\n  return /* @__PURE__ */ React3.createElement(React3.Fragment, null, toRender);\r\n}\r\nfunction createRoutesFromChildren(children, parentPath = []) {\r\n  let routes = [];\r\n  React3.Children.forEach(children, (element, index) => {\r\n    if (!React3.isValidElement(element)) {\r\n      return;\r\n    }\r\n    let treePath = [...parentPath, index];\r\n    if (element.type === React3.Fragment) {\r\n      routes.push.apply(\r\n        routes,\r\n        createRoutesFromChildren(element.props.children, treePath)\r\n      );\r\n      return;\r\n    }\r\n    invariant(\r\n      element.type === Route,\r\n      `[${typeof element.type === \"string\" ? element.type : element.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\r\n    );\r\n    invariant(\r\n      !element.props.index || !element.props.children,\r\n      \"An index route cannot have child routes.\"\r\n    );\r\n    let route = {\r\n      id: element.props.id || treePath.join(\"-\"),\r\n      caseSensitive: element.props.caseSensitive,\r\n      element: element.props.element,\r\n      Component: element.props.Component,\r\n      index: element.props.index,\r\n      path: element.props.path,\r\n      loader: element.props.loader,\r\n      action: element.props.action,\r\n      hydrateFallbackElement: element.props.hydrateFallbackElement,\r\n      HydrateFallback: element.props.HydrateFallback,\r\n      errorElement: element.props.errorElement,\r\n      ErrorBoundary: element.props.ErrorBoundary,\r\n      hasErrorBoundary: element.props.hasErrorBoundary === true || element.props.ErrorBoundary != null || element.props.errorElement != null,\r\n      shouldRevalidate: element.props.shouldRevalidate,\r\n      handle: element.props.handle,\r\n      lazy: element.props.lazy\r\n    };\r\n    if (element.props.children) {\r\n      route.children = createRoutesFromChildren(\r\n        element.props.children,\r\n        treePath\r\n      );\r\n    }\r\n    routes.push(route);\r\n  });\r\n  return routes;\r\n}\r\nvar createRoutesFromElements = createRoutesFromChildren;\r\nfunction renderMatches(matches) {\r\n  return _renderMatches(matches);\r\n}\r\n\r\n// lib/dom/lib.tsx\r\nimport * as React10 from \"react\";\r\n\r\n// lib/dom/dom.ts\r\nvar defaultMethod = \"get\";\r\nvar defaultEncType = \"application/x-www-form-urlencoded\";\r\nfunction isHtmlElement(object) {\r\n  return object != null && typeof object.tagName === \"string\";\r\n}\r\nfunction isButtonElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\r\n}\r\nfunction isFormElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\r\n}\r\nfunction isInputElement(object) {\r\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\r\n}\r\nfunction isModifiedEvent(event) {\r\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\r\n}\r\nfunction shouldProcessLinkClick(event, target) {\r\n  return event.button === 0 && // Ignore everything but left clicks\r\n  (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\r\n  !isModifiedEvent(event);\r\n}\r\nfunction createSearchParams(init = \"\") {\r\n  return new URLSearchParams(\r\n    typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo2, key) => {\r\n      let value = init[key];\r\n      return memo2.concat(\r\n        Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\r\n      );\r\n    }, [])\r\n  );\r\n}\r\nfunction getSearchParamsForLocation(locationSearch, defaultSearchParams) {\r\n  let searchParams = createSearchParams(locationSearch);\r\n  if (defaultSearchParams) {\r\n    defaultSearchParams.forEach((_, key) => {\r\n      if (!searchParams.has(key)) {\r\n        defaultSearchParams.getAll(key).forEach((value) => {\r\n          searchParams.append(key, value);\r\n        });\r\n      }\r\n    });\r\n  }\r\n  return searchParams;\r\n}\r\nvar _formDataSupportsSubmitter = null;\r\nfunction isFormDataSubmitterSupported() {\r\n  if (_formDataSupportsSubmitter === null) {\r\n    try {\r\n      new FormData(\r\n        document.createElement(\"form\"),\r\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\r\n        0\r\n      );\r\n      _formDataSupportsSubmitter = false;\r\n    } catch (e) {\r\n      _formDataSupportsSubmitter = true;\r\n    }\r\n  }\r\n  return _formDataSupportsSubmitter;\r\n}\r\nvar supportedFormEncTypes = /* @__PURE__ */ new Set([\r\n  \"application/x-www-form-urlencoded\",\r\n  \"multipart/form-data\",\r\n  \"text/plain\"\r\n]);\r\nfunction getFormEncType(encType) {\r\n  if (encType != null && !supportedFormEncTypes.has(encType)) {\r\n    warning(\r\n      false,\r\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` and will default to \"${defaultEncType}\"`\r\n    );\r\n    return null;\r\n  }\r\n  return encType;\r\n}\r\nfunction getFormSubmissionInfo(target, basename) {\r\n  let method;\r\n  let action;\r\n  let encType;\r\n  let formData;\r\n  let body;\r\n  if (isFormElement(target)) {\r\n    let attr = target.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(target);\r\n  } else if (isButtonElement(target) || isInputElement(target) && (target.type === \"submit\" || target.type === \"image\")) {\r\n    let form = target.form;\r\n    if (form == null) {\r\n      throw new Error(\r\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\r\n      );\r\n    }\r\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\r\n    action = attr ? stripBasename(attr, basename) : null;\r\n    method = target.getAttribute(\"formmethod\") || form.getAttribute(\"method\") || defaultMethod;\r\n    encType = getFormEncType(target.getAttribute(\"formenctype\")) || getFormEncType(form.getAttribute(\"enctype\")) || defaultEncType;\r\n    formData = new FormData(form, target);\r\n    if (!isFormDataSubmitterSupported()) {\r\n      let { name, type, value } = target;\r\n      if (type === \"image\") {\r\n        let prefix = name ? `${name}.` : \"\";\r\n        formData.append(`${prefix}x`, \"0\");\r\n        formData.append(`${prefix}y`, \"0\");\r\n      } else if (name) {\r\n        formData.append(name, value);\r\n      }\r\n    }\r\n  } else if (isHtmlElement(target)) {\r\n    throw new Error(\r\n      `Cannot submit element that is not <form>, <button>, or <input type=\"submit|image\">`\r\n    );\r\n  } else {\r\n    method = defaultMethod;\r\n    action = null;\r\n    encType = defaultEncType;\r\n    body = target;\r\n  }\r\n  if (formData && encType === \"text/plain\") {\r\n    body = formData;\r\n    formData = void 0;\r\n  }\r\n  return { action, method: method.toLowerCase(), encType, formData, body };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nimport * as React9 from \"react\";\r\n\r\n// lib/dom/ssr/invariant.ts\r\nfunction invariant2(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/routeModules.ts\r\nasync function loadRouteModule(route, routeModulesCache) {\r\n  if (route.id in routeModulesCache) {\r\n    return routeModulesCache[route.id];\r\n  }\r\n  try {\r\n    let routeModule = await import(\r\n      /* @vite-ignore */\r\n      /* webpackIgnore: true */\r\n      route.module\r\n    );\r\n    routeModulesCache[route.id] = routeModule;\r\n    return routeModule;\r\n  } catch (error) {\r\n    console.error(\r\n      `Error loading route module \\`${route.module}\\`, reloading page...`\r\n    );\r\n    console.error(error);\r\n    if (window.__reactRouterContext && window.__reactRouterContext.isSpaMode && // @ts-expect-error\r\n    import.meta.hot) {\r\n      throw error;\r\n    }\r\n    window.location.reload();\r\n    return new Promise(() => {\r\n    });\r\n  }\r\n}\r\n\r\n// lib/dom/ssr/links.ts\r\nfunction getKeyedLinksForMatches(matches, routeModules, manifest) {\r\n  let descriptors = matches.map((match) => {\r\n    let module = routeModules[match.route.id];\r\n    let route = manifest.routes[match.route.id];\r\n    return [\r\n      route && route.css ? route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 })) : [],\r\n      module?.links?.() || []\r\n    ];\r\n  }).flat(2);\r\n  let preloads = getModuleLinkHrefs(matches, manifest);\r\n  return dedupeLinkDescriptors(descriptors, preloads);\r\n}\r\nfunction getRouteCssDescriptors(route) {\r\n  if (!route.css) return [];\r\n  return route.css.map((href2) => ({ rel: \"stylesheet\", href: href2 }));\r\n}\r\nasync function prefetchRouteCss(route) {\r\n  if (!route.css) return;\r\n  let descriptors = getRouteCssDescriptors(route);\r\n  await Promise.all(descriptors.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLinks(route, routeModule) {\r\n  if (!route.css && !routeModule.links || !isPreloadSupported()) return;\r\n  let descriptors = [];\r\n  if (route.css) {\r\n    descriptors.push(...getRouteCssDescriptors(route));\r\n  }\r\n  if (routeModule.links) {\r\n    descriptors.push(...routeModule.links());\r\n  }\r\n  if (descriptors.length === 0) return;\r\n  let styleLinks = [];\r\n  for (let descriptor of descriptors) {\r\n    if (!isPageLinkDescriptor(descriptor) && descriptor.rel === \"stylesheet\") {\r\n      styleLinks.push({\r\n        ...descriptor,\r\n        rel: \"preload\",\r\n        as: \"style\"\r\n      });\r\n    }\r\n  }\r\n  await Promise.all(styleLinks.map(prefetchStyleLink));\r\n}\r\nasync function prefetchStyleLink(descriptor) {\r\n  return new Promise((resolve) => {\r\n    if (descriptor.media && !window.matchMedia(descriptor.media).matches || document.querySelector(\r\n      `link[rel=\"stylesheet\"][href=\"${descriptor.href}\"]`\r\n    )) {\r\n      return resolve();\r\n    }\r\n    let link = document.createElement(\"link\");\r\n    Object.assign(link, descriptor);\r\n    function removeLink() {\r\n      if (document.head.contains(link)) {\r\n        document.head.removeChild(link);\r\n      }\r\n    }\r\n    link.onload = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    link.onerror = () => {\r\n      removeLink();\r\n      resolve();\r\n    };\r\n    document.head.appendChild(link);\r\n  });\r\n}\r\nfunction isPageLinkDescriptor(object) {\r\n  return object != null && typeof object.page === \"string\";\r\n}\r\nfunction isHtmlLinkDescriptor(object) {\r\n  if (object == null) {\r\n    return false;\r\n  }\r\n  if (object.href == null) {\r\n    return object.rel === \"preload\" && typeof object.imageSrcSet === \"string\" && typeof object.imageSizes === \"string\";\r\n  }\r\n  return typeof object.rel === \"string\" && typeof object.href === \"string\";\r\n}\r\nasync function getKeyedPrefetchLinks(matches, manifest, routeModules) {\r\n  let links = await Promise.all(\r\n    matches.map(async (match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (route) {\r\n        let mod = await loadRouteModule(route, routeModules);\r\n        return mod.links ? mod.links() : [];\r\n      }\r\n      return [];\r\n    })\r\n  );\r\n  return dedupeLinkDescriptors(\r\n    links.flat(1).filter(isHtmlLinkDescriptor).filter((link) => link.rel === \"stylesheet\" || link.rel === \"preload\").map(\r\n      (link) => link.rel === \"stylesheet\" ? { ...link, rel: \"prefetch\", as: \"style\" } : { ...link, rel: \"prefetch\" }\r\n    )\r\n  );\r\n}\r\nfunction getNewMatchesForLinks(page, nextMatches, currentMatches, manifest, location, mode) {\r\n  let isNew = (match, index) => {\r\n    if (!currentMatches[index]) return true;\r\n    return match.route.id !== currentMatches[index].route.id;\r\n  };\r\n  let matchPathChanged = (match, index) => {\r\n    return (\r\n      // param change, /users/123 -> /users/456\r\n      currentMatches[index].pathname !== match.pathname || // splat param changed, which is not present in match.path\r\n      // e.g. /files/images/avatar.jpg -> files/finances.xls\r\n      currentMatches[index].route.path?.endsWith(\"*\") && currentMatches[index].params[\"*\"] !== match.params[\"*\"]\r\n    );\r\n  };\r\n  if (mode === \"assets\") {\r\n    return nextMatches.filter(\r\n      (match, index) => isNew(match, index) || matchPathChanged(match, index)\r\n    );\r\n  }\r\n  if (mode === \"data\") {\r\n    return nextMatches.filter((match, index) => {\r\n      let manifestRoute = manifest.routes[match.route.id];\r\n      if (!manifestRoute || !manifestRoute.hasLoader) {\r\n        return false;\r\n      }\r\n      if (isNew(match, index) || matchPathChanged(match, index)) {\r\n        return true;\r\n      }\r\n      if (match.route.shouldRevalidate) {\r\n        let routeChoice = match.route.shouldRevalidate({\r\n          currentUrl: new URL(\r\n            location.pathname + location.search + location.hash,\r\n            window.origin\r\n          ),\r\n          currentParams: currentMatches[0]?.params || {},\r\n          nextUrl: new URL(page, window.origin),\r\n          nextParams: match.params,\r\n          defaultShouldRevalidate: true\r\n        });\r\n        if (typeof routeChoice === \"boolean\") {\r\n          return routeChoice;\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n  return [];\r\n}\r\nfunction getModuleLinkHrefs(matches, manifest, { includeHydrateFallback } = {}) {\r\n  return dedupeHrefs(\r\n    matches.map((match) => {\r\n      let route = manifest.routes[match.route.id];\r\n      if (!route) return [];\r\n      let hrefs = [route.module];\r\n      if (route.clientActionModule) {\r\n        hrefs = hrefs.concat(route.clientActionModule);\r\n      }\r\n      if (route.clientLoaderModule) {\r\n        hrefs = hrefs.concat(route.clientLoaderModule);\r\n      }\r\n      if (includeHydrateFallback && route.hydrateFallbackModule) {\r\n        hrefs = hrefs.concat(route.hydrateFallbackModule);\r\n      }\r\n      if (route.imports) {\r\n        hrefs = hrefs.concat(route.imports);\r\n      }\r\n      return hrefs;\r\n    }).flat(1)\r\n  );\r\n}\r\nfunction dedupeHrefs(hrefs) {\r\n  return [...new Set(hrefs)];\r\n}\r\nfunction sortKeys(obj) {\r\n  let sorted = {};\r\n  let keys = Object.keys(obj).sort();\r\n  for (let key of keys) {\r\n    sorted[key] = obj[key];\r\n  }\r\n  return sorted;\r\n}\r\nfunction dedupeLinkDescriptors(descriptors, preloads) {\r\n  let set = /* @__PURE__ */ new Set();\r\n  let preloadsSet = new Set(preloads);\r\n  return descriptors.reduce((deduped, descriptor) => {\r\n    let alreadyModulePreload = preloads && !isPageLinkDescriptor(descriptor) && descriptor.as === \"script\" && descriptor.href && preloadsSet.has(descriptor.href);\r\n    if (alreadyModulePreload) {\r\n      return deduped;\r\n    }\r\n    let key = JSON.stringify(sortKeys(descriptor));\r\n    if (!set.has(key)) {\r\n      set.add(key);\r\n      deduped.push({ key, link: descriptor });\r\n    }\r\n    return deduped;\r\n  }, []);\r\n}\r\nvar _isPreloadSupported;\r\nfunction isPreloadSupported() {\r\n  if (_isPreloadSupported !== void 0) {\r\n    return _isPreloadSupported;\r\n  }\r\n  let el = document.createElement(\"link\");\r\n  _isPreloadSupported = el.relList.supports(\"preload\");\r\n  el = null;\r\n  return _isPreloadSupported;\r\n}\r\n\r\n// lib/dom/ssr/markup.ts\r\nvar ESCAPE_LOOKUP = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX = /[&><\\u2028\\u2029]/g;\r\nfunction escapeHtml(html) {\r\n  return html.replace(ESCAPE_REGEX, (match) => ESCAPE_LOOKUP[match]);\r\n}\r\nfunction createHtml(html) {\r\n  return { __html: html };\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nimport * as React4 from \"react\";\r\nimport { decode } from \"turbo-stream\";\r\n\r\n// lib/dom/ssr/data.ts\r\nasync function createRequestInit(request) {\r\n  let init = { signal: request.signal };\r\n  if (request.method !== \"GET\") {\r\n    init.method = request.method;\r\n    let contentType = request.headers.get(\"Content-Type\");\r\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = JSON.stringify(await request.json());\r\n    } else if (contentType && /\\btext\\/plain\\b/.test(contentType)) {\r\n      init.headers = { \"Content-Type\": contentType };\r\n      init.body = await request.text();\r\n    } else if (contentType && /\\bapplication\\/x-www-form-urlencoded\\b/.test(contentType)) {\r\n      init.body = new URLSearchParams(await request.text());\r\n    } else {\r\n      init.body = await request.formData();\r\n    }\r\n  }\r\n  return init;\r\n}\r\n\r\n// lib/dom/ssr/single-fetch.tsx\r\nvar SingleFetchRedirectSymbol = Symbol(\"SingleFetchRedirect\");\r\nfunction StreamTransfer({\r\n  context,\r\n  identifier,\r\n  reader,\r\n  textDecoder,\r\n  nonce\r\n}) {\r\n  if (!context.renderMeta || !context.renderMeta.didRenderScripts) {\r\n    return null;\r\n  }\r\n  if (!context.renderMeta.streamCache) {\r\n    context.renderMeta.streamCache = {};\r\n  }\r\n  let { streamCache } = context.renderMeta;\r\n  let promise = streamCache[identifier];\r\n  if (!promise) {\r\n    promise = streamCache[identifier] = reader.read().then((result) => {\r\n      streamCache[identifier].result = {\r\n        done: result.done,\r\n        value: textDecoder.decode(result.value, { stream: true })\r\n      };\r\n    }).catch((e) => {\r\n      streamCache[identifier].error = e;\r\n    });\r\n  }\r\n  if (promise.error) {\r\n    throw promise.error;\r\n  }\r\n  if (promise.result === void 0) {\r\n    throw promise;\r\n  }\r\n  let { done, value } = promise.result;\r\n  let scriptTag = value ? /* @__PURE__ */ React4.createElement(\r\n    \"script\",\r\n    {\r\n      nonce,\r\n      dangerouslySetInnerHTML: {\r\n        __html: `window.__reactRouterContext.streamController.enqueue(${escapeHtml(\r\n          JSON.stringify(value)\r\n        )});`\r\n      }\r\n    }\r\n  ) : null;\r\n  if (done) {\r\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(\r\n      \"script\",\r\n      {\r\n        nonce,\r\n        dangerouslySetInnerHTML: {\r\n          __html: `window.__reactRouterContext.streamController.close();`\r\n        }\r\n      }\r\n    ));\r\n  } else {\r\n    return /* @__PURE__ */ React4.createElement(React4.Fragment, null, scriptTag, /* @__PURE__ */ React4.createElement(React4.Suspense, null, /* @__PURE__ */ React4.createElement(\r\n      StreamTransfer,\r\n      {\r\n        context,\r\n        identifier: identifier + 1,\r\n        reader,\r\n        textDecoder,\r\n        nonce\r\n      }\r\n    )));\r\n  }\r\n}\r\nfunction getSingleFetchDataStrategy(manifest, routeModules, ssr, basename, getRouter) {\r\n  return async (args) => {\r\n    let { request, matches, fetcherKey } = args;\r\n    if (request.method !== \"GET\") {\r\n      return runMiddlewarePipeline(\r\n        args,\r\n        false,\r\n        () => singleFetchActionStrategy(request, matches, basename),\r\n        (e) => ({ [e.routeId]: { type: \"error\", result: e.error } })\r\n      );\r\n    }\r\n    if (!ssr) {\r\n      let foundRevalidatingServerLoader = matches.some(\r\n        (m) => m.shouldLoad && manifest.routes[m.route.id]?.hasLoader && !manifest.routes[m.route.id]?.hasClientLoader\r\n      );\r\n      if (!foundRevalidatingServerLoader) {\r\n        return runMiddlewarePipeline(\r\n          args,\r\n          false,\r\n          () => nonSsrStrategy(manifest, request, matches, basename),\r\n          (e) => ({ [e.routeId]: { type: \"error\", result: e.error } })\r\n        );\r\n      }\r\n    }\r\n    if (fetcherKey) {\r\n      return runMiddlewarePipeline(\r\n        args,\r\n        false,\r\n        () => singleFetchLoaderFetcherStrategy(request, matches, basename),\r\n        (e) => ({ [e.routeId]: { type: \"error\", result: e.error } })\r\n      );\r\n    }\r\n    return runMiddlewarePipeline(\r\n      args,\r\n      false,\r\n      () => singleFetchLoaderNavigationStrategy(\r\n        manifest,\r\n        routeModules,\r\n        ssr,\r\n        getRouter(),\r\n        request,\r\n        matches,\r\n        basename\r\n      ),\r\n      (e) => ({ [e.routeId]: { type: \"error\", result: e.error } })\r\n    );\r\n  };\r\n}\r\nasync function singleFetchActionStrategy(request, matches, basename) {\r\n  let actionMatch = matches.find((m) => m.shouldLoad);\r\n  invariant2(actionMatch, \"No action match found\");\r\n  let actionStatus = void 0;\r\n  let result = await actionMatch.resolve(async (handler) => {\r\n    let result2 = await handler(async () => {\r\n      let url = singleFetchUrl(request.url, basename);\r\n      let init = await createRequestInit(request);\r\n      let { data: data2, status } = await fetchAndDecode(url, init);\r\n      actionStatus = status;\r\n      return unwrapSingleFetchResult(\r\n        data2,\r\n        actionMatch.route.id\r\n      );\r\n    });\r\n    return result2;\r\n  });\r\n  if (isResponse(result.result) || isRouteErrorResponse(result.result)) {\r\n    return { [actionMatch.route.id]: result };\r\n  }\r\n  return {\r\n    [actionMatch.route.id]: {\r\n      type: result.type,\r\n      result: data(result.result, actionStatus)\r\n    }\r\n  };\r\n}\r\nasync function nonSsrStrategy(manifest, request, matches, basename) {\r\n  let matchesToLoad = matches.filter((m) => m.shouldLoad);\r\n  let url = stripIndexParam(singleFetchUrl(request.url, basename));\r\n  let init = await createRequestInit(request);\r\n  let results = {};\r\n  await Promise.all(\r\n    matchesToLoad.map(\r\n      (m) => m.resolve(async (handler) => {\r\n        try {\r\n          let result = manifest.routes[m.route.id]?.hasClientLoader ? await fetchSingleLoader(handler, url, init, m.route.id) : await handler();\r\n          results[m.route.id] = { type: \"data\", result };\r\n        } catch (e) {\r\n          results[m.route.id] = { type: \"error\", result: e };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  return results;\r\n}\r\nfunction isOptedOut(manifestRoute, routeModule, match, router) {\r\n  return match.route.id in router.state.loaderData && manifestRoute && manifestRoute.hasLoader && routeModule && routeModule.shouldRevalidate;\r\n}\r\nasync function singleFetchLoaderNavigationStrategy(manifest, routeModules, ssr, router, request, matches, basename) {\r\n  let routesParams = /* @__PURE__ */ new Set();\r\n  let foundOptOutRoute = false;\r\n  let routeDfds = matches.map(() => createDeferred2());\r\n  let routesLoadedPromise = Promise.all(routeDfds.map((d) => d.promise));\r\n  let singleFetchDfd = createDeferred2();\r\n  let url = stripIndexParam(singleFetchUrl(request.url, basename));\r\n  let init = await createRequestInit(request);\r\n  let results = {};\r\n  let resolvePromise = Promise.all(\r\n    matches.map(\r\n      async (m, i) => m.resolve(async (handler) => {\r\n        routeDfds[i].resolve();\r\n        let manifestRoute = manifest.routes[m.route.id];\r\n        if (!m.shouldLoad) {\r\n          if (!router.state.initialized) {\r\n            return;\r\n          }\r\n          if (isOptedOut(manifestRoute, routeModules[m.route.id], m, router)) {\r\n            foundOptOutRoute = true;\r\n            return;\r\n          }\r\n        }\r\n        if (manifestRoute && manifestRoute.hasClientLoader) {\r\n          if (manifestRoute.hasLoader) {\r\n            foundOptOutRoute = true;\r\n          }\r\n          try {\r\n            let result = await fetchSingleLoader(\r\n              handler,\r\n              url,\r\n              init,\r\n              m.route.id\r\n            );\r\n            results[m.route.id] = { type: \"data\", result };\r\n          } catch (e) {\r\n            results[m.route.id] = { type: \"error\", result: e };\r\n          }\r\n          return;\r\n        }\r\n        if (manifestRoute && manifestRoute.hasLoader) {\r\n          routesParams.add(m.route.id);\r\n        }\r\n        try {\r\n          let result = await handler(async () => {\r\n            let data2 = await singleFetchDfd.promise;\r\n            return unwrapSingleFetchResults(data2, m.route.id);\r\n          });\r\n          results[m.route.id] = {\r\n            type: \"data\",\r\n            result\r\n          };\r\n        } catch (e) {\r\n          results[m.route.id] = {\r\n            type: \"error\",\r\n            result: e\r\n          };\r\n        }\r\n      })\r\n    )\r\n  );\r\n  await routesLoadedPromise;\r\n  if ((!router.state.initialized || routesParams.size === 0) && !window.__reactRouterHdrActive) {\r\n    singleFetchDfd.resolve({});\r\n  } else {\r\n    try {\r\n      if (ssr && foundOptOutRoute && routesParams.size > 0) {\r\n        url.searchParams.set(\r\n          \"_routes\",\r\n          matches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\r\n        );\r\n      }\r\n      let data2 = await fetchAndDecode(url, init);\r\n      singleFetchDfd.resolve(data2.data);\r\n    } catch (e) {\r\n      singleFetchDfd.reject(e);\r\n    }\r\n  }\r\n  await resolvePromise;\r\n  return results;\r\n}\r\nasync function singleFetchLoaderFetcherStrategy(request, matches, basename) {\r\n  let fetcherMatch = matches.find((m) => m.shouldLoad);\r\n  invariant2(fetcherMatch, \"No fetcher match found\");\r\n  let result = await fetcherMatch.resolve(async (handler) => {\r\n    let url = stripIndexParam(singleFetchUrl(request.url, basename));\r\n    let init = await createRequestInit(request);\r\n    return fetchSingleLoader(handler, url, init, fetcherMatch.route.id);\r\n  });\r\n  return { [fetcherMatch.route.id]: result };\r\n}\r\nfunction fetchSingleLoader(handler, url, init, routeId) {\r\n  return handler(async () => {\r\n    let singleLoaderUrl = new URL(url);\r\n    singleLoaderUrl.searchParams.set(\"_routes\", routeId);\r\n    let { data: data2 } = await fetchAndDecode(singleLoaderUrl, init);\r\n    return unwrapSingleFetchResults(data2, routeId);\r\n  });\r\n}\r\nfunction stripIndexParam(url) {\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  return url;\r\n}\r\nfunction singleFetchUrl(reqUrl, basename) {\r\n  let url = typeof reqUrl === \"string\" ? new URL(\r\n    reqUrl,\r\n    // This can be called during the SSR flow via PrefetchPageLinksImpl so\r\n    // don't assume window is available\r\n    typeof window === \"undefined\" ? \"server://singlefetch/\" : window.location.origin\r\n  ) : reqUrl;\r\n  if (url.pathname === \"/\") {\r\n    url.pathname = \"_root.data\";\r\n  } else if (basename && stripBasename(url.pathname, basename) === \"/\") {\r\n    url.pathname = `${basename.replace(/\\/$/, \"\")}/_root.data`;\r\n  } else {\r\n    url.pathname = `${url.pathname.replace(/\\/$/, \"\")}.data`;\r\n  }\r\n  return url;\r\n}\r\nasync function fetchAndDecode(url, init) {\r\n  let res = await fetch(url, init);\r\n  if (res.status === 404 && !res.headers.has(\"X-Remix-Response\")) {\r\n    throw new ErrorResponseImpl(404, \"Not Found\", true);\r\n  }\r\n  const NO_BODY_STATUS_CODES2 = /* @__PURE__ */ new Set([100, 101, 204, 205]);\r\n  if (NO_BODY_STATUS_CODES2.has(res.status)) {\r\n    if (!init.method || init.method === \"GET\") {\r\n      return { status: res.status, data: {} };\r\n    } else {\r\n      return { status: res.status, data: { data: void 0 } };\r\n    }\r\n  }\r\n  invariant2(res.body, \"No response body to decode\");\r\n  try {\r\n    let decoded = await decodeViaTurboStream(res.body, window);\r\n    return { status: res.status, data: decoded.value };\r\n  } catch (e) {\r\n    throw new Error(\"Unable to decode turbo-stream response\");\r\n  }\r\n}\r\nfunction decodeViaTurboStream(body, global2) {\r\n  return decode(body, {\r\n    plugins: [\r\n      (type, ...rest) => {\r\n        if (type === \"SanitizedError\") {\r\n          let [name, message, stack] = rest;\r\n          let Constructor = Error;\r\n          if (name && name in global2 && typeof global2[name] === \"function\") {\r\n            Constructor = global2[name];\r\n          }\r\n          let error = new Constructor(message);\r\n          error.stack = stack;\r\n          return { value: error };\r\n        }\r\n        if (type === \"ErrorResponse\") {\r\n          let [data2, status, statusText] = rest;\r\n          return {\r\n            value: new ErrorResponseImpl(status, statusText, data2)\r\n          };\r\n        }\r\n        if (type === \"SingleFetchRedirect\") {\r\n          return { value: { [SingleFetchRedirectSymbol]: rest[0] } };\r\n        }\r\n        if (type === \"SingleFetchClassInstance\") {\r\n          return { value: rest[0] };\r\n        }\r\n        if (type === \"SingleFetchFallback\") {\r\n          return { value: void 0 };\r\n        }\r\n      }\r\n    ]\r\n  });\r\n}\r\nfunction unwrapSingleFetchResults(results, routeId) {\r\n  let redirect2 = results[SingleFetchRedirectSymbol];\r\n  if (redirect2) {\r\n    return unwrapSingleFetchResult(redirect2, routeId);\r\n  }\r\n  return results[routeId] !== void 0 ? unwrapSingleFetchResult(results[routeId], routeId) : null;\r\n}\r\nfunction unwrapSingleFetchResult(result, routeId) {\r\n  if (\"error\" in result) {\r\n    throw result.error;\r\n  } else if (\"redirect\" in result) {\r\n    let headers = {};\r\n    if (result.revalidate) {\r\n      headers[\"X-Remix-Revalidate\"] = \"yes\";\r\n    }\r\n    if (result.reload) {\r\n      headers[\"X-Remix-Reload-Document\"] = \"yes\";\r\n    }\r\n    if (result.replace) {\r\n      headers[\"X-Remix-Replace\"] = \"yes\";\r\n    }\r\n    throw redirect(result.redirect, { status: result.status, headers });\r\n  } else if (\"data\" in result) {\r\n    return result.data;\r\n  } else {\r\n    throw new Error(`No response found for routeId \"${routeId}\"`);\r\n  }\r\n}\r\nfunction createDeferred2() {\r\n  let resolve;\r\n  let reject;\r\n  let promise = new Promise((res, rej) => {\r\n    resolve = async (val) => {\r\n      res(val);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n    reject = async (error) => {\r\n      rej(error);\r\n      try {\r\n        await promise;\r\n      } catch (e) {\r\n      }\r\n    };\r\n  });\r\n  return {\r\n    promise,\r\n    //@ts-ignore\r\n    resolve,\r\n    //@ts-ignore\r\n    reject\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nimport * as React8 from \"react\";\r\n\r\n// lib/dom/ssr/routes.tsx\r\nimport * as React7 from \"react\";\r\n\r\n// lib/dom/ssr/errorBoundaries.tsx\r\nimport * as React5 from \"react\";\r\nvar RemixErrorBoundary = class extends React5.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: props.error || null, location: props.location };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { error };\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (state.location !== props.location) {\r\n      return { error: props.error || null, location: props.location };\r\n    }\r\n    return { error: props.error || state.error, location: state.location };\r\n  }\r\n  render() {\r\n    if (this.state.error) {\r\n      return /* @__PURE__ */ React5.createElement(\r\n        RemixRootDefaultErrorBoundary,\r\n        {\r\n          error: this.state.error,\r\n          isOutsideRemixApp: true\r\n        }\r\n      );\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n};\r\nfunction RemixRootDefaultErrorBoundary({\r\n  error,\r\n  isOutsideRemixApp\r\n}) {\r\n  console.error(error);\r\n  let heyDeveloper = /* @__PURE__ */ React5.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n        console.log(\r\n          \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this when your app throws errors. Check out https://remix.run/guides/errors for more information.\"\r\n        );\r\n      `\r\n      }\r\n    }\r\n  );\r\n  if (isRouteErrorResponse(error)) {\r\n    return /* @__PURE__ */ React5.createElement(BoundaryShell, { title: \"Unhandled Thrown Response!\" }, /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, error.status, \" \", error.statusText), heyDeveloper);\r\n  }\r\n  let errorInstance;\r\n  if (error instanceof Error) {\r\n    errorInstance = error;\r\n  } else {\r\n    let errorString = error == null ? \"Unknown Error\" : typeof error === \"object\" && \"toString\" in error ? error.toString() : JSON.stringify(error);\r\n    errorInstance = new Error(errorString);\r\n  }\r\n  return /* @__PURE__ */ React5.createElement(\r\n    BoundaryShell,\r\n    {\r\n      title: \"Application Error!\",\r\n      isOutsideRemixApp\r\n    },\r\n    /* @__PURE__ */ React5.createElement(\"h1\", { style: { fontSize: \"24px\" } }, \"Application Error\"),\r\n    /* @__PURE__ */ React5.createElement(\r\n      \"pre\",\r\n      {\r\n        style: {\r\n          padding: \"2rem\",\r\n          background: \"hsla(10, 50%, 50%, 0.1)\",\r\n          color: \"red\",\r\n          overflow: \"auto\"\r\n        }\r\n      },\r\n      errorInstance.stack\r\n    ),\r\n    heyDeveloper\r\n  );\r\n}\r\nfunction BoundaryShell({\r\n  title,\r\n  renderScripts,\r\n  isOutsideRemixApp,\r\n  children\r\n}) {\r\n  let { routeModules } = useFrameworkContext();\r\n  if (routeModules.root?.Layout && !isOutsideRemixApp) {\r\n    return children;\r\n  }\r\n  return /* @__PURE__ */ React5.createElement(\"html\", { lang: \"en\" }, /* @__PURE__ */ React5.createElement(\"head\", null, /* @__PURE__ */ React5.createElement(\"meta\", { charSet: \"utf-8\" }), /* @__PURE__ */ React5.createElement(\r\n    \"meta\",\r\n    {\r\n      name: \"viewport\",\r\n      content: \"width=device-width,initial-scale=1,viewport-fit=cover\"\r\n    }\r\n  ), /* @__PURE__ */ React5.createElement(\"title\", null, title)), /* @__PURE__ */ React5.createElement(\"body\", null, /* @__PURE__ */ React5.createElement(\"main\", { style: { fontFamily: \"system-ui, sans-serif\", padding: \"2rem\" } }, children, renderScripts ? /* @__PURE__ */ React5.createElement(Scripts, null) : null)));\r\n}\r\n\r\n// lib/dom/ssr/fallback.tsx\r\nimport * as React6 from \"react\";\r\nfunction RemixRootDefaultHydrateFallback() {\r\n  return /* @__PURE__ */ React6.createElement(BoundaryShell, { title: \"Loading...\", renderScripts: true }, /* @__PURE__ */ React6.createElement(\r\n    \"script\",\r\n    {\r\n      dangerouslySetInnerHTML: {\r\n        __html: `\r\n              console.log(\r\n                \"\\u{1F4BF} Hey developer \\u{1F44B}. You can provide a way better UX than this \" +\r\n                \"when your app is loading JS modules and/or running \\`clientLoader\\` \" +\r\n                \"functions. Check out https://remix.run/route/hydrate-fallback \" +\r\n                \"for more information.\"\r\n              );\r\n            `\r\n      }\r\n    }\r\n  ));\r\n}\r\n\r\n// lib/dom/ssr/routes.tsx\r\nfunction groupRoutesByParentId(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction getRouteComponents(route, routeModule, isSpaMode) {\r\n  let Component4 = getRouteModuleComponent(routeModule);\r\n  let HydrateFallback = routeModule.HydrateFallback && (!isSpaMode || route.id === \"root\") ? routeModule.HydrateFallback : route.id === \"root\" ? RemixRootDefaultHydrateFallback : void 0;\r\n  let ErrorBoundary = routeModule.ErrorBoundary ? routeModule.ErrorBoundary : route.id === \"root\" ? () => /* @__PURE__ */ React7.createElement(RemixRootDefaultErrorBoundary, { error: useRouteError() }) : void 0;\r\n  if (route.id === \"root\" && routeModule.Layout) {\r\n    return {\r\n      ...Component4 ? {\r\n        element: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(Component4, null))\r\n      } : { Component: Component4 },\r\n      ...ErrorBoundary ? {\r\n        errorElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(ErrorBoundary, null))\r\n      } : { ErrorBoundary },\r\n      ...HydrateFallback ? {\r\n        hydrateFallbackElement: /* @__PURE__ */ React7.createElement(routeModule.Layout, null, /* @__PURE__ */ React7.createElement(HydrateFallback, null))\r\n      } : { HydrateFallback }\r\n    };\r\n  }\r\n  return { Component: Component4, ErrorBoundary, HydrateFallback };\r\n}\r\nfunction createServerRoutes(manifest, routeModules, future, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), spaModeLazyPromise = Promise.resolve({ Component: () => null })) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModules[route.id];\r\n    invariant2(\r\n      routeModule,\r\n      \"No `routeModule` available to create server routes\"\r\n    );\r\n    let dataRoute = {\r\n      ...getRouteComponents(route, routeModule, isSpaMode),\r\n      caseSensitive: route.caseSensitive,\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path,\r\n      handle: routeModule.handle,\r\n      // For SPA Mode, all routes are lazy except root.  However we tell the\r\n      // router root is also lazy here too since we don't need a full\r\n      // implementation - we just need a `lazy` prop to tell the RR rendering\r\n      // where to stop which is always at the root route in SPA mode\r\n      lazy: isSpaMode ? () => spaModeLazyPromise : void 0,\r\n      // For partial hydration rendering, we need to indicate when the route\r\n      // has a loader/clientLoader, but it won't ever be called during the static\r\n      // render, so just give it a no-op function so we can render down to the\r\n      // proper fallback\r\n      loader: route.hasLoader || route.hasClientLoader ? () => null : void 0\r\n      // We don't need middleware/action/shouldRevalidate on these routes since\r\n      // they're for a static render\r\n    };\r\n    let children = createServerRoutes(\r\n      manifest,\r\n      routeModules,\r\n      future,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      spaModeLazyPromise\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction createClientRoutesWithHMRRevalidationOptOut(needsRevalidation, manifest, routeModulesCache, initialState, ssr, isSpaMode) {\r\n  return createClientRoutes(\r\n    manifest,\r\n    routeModulesCache,\r\n    initialState,\r\n    ssr,\r\n    isSpaMode,\r\n    \"\",\r\n    groupRoutesByParentId(manifest),\r\n    needsRevalidation\r\n  );\r\n}\r\nfunction preventInvalidServerHandlerCall(type, route) {\r\n  if (type === \"loader\" && !route.hasLoader || type === \"action\" && !route.hasAction) {\r\n    let fn = type === \"action\" ? \"serverAction()\" : \"serverLoader()\";\r\n    let msg = `You are trying to call ${fn} on a route that does not have a server ${type} (routeId: \"${route.id}\")`;\r\n    console.error(msg);\r\n    throw new ErrorResponseImpl(400, \"Bad Request\", new Error(msg), true);\r\n  }\r\n}\r\nfunction noActionDefinedError(type, routeId) {\r\n  let article = type === \"clientAction\" ? \"a\" : \"an\";\r\n  let msg = `Route \"${routeId}\" does not have ${article} ${type}, but you are trying to submit to it. To fix this, please add ${article} \\`${type}\\` function to the route`;\r\n  console.error(msg);\r\n  throw new ErrorResponseImpl(405, \"Method Not Allowed\", new Error(msg), true);\r\n}\r\nfunction createClientRoutes(manifest, routeModulesCache, initialState, ssr, isSpaMode, parentId = \"\", routesByParentId = groupRoutesByParentId(manifest), needsRevalidation) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let routeModule = routeModulesCache[route.id];\r\n    function fetchServerHandler(singleFetch) {\r\n      invariant2(\r\n        typeof singleFetch === \"function\",\r\n        \"No single fetch function available for route handler\"\r\n      );\r\n      return singleFetch();\r\n    }\r\n    function fetchServerLoader(singleFetch) {\r\n      if (!route.hasLoader) return Promise.resolve(null);\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function fetchServerAction(singleFetch) {\r\n      if (!route.hasAction) {\r\n        throw noActionDefinedError(\"action\", route.id);\r\n      }\r\n      return fetchServerHandler(singleFetch);\r\n    }\r\n    function prefetchModule(modulePath) {\r\n      import(\r\n        /* @vite-ignore */\r\n        /* webpackIgnore: true */\r\n        modulePath\r\n      );\r\n    }\r\n    function prefetchRouteModuleChunks(route2) {\r\n      if (route2.clientActionModule) {\r\n        prefetchModule(route2.clientActionModule);\r\n      }\r\n      if (route2.clientLoaderModule) {\r\n        prefetchModule(route2.clientLoaderModule);\r\n      }\r\n    }\r\n    async function prefetchStylesAndCallHandler(handler) {\r\n      let cachedModule = routeModulesCache[route.id];\r\n      let linkPrefetchPromise = cachedModule ? prefetchStyleLinks(route, cachedModule) : Promise.resolve();\r\n      try {\r\n        return handler();\r\n      } finally {\r\n        await linkPrefetchPromise;\r\n      }\r\n    }\r\n    let dataRoute = {\r\n      id: route.id,\r\n      index: route.index,\r\n      path: route.path\r\n    };\r\n    if (routeModule) {\r\n      Object.assign(dataRoute, {\r\n        ...dataRoute,\r\n        ...getRouteComponents(route, routeModule, isSpaMode),\r\n        unstable_middleware: routeModule.unstable_clientMiddleware,\r\n        handle: routeModule.handle,\r\n        shouldRevalidate: getShouldRevalidateFunction(\r\n          routeModule,\r\n          route,\r\n          ssr,\r\n          needsRevalidation\r\n        )\r\n      });\r\n      let hasInitialData = initialState && initialState.loaderData && route.id in initialState.loaderData;\r\n      let initialData = hasInitialData ? initialState?.loaderData?.[route.id] : void 0;\r\n      let hasInitialError = initialState && initialState.errors && route.id in initialState.errors;\r\n      let initialError = hasInitialError ? initialState?.errors?.[route.id] : void 0;\r\n      let isHydrationRequest = needsRevalidation == null && (routeModule.clientLoader?.hydrate === true || !route.hasLoader);\r\n      dataRoute.loader = async ({ request, params, context }, singleFetch) => {\r\n        try {\r\n          let result = await prefetchStylesAndCallHandler(async () => {\r\n            invariant2(\r\n              routeModule,\r\n              \"No `routeModule` available for critical-route loader\"\r\n            );\r\n            if (!routeModule.clientLoader) {\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n            return routeModule.clientLoader({\r\n              request,\r\n              params,\r\n              context,\r\n              async serverLoader() {\r\n                preventInvalidServerHandlerCall(\"loader\", route);\r\n                if (isHydrationRequest) {\r\n                  if (hasInitialData) {\r\n                    return initialData;\r\n                  }\r\n                  if (hasInitialError) {\r\n                    throw initialError;\r\n                  }\r\n                }\r\n                return fetchServerLoader(singleFetch);\r\n              }\r\n            });\r\n          });\r\n          return result;\r\n        } finally {\r\n          isHydrationRequest = false;\r\n        }\r\n      };\r\n      dataRoute.loader.hydrate = shouldHydrateRouteLoader(\r\n        route,\r\n        routeModule,\r\n        isSpaMode\r\n      );\r\n      dataRoute.action = ({ request, params, context }, singleFetch) => {\r\n        return prefetchStylesAndCallHandler(async () => {\r\n          invariant2(\r\n            routeModule,\r\n            \"No `routeModule` available for critical-route action\"\r\n          );\r\n          if (!routeModule.clientAction) {\r\n            if (isSpaMode) {\r\n              throw noActionDefinedError(\"clientAction\", route.id);\r\n            }\r\n            return fetchServerAction(singleFetch);\r\n          }\r\n          return routeModule.clientAction({\r\n            request,\r\n            params,\r\n            context,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        });\r\n      };\r\n    } else {\r\n      if (!route.hasClientLoader) {\r\n        dataRoute.loader = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          return fetchServerLoader(singleFetch);\r\n        });\r\n      } else if (route.clientLoaderModule) {\r\n        dataRoute.loader = async (args, singleFetch) => {\r\n          invariant2(route.clientLoaderModule);\r\n          let { clientLoader } = await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientLoaderModule\r\n          );\r\n          return clientLoader({\r\n            ...args,\r\n            async serverLoader() {\r\n              preventInvalidServerHandlerCall(\"loader\", route);\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n          });\r\n        };\r\n      }\r\n      if (!route.hasClientAction) {\r\n        dataRoute.action = (_, singleFetch) => prefetchStylesAndCallHandler(() => {\r\n          if (isSpaMode) {\r\n            throw noActionDefinedError(\"clientAction\", route.id);\r\n          }\r\n          return fetchServerAction(singleFetch);\r\n        });\r\n      } else if (route.clientActionModule) {\r\n        dataRoute.action = async (args, singleFetch) => {\r\n          invariant2(route.clientActionModule);\r\n          prefetchRouteModuleChunks(route);\r\n          let { clientAction } = await import(\r\n            /* @vite-ignore */\r\n            /* webpackIgnore: true */\r\n            route.clientActionModule\r\n          );\r\n          return clientAction({\r\n            ...args,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        };\r\n      }\r\n      dataRoute.lazy = async () => {\r\n        if (route.clientLoaderModule || route.clientActionModule) {\r\n          await new Promise((resolve) => setTimeout(resolve, 0));\r\n        }\r\n        let modPromise = loadRouteModuleWithBlockingLinks(\r\n          route,\r\n          routeModulesCache\r\n        );\r\n        prefetchRouteModuleChunks(route);\r\n        let mod = await modPromise;\r\n        let lazyRoute = { ...mod };\r\n        if (mod.clientLoader) {\r\n          let clientLoader = mod.clientLoader;\r\n          lazyRoute.loader = (args, singleFetch) => clientLoader({\r\n            ...args,\r\n            async serverLoader() {\r\n              preventInvalidServerHandlerCall(\"loader\", route);\r\n              return fetchServerLoader(singleFetch);\r\n            }\r\n          });\r\n        }\r\n        if (mod.clientAction) {\r\n          let clientAction = mod.clientAction;\r\n          lazyRoute.action = (args, singleFetch) => clientAction({\r\n            ...args,\r\n            async serverAction() {\r\n              preventInvalidServerHandlerCall(\"action\", route);\r\n              return fetchServerAction(singleFetch);\r\n            }\r\n          });\r\n        }\r\n        return {\r\n          ...lazyRoute.loader ? { loader: lazyRoute.loader } : {},\r\n          ...lazyRoute.action ? { action: lazyRoute.action } : {},\r\n          unstable_middleware: mod.unstable_clientMiddleware,\r\n          hasErrorBoundary: lazyRoute.hasErrorBoundary,\r\n          shouldRevalidate: getShouldRevalidateFunction(\r\n            lazyRoute,\r\n            route,\r\n            ssr,\r\n            needsRevalidation\r\n          ),\r\n          handle: lazyRoute.handle,\r\n          // No need to wrap these in layout since the root route is never\r\n          // loaded via route.lazy()\r\n          Component: lazyRoute.Component,\r\n          ErrorBoundary: lazyRoute.ErrorBoundary\r\n        };\r\n      };\r\n    }\r\n    let children = createClientRoutes(\r\n      manifest,\r\n      routeModulesCache,\r\n      initialState,\r\n      ssr,\r\n      isSpaMode,\r\n      route.id,\r\n      routesByParentId,\r\n      needsRevalidation\r\n    );\r\n    if (children.length > 0) dataRoute.children = children;\r\n    return dataRoute;\r\n  });\r\n}\r\nfunction getShouldRevalidateFunction(route, manifestRoute, ssr, needsRevalidation) {\r\n  if (needsRevalidation) {\r\n    return wrapShouldRevalidateForHdr(\r\n      manifestRoute.id,\r\n      route.shouldRevalidate,\r\n      needsRevalidation\r\n    );\r\n  }\r\n  if (!ssr && manifestRoute.hasLoader && !manifestRoute.hasClientLoader) {\r\n    if (route.shouldRevalidate) {\r\n      let fn = route.shouldRevalidate;\r\n      return (opts) => fn({ ...opts, defaultShouldRevalidate: false });\r\n    } else {\r\n      return () => false;\r\n    }\r\n  }\r\n  if (ssr && route.shouldRevalidate) {\r\n    let fn = route.shouldRevalidate;\r\n    return (opts) => fn({ ...opts, defaultShouldRevalidate: true });\r\n  }\r\n  return route.shouldRevalidate;\r\n}\r\nfunction wrapShouldRevalidateForHdr(routeId, routeShouldRevalidate, needsRevalidation) {\r\n  let handledRevalidation = false;\r\n  return (arg) => {\r\n    if (!handledRevalidation) {\r\n      handledRevalidation = true;\r\n      return needsRevalidation.has(routeId);\r\n    }\r\n    return routeShouldRevalidate ? routeShouldRevalidate(arg) : arg.defaultShouldRevalidate;\r\n  };\r\n}\r\nasync function loadRouteModuleWithBlockingLinks(route, routeModules) {\r\n  let routeModulePromise = loadRouteModule(route, routeModules);\r\n  let prefetchRouteCssPromise = prefetchRouteCss(route);\r\n  let routeModule = await routeModulePromise;\r\n  await Promise.all([\r\n    prefetchRouteCssPromise,\r\n    prefetchStyleLinks(route, routeModule)\r\n  ]);\r\n  return {\r\n    Component: getRouteModuleComponent(routeModule),\r\n    ErrorBoundary: routeModule.ErrorBoundary,\r\n    unstable_clientMiddleware: routeModule.unstable_clientMiddleware,\r\n    clientAction: routeModule.clientAction,\r\n    clientLoader: routeModule.clientLoader,\r\n    handle: routeModule.handle,\r\n    links: routeModule.links,\r\n    meta: routeModule.meta,\r\n    shouldRevalidate: routeModule.shouldRevalidate\r\n  };\r\n}\r\nfunction getRouteModuleComponent(routeModule) {\r\n  if (routeModule.default == null) return void 0;\r\n  let isEmptyObject = typeof routeModule.default === \"object\" && Object.keys(routeModule.default).length === 0;\r\n  if (!isEmptyObject) {\r\n    return routeModule.default;\r\n  }\r\n}\r\nfunction shouldHydrateRouteLoader(route, routeModule, isSpaMode) {\r\n  return isSpaMode && route.id !== \"root\" || routeModule.clientLoader != null && (routeModule.clientLoader.hydrate === true || route.hasLoader !== true);\r\n}\r\n\r\n// lib/dom/ssr/fog-of-war.ts\r\nvar nextPaths = /* @__PURE__ */ new Set();\r\nvar discoveredPathsMaxSize = 1e3;\r\nvar discoveredPaths = /* @__PURE__ */ new Set();\r\nvar URL_LIMIT = 7680;\r\nfunction isFogOfWarEnabled(ssr) {\r\n  return ssr === true;\r\n}\r\nfunction getPartialManifest(manifest, router) {\r\n  let routeIds = new Set(router.state.matches.map((m) => m.route.id));\r\n  let segments = router.state.location.pathname.split(\"/\").filter(Boolean);\r\n  let paths = [\"/\"];\r\n  segments.pop();\r\n  while (segments.length > 0) {\r\n    paths.push(`/${segments.join(\"/\")}`);\r\n    segments.pop();\r\n  }\r\n  paths.forEach((path) => {\r\n    let matches = matchRoutes(router.routes, path, router.basename);\r\n    if (matches) {\r\n      matches.forEach((m) => routeIds.add(m.route.id));\r\n    }\r\n  });\r\n  let initialRoutes = [...routeIds].reduce(\r\n    (acc, id) => Object.assign(acc, { [id]: manifest.routes[id] }),\r\n    {}\r\n  );\r\n  return {\r\n    ...manifest,\r\n    routes: initialRoutes\r\n  };\r\n}\r\nfunction getPatchRoutesOnNavigationFunction(manifest, routeModules, ssr, isSpaMode, basename) {\r\n  if (!isFogOfWarEnabled(ssr)) {\r\n    return void 0;\r\n  }\r\n  return async ({ path, patch, signal, fetcherKey }) => {\r\n    if (discoveredPaths.has(path)) {\r\n      return;\r\n    }\r\n    await fetchAndApplyManifestPatches(\r\n      [path],\r\n      fetcherKey ? window.location.href : path,\r\n      manifest,\r\n      routeModules,\r\n      ssr,\r\n      isSpaMode,\r\n      basename,\r\n      patch,\r\n      signal\r\n    );\r\n  };\r\n}\r\nfunction useFogOFWarDiscovery(router, manifest, routeModules, ssr, isSpaMode) {\r\n  React8.useEffect(() => {\r\n    if (!isFogOfWarEnabled(ssr) || navigator.connection?.saveData === true) {\r\n      return;\r\n    }\r\n    function registerElement(el) {\r\n      let path = el.tagName === \"FORM\" ? el.getAttribute(\"action\") : el.getAttribute(\"href\");\r\n      if (!path) {\r\n        return;\r\n      }\r\n      let pathname = el.tagName === \"A\" ? el.pathname : new URL(path, window.location.origin).pathname;\r\n      if (!discoveredPaths.has(pathname)) {\r\n        nextPaths.add(pathname);\r\n      }\r\n    }\r\n    async function fetchPatches() {\r\n      document.querySelectorAll(\"a[data-discover], form[data-discover]\").forEach(registerElement);\r\n      let lazyPaths = Array.from(nextPaths.keys()).filter((path) => {\r\n        if (discoveredPaths.has(path)) {\r\n          nextPaths.delete(path);\r\n          return false;\r\n        }\r\n        return true;\r\n      });\r\n      if (lazyPaths.length === 0) {\r\n        return;\r\n      }\r\n      try {\r\n        await fetchAndApplyManifestPatches(\r\n          lazyPaths,\r\n          null,\r\n          manifest,\r\n          routeModules,\r\n          ssr,\r\n          isSpaMode,\r\n          router.basename,\r\n          router.patchRoutes\r\n        );\r\n      } catch (e) {\r\n        console.error(\"Failed to fetch manifest patches\", e);\r\n      }\r\n    }\r\n    let debouncedFetchPatches = debounce(fetchPatches, 100);\r\n    fetchPatches();\r\n    let observer = new MutationObserver(() => debouncedFetchPatches());\r\n    observer.observe(document.documentElement, {\r\n      subtree: true,\r\n      childList: true,\r\n      attributes: true,\r\n      attributeFilter: [\"data-discover\", \"href\", \"action\"]\r\n    });\r\n    return () => observer.disconnect();\r\n  }, [ssr, isSpaMode, manifest, routeModules, router]);\r\n}\r\nvar MANIFEST_VERSION_STORAGE_KEY = \"react-router-manifest-version\";\r\nasync function fetchAndApplyManifestPatches(paths, errorReloadPath, manifest, routeModules, ssr, isSpaMode, basename, patchRoutes, signal) {\r\n  let manifestPath = `${basename != null ? basename : \"/\"}/__manifest`.replace(\r\n    /\\/+/g,\r\n    \"/\"\r\n  );\r\n  let url = new URL(manifestPath, window.location.origin);\r\n  paths.sort().forEach((path) => url.searchParams.append(\"p\", path));\r\n  url.searchParams.set(\"version\", manifest.version);\r\n  if (url.toString().length > URL_LIMIT) {\r\n    nextPaths.clear();\r\n    return;\r\n  }\r\n  let serverPatches;\r\n  try {\r\n    let res = await fetch(url, { signal });\r\n    if (!res.ok) {\r\n      throw new Error(`${res.status} ${res.statusText}`);\r\n    } else if (res.status === 204 && res.headers.has(\"X-Remix-Reload-Document\")) {\r\n      if (!errorReloadPath) {\r\n        console.warn(\r\n          \"Detected a manifest version mismatch during eager route discovery. The next navigation/fetch to an undiscovered route will result in a new document navigation to sync up with the latest manifest.\"\r\n        );\r\n        return;\r\n      }\r\n      if (sessionStorage.getItem(MANIFEST_VERSION_STORAGE_KEY) === manifest.version) {\r\n        console.error(\r\n          \"Unable to discover routes due to manifest version mismatch.\"\r\n        );\r\n        return;\r\n      }\r\n      sessionStorage.setItem(MANIFEST_VERSION_STORAGE_KEY, manifest.version);\r\n      window.location.href = errorReloadPath;\r\n      throw new Error(\"Detected manifest version mismatch, reloading...\");\r\n    } else if (res.status >= 400) {\r\n      throw new Error(await res.text());\r\n    }\r\n    sessionStorage.removeItem(MANIFEST_VERSION_STORAGE_KEY);\r\n    serverPatches = await res.json();\r\n  } catch (e) {\r\n    if (signal?.aborted) return;\r\n    throw e;\r\n  }\r\n  let knownRoutes = new Set(Object.keys(manifest.routes));\r\n  let patches = Object.values(serverPatches).reduce((acc, route) => {\r\n    if (route && !knownRoutes.has(route.id)) {\r\n      acc[route.id] = route;\r\n    }\r\n    return acc;\r\n  }, {});\r\n  Object.assign(manifest.routes, patches);\r\n  paths.forEach((p) => addToFifoQueue(p, discoveredPaths));\r\n  let parentIds = /* @__PURE__ */ new Set();\r\n  Object.values(patches).forEach((patch) => {\r\n    if (patch && (!patch.parentId || !patches[patch.parentId])) {\r\n      parentIds.add(patch.parentId);\r\n    }\r\n  });\r\n  parentIds.forEach(\r\n    (parentId) => patchRoutes(\r\n      parentId || null,\r\n      createClientRoutes(patches, routeModules, null, ssr, isSpaMode, parentId)\r\n    )\r\n  );\r\n}\r\nfunction addToFifoQueue(path, queue) {\r\n  if (queue.size >= discoveredPathsMaxSize) {\r\n    let first = queue.values().next().value;\r\n    queue.delete(first);\r\n  }\r\n  queue.add(path);\r\n}\r\nfunction debounce(callback, wait) {\r\n  let timeoutId;\r\n  return (...args) => {\r\n    window.clearTimeout(timeoutId);\r\n    timeoutId = window.setTimeout(() => callback(...args), wait);\r\n  };\r\n}\r\n\r\n// lib/dom/ssr/components.tsx\r\nfunction useDataRouterContext2() {\r\n  let context = React9.useContext(DataRouterContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction useDataRouterStateContext() {\r\n  let context = React9.useContext(DataRouterStateContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <DataRouterStateContext.Provider> element\"\r\n  );\r\n  return context;\r\n}\r\nvar FrameworkContext = React9.createContext(void 0);\r\nFrameworkContext.displayName = \"FrameworkContext\";\r\nfunction useFrameworkContext() {\r\n  let context = React9.useContext(FrameworkContext);\r\n  invariant2(\r\n    context,\r\n    \"You must render this element inside a <HydratedRouter> element\"\r\n  );\r\n  return context;\r\n}\r\nfunction usePrefetchBehavior(prefetch, theirElementProps) {\r\n  let frameworkContext = React9.useContext(FrameworkContext);\r\n  let [maybePrefetch, setMaybePrefetch] = React9.useState(false);\r\n  let [shouldPrefetch, setShouldPrefetch] = React9.useState(false);\r\n  let { onFocus, onBlur, onMouseEnter, onMouseLeave, onTouchStart } = theirElementProps;\r\n  let ref = React9.useRef(null);\r\n  React9.useEffect(() => {\r\n    if (prefetch === \"render\") {\r\n      setShouldPrefetch(true);\r\n    }\r\n    if (prefetch === \"viewport\") {\r\n      let callback = (entries) => {\r\n        entries.forEach((entry) => {\r\n          setShouldPrefetch(entry.isIntersecting);\r\n        });\r\n      };\r\n      let observer = new IntersectionObserver(callback, { threshold: 0.5 });\r\n      if (ref.current) observer.observe(ref.current);\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n    }\r\n  }, [prefetch]);\r\n  React9.useEffect(() => {\r\n    if (maybePrefetch) {\r\n      let id = setTimeout(() => {\r\n        setShouldPrefetch(true);\r\n      }, 100);\r\n      return () => {\r\n        clearTimeout(id);\r\n      };\r\n    }\r\n  }, [maybePrefetch]);\r\n  let setIntent = () => {\r\n    setMaybePrefetch(true);\r\n  };\r\n  let cancelIntent = () => {\r\n    setMaybePrefetch(false);\r\n    setShouldPrefetch(false);\r\n  };\r\n  if (!frameworkContext) {\r\n    return [false, ref, {}];\r\n  }\r\n  if (prefetch !== \"intent\") {\r\n    return [shouldPrefetch, ref, {}];\r\n  }\r\n  return [\r\n    shouldPrefetch,\r\n    ref,\r\n    {\r\n      onFocus: composeEventHandlers(onFocus, setIntent),\r\n      onBlur: composeEventHandlers(onBlur, cancelIntent),\r\n      onMouseEnter: composeEventHandlers(onMouseEnter, setIntent),\r\n      onMouseLeave: composeEventHandlers(onMouseLeave, cancelIntent),\r\n      onTouchStart: composeEventHandlers(onTouchStart, setIntent)\r\n    }\r\n  ];\r\n}\r\nfunction composeEventHandlers(theirHandler, ourHandler) {\r\n  return (event) => {\r\n    theirHandler && theirHandler(event);\r\n    if (!event.defaultPrevented) {\r\n      ourHandler(event);\r\n    }\r\n  };\r\n}\r\nfunction getActiveMatches(matches, errors, isSpaMode) {\r\n  if (isSpaMode && !isHydrated) {\r\n    return [matches[0]];\r\n  }\r\n  if (errors) {\r\n    let errorIdx = matches.findIndex((m) => errors[m.route.id] !== void 0);\r\n    return matches.slice(0, errorIdx + 1);\r\n  }\r\n  return matches;\r\n}\r\nfunction Links() {\r\n  let { isSpaMode, manifest, routeModules, criticalCss } = useFrameworkContext();\r\n  let { errors, matches: routerMatches } = useDataRouterStateContext();\r\n  let matches = getActiveMatches(routerMatches, errors, isSpaMode);\r\n  let keyedLinks = React9.useMemo(\r\n    () => getKeyedLinksForMatches(matches, routeModules, manifest),\r\n    [matches, routeModules, manifest]\r\n  );\r\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, typeof criticalCss === \"string\" ? /* @__PURE__ */ React9.createElement(\"style\", { dangerouslySetInnerHTML: { __html: criticalCss } }) : null, typeof criticalCss === \"object\" ? /* @__PURE__ */ React9.createElement(\"link\", { rel: \"stylesheet\", href: criticalCss.href }) : null, keyedLinks.map(\r\n    ({ key, link }) => isPageLinkDescriptor(link) ? /* @__PURE__ */ React9.createElement(PrefetchPageLinks, { key, ...link }) : /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\r\n  ));\r\n}\r\nfunction PrefetchPageLinks({\r\n  page,\r\n  ...dataLinkProps\r\n}) {\r\n  let { router } = useDataRouterContext2();\r\n  let matches = React9.useMemo(\r\n    () => matchRoutes(router.routes, page, router.basename),\r\n    [router.routes, page, router.basename]\r\n  );\r\n  if (!matches) {\r\n    return null;\r\n  }\r\n  return /* @__PURE__ */ React9.createElement(PrefetchPageLinksImpl, { page, matches, ...dataLinkProps });\r\n}\r\nfunction useKeyedPrefetchLinks(matches) {\r\n  let { manifest, routeModules } = useFrameworkContext();\r\n  let [keyedPrefetchLinks, setKeyedPrefetchLinks] = React9.useState([]);\r\n  React9.useEffect(() => {\r\n    let interrupted = false;\r\n    void getKeyedPrefetchLinks(matches, manifest, routeModules).then(\r\n      (links) => {\r\n        if (!interrupted) {\r\n          setKeyedPrefetchLinks(links);\r\n        }\r\n      }\r\n    );\r\n    return () => {\r\n      interrupted = true;\r\n    };\r\n  }, [matches, manifest, routeModules]);\r\n  return keyedPrefetchLinks;\r\n}\r\nfunction PrefetchPageLinksImpl({\r\n  page,\r\n  matches: nextMatches,\r\n  ...linkProps\r\n}) {\r\n  let location = useLocation();\r\n  let { manifest, routeModules } = useFrameworkContext();\r\n  let { basename } = useDataRouterContext2();\r\n  let { loaderData, matches } = useDataRouterStateContext();\r\n  let newMatchesForData = React9.useMemo(\r\n    () => getNewMatchesForLinks(\r\n      page,\r\n      nextMatches,\r\n      matches,\r\n      manifest,\r\n      location,\r\n      \"data\"\r\n    ),\r\n    [page, nextMatches, matches, manifest, location]\r\n  );\r\n  let newMatchesForAssets = React9.useMemo(\r\n    () => getNewMatchesForLinks(\r\n      page,\r\n      nextMatches,\r\n      matches,\r\n      manifest,\r\n      location,\r\n      \"assets\"\r\n    ),\r\n    [page, nextMatches, matches, manifest, location]\r\n  );\r\n  let dataHrefs = React9.useMemo(() => {\r\n    if (page === location.pathname + location.search + location.hash) {\r\n      return [];\r\n    }\r\n    let routesParams = /* @__PURE__ */ new Set();\r\n    let foundOptOutRoute = false;\r\n    nextMatches.forEach((m) => {\r\n      let manifestRoute = manifest.routes[m.route.id];\r\n      if (!manifestRoute || !manifestRoute.hasLoader) {\r\n        return;\r\n      }\r\n      if (!newMatchesForData.some((m2) => m2.route.id === m.route.id) && m.route.id in loaderData && routeModules[m.route.id]?.shouldRevalidate) {\r\n        foundOptOutRoute = true;\r\n      } else if (manifestRoute.hasClientLoader) {\r\n        foundOptOutRoute = true;\r\n      } else {\r\n        routesParams.add(m.route.id);\r\n      }\r\n    });\r\n    if (routesParams.size === 0) {\r\n      return [];\r\n    }\r\n    let url = singleFetchUrl(page, basename);\r\n    if (foundOptOutRoute && routesParams.size > 0) {\r\n      url.searchParams.set(\r\n        \"_routes\",\r\n        nextMatches.filter((m) => routesParams.has(m.route.id)).map((m) => m.route.id).join(\",\")\r\n      );\r\n    }\r\n    return [url.pathname + url.search];\r\n  }, [\r\n    basename,\r\n    loaderData,\r\n    location,\r\n    manifest,\r\n    newMatchesForData,\r\n    nextMatches,\r\n    page,\r\n    routeModules\r\n  ]);\r\n  let moduleHrefs = React9.useMemo(\r\n    () => getModuleLinkHrefs(newMatchesForAssets, manifest),\r\n    [newMatchesForAssets, manifest]\r\n  );\r\n  let keyedPrefetchLinks = useKeyedPrefetchLinks(newMatchesForAssets);\r\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, dataHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"prefetch\", as: \"fetch\", href: href2, ...linkProps })), moduleHrefs.map((href2) => /* @__PURE__ */ React9.createElement(\"link\", { key: href2, rel: \"modulepreload\", href: href2, ...linkProps })), keyedPrefetchLinks.map(({ key, link }) => (\r\n    // these don't spread `linkProps` because they are full link descriptors\r\n    // already with their own props\r\n    /* @__PURE__ */ React9.createElement(\"link\", { key, ...link })\r\n  )));\r\n}\r\nfunction Meta() {\r\n  let { isSpaMode, routeModules } = useFrameworkContext();\r\n  let {\r\n    errors,\r\n    matches: routerMatches,\r\n    loaderData\r\n  } = useDataRouterStateContext();\r\n  let location = useLocation();\r\n  let _matches = getActiveMatches(routerMatches, errors, isSpaMode);\r\n  let error = null;\r\n  if (errors) {\r\n    error = errors[_matches[_matches.length - 1].route.id];\r\n  }\r\n  let meta = [];\r\n  let leafMeta = null;\r\n  let matches = [];\r\n  for (let i = 0; i < _matches.length; i++) {\r\n    let _match = _matches[i];\r\n    let routeId = _match.route.id;\r\n    let data2 = loaderData[routeId];\r\n    let params = _match.params;\r\n    let routeModule = routeModules[routeId];\r\n    let routeMeta = [];\r\n    let match = {\r\n      id: routeId,\r\n      data: data2,\r\n      meta: [],\r\n      params: _match.params,\r\n      pathname: _match.pathname,\r\n      handle: _match.route.handle,\r\n      error\r\n    };\r\n    matches[i] = match;\r\n    if (routeModule?.meta) {\r\n      routeMeta = typeof routeModule.meta === \"function\" ? routeModule.meta({\r\n        data: data2,\r\n        params,\r\n        location,\r\n        matches,\r\n        error\r\n      }) : Array.isArray(routeModule.meta) ? [...routeModule.meta] : routeModule.meta;\r\n    } else if (leafMeta) {\r\n      routeMeta = [...leafMeta];\r\n    }\r\n    routeMeta = routeMeta || [];\r\n    if (!Array.isArray(routeMeta)) {\r\n      throw new Error(\r\n        \"The route at \" + _match.route.path + \" returns an invalid value. All route meta functions must return an array of meta objects.\\n\\nTo reference the meta function API, see https://remix.run/route/meta\"\r\n      );\r\n    }\r\n    match.meta = routeMeta;\r\n    matches[i] = match;\r\n    meta = [...routeMeta];\r\n    leafMeta = meta;\r\n  }\r\n  return /* @__PURE__ */ React9.createElement(React9.Fragment, null, meta.flat().map((metaProps) => {\r\n    if (!metaProps) {\r\n      return null;\r\n    }\r\n    if (\"tagName\" in metaProps) {\r\n      let { tagName, ...rest } = metaProps;\r\n      if (!isValidMetaTag(tagName)) {\r\n        console.warn(\r\n          `A meta object uses an invalid tagName: ${tagName}. Expected either 'link' or 'meta'`\r\n        );\r\n        return null;\r\n      }\r\n      let Comp = tagName;\r\n      return /* @__PURE__ */ React9.createElement(Comp, { key: JSON.stringify(rest), ...rest });\r\n    }\r\n    if (\"title\" in metaProps) {\r\n      return /* @__PURE__ */ React9.createElement(\"title\", { key: \"title\" }, String(metaProps.title));\r\n    }\r\n    if (\"charset\" in metaProps) {\r\n      metaProps.charSet ?? (metaProps.charSet = metaProps.charset);\r\n      delete metaProps.charset;\r\n    }\r\n    if (\"charSet\" in metaProps && metaProps.charSet != null) {\r\n      return typeof metaProps.charSet === \"string\" ? /* @__PURE__ */ React9.createElement(\"meta\", { key: \"charSet\", charSet: metaProps.charSet }) : null;\r\n    }\r\n    if (\"script:ld+json\" in metaProps) {\r\n      try {\r\n        let json = JSON.stringify(metaProps[\"script:ld+json\"]);\r\n        return /* @__PURE__ */ React9.createElement(\r\n          \"script\",\r\n          {\r\n            key: `script:ld+json:${json}`,\r\n            type: \"application/ld+json\",\r\n            dangerouslySetInnerHTML: { __html: json }\r\n          }\r\n        );\r\n      } catch (err) {\r\n        return null;\r\n      }\r\n    }\r\n    return /* @__PURE__ */ React9.createElement(\"meta\", { key: JSON.stringify(metaProps), ...metaProps });\r\n  }));\r\n}\r\nfunction isValidMetaTag(tagName) {\r\n  return typeof tagName === \"string\" && /^(meta|link)$/.test(tagName);\r\n}\r\nvar isHydrated = false;\r\nfunction Scripts(props) {\r\n  let { manifest, serverHandoffString, isSpaMode, ssr, renderMeta } = useFrameworkContext();\r\n  let { router, static: isStatic, staticContext } = useDataRouterContext2();\r\n  let { matches: routerMatches } = useDataRouterStateContext();\r\n  let enableFogOfWar = isFogOfWarEnabled(ssr);\r\n  if (renderMeta) {\r\n    renderMeta.didRenderScripts = true;\r\n  }\r\n  let matches = getActiveMatches(routerMatches, null, isSpaMode);\r\n  React9.useEffect(() => {\r\n    isHydrated = true;\r\n  }, []);\r\n  let initialScripts = React9.useMemo(() => {\r\n    let streamScript = \"window.__reactRouterContext.stream = new ReadableStream({start(controller){window.__reactRouterContext.streamController = controller;}}).pipeThrough(new TextEncoderStream());\";\r\n    let contextScript = staticContext ? `window.__reactRouterContext = ${serverHandoffString};${streamScript}` : \" \";\r\n    let routeModulesScript = !isStatic ? \" \" : `${manifest.hmr?.runtime ? `import ${JSON.stringify(manifest.hmr.runtime)};` : \"\"}${!enableFogOfWar ? `import ${JSON.stringify(manifest.url)}` : \"\"};\r\n${matches.map((match, routeIndex) => {\r\n      let routeVarName = `route${routeIndex}`;\r\n      let manifestEntry = manifest.routes[match.route.id];\r\n      invariant2(manifestEntry, `Route ${match.route.id} not found in manifest`);\r\n      let {\r\n        clientActionModule,\r\n        clientLoaderModule,\r\n        hydrateFallbackModule,\r\n        module\r\n      } = manifestEntry;\r\n      let chunks = [\r\n        ...clientActionModule ? [\r\n          {\r\n            module: clientActionModule,\r\n            varName: `${routeVarName}_clientAction`\r\n          }\r\n        ] : [],\r\n        ...clientLoaderModule ? [\r\n          {\r\n            module: clientLoaderModule,\r\n            varName: `${routeVarName}_clientLoader`\r\n          }\r\n        ] : [],\r\n        ...hydrateFallbackModule ? [\r\n          {\r\n            module: hydrateFallbackModule,\r\n            varName: `${routeVarName}_HydrateFallback`\r\n          }\r\n        ] : [],\r\n        { module, varName: `${routeVarName}_main` }\r\n      ];\r\n      if (chunks.length === 1) {\r\n        return `import * as ${routeVarName} from ${JSON.stringify(module)};`;\r\n      }\r\n      let chunkImportsSnippet = chunks.map((chunk) => `import * as ${chunk.varName} from \"${chunk.module}\";`).join(\"\\n\");\r\n      let mergedChunksSnippet = `const ${routeVarName} = {${chunks.map((chunk) => `...${chunk.varName}`).join(\",\")}};`;\r\n      return [chunkImportsSnippet, mergedChunksSnippet].join(\"\\n\");\r\n    }).join(\"\\n\")}\r\n  ${enableFogOfWar ? (\r\n      // Inline a minimal manifest with the SSR matches\r\n      `window.__reactRouterManifest = ${JSON.stringify(\r\n        getPartialManifest(manifest, router),\r\n        null,\r\n        2\r\n      )};`\r\n    ) : \"\"}\r\n  window.__reactRouterRouteModules = {${matches.map((match, index) => `${JSON.stringify(match.route.id)}:route${index}`).join(\",\")}};\r\n\r\nimport(${JSON.stringify(manifest.entry.module)});`;\r\n    return /* @__PURE__ */ React9.createElement(React9.Fragment, null, /* @__PURE__ */ React9.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(contextScript),\r\n        type: void 0\r\n      }\r\n    ), /* @__PURE__ */ React9.createElement(\r\n      \"script\",\r\n      {\r\n        ...props,\r\n        suppressHydrationWarning: true,\r\n        dangerouslySetInnerHTML: createHtml(routeModulesScript),\r\n        type: \"module\",\r\n        async: true\r\n      }\r\n    ));\r\n  }, []);\r\n  let preloads = isHydrated ? [] : manifest.entry.imports.concat(\r\n    getModuleLinkHrefs(matches, manifest, {\r\n      includeHydrateFallback: true\r\n    })\r\n  );\r\n  return isHydrated ? null : /* @__PURE__ */ React9.createElement(React9.Fragment, null, !enableFogOfWar ? /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.url,\r\n      crossOrigin: props.crossOrigin\r\n    }\r\n  ) : null, /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      rel: \"modulepreload\",\r\n      href: manifest.entry.module,\r\n      crossOrigin: props.crossOrigin\r\n    }\r\n  ), dedupe(preloads).map((path) => /* @__PURE__ */ React9.createElement(\r\n    \"link\",\r\n    {\r\n      key: path,\r\n      rel: \"modulepreload\",\r\n      href: path,\r\n      crossOrigin: props.crossOrigin\r\n    }\r\n  )), initialScripts);\r\n}\r\nfunction dedupe(array) {\r\n  return [...new Set(array)];\r\n}\r\nfunction mergeRefs(...refs) {\r\n  return (value) => {\r\n    refs.forEach((ref) => {\r\n      if (typeof ref === \"function\") {\r\n        ref(value);\r\n      } else if (ref != null) {\r\n        ref.current = value;\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\n// lib/dom/lib.tsx\r\nvar isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\" && typeof window.document.createElement !== \"undefined\";\r\ntry {\r\n  if (isBrowser) {\r\n    window.__reactRouterVersion = \"7.3.0\";\r\n  }\r\n} catch (e) {\r\n}\r\nfunction createBrowserRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    unstable_getContext: opts?.unstable_getContext,\r\n    future: opts?.future,\r\n    history: createBrowserHistory({ window: opts?.window }),\r\n    hydrationData: opts?.hydrationData || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\r\n    window: opts?.window\r\n  }).initialize();\r\n}\r\nfunction createHashRouter(routes, opts) {\r\n  return createRouter({\r\n    basename: opts?.basename,\r\n    unstable_getContext: opts?.unstable_getContext,\r\n    future: opts?.future,\r\n    history: createHashHistory({ window: opts?.window }),\r\n    hydrationData: opts?.hydrationData || parseHydrationData(),\r\n    routes,\r\n    mapRouteProperties,\r\n    dataStrategy: opts?.dataStrategy,\r\n    patchRoutesOnNavigation: opts?.patchRoutesOnNavigation,\r\n    window: opts?.window\r\n  }).initialize();\r\n}\r\nfunction parseHydrationData() {\r\n  let state = window?.__staticRouterHydrationData;\r\n  if (state && state.errors) {\r\n    state = {\r\n      ...state,\r\n      errors: deserializeErrors(state.errors)\r\n    };\r\n  }\r\n  return state;\r\n}\r\nfunction deserializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = \"\";\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = \"\";\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nfunction BrowserRouter({\r\n  basename,\r\n  children,\r\n  window: window2\r\n}) {\r\n  let historyRef = React10.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createBrowserHistory({ window: window2, v5Compat: true });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React10.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React10.useCallback(\r\n    (newState) => {\r\n      React10.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React10.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction HashRouter({ basename, children, window: window2 }) {\r\n  let historyRef = React10.useRef();\r\n  if (historyRef.current == null) {\r\n    historyRef.current = createHashHistory({ window: window2, v5Compat: true });\r\n  }\r\n  let history = historyRef.current;\r\n  let [state, setStateImpl] = React10.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React10.useCallback(\r\n    (newState) => {\r\n      React10.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React10.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nfunction HistoryRouter({\r\n  basename,\r\n  children,\r\n  history\r\n}) {\r\n  let [state, setStateImpl] = React10.useState({\r\n    action: history.action,\r\n    location: history.location\r\n  });\r\n  let setState = React10.useCallback(\r\n    (newState) => {\r\n      React10.startTransition(() => setStateImpl(newState));\r\n    },\r\n    [setStateImpl]\r\n  );\r\n  React10.useLayoutEffect(() => history.listen(setState), [history, setState]);\r\n  return /* @__PURE__ */ React10.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location: state.location,\r\n      navigationType: state.action,\r\n      navigator: history\r\n    }\r\n  );\r\n}\r\nHistoryRouter.displayName = \"unstable_HistoryRouter\";\r\nvar ABSOLUTE_URL_REGEX2 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar Link = React10.forwardRef(\r\n  function LinkWithRef({\r\n    onClick,\r\n    discover = \"render\",\r\n    prefetch = \"none\",\r\n    relative,\r\n    reloadDocument,\r\n    replace: replace2,\r\n    state,\r\n    target,\r\n    to,\r\n    preventScrollReset,\r\n    viewTransition,\r\n    ...rest\r\n  }, forwardedRef) {\r\n    let { basename } = React10.useContext(NavigationContext);\r\n    let isAbsolute = typeof to === \"string\" && ABSOLUTE_URL_REGEX2.test(to);\r\n    let absoluteHref;\r\n    let isExternal = false;\r\n    if (typeof to === \"string\" && isAbsolute) {\r\n      absoluteHref = to;\r\n      if (isBrowser) {\r\n        try {\r\n          let currentUrl = new URL(window.location.href);\r\n          let targetUrl = to.startsWith(\"//\") ? new URL(currentUrl.protocol + to) : new URL(to);\r\n          let path = stripBasename(targetUrl.pathname, basename);\r\n          if (targetUrl.origin === currentUrl.origin && path != null) {\r\n            to = path + targetUrl.search + targetUrl.hash;\r\n          } else {\r\n            isExternal = true;\r\n          }\r\n        } catch (e) {\r\n          warning(\r\n            false,\r\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`\r\n          );\r\n        }\r\n      }\r\n    }\r\n    let href2 = useHref(to, { relative });\r\n    let [shouldPrefetch, prefetchRef, prefetchHandlers] = usePrefetchBehavior(\r\n      prefetch,\r\n      rest\r\n    );\r\n    let internalOnClick = useLinkClickHandler(to, {\r\n      replace: replace2,\r\n      state,\r\n      target,\r\n      preventScrollReset,\r\n      relative,\r\n      viewTransition\r\n    });\r\n    function handleClick(event) {\r\n      if (onClick) onClick(event);\r\n      if (!event.defaultPrevented) {\r\n        internalOnClick(event);\r\n      }\r\n    }\r\n    let link = (\r\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\r\n      /* @__PURE__ */ React10.createElement(\r\n        \"a\",\r\n        {\r\n          ...rest,\r\n          ...prefetchHandlers,\r\n          href: absoluteHref || href2,\r\n          onClick: isExternal || reloadDocument ? onClick : handleClick,\r\n          ref: mergeRefs(forwardedRef, prefetchRef),\r\n          target,\r\n          \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\r\n        }\r\n      )\r\n    );\r\n    return shouldPrefetch && !isAbsolute ? /* @__PURE__ */ React10.createElement(React10.Fragment, null, link, /* @__PURE__ */ React10.createElement(PrefetchPageLinks, { page: href2 })) : link;\r\n  }\r\n);\r\nLink.displayName = \"Link\";\r\nvar NavLink = React10.forwardRef(\r\n  function NavLinkWithRef({\r\n    \"aria-current\": ariaCurrentProp = \"page\",\r\n    caseSensitive = false,\r\n    className: classNameProp = \"\",\r\n    end = false,\r\n    style: styleProp,\r\n    to,\r\n    viewTransition,\r\n    children,\r\n    ...rest\r\n  }, ref) {\r\n    let path = useResolvedPath(to, { relative: rest.relative });\r\n    let location = useLocation();\r\n    let routerState = React10.useContext(DataRouterStateContext);\r\n    let { navigator: navigator2, basename } = React10.useContext(NavigationContext);\r\n    let isTransitioning = routerState != null && // Conditional usage is OK here because the usage of a data router is static\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    useViewTransitionState(path) && viewTransition === true;\r\n    let toPathname = navigator2.encodeLocation ? navigator2.encodeLocation(path).pathname : path.pathname;\r\n    let locationPathname = location.pathname;\r\n    let nextLocationPathname = routerState && routerState.navigation && routerState.navigation.location ? routerState.navigation.location.pathname : null;\r\n    if (!caseSensitive) {\r\n      locationPathname = locationPathname.toLowerCase();\r\n      nextLocationPathname = nextLocationPathname ? nextLocationPathname.toLowerCase() : null;\r\n      toPathname = toPathname.toLowerCase();\r\n    }\r\n    if (nextLocationPathname && basename) {\r\n      nextLocationPathname = stripBasename(nextLocationPathname, basename) || nextLocationPathname;\r\n    }\r\n    const endSlashPosition = toPathname !== \"/\" && toPathname.endsWith(\"/\") ? toPathname.length - 1 : toPathname.length;\r\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(endSlashPosition) === \"/\";\r\n    let isPending = nextLocationPathname != null && (nextLocationPathname === toPathname || !end && nextLocationPathname.startsWith(toPathname) && nextLocationPathname.charAt(toPathname.length) === \"/\");\r\n    let renderProps = {\r\n      isActive,\r\n      isPending,\r\n      isTransitioning\r\n    };\r\n    let ariaCurrent = isActive ? ariaCurrentProp : void 0;\r\n    let className;\r\n    if (typeof classNameProp === \"function\") {\r\n      className = classNameProp(renderProps);\r\n    } else {\r\n      className = [\r\n        classNameProp,\r\n        isActive ? \"active\" : null,\r\n        isPending ? \"pending\" : null,\r\n        isTransitioning ? \"transitioning\" : null\r\n      ].filter(Boolean).join(\" \");\r\n    }\r\n    let style = typeof styleProp === \"function\" ? styleProp(renderProps) : styleProp;\r\n    return /* @__PURE__ */ React10.createElement(\r\n      Link,\r\n      {\r\n        ...rest,\r\n        \"aria-current\": ariaCurrent,\r\n        className,\r\n        ref,\r\n        style,\r\n        to,\r\n        viewTransition\r\n      },\r\n      typeof children === \"function\" ? children(renderProps) : children\r\n    );\r\n  }\r\n);\r\nNavLink.displayName = \"NavLink\";\r\nvar Form = React10.forwardRef(\r\n  ({\r\n    discover = \"render\",\r\n    fetcherKey,\r\n    navigate,\r\n    reloadDocument,\r\n    replace: replace2,\r\n    state,\r\n    method = defaultMethod,\r\n    action,\r\n    onSubmit,\r\n    relative,\r\n    preventScrollReset,\r\n    viewTransition,\r\n    ...props\r\n  }, forwardedRef) => {\r\n    let submit = useSubmit();\r\n    let formAction = useFormAction(action, { relative });\r\n    let formMethod = method.toLowerCase() === \"get\" ? \"get\" : \"post\";\r\n    let isAbsolute = typeof action === \"string\" && ABSOLUTE_URL_REGEX2.test(action);\r\n    let submitHandler = (event) => {\r\n      onSubmit && onSubmit(event);\r\n      if (event.defaultPrevented) return;\r\n      event.preventDefault();\r\n      let submitter = event.nativeEvent.submitter;\r\n      let submitMethod = submitter?.getAttribute(\"formmethod\") || method;\r\n      submit(submitter || event.currentTarget, {\r\n        fetcherKey,\r\n        method: submitMethod,\r\n        navigate,\r\n        replace: replace2,\r\n        state,\r\n        relative,\r\n        preventScrollReset,\r\n        viewTransition\r\n      });\r\n    };\r\n    return /* @__PURE__ */ React10.createElement(\r\n      \"form\",\r\n      {\r\n        ref: forwardedRef,\r\n        method: formMethod,\r\n        action: formAction,\r\n        onSubmit: reloadDocument ? onSubmit : submitHandler,\r\n        ...props,\r\n        \"data-discover\": !isAbsolute && discover === \"render\" ? \"true\" : void 0\r\n      }\r\n    );\r\n  }\r\n);\r\nForm.displayName = \"Form\";\r\nfunction ScrollRestoration({\r\n  getKey,\r\n  storageKey,\r\n  ...props\r\n}) {\r\n  let remixContext = React10.useContext(FrameworkContext);\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  useScrollRestoration({ getKey, storageKey });\r\n  let ssrKey = React10.useMemo(\r\n    () => {\r\n      if (!remixContext || !getKey) return null;\r\n      let userKey = getScrollRestorationKey(\r\n        location,\r\n        matches,\r\n        basename,\r\n        getKey\r\n      );\r\n      return userKey !== location.key ? userKey : null;\r\n    },\r\n    // Nah, we only need this the first time for the SSR render\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    []\r\n  );\r\n  if (!remixContext || remixContext.isSpaMode) {\r\n    return null;\r\n  }\r\n  let restoreScroll = ((storageKey2, restoreKey) => {\r\n    if (!window.history.state || !window.history.state.key) {\r\n      let key = Math.random().toString(32).slice(2);\r\n      window.history.replaceState({ key }, \"\");\r\n    }\r\n    try {\r\n      let positions = JSON.parse(sessionStorage.getItem(storageKey2) || \"{}\");\r\n      let storedY = positions[restoreKey || window.history.state.key];\r\n      if (typeof storedY === \"number\") {\r\n        window.scrollTo(0, storedY);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      sessionStorage.removeItem(storageKey2);\r\n    }\r\n  }).toString();\r\n  return /* @__PURE__ */ React10.createElement(\r\n    \"script\",\r\n    {\r\n      ...props,\r\n      suppressHydrationWarning: true,\r\n      dangerouslySetInnerHTML: {\r\n        __html: `(${restoreScroll})(${JSON.stringify(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\r\n        )}, ${JSON.stringify(ssrKey)})`\r\n      }\r\n    }\r\n  );\r\n}\r\nScrollRestoration.displayName = \"ScrollRestoration\";\r\nfunction getDataRouterConsoleError2(hookName) {\r\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`;\r\n}\r\nfunction useDataRouterContext3(hookName) {\r\n  let ctx = React10.useContext(DataRouterContext);\r\n  invariant(ctx, getDataRouterConsoleError2(hookName));\r\n  return ctx;\r\n}\r\nfunction useDataRouterState2(hookName) {\r\n  let state = React10.useContext(DataRouterStateContext);\r\n  invariant(state, getDataRouterConsoleError2(hookName));\r\n  return state;\r\n}\r\nfunction useLinkClickHandler(to, {\r\n  target,\r\n  replace: replaceProp,\r\n  state,\r\n  preventScrollReset,\r\n  relative,\r\n  viewTransition\r\n} = {}) {\r\n  let navigate = useNavigate();\r\n  let location = useLocation();\r\n  let path = useResolvedPath(to, { relative });\r\n  return React10.useCallback(\r\n    (event) => {\r\n      if (shouldProcessLinkClick(event, target)) {\r\n        event.preventDefault();\r\n        let replace2 = replaceProp !== void 0 ? replaceProp : createPath(location) === createPath(path);\r\n        navigate(to, {\r\n          replace: replace2,\r\n          state,\r\n          preventScrollReset,\r\n          relative,\r\n          viewTransition\r\n        });\r\n      }\r\n    },\r\n    [\r\n      location,\r\n      navigate,\r\n      path,\r\n      replaceProp,\r\n      state,\r\n      target,\r\n      to,\r\n      preventScrollReset,\r\n      relative,\r\n      viewTransition\r\n    ]\r\n  );\r\n}\r\nfunction useSearchParams(defaultInit) {\r\n  warning(\r\n    typeof URLSearchParams !== \"undefined\",\r\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not support the URLSearchParams API. If you need to support Internet Explorer 11, we recommend you load a polyfill such as https://github.com/ungap/url-search-params.`\r\n  );\r\n  let defaultSearchParamsRef = React10.useRef(createSearchParams(defaultInit));\r\n  let hasSetSearchParamsRef = React10.useRef(false);\r\n  let location = useLocation();\r\n  let searchParams = React10.useMemo(\r\n    () => (\r\n      // Only merge in the defaults if we haven't yet called setSearchParams.\r\n      // Once we call that we want those to take precedence, otherwise you can't\r\n      // remove a param with setSearchParams({}) if it has an initial value\r\n      getSearchParamsForLocation(\r\n        location.search,\r\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\r\n      )\r\n    ),\r\n    [location.search]\r\n  );\r\n  let navigate = useNavigate();\r\n  let setSearchParams = React10.useCallback(\r\n    (nextInit, navigateOptions) => {\r\n      const newSearchParams = createSearchParams(\r\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\r\n      );\r\n      hasSetSearchParamsRef.current = true;\r\n      navigate(\"?\" + newSearchParams, navigateOptions);\r\n    },\r\n    [navigate, searchParams]\r\n  );\r\n  return [searchParams, setSearchParams];\r\n}\r\nvar fetcherId = 0;\r\nvar getUniqueFetcherId = () => `__${String(++fetcherId)}__`;\r\nfunction useSubmit() {\r\n  let { router } = useDataRouterContext3(\"useSubmit\" /* UseSubmit */);\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let currentRouteId = useRouteId();\r\n  return React10.useCallback(\r\n    async (target, options = {}) => {\r\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\r\n        target,\r\n        basename\r\n      );\r\n      if (options.navigate === false) {\r\n        let key = options.fetcherKey || getUniqueFetcherId();\r\n        await router.fetch(key, currentRouteId, options.action || action, {\r\n          preventScrollReset: options.preventScrollReset,\r\n          formData,\r\n          body,\r\n          formMethod: options.method || method,\r\n          formEncType: options.encType || encType,\r\n          flushSync: options.flushSync\r\n        });\r\n      } else {\r\n        await router.navigate(options.action || action, {\r\n          preventScrollReset: options.preventScrollReset,\r\n          formData,\r\n          body,\r\n          formMethod: options.method || method,\r\n          formEncType: options.encType || encType,\r\n          replace: options.replace,\r\n          state: options.state,\r\n          fromRouteId: currentRouteId,\r\n          flushSync: options.flushSync,\r\n          viewTransition: options.viewTransition\r\n        });\r\n      }\r\n    },\r\n    [router, basename, currentRouteId]\r\n  );\r\n}\r\nfunction useFormAction(action, { relative } = {}) {\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let routeContext = React10.useContext(RouteContext);\r\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\r\n  let [match] = routeContext.matches.slice(-1);\r\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\r\n  let location = useLocation();\r\n  if (action == null) {\r\n    path.search = location.search;\r\n    let params = new URLSearchParams(path.search);\r\n    let indexValues = params.getAll(\"index\");\r\n    let hasNakedIndexParam = indexValues.some((v) => v === \"\");\r\n    if (hasNakedIndexParam) {\r\n      params.delete(\"index\");\r\n      indexValues.filter((v) => v).forEach((v) => params.append(\"index\", v));\r\n      let qs = params.toString();\r\n      path.search = qs ? `?${qs}` : \"\";\r\n    }\r\n  }\r\n  if ((!action || action === \".\") && match.route.index) {\r\n    path.search = path.search ? path.search.replace(/^\\?/, \"?index&\") : \"?index\";\r\n  }\r\n  if (basename !== \"/\") {\r\n    path.pathname = path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\r\n  }\r\n  return createPath(path);\r\n}\r\nfunction useFetcher({\r\n  key\r\n} = {}) {\r\n  let { router } = useDataRouterContext3(\"useFetcher\" /* UseFetcher */);\r\n  let state = useDataRouterState2(\"useFetcher\" /* UseFetcher */);\r\n  let fetcherData = React10.useContext(FetchersContext);\r\n  let route = React10.useContext(RouteContext);\r\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\r\n  invariant(fetcherData, `useFetcher must be used inside a FetchersContext`);\r\n  invariant(route, `useFetcher must be used inside a RouteContext`);\r\n  invariant(\r\n    routeId != null,\r\n    `useFetcher can only be used on routes that contain a unique \"id\"`\r\n  );\r\n  let defaultKey = React10.useId();\r\n  let [fetcherKey, setFetcherKey] = React10.useState(key || defaultKey);\r\n  if (key && key !== fetcherKey) {\r\n    setFetcherKey(key);\r\n  }\r\n  React10.useEffect(() => {\r\n    router.getFetcher(fetcherKey);\r\n    return () => router.deleteFetcher(fetcherKey);\r\n  }, [router, fetcherKey]);\r\n  let load = React10.useCallback(\r\n    async (href2, opts) => {\r\n      invariant(routeId, \"No routeId available for fetcher.load()\");\r\n      await router.fetch(fetcherKey, routeId, href2, opts);\r\n    },\r\n    [fetcherKey, routeId, router]\r\n  );\r\n  let submitImpl = useSubmit();\r\n  let submit = React10.useCallback(\r\n    async (target, opts) => {\r\n      await submitImpl(target, {\r\n        ...opts,\r\n        navigate: false,\r\n        fetcherKey\r\n      });\r\n    },\r\n    [fetcherKey, submitImpl]\r\n  );\r\n  let FetcherForm = React10.useMemo(() => {\r\n    let FetcherForm2 = React10.forwardRef(\r\n      (props, ref) => {\r\n        return /* @__PURE__ */ React10.createElement(Form, { ...props, navigate: false, fetcherKey, ref });\r\n      }\r\n    );\r\n    FetcherForm2.displayName = \"fetcher.Form\";\r\n    return FetcherForm2;\r\n  }, [fetcherKey]);\r\n  let fetcher = state.fetchers.get(fetcherKey) || IDLE_FETCHER;\r\n  let data2 = fetcherData.get(fetcherKey);\r\n  let fetcherWithComponents = React10.useMemo(\r\n    () => ({\r\n      Form: FetcherForm,\r\n      submit,\r\n      load,\r\n      ...fetcher,\r\n      data: data2\r\n    }),\r\n    [FetcherForm, submit, load, fetcher, data2]\r\n  );\r\n  return fetcherWithComponents;\r\n}\r\nfunction useFetchers() {\r\n  let state = useDataRouterState2(\"useFetchers\" /* UseFetchers */);\r\n  return Array.from(state.fetchers.entries()).map(([key, fetcher]) => ({\r\n    ...fetcher,\r\n    key\r\n  }));\r\n}\r\nvar SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\r\nvar savedScrollPositions = {};\r\nfunction getScrollRestorationKey(location, matches, basename, getKey) {\r\n  let key = null;\r\n  if (getKey) {\r\n    if (basename !== \"/\") {\r\n      key = getKey(\r\n        {\r\n          ...location,\r\n          pathname: stripBasename(location.pathname, basename) || location.pathname\r\n        },\r\n        matches\r\n      );\r\n    } else {\r\n      key = getKey(location, matches);\r\n    }\r\n  }\r\n  if (key == null) {\r\n    key = location.key;\r\n  }\r\n  return key;\r\n}\r\nfunction useScrollRestoration({\r\n  getKey,\r\n  storageKey\r\n} = {}) {\r\n  let { router } = useDataRouterContext3(\"useScrollRestoration\" /* UseScrollRestoration */);\r\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState2(\r\n    \"useScrollRestoration\" /* UseScrollRestoration */\r\n  );\r\n  let { basename } = React10.useContext(NavigationContext);\r\n  let location = useLocation();\r\n  let matches = useMatches();\r\n  let navigation = useNavigation();\r\n  React10.useEffect(() => {\r\n    window.history.scrollRestoration = \"manual\";\r\n    return () => {\r\n      window.history.scrollRestoration = \"auto\";\r\n    };\r\n  }, []);\r\n  usePageHide(\r\n    React10.useCallback(() => {\r\n      if (navigation.state === \"idle\") {\r\n        let key = getScrollRestorationKey(location, matches, basename, getKey);\r\n        savedScrollPositions[key] = window.scrollY;\r\n      }\r\n      try {\r\n        sessionStorage.setItem(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY,\r\n          JSON.stringify(savedScrollPositions)\r\n        );\r\n      } catch (error) {\r\n        warning(\r\n          false,\r\n          `Failed to save scroll positions in sessionStorage, <ScrollRestoration /> will not work properly (${error}).`\r\n        );\r\n      }\r\n      window.history.scrollRestoration = \"auto\";\r\n    }, [navigation.state, getKey, basename, location, matches, storageKey])\r\n  );\r\n  if (typeof document !== \"undefined\") {\r\n    React10.useLayoutEffect(() => {\r\n      try {\r\n        let sessionPositions = sessionStorage.getItem(\r\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\r\n        );\r\n        if (sessionPositions) {\r\n          savedScrollPositions = JSON.parse(sessionPositions);\r\n        }\r\n      } catch (e) {\r\n      }\r\n    }, [storageKey]);\r\n    React10.useLayoutEffect(() => {\r\n      let disableScrollRestoration = router?.enableScrollRestoration(\r\n        savedScrollPositions,\r\n        () => window.scrollY,\r\n        getKey ? (location2, matches2) => getScrollRestorationKey(location2, matches2, basename, getKey) : void 0\r\n      );\r\n      return () => disableScrollRestoration && disableScrollRestoration();\r\n    }, [router, basename, getKey]);\r\n    React10.useLayoutEffect(() => {\r\n      if (restoreScrollPosition === false) {\r\n        return;\r\n      }\r\n      if (typeof restoreScrollPosition === \"number\") {\r\n        window.scrollTo(0, restoreScrollPosition);\r\n        return;\r\n      }\r\n      if (location.hash) {\r\n        let el = document.getElementById(\r\n          decodeURIComponent(location.hash.slice(1))\r\n        );\r\n        if (el) {\r\n          el.scrollIntoView();\r\n          return;\r\n        }\r\n      }\r\n      if (preventScrollReset === true) {\r\n        return;\r\n      }\r\n      window.scrollTo(0, 0);\r\n    }, [location, restoreScrollPosition, preventScrollReset]);\r\n  }\r\n}\r\nfunction useBeforeUnload(callback, options) {\r\n  let { capture } = options || {};\r\n  React10.useEffect(() => {\r\n    let opts = capture != null ? { capture } : void 0;\r\n    window.addEventListener(\"beforeunload\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"beforeunload\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\nfunction usePageHide(callback, options) {\r\n  let { capture } = options || {};\r\n  React10.useEffect(() => {\r\n    let opts = capture != null ? { capture } : void 0;\r\n    window.addEventListener(\"pagehide\", callback, opts);\r\n    return () => {\r\n      window.removeEventListener(\"pagehide\", callback, opts);\r\n    };\r\n  }, [callback, capture]);\r\n}\r\nfunction usePrompt({\r\n  when,\r\n  message\r\n}) {\r\n  let blocker = useBlocker(when);\r\n  React10.useEffect(() => {\r\n    if (blocker.state === \"blocked\") {\r\n      let proceed = window.confirm(message);\r\n      if (proceed) {\r\n        setTimeout(blocker.proceed, 0);\r\n      } else {\r\n        blocker.reset();\r\n      }\r\n    }\r\n  }, [blocker, message]);\r\n  React10.useEffect(() => {\r\n    if (blocker.state === \"blocked\" && !when) {\r\n      blocker.reset();\r\n    }\r\n  }, [blocker, when]);\r\n}\r\nfunction useViewTransitionState(to, opts = {}) {\r\n  let vtContext = React10.useContext(ViewTransitionContext);\r\n  invariant(\r\n    vtContext != null,\r\n    \"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?\"\r\n  );\r\n  let { basename } = useDataRouterContext3(\r\n    \"useViewTransitionState\" /* useViewTransitionState */\r\n  );\r\n  let path = useResolvedPath(to, { relative: opts.relative });\r\n  if (!vtContext.isTransitioning) {\r\n    return false;\r\n  }\r\n  let currentPath = stripBasename(vtContext.currentLocation.pathname, basename) || vtContext.currentLocation.pathname;\r\n  let nextPath = stripBasename(vtContext.nextLocation.pathname, basename) || vtContext.nextLocation.pathname;\r\n  return matchPath(path.pathname, nextPath) != null || matchPath(path.pathname, currentPath) != null;\r\n}\r\n\r\n// lib/dom/server.tsx\r\nimport * as React11 from \"react\";\r\nfunction StaticRouter({\r\n  basename,\r\n  children,\r\n  location: locationProp = \"/\"\r\n}) {\r\n  if (typeof locationProp === \"string\") {\r\n    locationProp = parsePath(locationProp);\r\n  }\r\n  let action = \"POP\" /* Pop */;\r\n  let location = {\r\n    pathname: locationProp.pathname || \"/\",\r\n    search: locationProp.search || \"\",\r\n    hash: locationProp.hash || \"\",\r\n    state: locationProp.state != null ? locationProp.state : null,\r\n    key: locationProp.key || \"default\"\r\n  };\r\n  let staticNavigator = getStatelessNavigator();\r\n  return /* @__PURE__ */ React11.createElement(\r\n    Router,\r\n    {\r\n      basename,\r\n      children,\r\n      location,\r\n      navigationType: action,\r\n      navigator: staticNavigator,\r\n      static: true\r\n    }\r\n  );\r\n}\r\nfunction StaticRouterProvider({\r\n  context,\r\n  router,\r\n  hydrate = true,\r\n  nonce\r\n}) {\r\n  invariant(\r\n    router && context,\r\n    \"You must provide `router` and `context` to <StaticRouterProvider>\"\r\n  );\r\n  let dataRouterContext = {\r\n    router,\r\n    navigator: getStatelessNavigator(),\r\n    static: true,\r\n    staticContext: context,\r\n    basename: context.basename || \"/\"\r\n  };\r\n  let fetchersContext = /* @__PURE__ */ new Map();\r\n  let hydrateScript = \"\";\r\n  if (hydrate !== false) {\r\n    let data2 = {\r\n      loaderData: context.loaderData,\r\n      actionData: context.actionData,\r\n      errors: serializeErrors(context.errors)\r\n    };\r\n    let json = htmlEscape(JSON.stringify(JSON.stringify(data2)));\r\n    hydrateScript = `window.__staticRouterHydrationData = JSON.parse(${json});`;\r\n  }\r\n  let { state } = dataRouterContext.router;\r\n  return /* @__PURE__ */ React11.createElement(React11.Fragment, null, /* @__PURE__ */ React11.createElement(DataRouterContext.Provider, { value: dataRouterContext }, /* @__PURE__ */ React11.createElement(DataRouterStateContext.Provider, { value: state }, /* @__PURE__ */ React11.createElement(FetchersContext.Provider, { value: fetchersContext }, /* @__PURE__ */ React11.createElement(ViewTransitionContext.Provider, { value: { isTransitioning: false } }, /* @__PURE__ */ React11.createElement(\r\n    Router,\r\n    {\r\n      basename: dataRouterContext.basename,\r\n      location: state.location,\r\n      navigationType: state.historyAction,\r\n      navigator: dataRouterContext.navigator,\r\n      static: dataRouterContext.static\r\n    },\r\n    /* @__PURE__ */ React11.createElement(\r\n      DataRoutes2,\r\n      {\r\n        routes: router.routes,\r\n        future: router.future,\r\n        state\r\n      }\r\n    )\r\n  ))))), hydrateScript ? /* @__PURE__ */ React11.createElement(\r\n    \"script\",\r\n    {\r\n      suppressHydrationWarning: true,\r\n      nonce,\r\n      dangerouslySetInnerHTML: { __html: hydrateScript }\r\n    }\r\n  ) : null);\r\n}\r\nfunction DataRoutes2({\r\n  routes,\r\n  future,\r\n  state\r\n}) {\r\n  return useRoutesImpl(routes, void 0, state, future);\r\n}\r\nfunction serializeErrors(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (isRouteErrorResponse(val)) {\r\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\r\n    } else if (val instanceof Error) {\r\n      serialized[key] = {\r\n        message: val.message,\r\n        __type: \"Error\",\r\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\r\n        // can re-create the same type during hydration.\r\n        ...val.name !== \"Error\" ? {\r\n          __subType: val.name\r\n        } : {}\r\n      };\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\nfunction getStatelessNavigator() {\r\n  return {\r\n    createHref,\r\n    encodeLocation,\r\n    push(to) {\r\n      throw new Error(\r\n        `You cannot use navigator.push() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)})\\` somewhere in your app.`\r\n      );\r\n    },\r\n    replace(to) {\r\n      throw new Error(\r\n        `You cannot use navigator.replace() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${JSON.stringify(to)}, { replace: true })\\` somewhere in your app.`\r\n      );\r\n    },\r\n    go(delta) {\r\n      throw new Error(\r\n        `You cannot use navigator.go() on the server because it is a stateless environment. This error was probably triggered when you did a \\`navigate(${delta})\\` somewhere in your app.`\r\n      );\r\n    },\r\n    back() {\r\n      throw new Error(\r\n        `You cannot use navigator.back() on the server because it is a stateless environment.`\r\n      );\r\n    },\r\n    forward() {\r\n      throw new Error(\r\n        `You cannot use navigator.forward() on the server because it is a stateless environment.`\r\n      );\r\n    }\r\n  };\r\n}\r\nfunction createStaticHandler2(routes, opts) {\r\n  return createStaticHandler(routes, {\r\n    ...opts,\r\n    mapRouteProperties\r\n  });\r\n}\r\nfunction createStaticRouter(routes, context, opts = {}) {\r\n  let manifest = {};\r\n  let dataRoutes = convertRoutesToDataRoutes(\r\n    routes,\r\n    mapRouteProperties,\r\n    void 0,\r\n    manifest\r\n  );\r\n  let matches = context.matches.map((match) => {\r\n    let route = manifest[match.route.id] || match.route;\r\n    return {\r\n      ...match,\r\n      route\r\n    };\r\n  });\r\n  let msg = (method) => `You cannot use router.${method}() on the server because it is a stateless environment`;\r\n  return {\r\n    get basename() {\r\n      return context.basename;\r\n    },\r\n    get future() {\r\n      return {\r\n        unstable_middleware: false,\r\n        ...opts?.future\r\n      };\r\n    },\r\n    get state() {\r\n      return {\r\n        historyAction: \"POP\" /* Pop */,\r\n        location: context.location,\r\n        matches,\r\n        loaderData: context.loaderData,\r\n        actionData: context.actionData,\r\n        errors: context.errors,\r\n        initialized: true,\r\n        navigation: IDLE_NAVIGATION,\r\n        restoreScrollPosition: null,\r\n        preventScrollReset: false,\r\n        revalidation: \"idle\",\r\n        fetchers: /* @__PURE__ */ new Map(),\r\n        blockers: /* @__PURE__ */ new Map()\r\n      };\r\n    },\r\n    get routes() {\r\n      return dataRoutes;\r\n    },\r\n    get window() {\r\n      return void 0;\r\n    },\r\n    initialize() {\r\n      throw msg(\"initialize\");\r\n    },\r\n    subscribe() {\r\n      throw msg(\"subscribe\");\r\n    },\r\n    enableScrollRestoration() {\r\n      throw msg(\"enableScrollRestoration\");\r\n    },\r\n    navigate() {\r\n      throw msg(\"navigate\");\r\n    },\r\n    fetch() {\r\n      throw msg(\"fetch\");\r\n    },\r\n    revalidate() {\r\n      throw msg(\"revalidate\");\r\n    },\r\n    createHref,\r\n    encodeLocation,\r\n    getFetcher() {\r\n      return IDLE_FETCHER;\r\n    },\r\n    deleteFetcher() {\r\n      throw msg(\"deleteFetcher\");\r\n    },\r\n    dispose() {\r\n      throw msg(\"dispose\");\r\n    },\r\n    getBlocker() {\r\n      return IDLE_BLOCKER;\r\n    },\r\n    deleteBlocker() {\r\n      throw msg(\"deleteBlocker\");\r\n    },\r\n    patchRoutes() {\r\n      throw msg(\"patchRoutes\");\r\n    },\r\n    _internalFetchControllers: /* @__PURE__ */ new Map(),\r\n    _internalSetRoutes() {\r\n      throw msg(\"_internalSetRoutes\");\r\n    }\r\n  };\r\n}\r\nfunction createHref(to) {\r\n  return typeof to === \"string\" ? to : createPath(to);\r\n}\r\nfunction encodeLocation(to) {\r\n  let href2 = typeof to === \"string\" ? to : createPath(to);\r\n  href2 = href2.replace(/ $/, \"%20\");\r\n  let encoded = ABSOLUTE_URL_REGEX3.test(href2) ? new URL(href2) : new URL(href2, \"http://localhost\");\r\n  return {\r\n    pathname: encoded.pathname,\r\n    search: encoded.search,\r\n    hash: encoded.hash\r\n  };\r\n}\r\nvar ABSOLUTE_URL_REGEX3 = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\r\nvar ESCAPE_LOOKUP2 = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX2 = /[&><\\u2028\\u2029]/g;\r\nfunction htmlEscape(str) {\r\n  return str.replace(ESCAPE_REGEX2, (match) => ESCAPE_LOOKUP2[match]);\r\n}\r\n\r\n// lib/dom/ssr/server.tsx\r\nimport * as React12 from \"react\";\r\nfunction ServerRouter({\r\n  context,\r\n  url,\r\n  nonce\r\n}) {\r\n  if (typeof url === \"string\") {\r\n    url = new URL(url);\r\n  }\r\n  let { manifest, routeModules, criticalCss, serverHandoffString } = context;\r\n  let routes = createServerRoutes(\r\n    manifest.routes,\r\n    routeModules,\r\n    context.future,\r\n    context.isSpaMode\r\n  );\r\n  context.staticHandlerContext.loaderData = {\r\n    ...context.staticHandlerContext.loaderData\r\n  };\r\n  for (let match of context.staticHandlerContext.matches) {\r\n    let routeId = match.route.id;\r\n    let route = routeModules[routeId];\r\n    let manifestRoute = context.manifest.routes[routeId];\r\n    if (route && manifestRoute && shouldHydrateRouteLoader(manifestRoute, route, context.isSpaMode) && (route.HydrateFallback || !manifestRoute.hasLoader)) {\r\n      delete context.staticHandlerContext.loaderData[routeId];\r\n    }\r\n  }\r\n  let router = createStaticRouter(routes, context.staticHandlerContext);\r\n  return /* @__PURE__ */ React12.createElement(React12.Fragment, null, /* @__PURE__ */ React12.createElement(\r\n    FrameworkContext.Provider,\r\n    {\r\n      value: {\r\n        manifest,\r\n        routeModules,\r\n        criticalCss,\r\n        serverHandoffString,\r\n        future: context.future,\r\n        ssr: context.ssr,\r\n        isSpaMode: context.isSpaMode,\r\n        serializeError: context.serializeError,\r\n        renderMeta: context.renderMeta\r\n      }\r\n    },\r\n    /* @__PURE__ */ React12.createElement(RemixErrorBoundary, { location: router.state.location }, /* @__PURE__ */ React12.createElement(\r\n      StaticRouterProvider,\r\n      {\r\n        router,\r\n        context: context.staticHandlerContext,\r\n        hydrate: false\r\n      }\r\n    ))\r\n  ), context.serverHandoffStream ? /* @__PURE__ */ React12.createElement(React12.Suspense, null, /* @__PURE__ */ React12.createElement(\r\n    StreamTransfer,\r\n    {\r\n      context,\r\n      identifier: 0,\r\n      reader: context.serverHandoffStream.getReader(),\r\n      textDecoder: new TextDecoder(),\r\n      nonce\r\n    }\r\n  )) : null);\r\n}\r\n\r\n// lib/dom/ssr/routes-test-stub.tsx\r\nimport * as React13 from \"react\";\r\nfunction createRoutesStub(routes, unstable_getContext) {\r\n  return function RoutesTestStub({\r\n    initialEntries,\r\n    initialIndex,\r\n    hydrationData,\r\n    future\r\n  }) {\r\n    let routerRef = React13.useRef();\r\n    let remixContextRef = React13.useRef();\r\n    if (routerRef.current == null) {\r\n      remixContextRef.current = {\r\n        future: {\r\n          unstable_middleware: future?.unstable_middleware === true\r\n        },\r\n        manifest: {\r\n          routes: {},\r\n          entry: { imports: [], module: \"\" },\r\n          url: \"\",\r\n          version: \"\"\r\n        },\r\n        routeModules: {},\r\n        ssr: false,\r\n        isSpaMode: false\r\n      };\r\n      let patched = processRoutes(\r\n        // @ts-expect-error `StubRouteObject` is stricter about `loader`/`action`\r\n        // types compared to `AgnosticRouteObject`\r\n        convertRoutesToDataRoutes(routes, (r) => r),\r\n        remixContextRef.current.manifest,\r\n        remixContextRef.current.routeModules\r\n      );\r\n      routerRef.current = createMemoryRouter(patched, {\r\n        unstable_getContext,\r\n        initialEntries,\r\n        initialIndex,\r\n        hydrationData\r\n      });\r\n    }\r\n    return /* @__PURE__ */ React13.createElement(FrameworkContext.Provider, { value: remixContextRef.current }, /* @__PURE__ */ React13.createElement(RouterProvider, { router: routerRef.current }));\r\n  };\r\n}\r\nfunction processRoutes(routes, manifest, routeModules, parentId) {\r\n  return routes.map((route) => {\r\n    if (!route.id) {\r\n      throw new Error(\r\n        \"Expected a route.id in @remix-run/testing processRoutes() function\"\r\n      );\r\n    }\r\n    let newRoute = {\r\n      id: route.id,\r\n      path: route.path,\r\n      index: route.index,\r\n      Component: route.Component,\r\n      HydrateFallback: route.HydrateFallback,\r\n      ErrorBoundary: route.ErrorBoundary,\r\n      action: route.action,\r\n      loader: route.loader,\r\n      handle: route.handle,\r\n      shouldRevalidate: route.shouldRevalidate\r\n    };\r\n    let entryRoute = {\r\n      id: route.id,\r\n      path: route.path,\r\n      index: route.index,\r\n      parentId,\r\n      hasAction: route.action != null,\r\n      hasLoader: route.loader != null,\r\n      // When testing routes, you should just be stubbing loader/action, not\r\n      // trying to re-implement the full loader/clientLoader/SSR/hydration flow.\r\n      // That is better tested via E2E tests.\r\n      hasClientAction: false,\r\n      hasClientLoader: false,\r\n      hasErrorBoundary: route.ErrorBoundary != null,\r\n      // any need for these?\r\n      module: \"build/stub-path-to-module.js\",\r\n      clientActionModule: void 0,\r\n      clientLoaderModule: void 0,\r\n      hydrateFallbackModule: void 0\r\n    };\r\n    manifest.routes[newRoute.id] = entryRoute;\r\n    routeModules[route.id] = {\r\n      default: route.Component || Outlet,\r\n      ErrorBoundary: route.ErrorBoundary || void 0,\r\n      handle: route.handle,\r\n      links: route.links,\r\n      meta: route.meta,\r\n      shouldRevalidate: route.shouldRevalidate\r\n    };\r\n    if (route.children) {\r\n      newRoute.children = processRoutes(\r\n        route.children,\r\n        manifest,\r\n        routeModules,\r\n        newRoute.id\r\n      );\r\n    }\r\n    return newRoute;\r\n  });\r\n}\r\n\r\n// lib/server-runtime/cookies.ts\r\nimport { parse, serialize } from \"cookie\";\r\n\r\n// lib/server-runtime/crypto.ts\r\nvar encoder = new TextEncoder();\r\nvar sign = async (value, secret) => {\r\n  let data2 = encoder.encode(value);\r\n  let key = await createKey2(secret, [\"sign\"]);\r\n  let signature = await crypto.subtle.sign(\"HMAC\", key, data2);\r\n  let hash = btoa(String.fromCharCode(...new Uint8Array(signature))).replace(\r\n    /=+$/,\r\n    \"\"\r\n  );\r\n  return value + \".\" + hash;\r\n};\r\nvar unsign = async (cookie, secret) => {\r\n  let index = cookie.lastIndexOf(\".\");\r\n  let value = cookie.slice(0, index);\r\n  let hash = cookie.slice(index + 1);\r\n  let data2 = encoder.encode(value);\r\n  let key = await createKey2(secret, [\"verify\"]);\r\n  let signature = byteStringToUint8Array(atob(hash));\r\n  let valid = await crypto.subtle.verify(\"HMAC\", key, signature, data2);\r\n  return valid ? value : false;\r\n};\r\nvar createKey2 = async (secret, usages) => crypto.subtle.importKey(\r\n  \"raw\",\r\n  encoder.encode(secret),\r\n  { name: \"HMAC\", hash: \"SHA-256\" },\r\n  false,\r\n  usages\r\n);\r\nfunction byteStringToUint8Array(byteString) {\r\n  let array = new Uint8Array(byteString.length);\r\n  for (let i = 0; i < byteString.length; i++) {\r\n    array[i] = byteString.charCodeAt(i);\r\n  }\r\n  return array;\r\n}\r\n\r\n// lib/server-runtime/cookies.ts\r\nvar createCookie = (name, cookieOptions = {}) => {\r\n  let { secrets = [], ...options } = {\r\n    path: \"/\",\r\n    sameSite: \"lax\",\r\n    ...cookieOptions\r\n  };\r\n  warnOnceAboutExpiresCookie(name, options.expires);\r\n  return {\r\n    get name() {\r\n      return name;\r\n    },\r\n    get isSigned() {\r\n      return secrets.length > 0;\r\n    },\r\n    get expires() {\r\n      return typeof options.maxAge !== \"undefined\" ? new Date(Date.now() + options.maxAge * 1e3) : options.expires;\r\n    },\r\n    async parse(cookieHeader, parseOptions) {\r\n      if (!cookieHeader) return null;\r\n      let cookies = parse(cookieHeader, { ...options, ...parseOptions });\r\n      if (name in cookies) {\r\n        let value = cookies[name];\r\n        if (typeof value === \"string\" && value !== \"\") {\r\n          let decoded = await decodeCookieValue(value, secrets);\r\n          return decoded;\r\n        } else {\r\n          return \"\";\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    },\r\n    async serialize(value, serializeOptions) {\r\n      return serialize(\r\n        name,\r\n        value === \"\" ? \"\" : await encodeCookieValue(value, secrets),\r\n        {\r\n          ...options,\r\n          ...serializeOptions\r\n        }\r\n      );\r\n    }\r\n  };\r\n};\r\nvar isCookie = (object) => {\r\n  return object != null && typeof object.name === \"string\" && typeof object.isSigned === \"boolean\" && typeof object.parse === \"function\" && typeof object.serialize === \"function\";\r\n};\r\nasync function encodeCookieValue(value, secrets) {\r\n  let encoded = encodeData(value);\r\n  if (secrets.length > 0) {\r\n    encoded = await sign(encoded, secrets[0]);\r\n  }\r\n  return encoded;\r\n}\r\nasync function decodeCookieValue(value, secrets) {\r\n  if (secrets.length > 0) {\r\n    for (let secret of secrets) {\r\n      let unsignedValue = await unsign(value, secret);\r\n      if (unsignedValue !== false) {\r\n        return decodeData(unsignedValue);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  return decodeData(value);\r\n}\r\nfunction encodeData(value) {\r\n  return btoa(myUnescape(encodeURIComponent(JSON.stringify(value))));\r\n}\r\nfunction decodeData(value) {\r\n  try {\r\n    return JSON.parse(decodeURIComponent(myEscape(atob(value))));\r\n  } catch (error) {\r\n    return {};\r\n  }\r\n}\r\nfunction myEscape(value) {\r\n  let str = value.toString();\r\n  let result = \"\";\r\n  let index = 0;\r\n  let chr, code;\r\n  while (index < str.length) {\r\n    chr = str.charAt(index++);\r\n    if (/[\\w*+\\-./@]/.exec(chr)) {\r\n      result += chr;\r\n    } else {\r\n      code = chr.charCodeAt(0);\r\n      if (code < 256) {\r\n        result += \"%\" + hex(code, 2);\r\n      } else {\r\n        result += \"%u\" + hex(code, 4).toUpperCase();\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction hex(code, length) {\r\n  let result = code.toString(16);\r\n  while (result.length < length) result = \"0\" + result;\r\n  return result;\r\n}\r\nfunction myUnescape(value) {\r\n  let str = value.toString();\r\n  let result = \"\";\r\n  let index = 0;\r\n  let chr, part;\r\n  while (index < str.length) {\r\n    chr = str.charAt(index++);\r\n    if (chr === \"%\") {\r\n      if (str.charAt(index) === \"u\") {\r\n        part = str.slice(index + 1, index + 5);\r\n        if (/^[\\da-f]{4}$/i.exec(part)) {\r\n          result += String.fromCharCode(parseInt(part, 16));\r\n          index += 5;\r\n          continue;\r\n        }\r\n      } else {\r\n        part = str.slice(index, index + 2);\r\n        if (/^[\\da-f]{2}$/i.exec(part)) {\r\n          result += String.fromCharCode(parseInt(part, 16));\r\n          index += 2;\r\n          continue;\r\n        }\r\n      }\r\n    }\r\n    result += chr;\r\n  }\r\n  return result;\r\n}\r\nfunction warnOnceAboutExpiresCookie(name, expires) {\r\n  warnOnce(\r\n    !expires,\r\n    `The \"${name}\" cookie has an \"expires\" property set. This will cause the expires value to not be updated when the session is committed. Instead, you should set the expires value when serializing the cookie. You can use \\`commitSession(session, { expires })\\` if using a session storage object, or \\`cookie.serialize(\"value\", { expires })\\` if you're using the cookie directly.`\r\n  );\r\n}\r\n\r\n// lib/server-runtime/entry.ts\r\nfunction createEntryRouteModules(manifest) {\r\n  return Object.keys(manifest).reduce((memo2, routeId) => {\r\n    let route = manifest[routeId];\r\n    if (route) {\r\n      memo2[routeId] = route.module;\r\n    }\r\n    return memo2;\r\n  }, {});\r\n}\r\n\r\n// lib/server-runtime/mode.ts\r\nvar ServerMode = /* @__PURE__ */ ((ServerMode2) => {\r\n  ServerMode2[\"Development\"] = \"development\";\r\n  ServerMode2[\"Production\"] = \"production\";\r\n  ServerMode2[\"Test\"] = \"test\";\r\n  return ServerMode2;\r\n})(ServerMode || {});\r\nfunction isServerMode(value) {\r\n  return value === \"development\" /* Development */ || value === \"production\" /* Production */ || value === \"test\" /* Test */;\r\n}\r\n\r\n// lib/server-runtime/errors.ts\r\nfunction sanitizeError(error, serverMode) {\r\n  if (error instanceof Error && serverMode !== \"development\" /* Development */) {\r\n    let sanitized = new Error(\"Unexpected Server Error\");\r\n    sanitized.stack = void 0;\r\n    return sanitized;\r\n  }\r\n  return error;\r\n}\r\nfunction sanitizeErrors(errors, serverMode) {\r\n  return Object.entries(errors).reduce((acc, [routeId, error]) => {\r\n    return Object.assign(acc, { [routeId]: sanitizeError(error, serverMode) });\r\n  }, {});\r\n}\r\nfunction serializeError(error, serverMode) {\r\n  let sanitized = sanitizeError(error, serverMode);\r\n  return {\r\n    message: sanitized.message,\r\n    stack: sanitized.stack\r\n  };\r\n}\r\nfunction serializeErrors2(errors, serverMode) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (isRouteErrorResponse(val)) {\r\n      serialized[key] = { ...val, __type: \"RouteErrorResponse\" };\r\n    } else if (val instanceof Error) {\r\n      let sanitized = sanitizeError(val, serverMode);\r\n      serialized[key] = {\r\n        message: sanitized.message,\r\n        stack: sanitized.stack,\r\n        __type: \"Error\",\r\n        // If this is a subclass (i.e., ReferenceError), send up the type so we\r\n        // can re-create the same type during hydration.  This will only apply\r\n        // in dev mode since all production errors are sanitized to normal\r\n        // Error instances\r\n        ...sanitized.name !== \"Error\" ? {\r\n          __subType: sanitized.name\r\n        } : {}\r\n      };\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\n// lib/server-runtime/routeMatching.ts\r\nfunction matchServerRoutes(routes, pathname, basename) {\r\n  let matches = matchRoutes(\r\n    routes,\r\n    pathname,\r\n    basename\r\n  );\r\n  if (!matches) return null;\r\n  return matches.map((match) => ({\r\n    params: match.params,\r\n    pathname: match.pathname,\r\n    route: match.route\r\n  }));\r\n}\r\n\r\n// lib/server-runtime/data.ts\r\nasync function callRouteHandler(handler, args) {\r\n  let result = await handler({\r\n    request: stripRoutesParam(stripIndexParam2(args.request)),\r\n    params: args.params,\r\n    context: args.context\r\n  });\r\n  if (isDataWithResponseInit(result) && result.init && result.init.status && isRedirectStatusCode(result.init.status)) {\r\n    throw new Response(null, result.init);\r\n  }\r\n  return result;\r\n}\r\nfunction stripIndexParam2(request) {\r\n  let url = new URL(request.url);\r\n  let indexValues = url.searchParams.getAll(\"index\");\r\n  url.searchParams.delete(\"index\");\r\n  let indexValuesToKeep = [];\r\n  for (let indexValue of indexValues) {\r\n    if (indexValue) {\r\n      indexValuesToKeep.push(indexValue);\r\n    }\r\n  }\r\n  for (let toKeep of indexValuesToKeep) {\r\n    url.searchParams.append(\"index\", toKeep);\r\n  }\r\n  let init = {\r\n    method: request.method,\r\n    body: request.body,\r\n    headers: request.headers,\r\n    signal: request.signal\r\n  };\r\n  if (init.body) {\r\n    init.duplex = \"half\";\r\n  }\r\n  return new Request(url.href, init);\r\n}\r\nfunction stripRoutesParam(request) {\r\n  let url = new URL(request.url);\r\n  url.searchParams.delete(\"_routes\");\r\n  let init = {\r\n    method: request.method,\r\n    body: request.body,\r\n    headers: request.headers,\r\n    signal: request.signal\r\n  };\r\n  if (init.body) {\r\n    init.duplex = \"half\";\r\n  }\r\n  return new Request(url.href, init);\r\n}\r\n\r\n// lib/server-runtime/invariant.ts\r\nfunction invariant3(value, message) {\r\n  if (value === false || value === null || typeof value === \"undefined\") {\r\n    console.error(\r\n      \"The following error is a bug in React Router; please open an issue! https://github.com/remix-run/react-router/issues/new/choose\"\r\n    );\r\n    throw new Error(message);\r\n  }\r\n}\r\n\r\n// lib/server-runtime/routes.ts\r\nfunction groupRoutesByParentId2(manifest) {\r\n  let routes = {};\r\n  Object.values(manifest).forEach((route) => {\r\n    if (route) {\r\n      let parentId = route.parentId || \"\";\r\n      if (!routes[parentId]) {\r\n        routes[parentId] = [];\r\n      }\r\n      routes[parentId].push(route);\r\n    }\r\n  });\r\n  return routes;\r\n}\r\nfunction createRoutes(manifest, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\r\n  return (routesByParentId[parentId] || []).map((route) => ({\r\n    ...route,\r\n    children: createRoutes(manifest, route.id, routesByParentId)\r\n  }));\r\n}\r\nfunction createStaticHandlerDataRoutes(manifest, future, parentId = \"\", routesByParentId = groupRoutesByParentId2(manifest)) {\r\n  return (routesByParentId[parentId] || []).map((route) => {\r\n    let commonRoute = {\r\n      // Always include root due to default boundaries\r\n      hasErrorBoundary: route.id === \"root\" || route.module.ErrorBoundary != null,\r\n      id: route.id,\r\n      path: route.path,\r\n      unstable_middleware: route.module.unstable_middleware,\r\n      // Need to use RR's version in the param typed here to permit the optional\r\n      // context even though we know it'll always be provided in remix\r\n      loader: route.module.loader ? async (args) => {\r\n        if (args.request.headers.has(\"X-React-Router-Prerender-Data\")) {\r\n          const preRenderedData = args.request.headers.get(\r\n            \"X-React-Router-Prerender-Data\"\r\n          );\r\n          let encoded = preRenderedData ? decodeURI(preRenderedData) : preRenderedData;\r\n          invariant3(encoded, \"Missing prerendered data for route\");\r\n          let uint8array = new TextEncoder().encode(encoded);\r\n          let stream = new ReadableStream({\r\n            start(controller) {\r\n              controller.enqueue(uint8array);\r\n              controller.close();\r\n            }\r\n          });\r\n          let decoded = await decodeViaTurboStream(stream, global);\r\n          let data2 = decoded.value;\r\n          invariant3(\r\n            data2 && route.id in data2,\r\n            \"Unable to decode prerendered data\"\r\n          );\r\n          let result = data2[route.id];\r\n          invariant3(\"data\" in result, \"Unable to process prerendered data\");\r\n          return result.data;\r\n        }\r\n        let val = await callRouteHandler(route.module.loader, args);\r\n        return val;\r\n      } : void 0,\r\n      action: route.module.action ? (args) => callRouteHandler(route.module.action, args) : void 0,\r\n      handle: route.module.handle\r\n    };\r\n    return route.index ? {\r\n      index: true,\r\n      ...commonRoute\r\n    } : {\r\n      caseSensitive: route.caseSensitive,\r\n      children: createStaticHandlerDataRoutes(\r\n        manifest,\r\n        future,\r\n        route.id,\r\n        routesByParentId\r\n      ),\r\n      ...commonRoute\r\n    };\r\n  });\r\n}\r\n\r\n// lib/server-runtime/markup.ts\r\nvar ESCAPE_LOOKUP3 = {\r\n  \"&\": \"\\\\u0026\",\r\n  \">\": \"\\\\u003e\",\r\n  \"<\": \"\\\\u003c\",\r\n  \"\\u2028\": \"\\\\u2028\",\r\n  \"\\u2029\": \"\\\\u2029\"\r\n};\r\nvar ESCAPE_REGEX3 = /[&><\\u2028\\u2029]/g;\r\nfunction escapeHtml2(html) {\r\n  return html.replace(ESCAPE_REGEX3, (match) => ESCAPE_LOOKUP3[match]);\r\n}\r\n\r\n// lib/server-runtime/serverHandoff.ts\r\nfunction createServerHandoffString(serverHandoff) {\r\n  return escapeHtml2(JSON.stringify(serverHandoff));\r\n}\r\n\r\n// lib/server-runtime/dev.ts\r\nvar globalDevServerHooksKey = \"__reactRouterDevServerHooks\";\r\nfunction setDevServerHooks(devServerHooks) {\r\n  globalThis[globalDevServerHooksKey] = devServerHooks;\r\n}\r\nfunction getDevServerHooks() {\r\n  return globalThis[globalDevServerHooksKey];\r\n}\r\n\r\n// lib/server-runtime/single-fetch.ts\r\nimport { encode } from \"turbo-stream\";\r\n\r\n// lib/server-runtime/headers.ts\r\nimport { splitCookiesString } from \"set-cookie-parser\";\r\nfunction getDocumentHeaders(build, context) {\r\n  let boundaryIdx = context.errors ? context.matches.findIndex((m) => context.errors[m.route.id]) : -1;\r\n  let matches = boundaryIdx >= 0 ? context.matches.slice(0, boundaryIdx + 1) : context.matches;\r\n  let errorHeaders;\r\n  if (boundaryIdx >= 0) {\r\n    let { actionHeaders, actionData, loaderHeaders, loaderData } = context;\r\n    context.matches.slice(boundaryIdx).some((match) => {\r\n      let id = match.route.id;\r\n      if (actionHeaders[id] && (!actionData || !actionData.hasOwnProperty(id))) {\r\n        errorHeaders = actionHeaders[id];\r\n      } else if (loaderHeaders[id] && !loaderData.hasOwnProperty(id)) {\r\n        errorHeaders = loaderHeaders[id];\r\n      }\r\n      return errorHeaders != null;\r\n    });\r\n  }\r\n  return matches.reduce((parentHeaders, match, idx) => {\r\n    let { id } = match.route;\r\n    let route = build.routes[id];\r\n    invariant3(route, `Route with id \"${id}\" not found in build`);\r\n    let routeModule = route.module;\r\n    let loaderHeaders = context.loaderHeaders[id] || new Headers();\r\n    let actionHeaders = context.actionHeaders[id] || new Headers();\r\n    let includeErrorHeaders = errorHeaders != null && idx === matches.length - 1;\r\n    let includeErrorCookies = includeErrorHeaders && errorHeaders !== loaderHeaders && errorHeaders !== actionHeaders;\r\n    if (routeModule.headers == null) {\r\n      let headers2 = new Headers(parentHeaders);\r\n      if (includeErrorCookies) {\r\n        prependCookies(errorHeaders, headers2);\r\n      }\r\n      prependCookies(actionHeaders, headers2);\r\n      prependCookies(loaderHeaders, headers2);\r\n      return headers2;\r\n    }\r\n    let headers = new Headers(\r\n      routeModule.headers ? typeof routeModule.headers === \"function\" ? routeModule.headers({\r\n        loaderHeaders,\r\n        parentHeaders,\r\n        actionHeaders,\r\n        errorHeaders: includeErrorHeaders ? errorHeaders : void 0\r\n      }) : routeModule.headers : void 0\r\n    );\r\n    if (includeErrorCookies) {\r\n      prependCookies(errorHeaders, headers);\r\n    }\r\n    prependCookies(actionHeaders, headers);\r\n    prependCookies(loaderHeaders, headers);\r\n    prependCookies(parentHeaders, headers);\r\n    return headers;\r\n  }, new Headers());\r\n}\r\nfunction prependCookies(parentHeaders, childHeaders) {\r\n  let parentSetCookieString = parentHeaders.get(\"Set-Cookie\");\r\n  if (parentSetCookieString) {\r\n    let cookies = splitCookiesString(parentSetCookieString);\r\n    let childCookies = new Set(childHeaders.getSetCookie());\r\n    cookies.forEach((cookie) => {\r\n      if (!childCookies.has(cookie)) {\r\n        childHeaders.append(\"Set-Cookie\", cookie);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n// lib/server-runtime/single-fetch.ts\r\nvar NO_BODY_STATUS_CODES = /* @__PURE__ */ new Set([100, 101, 204, 205, 304]);\r\nvar SINGLE_FETCH_REDIRECT_STATUS = 202;\r\nasync function singleFetchAction(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  try {\r\n    let respond2 = function(context) {\r\n      let headers = getDocumentHeaders(build, context);\r\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\r\n        return generateSingleFetchResponse(request, build, serverMode, {\r\n          result: getSingleFetchRedirect(\r\n            context.statusCode,\r\n            headers,\r\n            build.basename\r\n          ),\r\n          headers,\r\n          status: SINGLE_FETCH_REDIRECT_STATUS\r\n        });\r\n      }\r\n      if (context.errors) {\r\n        Object.values(context.errors).forEach((err) => {\r\n          if (!isRouteErrorResponse(err) || err.error) {\r\n            handleError(err);\r\n          }\r\n        });\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n      let singleFetchResult;\r\n      if (context.errors) {\r\n        singleFetchResult = { error: Object.values(context.errors)[0] };\r\n      } else {\r\n        singleFetchResult = {\r\n          data: Object.values(context.actionData || {})[0]\r\n        };\r\n      }\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: singleFetchResult,\r\n        headers,\r\n        status: context.statusCode\r\n      });\r\n    };\r\n    var respond = respond2;\r\n    let handlerRequest = new Request(handlerUrl, {\r\n      method: request.method,\r\n      body: request.body,\r\n      headers: request.headers,\r\n      signal: request.signal,\r\n      ...request.body ? { duplex: \"half\" } : void 0\r\n    });\r\n    let result = await staticHandler.query(handlerRequest, {\r\n      requestContext: loadContext,\r\n      skipLoaderErrorBubbling: true,\r\n      skipRevalidation: true,\r\n      unstable_respond: respond2\r\n    });\r\n    if (!isResponse(result)) {\r\n      result = respond2(result);\r\n    }\r\n    if (isRedirectResponse(result)) {\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: getSingleFetchRedirect(\r\n          result.status,\r\n          result.headers,\r\n          build.basename\r\n        ),\r\n        headers: result.headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      });\r\n    }\r\n    return result;\r\n  } catch (error) {\r\n    handleError(error);\r\n    return generateSingleFetchResponse(request, build, serverMode, {\r\n      result: { error },\r\n      headers: new Headers(),\r\n      status: 500\r\n    });\r\n  }\r\n}\r\nasync function singleFetchLoaders(build, serverMode, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  try {\r\n    let respond2 = function(context) {\r\n      let headers = getDocumentHeaders(build, context);\r\n      if (isRedirectStatusCode(context.statusCode) && headers.has(\"Location\")) {\r\n        return generateSingleFetchResponse(request, build, serverMode, {\r\n          result: {\r\n            [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\r\n              context.statusCode,\r\n              headers,\r\n              build.basename\r\n            )\r\n          },\r\n          headers,\r\n          status: SINGLE_FETCH_REDIRECT_STATUS\r\n        });\r\n      }\r\n      if (context.errors) {\r\n        Object.values(context.errors).forEach((err) => {\r\n          if (!isRouteErrorResponse(err) || err.error) {\r\n            handleError(err);\r\n          }\r\n        });\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n      let results = {};\r\n      let loadedMatches = new Set(\r\n        context.matches.filter(\r\n          (m) => loadRouteIds ? loadRouteIds.has(m.route.id) : m.route.loader != null\r\n        ).map((m) => m.route.id)\r\n      );\r\n      if (context.errors) {\r\n        for (let [id, error] of Object.entries(context.errors)) {\r\n          results[id] = { error };\r\n        }\r\n      }\r\n      for (let [id, data2] of Object.entries(context.loaderData)) {\r\n        if (!(id in results) && loadedMatches.has(id)) {\r\n          results[id] = { data: data2 };\r\n        }\r\n      }\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: results,\r\n        headers,\r\n        status: context.statusCode\r\n      });\r\n    };\r\n    var respond = respond2;\r\n    let handlerRequest = new Request(handlerUrl, {\r\n      headers: request.headers,\r\n      signal: request.signal\r\n    });\r\n    let routesParam = new URL(request.url).searchParams.get(\"_routes\");\r\n    let loadRouteIds = routesParam ? new Set(routesParam.split(\",\")) : null;\r\n    let result = await staticHandler.query(handlerRequest, {\r\n      requestContext: loadContext,\r\n      filterMatchesToLoad: (m) => !loadRouteIds || loadRouteIds.has(m.route.id),\r\n      skipLoaderErrorBubbling: true,\r\n      unstable_respond: respond2\r\n    });\r\n    if (!isResponse(result)) {\r\n      result = respond2(result);\r\n    }\r\n    if (isRedirectResponse(result)) {\r\n      return generateSingleFetchResponse(request, build, serverMode, {\r\n        result: {\r\n          [SingleFetchRedirectSymbol]: getSingleFetchRedirect(\r\n            result.status,\r\n            result.headers,\r\n            build.basename\r\n          )\r\n        },\r\n        headers: result.headers,\r\n        status: SINGLE_FETCH_REDIRECT_STATUS\r\n      });\r\n    }\r\n    return result;\r\n  } catch (error) {\r\n    handleError(error);\r\n    return generateSingleFetchResponse(request, build, serverMode, {\r\n      result: { root: { error } },\r\n      headers: new Headers(),\r\n      status: 500\r\n    });\r\n  }\r\n}\r\nfunction generateSingleFetchResponse(request, build, serverMode, {\r\n  result,\r\n  headers,\r\n  status\r\n}) {\r\n  let resultHeaders = new Headers(headers);\r\n  resultHeaders.set(\"X-Remix-Response\", \"yes\");\r\n  if (NO_BODY_STATUS_CODES.has(status)) {\r\n    return new Response(null, { status, headers: resultHeaders });\r\n  }\r\n  resultHeaders.set(\"Content-Type\", \"text/x-script\");\r\n  return new Response(\r\n    encodeViaTurboStream(\r\n      result,\r\n      request.signal,\r\n      build.entry.module.streamTimeout,\r\n      serverMode\r\n    ),\r\n    {\r\n      status: status || 200,\r\n      headers: resultHeaders\r\n    }\r\n  );\r\n}\r\nfunction getSingleFetchRedirect(status, headers, basename) {\r\n  let redirect2 = headers.get(\"Location\");\r\n  if (basename) {\r\n    redirect2 = stripBasename(redirect2, basename) || redirect2;\r\n  }\r\n  return {\r\n    redirect: redirect2,\r\n    status,\r\n    revalidate: (\r\n      // Technically X-Remix-Revalidate isn't needed here - that was an implementation\r\n      // detail of ?_data requests as our way to tell the front end to revalidate when\r\n      // we didn't have a response body to include that information in.\r\n      // With single fetch, we tell the front end via this revalidate boolean field.\r\n      // However, we're respecting it for now because it may be something folks have\r\n      // used in their own responses\r\n      // TODO(v3): Consider removing or making this official public API\r\n      headers.has(\"X-Remix-Revalidate\") || headers.has(\"Set-Cookie\")\r\n    ),\r\n    reload: headers.has(\"X-Remix-Reload-Document\"),\r\n    replace: headers.has(\"X-Remix-Replace\")\r\n  };\r\n}\r\nfunction encodeViaTurboStream(data2, requestSignal, streamTimeout, serverMode) {\r\n  let controller = new AbortController();\r\n  let timeoutId = setTimeout(\r\n    () => controller.abort(new Error(\"Server Timeout\")),\r\n    typeof streamTimeout === \"number\" ? streamTimeout : 4950\r\n  );\r\n  requestSignal.addEventListener(\"abort\", () => clearTimeout(timeoutId));\r\n  return encode(data2, {\r\n    signal: controller.signal,\r\n    plugins: [\r\n      (value) => {\r\n        if (value instanceof Error) {\r\n          let { name, message, stack } = serverMode === \"production\" /* Production */ ? sanitizeError(value, serverMode) : value;\r\n          return [\"SanitizedError\", name, message, stack];\r\n        }\r\n        if (value instanceof ErrorResponseImpl) {\r\n          let { data: data3, status, statusText } = value;\r\n          return [\"ErrorResponse\", data3, status, statusText];\r\n        }\r\n        if (value && typeof value === \"object\" && SingleFetchRedirectSymbol in value) {\r\n          return [\"SingleFetchRedirect\", value[SingleFetchRedirectSymbol]];\r\n        }\r\n      }\r\n    ],\r\n    postPlugins: [\r\n      (value) => {\r\n        if (!value) return;\r\n        if (typeof value !== \"object\") return;\r\n        return [\r\n          \"SingleFetchClassInstance\",\r\n          Object.fromEntries(Object.entries(value))\r\n        ];\r\n      },\r\n      () => [\"SingleFetchFallback\"]\r\n    ]\r\n  });\r\n}\r\n\r\n// lib/server-runtime/server.ts\r\nfunction derive(build, mode) {\r\n  let routes = createRoutes(build.routes);\r\n  let dataRoutes = createStaticHandlerDataRoutes(build.routes, build.future);\r\n  let serverMode = isServerMode(mode) ? mode : \"production\" /* Production */;\r\n  let staticHandler = createStaticHandler(dataRoutes, {\r\n    basename: build.basename\r\n  });\r\n  let errorHandler = build.entry.module.handleError || ((error, { request }) => {\r\n    if (serverMode !== \"test\" /* Test */ && !request.signal.aborted) {\r\n      console.error(\r\n        // @ts-expect-error This is \"private\" from users but intended for internal use\r\n        isRouteErrorResponse(error) && error.error ? error.error : error\r\n      );\r\n    }\r\n  });\r\n  return {\r\n    routes,\r\n    dataRoutes,\r\n    serverMode,\r\n    staticHandler,\r\n    errorHandler\r\n  };\r\n}\r\nvar createRequestHandler = (build, mode) => {\r\n  let _build;\r\n  let routes;\r\n  let serverMode;\r\n  let staticHandler;\r\n  let errorHandler;\r\n  return async function requestHandler(request, initialContext) {\r\n    _build = typeof build === \"function\" ? await build() : build;\r\n    let loadContext = _build.future.unstable_middleware ? new unstable_RouterContextProvider(\r\n      initialContext\r\n    ) : initialContext || {};\r\n    if (typeof build === \"function\") {\r\n      let derived = derive(_build, mode);\r\n      routes = derived.routes;\r\n      serverMode = derived.serverMode;\r\n      staticHandler = derived.staticHandler;\r\n      errorHandler = derived.errorHandler;\r\n    } else if (!routes || !serverMode || !staticHandler || !errorHandler) {\r\n      let derived = derive(_build, mode);\r\n      routes = derived.routes;\r\n      serverMode = derived.serverMode;\r\n      staticHandler = derived.staticHandler;\r\n      errorHandler = derived.errorHandler;\r\n    }\r\n    let url = new URL(request.url);\r\n    let normalizedBasename = _build.basename || \"/\";\r\n    let normalizedPath = url.pathname;\r\n    if (stripBasename(normalizedPath, normalizedBasename) === \"/_root.data\") {\r\n      normalizedPath = normalizedBasename;\r\n    } else if (normalizedPath.endsWith(\".data\")) {\r\n      normalizedPath = normalizedPath.replace(/\\.data$/, \"\");\r\n    }\r\n    if (stripBasename(normalizedPath, normalizedBasename) !== \"/\" && normalizedPath.endsWith(\"/\")) {\r\n      normalizedPath = normalizedPath.slice(0, -1);\r\n    }\r\n    let params = {};\r\n    let handleError = (error) => {\r\n      if (mode === \"development\" /* Development */) {\r\n        getDevServerHooks()?.processRequestError?.(error);\r\n      }\r\n      errorHandler(error, {\r\n        context: loadContext,\r\n        params,\r\n        request\r\n      });\r\n    };\r\n    if (!_build.ssr) {\r\n      if (_build.prerender.length === 0) {\r\n        request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\r\n      } else if (!_build.prerender.includes(normalizedPath) && !_build.prerender.includes(normalizedPath + \"/\")) {\r\n        if (url.pathname.endsWith(\".data\")) {\r\n          errorHandler(\r\n            new ErrorResponseImpl(\r\n              404,\r\n              \"Not Found\",\r\n              `Refusing to SSR the path \\`${normalizedPath}\\` because \\`ssr:false\\` is set and the path is not included in the \\`prerender\\` config, so in production the path will be a 404.`\r\n            ),\r\n            {\r\n              context: loadContext,\r\n              params,\r\n              request\r\n            }\r\n          );\r\n          return new Response(\"Not Found\", {\r\n            status: 404,\r\n            statusText: \"Not Found\"\r\n          });\r\n        } else {\r\n          request.headers.set(\"X-React-Router-SPA-Mode\", \"yes\");\r\n        }\r\n      }\r\n    }\r\n    let manifestUrl = `${normalizedBasename}/__manifest`.replace(/\\/+/g, \"/\");\r\n    if (url.pathname === manifestUrl) {\r\n      try {\r\n        let res = await handleManifestRequest(_build, routes, url);\r\n        return res;\r\n      } catch (e) {\r\n        handleError(e);\r\n        return new Response(\"Unknown Server Error\", { status: 500 });\r\n      }\r\n    }\r\n    let matches = matchServerRoutes(routes, url.pathname, _build.basename);\r\n    if (matches && matches.length > 0) {\r\n      Object.assign(params, matches[0].params);\r\n    }\r\n    let response;\r\n    if (url.pathname.endsWith(\".data\")) {\r\n      let handlerUrl = new URL(request.url);\r\n      handlerUrl.pathname = normalizedPath;\r\n      let singleFetchMatches = matchServerRoutes(\r\n        routes,\r\n        handlerUrl.pathname,\r\n        _build.basename\r\n      );\r\n      response = await handleSingleFetchRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        request,\r\n        handlerUrl,\r\n        loadContext,\r\n        handleError\r\n      );\r\n      if (_build.entry.module.handleDataRequest) {\r\n        response = await _build.entry.module.handleDataRequest(response, {\r\n          context: loadContext,\r\n          params: singleFetchMatches ? singleFetchMatches[0].params : {},\r\n          request\r\n        });\r\n        if (isRedirectResponse(response)) {\r\n          let result = getSingleFetchRedirect(\r\n            response.status,\r\n            response.headers,\r\n            _build.basename\r\n          );\r\n          if (request.method === \"GET\") {\r\n            result = {\r\n              [SingleFetchRedirectSymbol]: result\r\n            };\r\n          }\r\n          let headers = new Headers(response.headers);\r\n          headers.set(\"Content-Type\", \"text/x-script\");\r\n          return new Response(\r\n            encodeViaTurboStream(\r\n              result,\r\n              request.signal,\r\n              _build.entry.module.streamTimeout,\r\n              serverMode\r\n            ),\r\n            {\r\n              status: SINGLE_FETCH_REDIRECT_STATUS,\r\n              headers\r\n            }\r\n          );\r\n        }\r\n      }\r\n    } else if (!request.headers.has(\"X-React-Router-SPA-Mode\") && matches && matches[matches.length - 1].route.module.default == null && matches[matches.length - 1].route.module.ErrorBoundary == null) {\r\n      response = await handleResourceRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        matches.slice(-1)[0].route.id,\r\n        request,\r\n        loadContext,\r\n        handleError\r\n      );\r\n    } else {\r\n      let { pathname } = url;\r\n      let criticalCss = void 0;\r\n      if (_build.getCriticalCss) {\r\n        criticalCss = await _build.getCriticalCss({ pathname });\r\n      } else if (mode === \"development\" /* Development */ && getDevServerHooks()?.getCriticalCss) {\r\n        criticalCss = await getDevServerHooks()?.getCriticalCss?.(pathname);\r\n      }\r\n      response = await handleDocumentRequest(\r\n        serverMode,\r\n        _build,\r\n        staticHandler,\r\n        request,\r\n        loadContext,\r\n        handleError,\r\n        criticalCss\r\n      );\r\n    }\r\n    if (request.method === \"HEAD\") {\r\n      return new Response(null, {\r\n        headers: response.headers,\r\n        status: response.status,\r\n        statusText: response.statusText\r\n      });\r\n    }\r\n    return response;\r\n  };\r\n};\r\nasync function handleManifestRequest(build, routes, url) {\r\n  if (build.assets.version !== url.searchParams.get(\"version\")) {\r\n    return new Response(null, {\r\n      status: 204,\r\n      headers: {\r\n        \"X-Remix-Reload-Document\": \"true\"\r\n      }\r\n    });\r\n  }\r\n  let patches = {};\r\n  if (url.searchParams.has(\"p\")) {\r\n    for (let path of url.searchParams.getAll(\"p\")) {\r\n      let matches = matchServerRoutes(routes, path, build.basename);\r\n      if (matches) {\r\n        for (let match of matches) {\r\n          let routeId = match.route.id;\r\n          let route = build.assets.routes[routeId];\r\n          if (route) {\r\n            patches[routeId] = route;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Response.json(patches, {\r\n      headers: {\r\n        \"Cache-Control\": \"public, max-age=31536000, immutable\"\r\n      }\r\n    });\r\n  }\r\n  return new Response(\"Invalid Request\", { status: 400 });\r\n}\r\nasync function handleSingleFetchRequest(serverMode, build, staticHandler, request, handlerUrl, loadContext, handleError) {\r\n  let response = request.method !== \"GET\" ? await singleFetchAction(\r\n    build,\r\n    serverMode,\r\n    staticHandler,\r\n    request,\r\n    handlerUrl,\r\n    loadContext,\r\n    handleError\r\n  ) : await singleFetchLoaders(\r\n    build,\r\n    serverMode,\r\n    staticHandler,\r\n    request,\r\n    handlerUrl,\r\n    loadContext,\r\n    handleError\r\n  );\r\n  return response;\r\n}\r\nasync function handleDocumentRequest(serverMode, build, staticHandler, request, loadContext, handleError, criticalCss) {\r\n  let isSpaMode = request.headers.has(\"X-React-Router-SPA-Mode\");\r\n  try {\r\n    let response = await staticHandler.query(request, {\r\n      requestContext: loadContext,\r\n      unstable_respond: build.future.unstable_middleware ? (ctx) => renderHtml(ctx, isSpaMode) : void 0\r\n    });\r\n    return isResponse(response) ? response : renderHtml(response, isSpaMode);\r\n  } catch (error) {\r\n    handleError(error);\r\n    return new Response(null, { status: 500 });\r\n  }\r\n  async function renderHtml(context, isSpaMode2) {\r\n    if (isResponse(context)) {\r\n      return context;\r\n    }\r\n    let headers = getDocumentHeaders(build, context);\r\n    if (NO_BODY_STATUS_CODES.has(context.statusCode)) {\r\n      return new Response(null, { status: context.statusCode, headers });\r\n    }\r\n    if (context.errors) {\r\n      Object.values(context.errors).forEach((err) => {\r\n        if (!isRouteErrorResponse(err) || err.error) {\r\n          handleError(err);\r\n        }\r\n      });\r\n      context.errors = sanitizeErrors(context.errors, serverMode);\r\n    }\r\n    let state = {\r\n      loaderData: context.loaderData,\r\n      actionData: context.actionData,\r\n      errors: serializeErrors2(context.errors, serverMode)\r\n    };\r\n    let entryContext = {\r\n      manifest: build.assets,\r\n      routeModules: createEntryRouteModules(build.routes),\r\n      staticHandlerContext: context,\r\n      criticalCss,\r\n      serverHandoffString: createServerHandoffString({\r\n        basename: build.basename,\r\n        criticalCss,\r\n        future: build.future,\r\n        ssr: build.ssr,\r\n        isSpaMode: isSpaMode2\r\n      }),\r\n      serverHandoffStream: encodeViaTurboStream(\r\n        state,\r\n        request.signal,\r\n        build.entry.module.streamTimeout,\r\n        serverMode\r\n      ),\r\n      renderMeta: {},\r\n      future: build.future,\r\n      ssr: build.ssr,\r\n      isSpaMode: isSpaMode2,\r\n      serializeError: (err) => serializeError(err, serverMode)\r\n    };\r\n    let handleDocumentRequestFunction = build.entry.module.default;\r\n    try {\r\n      return await handleDocumentRequestFunction(\r\n        request,\r\n        context.statusCode,\r\n        headers,\r\n        entryContext,\r\n        loadContext\r\n      );\r\n    } catch (error) {\r\n      handleError(error);\r\n      let errorForSecondRender = error;\r\n      if (isResponse(error)) {\r\n        try {\r\n          let data2 = await unwrapResponse(error);\r\n          errorForSecondRender = new ErrorResponseImpl(\r\n            error.status,\r\n            error.statusText,\r\n            data2\r\n          );\r\n        } catch (e) {\r\n        }\r\n      }\r\n      context = getStaticContextFromError(\r\n        staticHandler.dataRoutes,\r\n        context,\r\n        errorForSecondRender\r\n      );\r\n      if (context.errors) {\r\n        context.errors = sanitizeErrors(context.errors, serverMode);\r\n      }\r\n      let state2 = {\r\n        loaderData: context.loaderData,\r\n        actionData: context.actionData,\r\n        errors: serializeErrors2(context.errors, serverMode)\r\n      };\r\n      entryContext = {\r\n        ...entryContext,\r\n        staticHandlerContext: context,\r\n        serverHandoffString: createServerHandoffString({\r\n          basename: build.basename,\r\n          future: build.future,\r\n          ssr: build.ssr,\r\n          isSpaMode: isSpaMode2\r\n        }),\r\n        serverHandoffStream: encodeViaTurboStream(\r\n          state2,\r\n          request.signal,\r\n          build.entry.module.streamTimeout,\r\n          serverMode\r\n        ),\r\n        renderMeta: {}\r\n      };\r\n      try {\r\n        return await handleDocumentRequestFunction(\r\n          request,\r\n          context.statusCode,\r\n          headers,\r\n          entryContext,\r\n          loadContext\r\n        );\r\n      } catch (error2) {\r\n        handleError(error2);\r\n        return returnLastResortErrorResponse(error2, serverMode);\r\n      }\r\n    }\r\n  }\r\n}\r\nasync function handleResourceRequest(serverMode, build, staticHandler, routeId, request, loadContext, handleError) {\r\n  try {\r\n    let response = await staticHandler.queryRoute(request, {\r\n      routeId,\r\n      requestContext: loadContext,\r\n      unstable_respond: build.future.unstable_middleware ? (ctx) => ctx : void 0\r\n    });\r\n    if (isResponse(response)) {\r\n      return response;\r\n    }\r\n    if (typeof response === \"string\") {\r\n      return new Response(response);\r\n    }\r\n    return Response.json(response);\r\n  } catch (error) {\r\n    if (isResponse(error)) {\r\n      error.headers.set(\"X-Remix-Catch\", \"yes\");\r\n      return error;\r\n    }\r\n    if (isRouteErrorResponse(error)) {\r\n      if (error) {\r\n        handleError(error);\r\n      }\r\n      return errorResponseToJson(error, serverMode);\r\n    }\r\n    if (error instanceof Error && error.message === \"Expected a response from queryRoute\") {\r\n      let newError = new Error(\r\n        \"Expected a Response to be returned from resource route handler\"\r\n      );\r\n      handleError(newError);\r\n      return returnLastResortErrorResponse(newError, serverMode);\r\n    }\r\n    handleError(error);\r\n    return returnLastResortErrorResponse(error, serverMode);\r\n  }\r\n}\r\nfunction errorResponseToJson(errorResponse, serverMode) {\r\n  return Response.json(\r\n    serializeError(\r\n      // @ts-expect-error This is \"private\" from users but intended for internal use\r\n      errorResponse.error || new Error(\"Unexpected Server Error\"),\r\n      serverMode\r\n    ),\r\n    {\r\n      status: errorResponse.status,\r\n      statusText: errorResponse.statusText,\r\n      headers: {\r\n        \"X-Remix-Error\": \"yes\"\r\n      }\r\n    }\r\n  );\r\n}\r\nfunction returnLastResortErrorResponse(error, serverMode) {\r\n  let message = \"Unexpected Server Error\";\r\n  if (serverMode !== \"production\" /* Production */) {\r\n    message += `\r\n\r\n${String(error)}`;\r\n  }\r\n  return new Response(message, {\r\n    status: 500,\r\n    headers: {\r\n      \"Content-Type\": \"text/plain\"\r\n    }\r\n  });\r\n}\r\nfunction unwrapResponse(response) {\r\n  let contentType = response.headers.get(\"Content-Type\");\r\n  return contentType && /\\bapplication\\/json\\b/.test(contentType) ? response.body == null ? null : response.json() : response.text();\r\n}\r\n\r\n// lib/server-runtime/sessions.ts\r\nfunction flash(name) {\r\n  return `__flash_${name}__`;\r\n}\r\nvar createSession = (initialData = {}, id = \"\") => {\r\n  let map = new Map(Object.entries(initialData));\r\n  return {\r\n    get id() {\r\n      return id;\r\n    },\r\n    get data() {\r\n      return Object.fromEntries(map);\r\n    },\r\n    has(name) {\r\n      return map.has(name) || map.has(flash(name));\r\n    },\r\n    get(name) {\r\n      if (map.has(name)) return map.get(name);\r\n      let flashName = flash(name);\r\n      if (map.has(flashName)) {\r\n        let value = map.get(flashName);\r\n        map.delete(flashName);\r\n        return value;\r\n      }\r\n      return void 0;\r\n    },\r\n    set(name, value) {\r\n      map.set(name, value);\r\n    },\r\n    flash(name, value) {\r\n      map.set(flash(name), value);\r\n    },\r\n    unset(name) {\r\n      map.delete(name);\r\n    }\r\n  };\r\n};\r\nvar isSession = (object) => {\r\n  return object != null && typeof object.id === \"string\" && typeof object.data !== \"undefined\" && typeof object.has === \"function\" && typeof object.get === \"function\" && typeof object.set === \"function\" && typeof object.flash === \"function\" && typeof object.unset === \"function\";\r\n};\r\nfunction createSessionStorage({\r\n  cookie: cookieArg,\r\n  createData,\r\n  readData,\r\n  updateData,\r\n  deleteData\r\n}) {\r\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\r\n  warnOnceAboutSigningSessionCookie(cookie);\r\n  return {\r\n    async getSession(cookieHeader, options) {\r\n      let id = cookieHeader && await cookie.parse(cookieHeader, options);\r\n      let data2 = id && await readData(id);\r\n      return createSession(data2 || {}, id || \"\");\r\n    },\r\n    async commitSession(session, options) {\r\n      let { id, data: data2 } = session;\r\n      let expires = options?.maxAge != null ? new Date(Date.now() + options.maxAge * 1e3) : options?.expires != null ? options.expires : cookie.expires;\r\n      if (id) {\r\n        await updateData(id, data2, expires);\r\n      } else {\r\n        id = await createData(data2, expires);\r\n      }\r\n      return cookie.serialize(id, options);\r\n    },\r\n    async destroySession(session, options) {\r\n      await deleteData(session.id);\r\n      return cookie.serialize(\"\", {\r\n        ...options,\r\n        maxAge: void 0,\r\n        expires: /* @__PURE__ */ new Date(0)\r\n      });\r\n    }\r\n  };\r\n}\r\nfunction warnOnceAboutSigningSessionCookie(cookie) {\r\n  warnOnce(\r\n    cookie.isSigned,\r\n    `The \"${cookie.name}\" cookie is not signed, but session cookies should be signed to prevent tampering on the client before they are sent back to the server. See https://remix.run/utils/cookies#signing-cookies for more information.`\r\n  );\r\n}\r\n\r\n// lib/server-runtime/sessions/cookieStorage.ts\r\nfunction createCookieSessionStorage({ cookie: cookieArg } = {}) {\r\n  let cookie = isCookie(cookieArg) ? cookieArg : createCookie(cookieArg?.name || \"__session\", cookieArg);\r\n  warnOnceAboutSigningSessionCookie(cookie);\r\n  return {\r\n    async getSession(cookieHeader, options) {\r\n      return createSession(\r\n        cookieHeader && await cookie.parse(cookieHeader, options) || {}\r\n      );\r\n    },\r\n    async commitSession(session, options) {\r\n      let serializedCookie = await cookie.serialize(session.data, options);\r\n      if (serializedCookie.length > 4096) {\r\n        throw new Error(\r\n          \"Cookie length will exceed browser maximum. Length: \" + serializedCookie.length\r\n        );\r\n      }\r\n      return serializedCookie;\r\n    },\r\n    async destroySession(_session, options) {\r\n      return cookie.serialize(\"\", {\r\n        ...options,\r\n        maxAge: void 0,\r\n        expires: /* @__PURE__ */ new Date(0)\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n// lib/server-runtime/sessions/memoryStorage.ts\r\nfunction createMemorySessionStorage({ cookie } = {}) {\r\n  let map = /* @__PURE__ */ new Map();\r\n  return createSessionStorage({\r\n    cookie,\r\n    async createData(data2, expires) {\r\n      let id = Math.random().toString(36).substring(2, 10);\r\n      map.set(id, { data: data2, expires });\r\n      return id;\r\n    },\r\n    async readData(id) {\r\n      if (map.has(id)) {\r\n        let { data: data2, expires } = map.get(id);\r\n        if (!expires || expires > /* @__PURE__ */ new Date()) {\r\n          return data2;\r\n        }\r\n        if (expires) map.delete(id);\r\n      }\r\n      return null;\r\n    },\r\n    async updateData(id, data2, expires) {\r\n      map.set(id, { data: data2, expires });\r\n    },\r\n    async deleteData(id) {\r\n      map.delete(id);\r\n    }\r\n  });\r\n}\r\n\r\n// lib/href.ts\r\nfunction href(path, ...args) {\r\n  let params = args[0];\r\n  return path.split(\"/\").map((segment) => {\r\n    const match = segment.match(/^:([\\w-]+)(\\?)?/);\r\n    if (!match) return segment;\r\n    const param = match[1];\r\n    const value = params ? params[param] : void 0;\r\n    const isRequired = match[2] === void 0;\r\n    if (isRequired && value === void 0) {\r\n      throw Error(\r\n        `Path '${path}' requires param '${param}' but it was not provided`\r\n      );\r\n    }\r\n    return value;\r\n  }).filter((segment) => segment !== void 0).join(\"/\");\r\n}\r\n\r\n// lib/dom/ssr/errors.ts\r\nfunction deserializeErrors2(errors) {\r\n  if (!errors) return null;\r\n  let entries = Object.entries(errors);\r\n  let serialized = {};\r\n  for (let [key, val] of entries) {\r\n    if (val && val.__type === \"RouteErrorResponse\") {\r\n      serialized[key] = new ErrorResponseImpl(\r\n        val.status,\r\n        val.statusText,\r\n        val.data,\r\n        val.internal === true\r\n      );\r\n    } else if (val && val.__type === \"Error\") {\r\n      if (val.__subType) {\r\n        let ErrorConstructor = window[val.__subType];\r\n        if (typeof ErrorConstructor === \"function\") {\r\n          try {\r\n            let error = new ErrorConstructor(val.message);\r\n            error.stack = val.stack;\r\n            serialized[key] = error;\r\n          } catch (e) {\r\n          }\r\n        }\r\n      }\r\n      if (serialized[key] == null) {\r\n        let error = new Error(val.message);\r\n        error.stack = val.stack;\r\n        serialized[key] = error;\r\n      }\r\n    } else {\r\n      serialized[key] = val;\r\n    }\r\n  }\r\n  return serialized;\r\n}\r\n\r\nexport {\r\n  Action,\r\n  createBrowserHistory,\r\n  invariant,\r\n  createPath,\r\n  parsePath,\r\n  unstable_createContext,\r\n  unstable_RouterContextProvider,\r\n  matchRoutes,\r\n  generatePath,\r\n  matchPath,\r\n  resolvePath,\r\n  data,\r\n  redirect,\r\n  redirectDocument,\r\n  replace,\r\n  ErrorResponseImpl,\r\n  isRouteErrorResponse,\r\n  IDLE_NAVIGATION,\r\n  IDLE_FETCHER,\r\n  IDLE_BLOCKER,\r\n  createRouter,\r\n  DataRouterContext,\r\n  DataRouterStateContext,\r\n  ViewTransitionContext,\r\n  FetchersContext,\r\n  NavigationContext,\r\n  LocationContext,\r\n  RouteContext,\r\n  useHref,\r\n  useInRouterContext,\r\n  useLocation,\r\n  useNavigationType,\r\n  useMatch,\r\n  useNavigate,\r\n  useOutletContext,\r\n  useOutlet,\r\n  useParams,\r\n  useResolvedPath,\r\n  useRoutes,\r\n  useNavigation,\r\n  useRevalidator,\r\n  useMatches,\r\n  useLoaderData,\r\n  useRouteLoaderData,\r\n  useActionData,\r\n  useRouteError,\r\n  useAsyncValue,\r\n  useAsyncError,\r\n  useBlocker,\r\n  mapRouteProperties,\r\n  createMemoryRouter,\r\n  RouterProvider,\r\n  MemoryRouter,\r\n  Navigate,\r\n  Outlet,\r\n  Route,\r\n  Router,\r\n  Routes,\r\n  Await,\r\n  createRoutesFromChildren,\r\n  createRoutesFromElements,\r\n  renderMatches,\r\n  createSearchParams,\r\n  SingleFetchRedirectSymbol,\r\n  getSingleFetchDataStrategy,\r\n  decodeViaTurboStream,\r\n  RemixErrorBoundary,\r\n  createClientRoutesWithHMRRevalidationOptOut,\r\n  createClientRoutes,\r\n  shouldHydrateRouteLoader,\r\n  getPatchRoutesOnNavigationFunction,\r\n  useFogOFWarDiscovery,\r\n  FrameworkContext,\r\n  Links,\r\n  PrefetchPageLinks,\r\n  Meta,\r\n  Scripts,\r\n  createBrowserRouter,\r\n  createHashRouter,\r\n  BrowserRouter,\r\n  HashRouter,\r\n  HistoryRouter,\r\n  Link,\r\n  NavLink,\r\n  Form,\r\n  ScrollRestoration,\r\n  useLinkClickHandler,\r\n  useSearchParams,\r\n  useSubmit,\r\n  useFormAction,\r\n  useFetcher,\r\n  useFetchers,\r\n  useScrollRestoration,\r\n  useBeforeUnload,\r\n  usePrompt,\r\n  useViewTransitionState,\r\n  StaticRouter,\r\n  StaticRouterProvider,\r\n  createStaticHandler2 as createStaticHandler,\r\n  createStaticRouter,\r\n  ServerRouter,\r\n  createRoutesStub,\r\n  createCookie,\r\n  isCookie,\r\n  ServerMode,\r\n  setDevServerHooks,\r\n  createRequestHandler,\r\n  createSession,\r\n  isSession,\r\n  createSessionStorage,\r\n  createCookieSessionStorage,\r\n  createMemorySessionStorage,\r\n  href,\r\n  deserializeErrors2 as deserializeErrors\r\n};\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst Constants = {\r\n    LIBRARY_NAME: \"MSAL.JS\",\r\n    SKU: \"msal.js.common\",\r\n    // Prefix for all library cache entries\r\n    CACHE_PREFIX: \"msal\",\r\n    // default authority\r\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\r\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\r\n    DEFAULT_COMMON_TENANT: \"common\",\r\n    // ADFS String\r\n    ADFS: \"adfs\",\r\n    DSTS: \"dstsv2\",\r\n    // Default AAD Instance Discovery Endpoint\r\n    AAD_INSTANCE_DISCOVERY_ENDPT: \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\r\n    // CIAM URL\r\n    CIAM_AUTH_URL: \".ciamlogin.com\",\r\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\r\n    // Resource delimiter - used for certain cache entries\r\n    RESOURCE_DELIM: \"|\",\r\n    // Placeholder for non-existent account ids/objects\r\n    NO_ACCOUNT: \"NO_ACCOUNT\",\r\n    // Claims\r\n    CLAIMS: \"claims\",\r\n    // Consumer UTID\r\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\r\n    // Default scopes\r\n    OPENID_SCOPE: \"openid\",\r\n    PROFILE_SCOPE: \"profile\",\r\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\r\n    EMAIL_SCOPE: \"email\",\r\n    // Default response type for authorization code flow\r\n    CODE_RESPONSE_TYPE: \"code\",\r\n    CODE_GRANT_TYPE: \"authorization_code\",\r\n    RT_GRANT_TYPE: \"refresh_token\",\r\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\r\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\r\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    AUTHORIZATION_PENDING: \"authorization_pending\",\r\n    NOT_DEFINED: \"not_defined\",\r\n    EMPTY_STRING: \"\",\r\n    NOT_APPLICABLE: \"N/A\",\r\n    NOT_AVAILABLE: \"Not Available\",\r\n    FORWARD_SLASH: \"/\",\r\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\r\n    IMDS_VERSION: \"2020-06-01\",\r\n    IMDS_TIMEOUT: 2000,\r\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\r\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\r\n    KNOWN_PUBLIC_CLOUDS: [\r\n        \"login.microsoftonline.com\",\r\n        \"login.windows.net\",\r\n        \"login.microsoft.com\",\r\n        \"sts.windows.net\",\r\n    ],\r\n    TOKEN_RESPONSE_TYPE: \"token\",\r\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\r\n    SHR_NONCE_VALIDITY: 240,\r\n    INVALID_INSTANCE: \"invalid_instance\",\r\n};\r\nconst HttpStatus = {\r\n    SUCCESS: 200,\r\n    SUCCESS_RANGE_START: 200,\r\n    SUCCESS_RANGE_END: 299,\r\n    REDIRECT: 302,\r\n    CLIENT_ERROR: 400,\r\n    CLIENT_ERROR_RANGE_START: 400,\r\n    BAD_REQUEST: 400,\r\n    UNAUTHORIZED: 401,\r\n    NOT_FOUND: 404,\r\n    REQUEST_TIMEOUT: 408,\r\n    TOO_MANY_REQUESTS: 429,\r\n    CLIENT_ERROR_RANGE_END: 499,\r\n    SERVER_ERROR: 500,\r\n    SERVER_ERROR_RANGE_START: 500,\r\n    SERVICE_UNAVAILABLE: 503,\r\n    GATEWAY_TIMEOUT: 504,\r\n    SERVER_ERROR_RANGE_END: 599,\r\n    MULTI_SIDED_ERROR: 600,\r\n};\r\nconst OIDC_DEFAULT_SCOPES = [\r\n    Constants.OPENID_SCOPE,\r\n    Constants.PROFILE_SCOPE,\r\n    Constants.OFFLINE_ACCESS_SCOPE,\r\n];\r\nconst OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\r\n/**\r\n * Request header names\r\n */\r\nconst HeaderNames = {\r\n    CONTENT_TYPE: \"Content-Type\",\r\n    CONTENT_LENGTH: \"Content-Length\",\r\n    RETRY_AFTER: \"Retry-After\",\r\n    CCS_HEADER: \"X-AnchorMailbox\",\r\n    WWWAuthenticate: \"WWW-Authenticate\",\r\n    AuthenticationInfo: \"Authentication-Info\",\r\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\r\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\r\n};\r\n/**\r\n * Persistent cache keys MSAL which stay while user is logged in.\r\n */\r\nconst PersistentCacheKeys = {\r\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\r\n};\r\n/**\r\n * String constants related to AAD Authority\r\n */\r\nconst AADAuthorityConstants = {\r\n    COMMON: \"common\",\r\n    ORGANIZATIONS: \"organizations\",\r\n    CONSUMERS: \"consumers\",\r\n};\r\n/**\r\n * Claims request keys\r\n */\r\nconst ClaimsRequestKeys = {\r\n    ACCESS_TOKEN: \"access_token\",\r\n    XMS_CC: \"xms_cc\",\r\n};\r\n/**\r\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\r\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\r\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\r\n */\r\nconst PromptValue = {\r\n    LOGIN: \"login\",\r\n    SELECT_ACCOUNT: \"select_account\",\r\n    CONSENT: \"consent\",\r\n    NONE: \"none\",\r\n    CREATE: \"create\",\r\n    NO_SESSION: \"no_session\",\r\n};\r\n/**\r\n * allowed values for codeVerifier\r\n */\r\nconst CodeChallengeMethodValues = {\r\n    PLAIN: \"plain\",\r\n    S256: \"S256\",\r\n};\r\n/**\r\n * allowed values for server response type\r\n */\r\nconst ServerResponseType = {\r\n    QUERY: \"query\",\r\n    FRAGMENT: \"fragment\",\r\n};\r\n/**\r\n * allowed values for response_mode\r\n */\r\nconst ResponseMode = {\r\n    ...ServerResponseType,\r\n    FORM_POST: \"form_post\",\r\n};\r\n/**\r\n * allowed grant_type\r\n */\r\nconst GrantType = {\r\n    IMPLICIT_GRANT: \"implicit\",\r\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\r\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\r\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\r\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\r\n    DEVICE_CODE_GRANT: \"device_code\",\r\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\r\n};\r\n/**\r\n * Account types in Cache\r\n */\r\nconst CacheAccountType = {\r\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\r\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\r\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\r\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\r\n};\r\n/**\r\n * Separators used in cache\r\n */\r\nconst Separators = {\r\n    CACHE_KEY_SEPARATOR: \"-\",\r\n    CLIENT_INFO_SEPARATOR: \".\",\r\n};\r\n/**\r\n * Credential Type stored in the cache\r\n */\r\nconst CredentialType = {\r\n    ID_TOKEN: \"IdToken\",\r\n    ACCESS_TOKEN: \"AccessToken\",\r\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\r\n    REFRESH_TOKEN: \"RefreshToken\",\r\n};\r\n/**\r\n * Combine all cache types\r\n */\r\nconst CacheType = {\r\n    ADFS: 1001,\r\n    MSA: 1002,\r\n    MSSTS: 1003,\r\n    GENERIC: 1004,\r\n    ACCESS_TOKEN: 2001,\r\n    REFRESH_TOKEN: 2002,\r\n    ID_TOKEN: 2003,\r\n    APP_METADATA: 3001,\r\n    UNDEFINED: 9999,\r\n};\r\n/**\r\n * More Cache related constants\r\n */\r\nconst APP_METADATA = \"appmetadata\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst THE_FAMILY_ID = \"1\";\r\nconst AUTHORITY_METADATA_CONSTANTS = {\r\n    CACHE_KEY: \"authority-metadata\",\r\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\r\n};\r\nconst AuthorityMetadataSource = {\r\n    CONFIG: \"config\",\r\n    CACHE: \"cache\",\r\n    NETWORK: \"network\",\r\n    HARDCODED_VALUES: \"hardcoded_values\",\r\n};\r\nconst SERVER_TELEM_CONSTANTS = {\r\n    SCHEMA_VERSION: 5,\r\n    MAX_CUR_HEADER_BYTES: 80,\r\n    MAX_LAST_HEADER_BYTES: 330,\r\n    MAX_CACHED_ERRORS: 50,\r\n    CACHE_KEY: \"server-telemetry\",\r\n    CATEGORY_SEPARATOR: \"|\",\r\n    VALUE_SEPARATOR: \",\",\r\n    OVERFLOW_TRUE: \"1\",\r\n    OVERFLOW_FALSE: \"0\",\r\n    UNKNOWN_ERROR: \"unknown_error\",\r\n};\r\n/**\r\n * Type of the authentication request\r\n */\r\nconst AuthenticationScheme = {\r\n    BEARER: \"Bearer\",\r\n    POP: \"pop\",\r\n    SSH: \"ssh-cert\",\r\n};\r\n/**\r\n * Constants related to throttling\r\n */\r\nconst ThrottlingConstants = {\r\n    // Default time to throttle RequestThumbprint in seconds\r\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\r\n    // Default maximum time to throttle in seconds, overrides what the server sends back\r\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\r\n    // Prefix for storing throttling entries\r\n    THROTTLING_PREFIX: \"throttling\",\r\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\r\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\r\n};\r\nconst Errors = {\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\r\n};\r\n/**\r\n * Password grant parameters\r\n */\r\nconst PasswordGrantConstants = {\r\n    username: \"username\",\r\n    password: \"password\",\r\n};\r\n/**\r\n * Response codes\r\n */\r\nconst ResponseCodes = {\r\n    httpSuccess: 200,\r\n    httpBadRequest: 400,\r\n};\r\n/**\r\n * Region Discovery Sources\r\n */\r\nconst RegionDiscoverySources = {\r\n    FAILED_AUTO_DETECTION: \"1\",\r\n    INTERNAL_CACHE: \"2\",\r\n    ENVIRONMENT_VARIABLE: \"3\",\r\n    IMDS: \"4\",\r\n};\r\n/**\r\n * Region Discovery Outcomes\r\n */\r\nconst RegionDiscoveryOutcomes = {\r\n    CONFIGURED_MATCHES_DETECTED: \"1\",\r\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\r\n    CONFIGURED_NOT_DETECTED: \"3\",\r\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\r\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\r\n};\r\n/**\r\n * Specifies the reason for fetching the access token from the identity provider\r\n */\r\nconst CacheOutcome = {\r\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\r\n    NOT_APPLICABLE: \"0\",\r\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\r\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\r\n    // When the token request goes to the identity provider because no cached access token exists\r\n    NO_CACHED_ACCESS_TOKEN: \"2\",\r\n    // When the token request goes to the identity provider because cached access token expired\r\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\r\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\r\n    PROACTIVELY_REFRESHED: \"4\",\r\n};\r\nconst JsonWebTokenTypes = {\r\n    Jwt: \"JWT\",\r\n    Jwk: \"JWK\",\r\n    Pop: \"pop\",\r\n};\r\nconst ONE_DAY_IN_MS = 86400000;\r\n// Token renewal offset default in seconds\r\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\r\n\r\nexport { AADAuthorityConstants, APP_METADATA, AUTHORITY_METADATA_CONSTANTS, AuthenticationScheme, AuthorityMetadataSource, CLIENT_INFO, CacheAccountType, CacheOutcome, CacheType, ClaimsRequestKeys, CodeChallengeMethodValues, Constants, CredentialType, DEFAULT_TOKEN_RENEWAL_OFFSET_SEC, Errors, GrantType, HeaderNames, HttpStatus, JsonWebTokenTypes, OIDC_DEFAULT_SCOPES, OIDC_SCOPES, ONE_DAY_IN_MS, PasswordGrantConstants, PersistentCacheKeys, PromptValue, RegionDiscoveryOutcomes, RegionDiscoverySources, ResponseCodes, ResponseMode, SERVER_TELEM_CONSTANTS, Separators, ServerResponseType, THE_FAMILY_ID, ThrottlingConstants };\r\n//# sourceMappingURL=Constants.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Constants } from '../utils/Constants.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Log message level.\r\n */\r\nvar LogLevel;\r\n(function (LogLevel) {\r\n    LogLevel[LogLevel[\"Error\"] = 0] = \"Error\";\r\n    LogLevel[LogLevel[\"Warning\"] = 1] = \"Warning\";\r\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\r\n    LogLevel[LogLevel[\"Verbose\"] = 3] = \"Verbose\";\r\n    LogLevel[LogLevel[\"Trace\"] = 4] = \"Trace\";\r\n})(LogLevel || (LogLevel = {}));\r\n/**\r\n * Class which facilitates logging of messages to a specific place.\r\n */\r\nclass Logger {\r\n    constructor(loggerOptions, packageName, packageVersion) {\r\n        // Current log level, defaults to info.\r\n        this.level = LogLevel.Info;\r\n        const defaultLoggerCallback = () => {\r\n            return;\r\n        };\r\n        const setLoggerOptions = loggerOptions || Logger.createDefaultLoggerOptions();\r\n        this.localCallback =\r\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\r\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\r\n        this.level =\r\n            typeof setLoggerOptions.logLevel === \"number\"\r\n                ? setLoggerOptions.logLevel\r\n                : LogLevel.Info;\r\n        this.correlationId =\r\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\r\n        this.packageName = packageName || Constants.EMPTY_STRING;\r\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\r\n    }\r\n    static createDefaultLoggerOptions() {\r\n        return {\r\n            loggerCallback: () => {\r\n                // allow users to not set loggerCallback\r\n            },\r\n            piiLoggingEnabled: false,\r\n            logLevel: LogLevel.Info,\r\n        };\r\n    }\r\n    /**\r\n     * Create new Logger with existing configurations.\r\n     */\r\n    clone(packageName, packageVersion, correlationId) {\r\n        return new Logger({\r\n            loggerCallback: this.localCallback,\r\n            piiLoggingEnabled: this.piiLoggingEnabled,\r\n            logLevel: this.level,\r\n            correlationId: correlationId || this.correlationId,\r\n        }, packageName, packageVersion);\r\n    }\r\n    /**\r\n     * Log message with required options.\r\n     */\r\n    logMessage(logMessage, options) {\r\n        if (options.logLevel > this.level ||\r\n            (!this.piiLoggingEnabled && options.containsPii)) {\r\n            return;\r\n        }\r\n        const timestamp = new Date().toUTCString();\r\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\r\n        const logHeader = `[${timestamp}] : [${options.correlationId || this.correlationId || \"\"}]`;\r\n        const log = `${logHeader} : ${this.packageName}@${this.packageVersion} : ${LogLevel[options.logLevel]} - ${logMessage}`;\r\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\r\n        this.executeCallback(options.logLevel, log, options.containsPii || false);\r\n    }\r\n    /**\r\n     * Execute callback with message.\r\n     */\r\n    executeCallback(level, message, containsPii) {\r\n        if (this.localCallback) {\r\n            this.localCallback(level, message, containsPii);\r\n        }\r\n    }\r\n    /**\r\n     * Logs error messages.\r\n     */\r\n    error(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs error messages with PII.\r\n     */\r\n    errorPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Error,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages.\r\n     */\r\n    warning(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs warning messages with PII.\r\n     */\r\n    warningPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Warning,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages.\r\n     */\r\n    info(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs info messages with PII.\r\n     */\r\n    infoPii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Info,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages.\r\n     */\r\n    verbose(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs verbose messages with PII.\r\n     */\r\n    verbosePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Verbose,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages.\r\n     */\r\n    trace(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: false,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Logs trace messages with PII.\r\n     */\r\n    tracePii(message, correlationId) {\r\n        this.logMessage(message, {\r\n            logLevel: LogLevel.Trace,\r\n            containsPii: true,\r\n            correlationId: correlationId || Constants.EMPTY_STRING,\r\n        });\r\n    }\r\n    /**\r\n     * Returns whether PII Logging is enabled or not.\r\n     */\r\n    isPiiLoggingEnabled() {\r\n        return this.piiLoggingEnabled || false;\r\n    }\r\n}\r\n\r\nexport { LogLevel, Logger };\r\n//# sourceMappingURL=Logger.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Protocol modes supported by MSAL.\r\n */\r\nconst ProtocolMode = {\r\n    AAD: \"AAD\",\r\n    OIDC: \"OIDC\",\r\n};\r\n\r\nexport { ProtocolMode };\r\n//# sourceMappingURL=ProtocolMode.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AzureCloudInstance = {\r\n    // AzureCloudInstance is not specified.\r\n    None: \"none\",\r\n    // Microsoft Azure public cloud\r\n    AzurePublic: \"https://login.microsoftonline.com\",\r\n    // Microsoft PPE\r\n    AzurePpe: \"https://login.windows-ppe.net\",\r\n    // Microsoft Chinese national/regional cloud\r\n    AzureChina: \"https://login.chinacloudapi.cn\",\r\n    // Microsoft German national/regional cloud (\"Black Forest\")\r\n    AzureGermany: \"https://login.microsoftonline.de\",\r\n    // US Government cloud\r\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\r\n};\r\n\r\nexport { AzureCloudInstance };\r\n//# sourceMappingURL=AuthorityOptions.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst unexpectedError = \"unexpected_error\";\r\nconst postRequestFailed = \"post_request_failed\";\r\n\r\nexport { postRequestFailed, unexpectedError };\r\n//# sourceMappingURL=AuthErrorCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Constants } from '../utils/Constants.mjs';\r\nimport { unexpectedError, postRequestFailed } from './AuthErrorCodes.mjs';\r\nimport * as AuthErrorCodes from './AuthErrorCodes.mjs';\r\nexport { AuthErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst AuthErrorMessages = {\r\n    [unexpectedError]: \"Unexpected error in authentication.\",\r\n    [postRequestFailed]: \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\r\n};\r\n/**\r\n * AuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use AuthErrorCodes instead\r\n */\r\nconst AuthErrorMessage = {\r\n    unexpectedError: {\r\n        code: unexpectedError,\r\n        desc: AuthErrorMessages[unexpectedError],\r\n    },\r\n    postRequestFailed: {\r\n        code: postRequestFailed,\r\n        desc: AuthErrorMessages[postRequestFailed],\r\n    },\r\n};\r\n/**\r\n * General error class thrown by the MSAL.js library.\r\n */\r\nclass AuthError extends Error {\r\n    constructor(errorCode, errorMessage, suberror) {\r\n        const errorString = errorMessage\r\n            ? `${errorCode}: ${errorMessage}`\r\n            : errorCode;\r\n        super(errorString);\r\n        Object.setPrototypeOf(this, AuthError.prototype);\r\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\r\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\r\n        this.subError = suberror || Constants.EMPTY_STRING;\r\n        this.name = \"AuthError\";\r\n    }\r\n    setCorrelationId(correlationId) {\r\n        this.correlationId = correlationId;\r\n    }\r\n}\r\nfunction createAuthError(code, additionalMessage) {\r\n    return new AuthError(code, additionalMessage\r\n        ? `${AuthErrorMessages[code]} ${additionalMessage}`\r\n        : AuthErrorMessages[code]);\r\n}\r\n\r\nexport { AuthError, AuthErrorMessage, AuthErrorMessages, createAuthError };\r\n//# sourceMappingURL=AuthError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst clientInfoDecodingError = \"client_info_decoding_error\";\r\nconst clientInfoEmptyError = \"client_info_empty_error\";\r\nconst tokenParsingError = \"token_parsing_error\";\r\nconst nullOrEmptyToken = \"null_or_empty_token\";\r\nconst endpointResolutionError = \"endpoints_resolution_error\";\r\nconst networkError = \"network_error\";\r\nconst openIdConfigError = \"openid_config_error\";\r\nconst hashNotDeserialized = \"hash_not_deserialized\";\r\nconst invalidState = \"invalid_state\";\r\nconst stateMismatch = \"state_mismatch\";\r\nconst stateNotFound = \"state_not_found\";\r\nconst nonceMismatch = \"nonce_mismatch\";\r\nconst authTimeNotFound = \"auth_time_not_found\";\r\nconst maxAgeTranspired = \"max_age_transpired\";\r\nconst multipleMatchingTokens = \"multiple_matching_tokens\";\r\nconst multipleMatchingAccounts = \"multiple_matching_accounts\";\r\nconst multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\r\nconst requestCannotBeMade = \"request_cannot_be_made\";\r\nconst cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\r\nconst cannotAppendScopeSet = \"cannot_append_scopeset\";\r\nconst emptyInputScopeSet = \"empty_input_scopeset\";\r\nconst deviceCodePollingCancelled = \"device_code_polling_cancelled\";\r\nconst deviceCodeExpired = \"device_code_expired\";\r\nconst deviceCodeUnknownError = \"device_code_unknown_error\";\r\nconst noAccountInSilentRequest = \"no_account_in_silent_request\";\r\nconst invalidCacheRecord = \"invalid_cache_record\";\r\nconst invalidCacheEnvironment = \"invalid_cache_environment\";\r\nconst noAccountFound = \"no_account_found\";\r\nconst noCryptoObject = \"no_crypto_object\";\r\nconst unexpectedCredentialType = \"unexpected_credential_type\";\r\nconst invalidAssertion = \"invalid_assertion\";\r\nconst invalidClientCredential = \"invalid_client_credential\";\r\nconst tokenRefreshRequired = \"token_refresh_required\";\r\nconst userTimeoutReached = \"user_timeout_reached\";\r\nconst tokenClaimsCnfRequiredForSignedJwt = \"token_claims_cnf_required_for_signedjwt\";\r\nconst authorizationCodeMissingFromServerResponse = \"authorization_code_missing_from_server_response\";\r\nconst bindingKeyNotRemoved = \"binding_key_not_removed\";\r\nconst endSessionEndpointNotSupported = \"end_session_endpoint_not_supported\";\r\nconst keyIdMissing = \"key_id_missing\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst userCanceled = \"user_canceled\";\r\nconst missingTenantIdError = \"missing_tenant_id_error\";\r\nconst methodNotImplemented = \"method_not_implemented\";\r\nconst nestedAppAuthBridgeDisabled = \"nested_app_auth_bridge_disabled\";\r\n\r\nexport { authTimeNotFound, authorizationCodeMissingFromServerResponse, bindingKeyNotRemoved, cannotAppendScopeSet, cannotRemoveEmptyScope, clientInfoDecodingError, clientInfoEmptyError, deviceCodeExpired, deviceCodePollingCancelled, deviceCodeUnknownError, emptyInputScopeSet, endSessionEndpointNotSupported, endpointResolutionError, hashNotDeserialized, invalidAssertion, invalidCacheEnvironment, invalidCacheRecord, invalidClientCredential, invalidState, keyIdMissing, maxAgeTranspired, methodNotImplemented, missingTenantIdError, multipleMatchingAccounts, multipleMatchingAppMetadata, multipleMatchingTokens, nestedAppAuthBridgeDisabled, networkError, noAccountFound, noAccountInSilentRequest, noCryptoObject, noNetworkConnectivity, nonceMismatch, nullOrEmptyToken, openIdConfigError, requestCannotBeMade, stateMismatch, stateNotFound, tokenClaimsCnfRequiredForSignedJwt, tokenParsingError, tokenRefreshRequired, unexpectedCredentialType, userCanceled, userTimeoutReached };\r\n//# sourceMappingURL=ClientAuthErrorCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from './AuthError.mjs';\r\nimport { clientInfoDecodingError, clientInfoEmptyError, tokenParsingError, nullOrEmptyToken, endpointResolutionError, networkError, openIdConfigError, hashNotDeserialized, invalidState, stateMismatch, stateNotFound, nonceMismatch, authTimeNotFound, maxAgeTranspired, multipleMatchingTokens, multipleMatchingAccounts, multipleMatchingAppMetadata, requestCannotBeMade, cannotRemoveEmptyScope, cannotAppendScopeSet, emptyInputScopeSet, deviceCodePollingCancelled, deviceCodeExpired, deviceCodeUnknownError, noAccountInSilentRequest, invalidCacheRecord, invalidCacheEnvironment, noAccountFound, noCryptoObject, unexpectedCredentialType, invalidAssertion, invalidClientCredential, tokenRefreshRequired, userTimeoutReached, tokenClaimsCnfRequiredForSignedJwt, authorizationCodeMissingFromServerResponse, bindingKeyNotRemoved, endSessionEndpointNotSupported, keyIdMissing, noNetworkConnectivity, userCanceled, missingTenantIdError, nestedAppAuthBridgeDisabled, methodNotImplemented } from './ClientAuthErrorCodes.mjs';\r\nimport * as ClientAuthErrorCodes from './ClientAuthErrorCodes.mjs';\r\nexport { ClientAuthErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst ClientAuthErrorMessages = {\r\n    [clientInfoDecodingError]: \"The client info could not be parsed/decoded correctly\",\r\n    [clientInfoEmptyError]: \"The client info was empty\",\r\n    [tokenParsingError]: \"Token cannot be parsed\",\r\n    [nullOrEmptyToken]: \"The token is null or empty\",\r\n    [endpointResolutionError]: \"Endpoints cannot be resolved\",\r\n    [networkError]: \"Network request failed\",\r\n    [openIdConfigError]: \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\r\n    [hashNotDeserialized]: \"The hash parameters could not be deserialized\",\r\n    [invalidState]: \"State was not the expected format\",\r\n    [stateMismatch]: \"State mismatch error\",\r\n    [stateNotFound]: \"State not found\",\r\n    [nonceMismatch]: \"Nonce mismatch error\",\r\n    [authTimeNotFound]: \"Max Age was requested and the ID token is missing the auth_time variable.\" +\r\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\r\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\r\n    [maxAgeTranspired]: \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\r\n    [multipleMatchingTokens]: \"The cache contains multiple tokens satisfying the requirements. \" +\r\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\r\n    [multipleMatchingAccounts]: \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\r\n    [multipleMatchingAppMetadata]: \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\r\n    [requestCannotBeMade]: \"Token request cannot be made without authorization code or refresh token.\",\r\n    [cannotRemoveEmptyScope]: \"Cannot remove null or empty scope from ScopeSet\",\r\n    [cannotAppendScopeSet]: \"Cannot append ScopeSet\",\r\n    [emptyInputScopeSet]: \"Empty input ScopeSet cannot be processed\",\r\n    [deviceCodePollingCancelled]: \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\r\n    [deviceCodeExpired]: \"Device code is expired.\",\r\n    [deviceCodeUnknownError]: \"Device code stopped polling for unknown reasons.\",\r\n    [noAccountInSilentRequest]: \"Please pass an account object, silent flow is not supported without account information\",\r\n    [invalidCacheRecord]: \"Cache record object was null or undefined.\",\r\n    [invalidCacheEnvironment]: \"Invalid environment when attempting to create cache entry\",\r\n    [noAccountFound]: \"No account found in cache for given key.\",\r\n    [noCryptoObject]: \"No crypto object detected.\",\r\n    [unexpectedCredentialType]: \"Unexpected credential type.\",\r\n    [invalidAssertion]: \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\r\n    [invalidClientCredential]: \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\r\n    [tokenRefreshRequired]: \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\r\n    [userTimeoutReached]: \"User defined timeout for device code polling reached\",\r\n    [tokenClaimsCnfRequiredForSignedJwt]: \"Cannot generate a POP jwt if the token_claims are not populated\",\r\n    [authorizationCodeMissingFromServerResponse]: \"Server response does not contain an authorization code to proceed\",\r\n    [bindingKeyNotRemoved]: \"Could not remove the credential's binding key from storage.\",\r\n    [endSessionEndpointNotSupported]: \"The provided authority does not support logout\",\r\n    [keyIdMissing]: \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\r\n    [noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [userCanceled]: \"User cancelled the flow.\",\r\n    [missingTenantIdError]: \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\r\n    [methodNotImplemented]: \"This method has not been implemented\",\r\n    [nestedAppAuthBridgeDisabled]: \"The nested app auth bridge is disabled\",\r\n};\r\n/**\r\n * String constants used by error codes and messages.\r\n * @deprecated Use ClientAuthErrorCodes instead\r\n */\r\nconst ClientAuthErrorMessage = {\r\n    clientInfoDecodingError: {\r\n        code: clientInfoDecodingError,\r\n        desc: ClientAuthErrorMessages[clientInfoDecodingError],\r\n    },\r\n    clientInfoEmptyError: {\r\n        code: clientInfoEmptyError,\r\n        desc: ClientAuthErrorMessages[clientInfoEmptyError],\r\n    },\r\n    tokenParsingError: {\r\n        code: tokenParsingError,\r\n        desc: ClientAuthErrorMessages[tokenParsingError],\r\n    },\r\n    nullOrEmptyToken: {\r\n        code: nullOrEmptyToken,\r\n        desc: ClientAuthErrorMessages[nullOrEmptyToken],\r\n    },\r\n    endpointResolutionError: {\r\n        code: endpointResolutionError,\r\n        desc: ClientAuthErrorMessages[endpointResolutionError],\r\n    },\r\n    networkError: {\r\n        code: networkError,\r\n        desc: ClientAuthErrorMessages[networkError],\r\n    },\r\n    unableToGetOpenidConfigError: {\r\n        code: openIdConfigError,\r\n        desc: ClientAuthErrorMessages[openIdConfigError],\r\n    },\r\n    hashNotDeserialized: {\r\n        code: hashNotDeserialized,\r\n        desc: ClientAuthErrorMessages[hashNotDeserialized],\r\n    },\r\n    invalidStateError: {\r\n        code: invalidState,\r\n        desc: ClientAuthErrorMessages[invalidState],\r\n    },\r\n    stateMismatchError: {\r\n        code: stateMismatch,\r\n        desc: ClientAuthErrorMessages[stateMismatch],\r\n    },\r\n    stateNotFoundError: {\r\n        code: stateNotFound,\r\n        desc: ClientAuthErrorMessages[stateNotFound],\r\n    },\r\n    nonceMismatchError: {\r\n        code: nonceMismatch,\r\n        desc: ClientAuthErrorMessages[nonceMismatch],\r\n    },\r\n    authTimeNotFoundError: {\r\n        code: authTimeNotFound,\r\n        desc: ClientAuthErrorMessages[authTimeNotFound],\r\n    },\r\n    maxAgeTranspired: {\r\n        code: maxAgeTranspired,\r\n        desc: ClientAuthErrorMessages[maxAgeTranspired],\r\n    },\r\n    multipleMatchingTokens: {\r\n        code: multipleMatchingTokens,\r\n        desc: ClientAuthErrorMessages[multipleMatchingTokens],\r\n    },\r\n    multipleMatchingAccounts: {\r\n        code: multipleMatchingAccounts,\r\n        desc: ClientAuthErrorMessages[multipleMatchingAccounts],\r\n    },\r\n    multipleMatchingAppMetadata: {\r\n        code: multipleMatchingAppMetadata,\r\n        desc: ClientAuthErrorMessages[multipleMatchingAppMetadata],\r\n    },\r\n    tokenRequestCannotBeMade: {\r\n        code: requestCannotBeMade,\r\n        desc: ClientAuthErrorMessages[requestCannotBeMade],\r\n    },\r\n    removeEmptyScopeError: {\r\n        code: cannotRemoveEmptyScope,\r\n        desc: ClientAuthErrorMessages[cannotRemoveEmptyScope],\r\n    },\r\n    appendScopeSetError: {\r\n        code: cannotAppendScopeSet,\r\n        desc: ClientAuthErrorMessages[cannotAppendScopeSet],\r\n    },\r\n    emptyInputScopeSetError: {\r\n        code: emptyInputScopeSet,\r\n        desc: ClientAuthErrorMessages[emptyInputScopeSet],\r\n    },\r\n    DeviceCodePollingCancelled: {\r\n        code: deviceCodePollingCancelled,\r\n        desc: ClientAuthErrorMessages[deviceCodePollingCancelled],\r\n    },\r\n    DeviceCodeExpired: {\r\n        code: deviceCodeExpired,\r\n        desc: ClientAuthErrorMessages[deviceCodeExpired],\r\n    },\r\n    DeviceCodeUnknownError: {\r\n        code: deviceCodeUnknownError,\r\n        desc: ClientAuthErrorMessages[deviceCodeUnknownError],\r\n    },\r\n    NoAccountInSilentRequest: {\r\n        code: noAccountInSilentRequest,\r\n        desc: ClientAuthErrorMessages[noAccountInSilentRequest],\r\n    },\r\n    invalidCacheRecord: {\r\n        code: invalidCacheRecord,\r\n        desc: ClientAuthErrorMessages[invalidCacheRecord],\r\n    },\r\n    invalidCacheEnvironment: {\r\n        code: invalidCacheEnvironment,\r\n        desc: ClientAuthErrorMessages[invalidCacheEnvironment],\r\n    },\r\n    noAccountFound: {\r\n        code: noAccountFound,\r\n        desc: ClientAuthErrorMessages[noAccountFound],\r\n    },\r\n    noCryptoObj: {\r\n        code: noCryptoObject,\r\n        desc: ClientAuthErrorMessages[noCryptoObject],\r\n    },\r\n    unexpectedCredentialType: {\r\n        code: unexpectedCredentialType,\r\n        desc: ClientAuthErrorMessages[unexpectedCredentialType],\r\n    },\r\n    invalidAssertion: {\r\n        code: invalidAssertion,\r\n        desc: ClientAuthErrorMessages[invalidAssertion],\r\n    },\r\n    invalidClientCredential: {\r\n        code: invalidClientCredential,\r\n        desc: ClientAuthErrorMessages[invalidClientCredential],\r\n    },\r\n    tokenRefreshRequired: {\r\n        code: tokenRefreshRequired,\r\n        desc: ClientAuthErrorMessages[tokenRefreshRequired],\r\n    },\r\n    userTimeoutReached: {\r\n        code: userTimeoutReached,\r\n        desc: ClientAuthErrorMessages[userTimeoutReached],\r\n    },\r\n    tokenClaimsRequired: {\r\n        code: tokenClaimsCnfRequiredForSignedJwt,\r\n        desc: ClientAuthErrorMessages[tokenClaimsCnfRequiredForSignedJwt],\r\n    },\r\n    noAuthorizationCodeFromServer: {\r\n        code: authorizationCodeMissingFromServerResponse,\r\n        desc: ClientAuthErrorMessages[authorizationCodeMissingFromServerResponse],\r\n    },\r\n    bindingKeyNotRemovedError: {\r\n        code: bindingKeyNotRemoved,\r\n        desc: ClientAuthErrorMessages[bindingKeyNotRemoved],\r\n    },\r\n    logoutNotSupported: {\r\n        code: endSessionEndpointNotSupported,\r\n        desc: ClientAuthErrorMessages[endSessionEndpointNotSupported],\r\n    },\r\n    keyIdMissing: {\r\n        code: keyIdMissing,\r\n        desc: ClientAuthErrorMessages[keyIdMissing],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: noNetworkConnectivity,\r\n        desc: ClientAuthErrorMessages[noNetworkConnectivity],\r\n    },\r\n    userCanceledError: {\r\n        code: userCanceled,\r\n        desc: ClientAuthErrorMessages[userCanceled],\r\n    },\r\n    missingTenantIdError: {\r\n        code: missingTenantIdError,\r\n        desc: ClientAuthErrorMessages[missingTenantIdError],\r\n    },\r\n    nestedAppAuthBridgeDisabled: {\r\n        code: nestedAppAuthBridgeDisabled,\r\n        desc: ClientAuthErrorMessages[nestedAppAuthBridgeDisabled],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass ClientAuthError extends AuthError {\r\n    constructor(errorCode, additionalMessage) {\r\n        super(errorCode, additionalMessage\r\n            ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\r\n            : ClientAuthErrorMessages[errorCode]);\r\n        this.name = \"ClientAuthError\";\r\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\r\n    }\r\n}\r\nfunction createClientAuthError(errorCode, additionalMessage) {\r\n    return new ClientAuthError(errorCode, additionalMessage);\r\n}\r\n\r\nexport { ClientAuthError, ClientAuthErrorMessage, ClientAuthErrorMessages, createClientAuthError };\r\n//# sourceMappingURL=ClientAuthError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_CRYPTO_IMPLEMENTATION = {\r\n    createNewGuid: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    base64Decode: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    base64Encode: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    base64UrlEncode: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    encodeKid: () => {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async getPublicKeyThumbprint() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async removeTokenBindingKey() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async clearKeystore() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async signJwt() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async hashString() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n};\r\n\r\nexport { DEFAULT_CRYPTO_IMPLEMENTATION };\r\n//# sourceMappingURL=ICrypto.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-common\";\r\nconst version = \"15.2.1\";\r\n\r\nexport { name, version };\r\n//# sourceMappingURL=packageMetadata.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { tokenParsingError, nullOrEmptyToken, maxAgeTranspired } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extract token by decoding the rawToken\r\n *\r\n * @param encodedToken\r\n */\r\nfunction extractTokenClaims(encodedToken, base64Decode) {\r\n    const jswPayload = getJWSPayload(encodedToken);\r\n    // token will be decoded to get the username\r\n    try {\r\n        // base64Decode() should throw an error if there is an issue\r\n        const base64Decoded = base64Decode(jswPayload);\r\n        return JSON.parse(base64Decoded);\r\n    }\r\n    catch (err) {\r\n        throw createClientAuthError(tokenParsingError);\r\n    }\r\n}\r\n/**\r\n * decode a JWT\r\n *\r\n * @param authToken\r\n */\r\nfunction getJWSPayload(authToken) {\r\n    if (!authToken) {\r\n        throw createClientAuthError(nullOrEmptyToken);\r\n    }\r\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\r\n    const matches = tokenPartsRegex.exec(authToken);\r\n    if (!matches || matches.length < 4) {\r\n        throw createClientAuthError(tokenParsingError);\r\n    }\r\n    /**\r\n     * const crackedToken = {\r\n     *  header: matches[1],\r\n     *  JWSPayload: matches[2],\r\n     *  JWSSig: matches[3],\r\n     * };\r\n     */\r\n    return matches[2];\r\n}\r\n/**\r\n * Determine if the token's max_age has transpired\r\n */\r\nfunction checkMaxAge(authTime, maxAge) {\r\n    /*\r\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\r\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\r\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\r\n     */\r\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\r\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\r\n        throw createClientAuthError(maxAgeTranspired);\r\n    }\r\n}\r\n\r\nexport { checkMaxAge, extractTokenClaims, getJWSPayload };\r\n//# sourceMappingURL=AuthToken.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Utility functions for managing date and time operations.\r\n */\r\n/**\r\n * return the current time in Unix time (seconds).\r\n */\r\nfunction nowSeconds() {\r\n    // Date.getTime() returns in milliseconds.\r\n    return Math.round(new Date().getTime() / 1000.0);\r\n}\r\n/**\r\n * Converts JS Date object to seconds\r\n * @param date Date\r\n */\r\nfunction toSecondsFromDate(date) {\r\n    // Convert date to seconds\r\n    return date.getTime() / 1000;\r\n}\r\n/**\r\n * Convert seconds to JS Date object. Seconds can be in a number or string format or undefined (will still return a date).\r\n * @param seconds\r\n */\r\nfunction toDateFromSeconds(seconds) {\r\n    if (seconds) {\r\n        return new Date(Number(seconds) * 1000);\r\n    }\r\n    return new Date();\r\n}\r\n/**\r\n * check if a token is expired based on given UTC time in seconds.\r\n * @param expiresOn\r\n */\r\nfunction isTokenExpired(expiresOn, offset) {\r\n    // check for access token expiry\r\n    const expirationSec = Number(expiresOn) || 0;\r\n    const offsetCurrentTimeSec = nowSeconds() + offset;\r\n    // If current time + offset is greater than token expiration time, then token is expired.\r\n    return offsetCurrentTimeSec > expirationSec;\r\n}\r\n/**\r\n * If the current time is earlier than the time that a token was cached at, we must discard the token\r\n * i.e. The system clock was turned back after acquiring the cached token\r\n * @param cachedAt\r\n * @param offset\r\n */\r\nfunction wasClockTurnedBack(cachedAt) {\r\n    const cachedAtSec = Number(cachedAt);\r\n    return cachedAtSec > nowSeconds();\r\n}\r\n/**\r\n * Waits for t number of milliseconds\r\n * @param t number\r\n * @param value T\r\n */\r\nfunction delay(t, value) {\r\n    return new Promise((resolve) => setTimeout(() => resolve(value), t));\r\n}\r\n\r\nexport { delay, isTokenExpired, nowSeconds, toDateFromSeconds, toSecondsFromDate, wasClockTurnedBack };\r\n//# sourceMappingURL=TimeUtils.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { extractTokenClaims } from '../../account/AuthToken.mjs';\r\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\r\nimport { Separators, CredentialType, AuthenticationScheme, SERVER_TELEM_CONSTANTS, ThrottlingConstants, APP_METADATA, AUTHORITY_METADATA_CONSTANTS } from '../../utils/Constants.mjs';\r\nimport { nowSeconds } from '../../utils/TimeUtils.mjs';\r\nimport { tokenClaimsCnfRequiredForSignedJwt } from '../../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Cache Key: <home_account_id>-<environment>-<credential_type>-<client_id or familyId>-<realm>-<scopes>-<claims hash>-<scheme>\r\n * IdToken Example: uid.utid-login.microsoftonline.com-idtoken-app_client_id-contoso.com\r\n * AccessToken Example: uid.utid-login.microsoftonline.com-accesstoken-app_client_id-contoso.com-scope1 scope2--pop\r\n * RefreshToken Example: uid.utid-login.microsoftonline.com-refreshtoken-1-contoso.com\r\n * @param credentialEntity\r\n * @returns\r\n */\r\nfunction generateCredentialKey(credentialEntity) {\r\n    const credentialKey = [\r\n        generateAccountId(credentialEntity),\r\n        generateCredentialId(credentialEntity),\r\n        generateTarget(credentialEntity),\r\n        generateClaimsHash(credentialEntity),\r\n        generateScheme(credentialEntity),\r\n    ];\r\n    return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Create IdTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createIdTokenEntity(homeAccountId, environment, idToken, clientId, tenantId) {\r\n    const idTokenEntity = {\r\n        credentialType: CredentialType.ID_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: idToken,\r\n        realm: tenantId,\r\n    };\r\n    return idTokenEntity;\r\n}\r\n/**\r\n * Create AccessTokenEntity\r\n * @param homeAccountId\r\n * @param environment\r\n * @param accessToken\r\n * @param clientId\r\n * @param tenantId\r\n * @param scopes\r\n * @param expiresOn\r\n * @param extExpiresOn\r\n */\r\nfunction createAccessTokenEntity(homeAccountId, environment, accessToken, clientId, tenantId, scopes, expiresOn, extExpiresOn, base64Decode, refreshOn, tokenType, userAssertionHash, keyId, requestedClaims, requestedClaimsHash) {\r\n    const atEntity = {\r\n        homeAccountId: homeAccountId,\r\n        credentialType: CredentialType.ACCESS_TOKEN,\r\n        secret: accessToken,\r\n        cachedAt: nowSeconds().toString(),\r\n        expiresOn: expiresOn.toString(),\r\n        extendedExpiresOn: extExpiresOn.toString(),\r\n        environment: environment,\r\n        clientId: clientId,\r\n        realm: tenantId,\r\n        target: scopes,\r\n        tokenType: tokenType || AuthenticationScheme.BEARER,\r\n    };\r\n    if (userAssertionHash) {\r\n        atEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (refreshOn) {\r\n        atEntity.refreshOn = refreshOn.toString();\r\n    }\r\n    if (requestedClaims) {\r\n        atEntity.requestedClaims = requestedClaims;\r\n        atEntity.requestedClaimsHash = requestedClaimsHash;\r\n    }\r\n    /*\r\n     * Create Access Token With Auth Scheme instead of regular access token\r\n     * Cast to lower to handle \"bearer\" from ADFS\r\n     */\r\n    if (atEntity.tokenType?.toLowerCase() !==\r\n        AuthenticationScheme.BEARER.toLowerCase()) {\r\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        switch (atEntity.tokenType) {\r\n            case AuthenticationScheme.POP:\r\n                // Make sure keyId is present and add it to credential\r\n                const tokenClaims = extractTokenClaims(accessToken, base64Decode);\r\n                if (!tokenClaims?.cnf?.kid) {\r\n                    throw createClientAuthError(tokenClaimsCnfRequiredForSignedJwt);\r\n                }\r\n                atEntity.keyId = tokenClaims.cnf.kid;\r\n                break;\r\n            case AuthenticationScheme.SSH:\r\n                atEntity.keyId = keyId;\r\n        }\r\n    }\r\n    return atEntity;\r\n}\r\n/**\r\n * Create RefreshTokenEntity\r\n * @param homeAccountId\r\n * @param authenticationResult\r\n * @param clientId\r\n * @param authority\r\n */\r\nfunction createRefreshTokenEntity(homeAccountId, environment, refreshToken, clientId, familyId, userAssertionHash, expiresOn) {\r\n    const rtEntity = {\r\n        credentialType: CredentialType.REFRESH_TOKEN,\r\n        homeAccountId: homeAccountId,\r\n        environment: environment,\r\n        clientId: clientId,\r\n        secret: refreshToken,\r\n    };\r\n    if (userAssertionHash) {\r\n        rtEntity.userAssertionHash = userAssertionHash;\r\n    }\r\n    if (familyId) {\r\n        rtEntity.familyId = familyId;\r\n    }\r\n    if (expiresOn) {\r\n        rtEntity.expiresOn = expiresOn.toString();\r\n    }\r\n    return rtEntity;\r\n}\r\nfunction isCredentialEntity(entity) {\r\n    return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n        entity.hasOwnProperty(\"environment\") &&\r\n        entity.hasOwnProperty(\"credentialType\") &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"secret\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAccessTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity.hasOwnProperty(\"target\") &&\r\n        (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\r\n            entity[\"credentialType\"] ===\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isIdTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity.hasOwnProperty(\"realm\") &&\r\n        entity[\"credentialType\"] === CredentialType.ID_TOKEN);\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isRefreshTokenEntity(entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (isCredentialEntity(entity) &&\r\n        entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN);\r\n}\r\n/**\r\n * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n */\r\nfunction generateAccountId(credentialEntity) {\r\n    const accountId = [\r\n        credentialEntity.homeAccountId,\r\n        credentialEntity.environment,\r\n    ];\r\n    return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\r\n */\r\nfunction generateCredentialId(credentialEntity) {\r\n    const clientOrFamilyId = credentialEntity.credentialType === CredentialType.REFRESH_TOKEN\r\n        ? credentialEntity.familyId || credentialEntity.clientId\r\n        : credentialEntity.clientId;\r\n    const credentialId = [\r\n        credentialEntity.credentialType,\r\n        clientOrFamilyId,\r\n        credentialEntity.realm || \"\",\r\n    ];\r\n    return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n}\r\n/**\r\n * Generate target key component as per schema: <target>\r\n */\r\nfunction generateTarget(credentialEntity) {\r\n    return (credentialEntity.target || \"\").toLowerCase();\r\n}\r\n/**\r\n * Generate requested claims key component as per schema: <requestedClaims>\r\n */\r\nfunction generateClaimsHash(credentialEntity) {\r\n    return (credentialEntity.requestedClaimsHash || \"\").toLowerCase();\r\n}\r\n/**\r\n * Generate scheme key componenet as per schema: <scheme>\r\n */\r\nfunction generateScheme(credentialEntity) {\r\n    /*\r\n     * PoP Tokens and SSH certs include scheme in cache key\r\n     * Cast to lowercase to handle \"bearer\" from ADFS\r\n     */\r\n    return credentialEntity.tokenType &&\r\n        credentialEntity.tokenType.toLowerCase() !==\r\n            AuthenticationScheme.BEARER.toLowerCase()\r\n        ? credentialEntity.tokenType.toLowerCase()\r\n        : \"\";\r\n}\r\n/**\r\n * validates if a given cache entry is \"Telemetry\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isServerTelemetryEntity(key, entity) {\r\n    const validateKey = key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity =\r\n            entity.hasOwnProperty(\"failedRequests\") &&\r\n                entity.hasOwnProperty(\"errors\") &&\r\n                entity.hasOwnProperty(\"cacheHits\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * validates if a given cache entry is \"Throttling\", parses <key,value>\r\n * @param key\r\n * @param entity\r\n */\r\nfunction isThrottlingEntity(key, entity) {\r\n    let validateKey = false;\r\n    if (key) {\r\n        validateKey = key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\r\n    }\r\n    let validateEntity = true;\r\n    if (entity) {\r\n        validateEntity = entity.hasOwnProperty(\"throttleTime\");\r\n    }\r\n    return validateKey && validateEntity;\r\n}\r\n/**\r\n * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\r\n */\r\nfunction generateAppMetadataKey({ environment, clientId, }) {\r\n    const appMetaDataKeyArray = [\r\n        APP_METADATA,\r\n        environment,\r\n        clientId,\r\n    ];\r\n    return appMetaDataKeyArray\r\n        .join(Separators.CACHE_KEY_SEPARATOR)\r\n        .toLowerCase();\r\n}\r\n/*\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAppMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(APP_METADATA) === 0 &&\r\n        entity.hasOwnProperty(\"clientId\") &&\r\n        entity.hasOwnProperty(\"environment\"));\r\n}\r\n/**\r\n * Validates an entity: checks for all expected params\r\n * @param entity\r\n */\r\nfunction isAuthorityMetadataEntity(key, entity) {\r\n    if (!entity) {\r\n        return false;\r\n    }\r\n    return (key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\r\n        entity.hasOwnProperty(\"aliases\") &&\r\n        entity.hasOwnProperty(\"preferred_cache\") &&\r\n        entity.hasOwnProperty(\"preferred_network\") &&\r\n        entity.hasOwnProperty(\"canonical_authority\") &&\r\n        entity.hasOwnProperty(\"authorization_endpoint\") &&\r\n        entity.hasOwnProperty(\"token_endpoint\") &&\r\n        entity.hasOwnProperty(\"issuer\") &&\r\n        entity.hasOwnProperty(\"aliasesFromNetwork\") &&\r\n        entity.hasOwnProperty(\"endpointsFromNetwork\") &&\r\n        entity.hasOwnProperty(\"expiresAt\") &&\r\n        entity.hasOwnProperty(\"jwks_uri\"));\r\n}\r\n/**\r\n * Reset the exiresAt value\r\n */\r\nfunction generateAuthorityMetadataExpiresAt() {\r\n    return (nowSeconds() +\r\n        AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS);\r\n}\r\nfunction updateAuthorityEndpointMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.authorization_endpoint =\r\n        updatedValues.authorization_endpoint;\r\n    authorityMetadata.token_endpoint = updatedValues.token_endpoint;\r\n    authorityMetadata.end_session_endpoint = updatedValues.end_session_endpoint;\r\n    authorityMetadata.issuer = updatedValues.issuer;\r\n    authorityMetadata.endpointsFromNetwork = fromNetwork;\r\n    authorityMetadata.jwks_uri = updatedValues.jwks_uri;\r\n}\r\nfunction updateCloudDiscoveryMetadata(authorityMetadata, updatedValues, fromNetwork) {\r\n    authorityMetadata.aliases = updatedValues.aliases;\r\n    authorityMetadata.preferred_cache = updatedValues.preferred_cache;\r\n    authorityMetadata.preferred_network = updatedValues.preferred_network;\r\n    authorityMetadata.aliasesFromNetwork = fromNetwork;\r\n}\r\n/**\r\n * Returns whether or not the data needs to be refreshed\r\n */\r\nfunction isAuthorityMetadataExpired(metadata) {\r\n    return metadata.expiresAt <= nowSeconds();\r\n}\r\n\r\nexport { createAccessTokenEntity, createIdTokenEntity, createRefreshTokenEntity, generateAppMetadataKey, generateAuthorityMetadataExpiresAt, generateCredentialKey, isAccessTokenEntity, isAppMetadataEntity, isAuthorityMetadataEntity, isAuthorityMetadataExpired, isCredentialEntity, isIdTokenEntity, isRefreshTokenEntity, isServerTelemetryEntity, isThrottlingEntity, updateAuthorityEndpointMetadata, updateCloudDiscoveryMetadata };\r\n//# sourceMappingURL=CacheHelpers.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst redirectUriEmpty = \"redirect_uri_empty\";\r\nconst claimsRequestParsingError = \"claims_request_parsing_error\";\r\nconst authorityUriInsecure = \"authority_uri_insecure\";\r\nconst urlParseError = \"url_parse_error\";\r\nconst urlEmptyError = \"empty_url_error\";\r\nconst emptyInputScopesError = \"empty_input_scopes_error\";\r\nconst invalidPromptValue = \"invalid_prompt_value\";\r\nconst invalidClaims = \"invalid_claims\";\r\nconst tokenRequestEmpty = \"token_request_empty\";\r\nconst logoutRequestEmpty = \"logout_request_empty\";\r\nconst invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\r\nconst pkceParamsMissing = \"pkce_params_missing\";\r\nconst invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\r\nconst invalidAuthorityMetadata = \"invalid_authority_metadata\";\r\nconst untrustedAuthority = \"untrusted_authority\";\r\nconst missingSshJwk = \"missing_ssh_jwk\";\r\nconst missingSshKid = \"missing_ssh_kid\";\r\nconst missingNonceAuthenticationHeader = \"missing_nonce_authentication_header\";\r\nconst invalidAuthenticationHeader = \"invalid_authentication_header\";\r\nconst cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\r\nconst cannotAllowPlatformBroker = \"cannot_allow_platform_broker\";\r\nconst authorityMismatch = \"authority_mismatch\";\r\n\r\nexport { authorityMismatch, authorityUriInsecure, cannotAllowPlatformBroker, cannotSetOIDCOptions, claimsRequestParsingError, emptyInputScopesError, invalidAuthenticationHeader, invalidAuthorityMetadata, invalidClaims, invalidCloudDiscoveryMetadata, invalidCodeChallengeMethod, invalidPromptValue, logoutRequestEmpty, missingNonceAuthenticationHeader, missingSshJwk, missingSshKid, pkceParamsMissing, redirectUriEmpty, tokenRequestEmpty, untrustedAuthority, urlEmptyError, urlParseError };\r\n//# sourceMappingURL=ClientConfigurationErrorCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from './AuthError.mjs';\r\nimport { redirectUriEmpty, claimsRequestParsingError, authorityUriInsecure, urlParseError, urlEmptyError, emptyInputScopesError, invalidPromptValue, invalidClaims, tokenRequestEmpty, logoutRequestEmpty, invalidCodeChallengeMethod, pkceParamsMissing, invalidCloudDiscoveryMetadata, invalidAuthorityMetadata, untrustedAuthority, missingSshJwk, missingSshKid, missingNonceAuthenticationHeader, invalidAuthenticationHeader, cannotSetOIDCOptions, cannotAllowPlatformBroker, authorityMismatch } from './ClientConfigurationErrorCodes.mjs';\r\nimport * as ClientConfigurationErrorCodes from './ClientConfigurationErrorCodes.mjs';\r\nexport { ClientConfigurationErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ClientConfigurationErrorMessages = {\r\n    [redirectUriEmpty]: \"A redirect URI is required for all calls, and none has been set.\",\r\n    [claimsRequestParsingError]: \"Could not parse the given claims request object.\",\r\n    [authorityUriInsecure]: \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\r\n    [urlParseError]: \"URL could not be parsed into appropriate segments.\",\r\n    [urlEmptyError]: \"URL was empty or null.\",\r\n    [emptyInputScopesError]: \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\r\n    [invalidPromptValue]: \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\r\n    [invalidClaims]: \"Given claims parameter must be a stringified JSON object.\",\r\n    [tokenRequestEmpty]: \"Token request was empty and not found in cache.\",\r\n    [logoutRequestEmpty]: \"The logout request was null or undefined.\",\r\n    [invalidCodeChallengeMethod]: 'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\r\n    [pkceParamsMissing]: \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\r\n    [invalidCloudDiscoveryMetadata]: \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\r\n    [invalidAuthorityMetadata]: \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\r\n    [untrustedAuthority]: \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\r\n    [missingSshJwk]: \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\r\n    [missingSshKid]: \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\r\n    [missingNonceAuthenticationHeader]: \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\r\n    [invalidAuthenticationHeader]: \"Invalid authentication header provided\",\r\n    [cannotSetOIDCOptions]: \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\r\n    [cannotAllowPlatformBroker]: \"Cannot set allowPlatformBroker parameter to true when not in AAD protocol mode.\",\r\n    [authorityMismatch]: \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\r\n};\r\n/**\r\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use ClientConfigurationErrorCodes instead\r\n */\r\nconst ClientConfigurationErrorMessage = {\r\n    redirectUriNotSet: {\r\n        code: redirectUriEmpty,\r\n        desc: ClientConfigurationErrorMessages[redirectUriEmpty],\r\n    },\r\n    claimsRequestParsingError: {\r\n        code: claimsRequestParsingError,\r\n        desc: ClientConfigurationErrorMessages[claimsRequestParsingError],\r\n    },\r\n    authorityUriInsecure: {\r\n        code: authorityUriInsecure,\r\n        desc: ClientConfigurationErrorMessages[authorityUriInsecure],\r\n    },\r\n    urlParseError: {\r\n        code: urlParseError,\r\n        desc: ClientConfigurationErrorMessages[urlParseError],\r\n    },\r\n    urlEmptyError: {\r\n        code: urlEmptyError,\r\n        desc: ClientConfigurationErrorMessages[urlEmptyError],\r\n    },\r\n    emptyScopesError: {\r\n        code: emptyInputScopesError,\r\n        desc: ClientConfigurationErrorMessages[emptyInputScopesError],\r\n    },\r\n    invalidPrompt: {\r\n        code: invalidPromptValue,\r\n        desc: ClientConfigurationErrorMessages[invalidPromptValue],\r\n    },\r\n    invalidClaimsRequest: {\r\n        code: invalidClaims,\r\n        desc: ClientConfigurationErrorMessages[invalidClaims],\r\n    },\r\n    tokenRequestEmptyError: {\r\n        code: tokenRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[tokenRequestEmpty],\r\n    },\r\n    logoutRequestEmptyError: {\r\n        code: logoutRequestEmpty,\r\n        desc: ClientConfigurationErrorMessages[logoutRequestEmpty],\r\n    },\r\n    invalidCodeChallengeMethod: {\r\n        code: invalidCodeChallengeMethod,\r\n        desc: ClientConfigurationErrorMessages[invalidCodeChallengeMethod],\r\n    },\r\n    invalidCodeChallengeParams: {\r\n        code: pkceParamsMissing,\r\n        desc: ClientConfigurationErrorMessages[pkceParamsMissing],\r\n    },\r\n    invalidCloudDiscoveryMetadata: {\r\n        code: invalidCloudDiscoveryMetadata,\r\n        desc: ClientConfigurationErrorMessages[invalidCloudDiscoveryMetadata],\r\n    },\r\n    invalidAuthorityMetadata: {\r\n        code: invalidAuthorityMetadata,\r\n        desc: ClientConfigurationErrorMessages[invalidAuthorityMetadata],\r\n    },\r\n    untrustedAuthority: {\r\n        code: untrustedAuthority,\r\n        desc: ClientConfigurationErrorMessages[untrustedAuthority],\r\n    },\r\n    missingSshJwk: {\r\n        code: missingSshJwk,\r\n        desc: ClientConfigurationErrorMessages[missingSshJwk],\r\n    },\r\n    missingSshKid: {\r\n        code: missingSshKid,\r\n        desc: ClientConfigurationErrorMessages[missingSshKid],\r\n    },\r\n    missingNonceAuthenticationHeader: {\r\n        code: missingNonceAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[missingNonceAuthenticationHeader],\r\n    },\r\n    invalidAuthenticationHeader: {\r\n        code: invalidAuthenticationHeader,\r\n        desc: ClientConfigurationErrorMessages[invalidAuthenticationHeader],\r\n    },\r\n    cannotSetOIDCOptions: {\r\n        code: cannotSetOIDCOptions,\r\n        desc: ClientConfigurationErrorMessages[cannotSetOIDCOptions],\r\n    },\r\n    cannotAllowPlatformBroker: {\r\n        code: cannotAllowPlatformBroker,\r\n        desc: ClientConfigurationErrorMessages[cannotAllowPlatformBroker],\r\n    },\r\n    authorityMismatch: {\r\n        code: authorityMismatch,\r\n        desc: ClientConfigurationErrorMessages[authorityMismatch],\r\n    },\r\n};\r\n/**\r\n * Error thrown when there is an error in configuration of the MSAL.js library.\r\n */\r\nclass ClientConfigurationError extends AuthError {\r\n    constructor(errorCode) {\r\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\r\n        this.name = \"ClientConfigurationError\";\r\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\r\n    }\r\n}\r\nfunction createClientConfigurationError(errorCode) {\r\n    return new ClientConfigurationError(errorCode);\r\n}\r\n\r\nexport { ClientConfigurationError, ClientConfigurationErrorMessage, ClientConfigurationErrorMessages, createClientConfigurationError };\r\n//# sourceMappingURL=ClientConfigurationError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * @hidden\r\n */\r\nclass StringUtils {\r\n    /**\r\n     * Check if stringified object is empty\r\n     * @param strObj\r\n     */\r\n    static isEmptyObj(strObj) {\r\n        if (strObj) {\r\n            try {\r\n                const obj = JSON.parse(strObj);\r\n                return Object.keys(obj).length === 0;\r\n            }\r\n            catch (e) { }\r\n        }\r\n        return true;\r\n    }\r\n    static startsWith(str, search) {\r\n        return str.indexOf(search) === 0;\r\n    }\r\n    static endsWith(str, search) {\r\n        return (str.length >= search.length &&\r\n            str.lastIndexOf(search) === str.length - search.length);\r\n    }\r\n    /**\r\n     * Parses string into an object.\r\n     *\r\n     * @param query\r\n     */\r\n    static queryStringToObject(query) {\r\n        const obj = {};\r\n        const params = query.split(\"&\");\r\n        const decode = (s) => decodeURIComponent(s.replace(/\\+/g, \" \"));\r\n        params.forEach((pair) => {\r\n            if (pair.trim()) {\r\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\r\n                if (key && value) {\r\n                    obj[decode(key)] = decode(value);\r\n                }\r\n            }\r\n        });\r\n        return obj;\r\n    }\r\n    /**\r\n     * Trims entries in an array.\r\n     *\r\n     * @param arr\r\n     */\r\n    static trimArrayEntries(arr) {\r\n        return arr.map((entry) => entry.trim());\r\n    }\r\n    /**\r\n     * Removes empty strings from array\r\n     * @param arr\r\n     */\r\n    static removeEmptyStringsFromArray(arr) {\r\n        return arr.filter((entry) => {\r\n            return !!entry;\r\n        });\r\n    }\r\n    /**\r\n     * Attempts to parse a string into JSON\r\n     * @param str\r\n     */\r\n    static jsonParseHelper(str) {\r\n        try {\r\n            return JSON.parse(str);\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\r\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\r\n     * @param input String to match against\r\n     */\r\n    static matchPattern(pattern, input) {\r\n        /**\r\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\r\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\r\n         */\r\n        // eslint-disable-next-line security/detect-non-literal-regexp\r\n        const regex = new RegExp(pattern\r\n            .replace(/\\\\/g, \"\\\\\\\\\")\r\n            .replace(/\\*/g, \"[^ ]*\")\r\n            .replace(/\\?/g, \"\\\\?\"));\r\n        return regex.test(input);\r\n    }\r\n}\r\n\r\nexport { StringUtils };\r\n//# sourceMappingURL=StringUtils.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { StringUtils } from '../utils/StringUtils.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { Constants, OIDC_SCOPES } from '../utils/Constants.mjs';\r\nimport { emptyInputScopesError } from '../error/ClientConfigurationErrorCodes.mjs';\r\nimport { cannotAppendScopeSet, cannotRemoveEmptyScope, emptyInputScopeSet } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\r\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\r\n * to ensure uniqueness of strings.\r\n */\r\nclass ScopeSet {\r\n    constructor(inputScopes) {\r\n        // Filter empty string and null/undefined array items\r\n        const scopeArr = inputScopes\r\n            ? StringUtils.trimArrayEntries([...inputScopes])\r\n            : [];\r\n        const filteredInput = scopeArr\r\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\r\n            : [];\r\n        // Check if scopes array has at least one member\r\n        if (!filteredInput || !filteredInput.length) {\r\n            throw createClientConfigurationError(emptyInputScopesError);\r\n        }\r\n        this.scopes = new Set(); // Iterator in constructor not supported by IE11\r\n        filteredInput.forEach((scope) => this.scopes.add(scope));\r\n    }\r\n    /**\r\n     * Factory method to create ScopeSet from space-delimited string\r\n     * @param inputScopeString\r\n     * @param appClientId\r\n     * @param scopesRequired\r\n     */\r\n    static fromString(inputScopeString) {\r\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\r\n        const inputScopes = scopeString.split(\" \");\r\n        return new ScopeSet(inputScopes);\r\n    }\r\n    /**\r\n     * Creates the set of scopes to search for in cache lookups\r\n     * @param inputScopeString\r\n     * @returns\r\n     */\r\n    static createSearchScopes(inputScopeString) {\r\n        const scopeSet = new ScopeSet(inputScopeString);\r\n        if (!scopeSet.containsOnlyOIDCScopes()) {\r\n            scopeSet.removeOIDCScopes();\r\n        }\r\n        else {\r\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\r\n        }\r\n        return scopeSet;\r\n    }\r\n    /**\r\n     * Check if a given scope is present in this set of scopes.\r\n     * @param scope\r\n     */\r\n    containsScope(scope) {\r\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\r\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\r\n        // compare lowercase scopes\r\n        return scope\r\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\r\n            : false;\r\n    }\r\n    /**\r\n     * Check if a set of scopes is present in this set of scopes.\r\n     * @param scopeSet\r\n     */\r\n    containsScopeSet(scopeSet) {\r\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\r\n            return false;\r\n        }\r\n        return (this.scopes.size >= scopeSet.scopes.size &&\r\n            scopeSet.asArray().every((scope) => this.containsScope(scope)));\r\n    }\r\n    /**\r\n     * Check if set of scopes contains only the defaults\r\n     */\r\n    containsOnlyOIDCScopes() {\r\n        let defaultScopeCount = 0;\r\n        OIDC_SCOPES.forEach((defaultScope) => {\r\n            if (this.containsScope(defaultScope)) {\r\n                defaultScopeCount += 1;\r\n            }\r\n        });\r\n        return this.scopes.size === defaultScopeCount;\r\n    }\r\n    /**\r\n     * Appends single scope if passed\r\n     * @param newScope\r\n     */\r\n    appendScope(newScope) {\r\n        if (newScope) {\r\n            this.scopes.add(newScope.trim());\r\n        }\r\n    }\r\n    /**\r\n     * Appends multiple scopes if passed\r\n     * @param newScopes\r\n     */\r\n    appendScopes(newScopes) {\r\n        try {\r\n            newScopes.forEach((newScope) => this.appendScope(newScope));\r\n        }\r\n        catch (e) {\r\n            throw createClientAuthError(cannotAppendScopeSet);\r\n        }\r\n    }\r\n    /**\r\n     * Removes element from set of scopes.\r\n     * @param scope\r\n     */\r\n    removeScope(scope) {\r\n        if (!scope) {\r\n            throw createClientAuthError(cannotRemoveEmptyScope);\r\n        }\r\n        this.scopes.delete(scope.trim());\r\n    }\r\n    /**\r\n     * Removes default scopes from set of scopes\r\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\r\n     */\r\n    removeOIDCScopes() {\r\n        OIDC_SCOPES.forEach((defaultScope) => {\r\n            this.scopes.delete(defaultScope);\r\n        });\r\n    }\r\n    /**\r\n     * Combines an array of scopes with the current set of scopes.\r\n     * @param otherScopes\r\n     */\r\n    unionScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw createClientAuthError(emptyInputScopeSet);\r\n        }\r\n        const unionScopes = new Set(); // Iterator in constructor not supported in IE11\r\n        otherScopes.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\r\n        return unionScopes;\r\n    }\r\n    /**\r\n     * Check if scopes intersect between this set and another.\r\n     * @param otherScopes\r\n     */\r\n    intersectingScopeSets(otherScopes) {\r\n        if (!otherScopes) {\r\n            throw createClientAuthError(emptyInputScopeSet);\r\n        }\r\n        // Do not allow OIDC scopes to be the only intersecting scopes\r\n        if (!otherScopes.containsOnlyOIDCScopes()) {\r\n            otherScopes.removeOIDCScopes();\r\n        }\r\n        const unionScopes = this.unionScopeSets(otherScopes);\r\n        const sizeOtherScopes = otherScopes.getScopeCount();\r\n        const sizeThisScopes = this.getScopeCount();\r\n        const sizeUnionScopes = unionScopes.size;\r\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\r\n    }\r\n    /**\r\n     * Returns size of set of scopes.\r\n     */\r\n    getScopeCount() {\r\n        return this.scopes.size;\r\n    }\r\n    /**\r\n     * Returns the scopes as an array of string values\r\n     */\r\n    asArray() {\r\n        const array = [];\r\n        this.scopes.forEach((val) => array.push(val));\r\n        return array;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited string\r\n     */\r\n    printScopes() {\r\n        if (this.scopes) {\r\n            const scopeArr = this.asArray();\r\n            return scopeArr.join(\" \");\r\n        }\r\n        return Constants.EMPTY_STRING;\r\n    }\r\n    /**\r\n     * Prints scopes into a space-delimited lower-case string (used for caching)\r\n     */\r\n    printScopesLowerCase() {\r\n        return this.printScopes().toLowerCase();\r\n    }\r\n}\r\n\r\nexport { ScopeSet };\r\n//# sourceMappingURL=ScopeSet.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { Separators, Constants } from '../utils/Constants.mjs';\r\nimport { clientInfoEmptyError, clientInfoDecodingError } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Function to build a client info object from server clientInfo string\r\n * @param rawClientInfo\r\n * @param crypto\r\n */\r\nfunction buildClientInfo(rawClientInfo, base64Decode) {\r\n    if (!rawClientInfo) {\r\n        throw createClientAuthError(clientInfoEmptyError);\r\n    }\r\n    try {\r\n        const decodedClientInfo = base64Decode(rawClientInfo);\r\n        return JSON.parse(decodedClientInfo);\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(clientInfoDecodingError);\r\n    }\r\n}\r\n/**\r\n * Function to build a client info object from cached homeAccountId string\r\n * @param homeAccountId\r\n */\r\nfunction buildClientInfoFromHomeAccountId(homeAccountId) {\r\n    if (!homeAccountId) {\r\n        throw createClientAuthError(clientInfoDecodingError);\r\n    }\r\n    const clientInfoParts = homeAccountId.split(Separators.CLIENT_INFO_SEPARATOR, 2);\r\n    return {\r\n        uid: clientInfoParts[0],\r\n        utid: clientInfoParts.length < 2\r\n            ? Constants.EMPTY_STRING\r\n            : clientInfoParts[1],\r\n    };\r\n}\r\n\r\nexport { buildClientInfo, buildClientInfoFromHomeAccountId };\r\n//# sourceMappingURL=ClientInfo.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns true if tenantId matches the utid portion of homeAccountId\r\n * @param tenantId\r\n * @param homeAccountId\r\n * @returns\r\n */\r\nfunction tenantIdMatchesHomeTenant(tenantId, homeAccountId) {\r\n    return (!!tenantId &&\r\n        !!homeAccountId &&\r\n        tenantId === homeAccountId.split(\".\")[1]);\r\n}\r\n/**\r\n * Build tenant profile\r\n * @param homeAccountId - Home account identifier for this account object\r\n * @param localAccountId - Local account identifer for this account object\r\n * @param tenantId - Full tenant or organizational id that this account belongs to\r\n * @param idTokenClaims - Claims from the ID token\r\n * @returns\r\n */\r\nfunction buildTenantProfile(homeAccountId, localAccountId, tenantId, idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const { oid, sub, tid, name, tfp, acr } = idTokenClaims;\r\n        /**\r\n         * Since there is no way to determine if the authority is AAD or B2C, we exhaust all the possible claims that can serve as tenant ID with the following precedence:\r\n         * tid - TenantID claim that identifies the tenant that issued the token in AAD. Expected in all AAD ID tokens, not present in B2C ID Tokens.\r\n         * tfp - Trust Framework Policy claim that identifies the policy that was used to authenticate the user. Functions as tenant for B2C scenarios.\r\n         * acr - Authentication Context Class Reference claim used only with older B2C policies. Fallback in case tfp is not present, but likely won't be present anyway.\r\n         */\r\n        const tenantId = tid || tfp || acr || \"\";\r\n        return {\r\n            tenantId: tenantId,\r\n            localAccountId: oid || sub || \"\",\r\n            name: name,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            tenantId,\r\n            localAccountId,\r\n            isHomeTenant: tenantIdMatchesHomeTenant(tenantId, homeAccountId),\r\n        };\r\n    }\r\n}\r\n/**\r\n * Replaces account info that varies by tenant profile sourced from the ID token claims passed in with the tenant-specific account info\r\n * @param baseAccountInfo\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction updateAccountTenantProfileData(baseAccountInfo, tenantProfile, idTokenClaims, idTokenSecret) {\r\n    let updatedAccountInfo = baseAccountInfo;\r\n    // Tenant Profile overrides passed in account info\r\n    if (tenantProfile) {\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...tenantProfileOverride } = tenantProfile;\r\n        updatedAccountInfo = { ...baseAccountInfo, ...tenantProfileOverride };\r\n    }\r\n    // ID token claims override passed in account info and tenant profile\r\n    if (idTokenClaims) {\r\n        // Ignore isHomeTenant, loginHint, and sid which are part of tenant profile but not base account info\r\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n        const { isHomeTenant, ...claimsSourcedTenantProfile } = buildTenantProfile(baseAccountInfo.homeAccountId, baseAccountInfo.localAccountId, baseAccountInfo.tenantId, idTokenClaims);\r\n        updatedAccountInfo = {\r\n            ...updatedAccountInfo,\r\n            ...claimsSourcedTenantProfile,\r\n            idTokenClaims: idTokenClaims,\r\n            idToken: idTokenSecret,\r\n        };\r\n        return updatedAccountInfo;\r\n    }\r\n    return updatedAccountInfo;\r\n}\r\n\r\nexport { buildTenantProfile, tenantIdMatchesHomeTenant, updateAccountTenantProfileData };\r\n//# sourceMappingURL=AccountInfo.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Gets tenantId from available ID token claims to set as credential realm with the following precedence:\r\n * 1. tid - if the token is acquired from an Azure AD tenant tid will be present\r\n * 2. tfp - if the token is acquired from a modern B2C tenant tfp should be present\r\n * 3. acr - if the token is acquired from a legacy B2C tenant acr should be present\r\n * Downcased to match the realm case-insensitive comparison requirements\r\n * @param idTokenClaims\r\n * @returns\r\n */\r\nfunction getTenantIdFromIdTokenClaims(idTokenClaims) {\r\n    if (idTokenClaims) {\r\n        const tenantId = idTokenClaims.tid || idTokenClaims.tfp || idTokenClaims.acr;\r\n        return tenantId || null;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport { getTenantIdFromIdTokenClaims };\r\n//# sourceMappingURL=TokenClaims.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Separators, CacheAccountType } from '../../utils/Constants.mjs';\r\nimport { buildClientInfo } from '../../account/ClientInfo.mjs';\r\nimport { buildTenantProfile } from '../../account/AccountInfo.mjs';\r\nimport { createClientAuthError } from '../../error/ClientAuthError.mjs';\r\nimport { AuthorityType } from '../../authority/AuthorityType.mjs';\r\nimport { getTenantIdFromIdTokenClaims } from '../../account/TokenClaims.mjs';\r\nimport { ProtocolMode } from '../../authority/ProtocolMode.mjs';\r\nimport { invalidCacheEnvironment } from '../../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\r\n *\r\n * Key : Value Schema\r\n *\r\n * Key: <home_account_id>-<environment>-<realm*>\r\n *\r\n * Value Schema:\r\n * {\r\n *      homeAccountId: home account identifier for the auth scheme,\r\n *      environment: entity that issued the token, represented as a full host\r\n *      realm: Full tenant or organizational identifier that the account belongs to\r\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\r\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\r\n *      authorityType: Accounts authority type as a string\r\n *      name: Full name for the account, including given name and family name,\r\n *      lastModificationTime: last time this entity was modified in the cache\r\n *      lastModificationApp:\r\n *      nativeAccountId: Account identifier on the native device\r\n *      tenantProfiles: Array of tenant profile objects for each tenant that the account has authenticated with in the browser\r\n * }\r\n * @internal\r\n */\r\nclass AccountEntity {\r\n    /**\r\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\r\n     */\r\n    generateAccountId() {\r\n        const accountId = [this.homeAccountId, this.environment];\r\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n    /**\r\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\r\n     */\r\n    generateAccountKey() {\r\n        return AccountEntity.generateAccountCacheKey({\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n        });\r\n    }\r\n    /**\r\n     * Returns the AccountInfo interface for this account.\r\n     */\r\n    getAccountInfo() {\r\n        return {\r\n            homeAccountId: this.homeAccountId,\r\n            environment: this.environment,\r\n            tenantId: this.realm,\r\n            username: this.username,\r\n            localAccountId: this.localAccountId,\r\n            name: this.name,\r\n            nativeAccountId: this.nativeAccountId,\r\n            authorityType: this.authorityType,\r\n            // Deserialize tenant profiles array into a Map\r\n            tenantProfiles: new Map((this.tenantProfiles || []).map((tenantProfile) => {\r\n                return [tenantProfile.tenantId, tenantProfile];\r\n            })),\r\n        };\r\n    }\r\n    /**\r\n     * Returns true if the account entity is in single tenant format (outdated), false otherwise\r\n     */\r\n    isSingleTenant() {\r\n        return !this.tenantProfiles;\r\n    }\r\n    /**\r\n     * Generates account key from interface\r\n     * @param accountInterface\r\n     */\r\n    static generateAccountCacheKey(accountInterface) {\r\n        const homeTenantId = accountInterface.homeAccountId.split(\".\")[1];\r\n        const accountKey = [\r\n            accountInterface.homeAccountId,\r\n            accountInterface.environment || \"\",\r\n            homeTenantId || accountInterface.tenantId || \"\",\r\n        ];\r\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\r\n    }\r\n    /**\r\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\r\n     * @param accountDetails\r\n     */\r\n    static createAccount(accountDetails, authority, base64Decode) {\r\n        const account = new AccountEntity();\r\n        if (authority.authorityType === AuthorityType.Adfs) {\r\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\r\n        }\r\n        else if (authority.protocolMode === ProtocolMode.AAD) {\r\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\r\n        }\r\n        else {\r\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        }\r\n        let clientInfo;\r\n        if (accountDetails.clientInfo && base64Decode) {\r\n            clientInfo = buildClientInfo(accountDetails.clientInfo, base64Decode);\r\n        }\r\n        account.clientInfo = accountDetails.clientInfo;\r\n        account.homeAccountId = accountDetails.homeAccountId;\r\n        account.nativeAccountId = accountDetails.nativeAccountId;\r\n        const env = accountDetails.environment ||\r\n            (authority && authority.getPreferredCache());\r\n        if (!env) {\r\n            throw createClientAuthError(invalidCacheEnvironment);\r\n        }\r\n        account.environment = env;\r\n        // non AAD scenarios can have empty realm\r\n        account.realm =\r\n            clientInfo?.utid ||\r\n                getTenantIdFromIdTokenClaims(accountDetails.idTokenClaims) ||\r\n                \"\";\r\n        // How do you account for MSA CID here?\r\n        account.localAccountId =\r\n            clientInfo?.uid ||\r\n                accountDetails.idTokenClaims?.oid ||\r\n                accountDetails.idTokenClaims?.sub ||\r\n                \"\";\r\n        /*\r\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\r\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\r\n         * policy is configured to return more than 1 email.\r\n         */\r\n        const preferredUsername = accountDetails.idTokenClaims?.preferred_username ||\r\n            accountDetails.idTokenClaims?.upn;\r\n        const email = accountDetails.idTokenClaims?.emails\r\n            ? accountDetails.idTokenClaims.emails[0]\r\n            : null;\r\n        account.username = preferredUsername || email || \"\";\r\n        account.name = accountDetails.idTokenClaims?.name || \"\";\r\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\r\n        account.msGraphHost = accountDetails.msGraphHost;\r\n        if (accountDetails.tenantProfiles) {\r\n            account.tenantProfiles = accountDetails.tenantProfiles;\r\n        }\r\n        else {\r\n            const tenantProfile = buildTenantProfile(accountDetails.homeAccountId, account.localAccountId, account.realm, accountDetails.idTokenClaims);\r\n            account.tenantProfiles = [tenantProfile];\r\n        }\r\n        return account;\r\n    }\r\n    /**\r\n     * Creates an AccountEntity object from AccountInfo\r\n     * @param accountInfo\r\n     * @param cloudGraphHostName\r\n     * @param msGraphHost\r\n     * @returns\r\n     */\r\n    static createFromAccountInfo(accountInfo, cloudGraphHostName, msGraphHost) {\r\n        const account = new AccountEntity();\r\n        account.authorityType =\r\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\r\n        account.homeAccountId = accountInfo.homeAccountId;\r\n        account.localAccountId = accountInfo.localAccountId;\r\n        account.nativeAccountId = accountInfo.nativeAccountId;\r\n        account.realm = accountInfo.tenantId;\r\n        account.environment = accountInfo.environment;\r\n        account.username = accountInfo.username;\r\n        account.name = accountInfo.name;\r\n        account.cloudGraphHostName = cloudGraphHostName;\r\n        account.msGraphHost = msGraphHost;\r\n        // Serialize tenant profiles map into an array\r\n        account.tenantProfiles = Array.from(accountInfo.tenantProfiles?.values() || []);\r\n        return account;\r\n    }\r\n    /**\r\n     * Generate HomeAccountId from server response\r\n     * @param serverClientInfo\r\n     * @param authType\r\n     */\r\n    static generateHomeAccountId(serverClientInfo, authType, logger, cryptoObj, idTokenClaims) {\r\n        // since ADFS/DSTS do not have tid and does not set client_info\r\n        if (!(authType === AuthorityType.Adfs ||\r\n            authType === AuthorityType.Dsts)) {\r\n            // for cases where there is clientInfo\r\n            if (serverClientInfo) {\r\n                try {\r\n                    const clientInfo = buildClientInfo(serverClientInfo, cryptoObj.base64Decode);\r\n                    if (clientInfo.uid && clientInfo.utid) {\r\n                        return `${clientInfo.uid}.${clientInfo.utid}`;\r\n                    }\r\n                }\r\n                catch (e) { }\r\n            }\r\n            logger.warning(\"No client info in response\");\r\n        }\r\n        // default to \"sub\" claim\r\n        return idTokenClaims?.sub || \"\";\r\n    }\r\n    /**\r\n     * Validates an entity: checks for all expected params\r\n     * @param entity\r\n     */\r\n    static isAccountEntity(entity) {\r\n        if (!entity) {\r\n            return false;\r\n        }\r\n        return (entity.hasOwnProperty(\"homeAccountId\") &&\r\n            entity.hasOwnProperty(\"environment\") &&\r\n            entity.hasOwnProperty(\"realm\") &&\r\n            entity.hasOwnProperty(\"localAccountId\") &&\r\n            entity.hasOwnProperty(\"username\") &&\r\n            entity.hasOwnProperty(\"authorityType\"));\r\n    }\r\n    /**\r\n     * Helper function to determine whether 2 accountInfo objects represent the same account\r\n     * @param accountA\r\n     * @param accountB\r\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\r\n     */\r\n    static accountInfoIsEqual(accountA, accountB, compareClaims) {\r\n        if (!accountA || !accountB) {\r\n            return false;\r\n        }\r\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\r\n        if (compareClaims) {\r\n            const accountAClaims = (accountA.idTokenClaims ||\r\n                {});\r\n            const accountBClaims = (accountB.idTokenClaims ||\r\n                {});\r\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\r\n            claimsMatch =\r\n                accountAClaims.iat === accountBClaims.iat &&\r\n                    accountAClaims.nonce === accountBClaims.nonce;\r\n        }\r\n        return (accountA.homeAccountId === accountB.homeAccountId &&\r\n            accountA.localAccountId === accountB.localAccountId &&\r\n            accountA.username === accountB.username &&\r\n            accountA.tenantId === accountB.tenantId &&\r\n            accountA.environment === accountB.environment &&\r\n            accountA.nativeAccountId === accountB.nativeAccountId &&\r\n            claimsMatch);\r\n    }\r\n}\r\n\r\nexport { AccountEntity };\r\n//# sourceMappingURL=AccountEntity.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Authority types supported by MSAL.\r\n */\r\nconst AuthorityType = {\r\n    Default: 0,\r\n    Adfs: 1,\r\n    Dsts: 2,\r\n    Ciam: 3,\r\n};\r\n\r\nexport { AuthorityType };\r\n//# sourceMappingURL=AuthorityType.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { hashNotDeserialized } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Parses hash string from given string. Returns empty string if no hash symbol is found.\r\n * @param hashString\r\n */\r\nfunction stripLeadingHashOrQuery(responseString) {\r\n    if (responseString.startsWith(\"#/\")) {\r\n        return responseString.substring(2);\r\n    }\r\n    else if (responseString.startsWith(\"#\") ||\r\n        responseString.startsWith(\"?\")) {\r\n        return responseString.substring(1);\r\n    }\r\n    return responseString;\r\n}\r\n/**\r\n * Returns URL hash as server auth code response object.\r\n */\r\nfunction getDeserializedResponse(responseString) {\r\n    // Check if given hash is empty\r\n    if (!responseString || responseString.indexOf(\"=\") < 0) {\r\n        return null;\r\n    }\r\n    try {\r\n        // Strip the # or ? symbol if present\r\n        const normalizedResponse = stripLeadingHashOrQuery(responseString);\r\n        // If # symbol was not present, above will return empty string, so give original hash value\r\n        const deserializedHash = Object.fromEntries(new URLSearchParams(normalizedResponse));\r\n        // Check for known response properties\r\n        if (deserializedHash.code ||\r\n            deserializedHash.error ||\r\n            deserializedHash.error_description ||\r\n            deserializedHash.state) {\r\n            return deserializedHash;\r\n        }\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(hashNotDeserialized);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport { getDeserializedResponse, stripLeadingHashOrQuery };\r\n//# sourceMappingURL=UrlUtils.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { StringUtils } from '../utils/StringUtils.mjs';\r\nimport { AADAuthorityConstants, Constants } from '../utils/Constants.mjs';\r\nimport { getDeserializedResponse } from '../utils/UrlUtils.mjs';\r\nimport { urlEmptyError, urlParseError, authorityUriInsecure } from '../error/ClientConfigurationErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Url object class which can perform various transformations on url strings.\r\n */\r\nclass UrlString {\r\n    get urlString() {\r\n        return this._urlString;\r\n    }\r\n    constructor(url) {\r\n        this._urlString = url;\r\n        if (!this._urlString) {\r\n            // Throws error if url is empty\r\n            throw createClientConfigurationError(urlEmptyError);\r\n        }\r\n        if (!url.includes(\"#\")) {\r\n            this._urlString = UrlString.canonicalizeUri(url);\r\n        }\r\n    }\r\n    /**\r\n     * Ensure urls are lower case and end with a / character.\r\n     * @param url\r\n     */\r\n    static canonicalizeUri(url) {\r\n        if (url) {\r\n            let lowerCaseUrl = url.toLowerCase();\r\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\r\n            }\r\n            else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\r\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\r\n            }\r\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\r\n                lowerCaseUrl += \"/\";\r\n            }\r\n            return lowerCaseUrl;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * Throws if urlString passed is not a valid authority URI string.\r\n     */\r\n    validateAsUri() {\r\n        // Attempts to parse url for uri components\r\n        let components;\r\n        try {\r\n            components = this.getUrlComponents();\r\n        }\r\n        catch (e) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        // Throw error if URI or path segments are not parseable.\r\n        if (!components.HostNameAndPort || !components.PathSegments) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        // Throw error if uri is insecure.\r\n        if (!components.Protocol ||\r\n            components.Protocol.toLowerCase() !== \"https:\") {\r\n            throw createClientConfigurationError(authorityUriInsecure);\r\n        }\r\n    }\r\n    /**\r\n     * Given a url and a query string return the url with provided query string appended\r\n     * @param url\r\n     * @param queryString\r\n     */\r\n    static appendQueryString(url, queryString) {\r\n        if (!queryString) {\r\n            return url;\r\n        }\r\n        return url.indexOf(\"?\") < 0\r\n            ? `${url}?${queryString}`\r\n            : `${url}&${queryString}`;\r\n    }\r\n    /**\r\n     * Returns a url with the hash removed\r\n     * @param url\r\n     */\r\n    static removeHashFromUrl(url) {\r\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\r\n    }\r\n    /**\r\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\r\n     * @param href The url\r\n     * @param tenantId The tenant id to replace\r\n     */\r\n    replaceTenantPath(tenantId) {\r\n        const urlObject = this.getUrlComponents();\r\n        const pathArray = urlObject.PathSegments;\r\n        if (tenantId &&\r\n            pathArray.length !== 0 &&\r\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\r\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)) {\r\n            pathArray[0] = tenantId;\r\n        }\r\n        return UrlString.constructAuthorityUriFromObject(urlObject);\r\n    }\r\n    /**\r\n     * Parses out the components from a url string.\r\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\r\n     */\r\n    getUrlComponents() {\r\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\r\n        const regEx = RegExp(\"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\");\r\n        // If url string does not match regEx, we throw an error\r\n        const match = this.urlString.match(regEx);\r\n        if (!match) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        // Url component object\r\n        const urlComponents = {\r\n            Protocol: match[1],\r\n            HostNameAndPort: match[4],\r\n            AbsolutePath: match[5],\r\n            QueryString: match[7],\r\n        };\r\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\r\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\r\n        urlComponents.PathSegments = pathSegments;\r\n        if (urlComponents.QueryString &&\r\n            urlComponents.QueryString.endsWith(\"/\")) {\r\n            urlComponents.QueryString = urlComponents.QueryString.substring(0, urlComponents.QueryString.length - 1);\r\n        }\r\n        return urlComponents;\r\n    }\r\n    static getDomainFromUrl(url) {\r\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\r\n        const match = url.match(regEx);\r\n        if (!match) {\r\n            throw createClientConfigurationError(urlParseError);\r\n        }\r\n        return match[2];\r\n    }\r\n    static getAbsoluteUrl(relativeUrl, baseUrl) {\r\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\r\n            const url = new UrlString(baseUrl);\r\n            const baseComponents = url.getUrlComponents();\r\n            return (baseComponents.Protocol +\r\n                \"//\" +\r\n                baseComponents.HostNameAndPort +\r\n                relativeUrl);\r\n        }\r\n        return relativeUrl;\r\n    }\r\n    static constructAuthorityUriFromObject(urlObject) {\r\n        return new UrlString(urlObject.Protocol +\r\n            \"//\" +\r\n            urlObject.HostNameAndPort +\r\n            \"/\" +\r\n            urlObject.PathSegments.join(\"/\"));\r\n    }\r\n    /**\r\n     * Check if the hash of the URL string contains known properties\r\n     * @deprecated This API will be removed in a future version\r\n     */\r\n    static hashContainsKnownProperties(response) {\r\n        return !!getDeserializedResponse(response);\r\n    }\r\n}\r\n\r\nexport { UrlString };\r\n//# sourceMappingURL=UrlString.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { UrlString } from '../url/UrlString.mjs';\r\nimport { AuthorityMetadataSource } from '../utils/Constants.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst rawMetdataJSON = {\r\n    endpointMetadata: {\r\n        \"login.microsoftonline.com\": {\r\n            token_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.com/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.com/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.chinacloudapi.cn\": {\r\n            token_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.chinacloudapi.cn/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.chinacloudapi.cn/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n        \"login.microsoftonline.us\": {\r\n            token_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/token\",\r\n            jwks_uri: \"https://login.microsoftonline.us/{tenantid}/discovery/v2.0/keys\",\r\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\r\n            authorization_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/authorize\",\r\n            end_session_endpoint: \"https://login.microsoftonline.us/{tenantid}/oauth2/v2.0/logout\",\r\n        },\r\n    },\r\n    instanceDiscoveryMetadata: {\r\n        tenant_discovery_endpoint: \"https://{canonicalAuthority}/v2.0/.well-known/openid-configuration\",\r\n        metadata: [\r\n            {\r\n                preferred_network: \"login.microsoftonline.com\",\r\n                preferred_cache: \"login.windows.net\",\r\n                aliases: [\r\n                    \"login.microsoftonline.com\",\r\n                    \"login.windows.net\",\r\n                    \"login.microsoft.com\",\r\n                    \"sts.windows.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.partner.microsoftonline.cn\",\r\n                preferred_cache: \"login.partner.microsoftonline.cn\",\r\n                aliases: [\r\n                    \"login.partner.microsoftonline.cn\",\r\n                    \"login.chinacloudapi.cn\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.de\",\r\n                preferred_cache: \"login.microsoftonline.de\",\r\n                aliases: [\"login.microsoftonline.de\"],\r\n            },\r\n            {\r\n                preferred_network: \"login.microsoftonline.us\",\r\n                preferred_cache: \"login.microsoftonline.us\",\r\n                aliases: [\r\n                    \"login.microsoftonline.us\",\r\n                    \"login.usgovcloudapi.net\",\r\n                ],\r\n            },\r\n            {\r\n                preferred_network: \"login-us.microsoftonline.com\",\r\n                preferred_cache: \"login-us.microsoftonline.com\",\r\n                aliases: [\"login-us.microsoftonline.com\"],\r\n            },\r\n        ],\r\n    },\r\n};\r\nconst EndpointMetadata = rawMetdataJSON.endpointMetadata;\r\nconst InstanceDiscoveryMetadata = rawMetdataJSON.instanceDiscoveryMetadata;\r\nconst InstanceDiscoveryMetadataAliases = new Set();\r\nInstanceDiscoveryMetadata.metadata.forEach((metadataEntry) => {\r\n    metadataEntry.aliases.forEach((alias) => {\r\n        InstanceDiscoveryMetadataAliases.add(alias);\r\n    });\r\n});\r\n/**\r\n * Attempts to get an aliases array from the static authority metadata sources based on the canonical authority host\r\n * @param staticAuthorityOptions\r\n * @param logger\r\n * @returns\r\n */\r\nfunction getAliasesFromStaticSources(staticAuthorityOptions, logger) {\r\n    let staticAliases;\r\n    const canonicalAuthority = staticAuthorityOptions.canonicalAuthority;\r\n    if (canonicalAuthority) {\r\n        const authorityHost = new UrlString(canonicalAuthority).getUrlComponents().HostNameAndPort;\r\n        staticAliases =\r\n            getAliasesFromMetadata(authorityHost, staticAuthorityOptions.cloudDiscoveryMetadata?.metadata, AuthorityMetadataSource.CONFIG, logger) ||\r\n                getAliasesFromMetadata(authorityHost, InstanceDiscoveryMetadata.metadata, AuthorityMetadataSource.HARDCODED_VALUES, logger) ||\r\n                staticAuthorityOptions.knownAuthorities;\r\n    }\r\n    return staticAliases || [];\r\n}\r\n/**\r\n * Returns aliases for from the raw cloud discovery metadata passed in\r\n * @param authorityHost\r\n * @param rawCloudDiscoveryMetadata\r\n * @returns\r\n */\r\nfunction getAliasesFromMetadata(authorityHost, cloudDiscoveryMetadata, source, logger) {\r\n    logger?.trace(`getAliasesFromMetadata called with source: ${source}`);\r\n    if (authorityHost && cloudDiscoveryMetadata) {\r\n        const metadata = getCloudDiscoveryMetadataFromNetworkResponse(cloudDiscoveryMetadata, authorityHost);\r\n        if (metadata) {\r\n            logger?.trace(`getAliasesFromMetadata: found cloud discovery metadata in ${source}, returning aliases`);\r\n            return metadata.aliases;\r\n        }\r\n        else {\r\n            logger?.trace(`getAliasesFromMetadata: did not find cloud discovery metadata in ${source}`);\r\n        }\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * Get cloud discovery metadata for common authorities\r\n */\r\nfunction getCloudDiscoveryMetadataFromHardcodedValues(authorityHost) {\r\n    const metadata = getCloudDiscoveryMetadataFromNetworkResponse(InstanceDiscoveryMetadata.metadata, authorityHost);\r\n    return metadata;\r\n}\r\n/**\r\n * Searches instance discovery network response for the entry that contains the host in the aliases list\r\n * @param response\r\n * @param authority\r\n */\r\nfunction getCloudDiscoveryMetadataFromNetworkResponse(response, authorityHost) {\r\n    for (let i = 0; i < response.length; i++) {\r\n        const metadata = response[i];\r\n        if (metadata.aliases.includes(authorityHost)) {\r\n            return metadata;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport { EndpointMetadata, InstanceDiscoveryMetadata, InstanceDiscoveryMetadataAliases, getAliasesFromMetadata, getAliasesFromStaticSources, getCloudDiscoveryMetadataFromHardcodedValues, getCloudDiscoveryMetadataFromNetworkResponse, rawMetdataJSON };\r\n//# sourceMappingURL=AuthorityMetadata.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst cacheQuotaExceededErrorCode = \"cache_quota_exceeded\";\r\nconst cacheUnknownErrorCode = \"cache_error_unknown\";\r\n\r\nexport { cacheQuotaExceededErrorCode, cacheUnknownErrorCode };\r\n//# sourceMappingURL=CacheErrorCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { cacheUnknownErrorCode, cacheQuotaExceededErrorCode } from './CacheErrorCodes.mjs';\r\nimport * as CacheErrorCodes from './CacheErrorCodes.mjs';\r\nexport { CacheErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CacheErrorMessages = {\r\n    [cacheQuotaExceededErrorCode]: \"Exceeded cache storage capacity.\",\r\n    [cacheUnknownErrorCode]: \"Unexpected error occurred when using cache storage.\",\r\n};\r\n/**\r\n * Error thrown when there is an error with the cache\r\n */\r\nclass CacheError extends Error {\r\n    constructor(errorCode, errorMessage) {\r\n        const message = errorMessage ||\r\n            (CacheErrorMessages[errorCode]\r\n                ? CacheErrorMessages[errorCode]\r\n                : CacheErrorMessages[cacheUnknownErrorCode]);\r\n        super(`${errorCode}: ${message}`);\r\n        Object.setPrototypeOf(this, CacheError.prototype);\r\n        this.name = \"CacheError\";\r\n        this.errorCode = errorCode;\r\n        this.errorMessage = message;\r\n    }\r\n}\r\n\r\nexport { CacheError, CacheErrorMessages };\r\n//# sourceMappingURL=CacheError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Separators, CredentialType, AuthenticationScheme, THE_FAMILY_ID, APP_METADATA, AUTHORITY_METADATA_CONSTANTS } from '../utils/Constants.mjs';\r\nimport { generateCredentialKey } from './utils/CacheHelpers.mjs';\r\nimport { ScopeSet } from '../request/ScopeSet.mjs';\r\nimport { AccountEntity } from './entities/AccountEntity.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { updateAccountTenantProfileData } from '../account/AccountInfo.mjs';\r\nimport { extractTokenClaims } from '../account/AuthToken.mjs';\r\nimport { name, version } from '../packageMetadata.mjs';\r\nimport { getAliasesFromStaticSources } from '../authority/AuthorityMetadata.mjs';\r\nimport { CacheError } from '../error/CacheError.mjs';\r\nimport { invalidCacheRecord, bindingKeyNotRemoved, multipleMatchingAppMetadata, methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\r\nimport { cacheQuotaExceededErrorCode, cacheUnknownErrorCode } from '../error/CacheErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\r\n * @internal\r\n */\r\nclass CacheManager {\r\n    constructor(clientId, cryptoImpl, logger, staticAuthorityOptions) {\r\n        this.clientId = clientId;\r\n        this.cryptoImpl = cryptoImpl;\r\n        this.commonLogger = logger.clone(name, version);\r\n        this.staticAuthorityOptions = staticAuthorityOptions;\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.buildTenantProfiles(this.getAccountsFilteredBy(accountFilter || {}), accountFilter);\r\n    }\r\n    /**\r\n     * Gets first tenanted AccountInfo object found based on provided filters\r\n     */\r\n    getAccountInfoFilteredBy(accountFilter) {\r\n        const allAccounts = this.getAllAccounts(accountFilter);\r\n        if (allAccounts.length > 1) {\r\n            // If one or more accounts are found, prioritize accounts that have an ID token\r\n            const sortedAccounts = allAccounts.sort((account) => {\r\n                return account.idTokenClaims ? -1 : 1;\r\n            });\r\n            return sortedAccounts[0];\r\n        }\r\n        else if (allAccounts.length === 1) {\r\n            // If only one account is found, return it regardless of whether a matching ID token was found\r\n            return allAccounts[0];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a single matching\r\n     * @param accountFilter\r\n     * @returns\r\n     */\r\n    getBaseAccountInfo(accountFilter) {\r\n        const accountEntities = this.getAccountsFilteredBy(accountFilter);\r\n        if (accountEntities.length > 0) {\r\n            return accountEntities[0].getAccountInfo();\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Matches filtered account entities with cached ID tokens that match the tenant profile-specific account filters\r\n     * and builds the account info objects from the matching ID token's claims\r\n     * @param cachedAccounts\r\n     * @param accountFilter\r\n     * @returns Array of AccountInfo objects that match account and tenant profile filters\r\n     */\r\n    buildTenantProfiles(cachedAccounts, accountFilter) {\r\n        return cachedAccounts.flatMap((accountEntity) => {\r\n            return this.getTenantProfilesFromAccountEntity(accountEntity, accountFilter?.tenantId, accountFilter);\r\n        });\r\n    }\r\n    getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter) {\r\n        let tenantedAccountInfo = null;\r\n        let idTokenClaims;\r\n        if (tenantProfileFilter) {\r\n            if (!this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter)) {\r\n                return null;\r\n            }\r\n        }\r\n        const idToken = this.getIdToken(accountInfo, tokenKeys, tenantProfile.tenantId);\r\n        if (idToken) {\r\n            idTokenClaims = extractTokenClaims(idToken.secret, this.cryptoImpl.base64Decode);\r\n            if (!this.idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter)) {\r\n                // ID token sourced claims don't match so this tenant profile is not a match\r\n                return null;\r\n            }\r\n        }\r\n        // Expand tenant profile into account info based on matching tenant profile and if available matching ID token claims\r\n        tenantedAccountInfo = updateAccountTenantProfileData(accountInfo, tenantProfile, idTokenClaims, idToken?.secret);\r\n        return tenantedAccountInfo;\r\n    }\r\n    getTenantProfilesFromAccountEntity(accountEntity, targetTenantId, tenantProfileFilter) {\r\n        const accountInfo = accountEntity.getAccountInfo();\r\n        let searchTenantProfiles = accountInfo.tenantProfiles || new Map();\r\n        const tokenKeys = this.getTokenKeys();\r\n        // If a tenant ID was provided, only return the tenant profile for that tenant ID if it exists\r\n        if (targetTenantId) {\r\n            const tenantProfile = searchTenantProfiles.get(targetTenantId);\r\n            if (tenantProfile) {\r\n                // Reduce search field to just this tenant profile\r\n                searchTenantProfiles = new Map([\r\n                    [targetTenantId, tenantProfile],\r\n                ]);\r\n            }\r\n            else {\r\n                // No tenant profile for search tenant ID, return empty array\r\n                return [];\r\n            }\r\n        }\r\n        const matchingTenantProfiles = [];\r\n        searchTenantProfiles.forEach((tenantProfile) => {\r\n            const tenantedAccountInfo = this.getTenantedAccountInfoByFilter(accountInfo, tokenKeys, tenantProfile, tenantProfileFilter);\r\n            if (tenantedAccountInfo) {\r\n                matchingTenantProfiles.push(tenantedAccountInfo);\r\n            }\r\n        });\r\n        return matchingTenantProfiles;\r\n    }\r\n    tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter) {\r\n        if (!!tenantProfileFilter.localAccountId &&\r\n            !this.matchLocalAccountIdFromTenantProfile(tenantProfile, tenantProfileFilter.localAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!tenantProfileFilter.name &&\r\n            !(tenantProfile.name === tenantProfileFilter.name)) {\r\n            return false;\r\n        }\r\n        if (tenantProfileFilter.isHomeTenant !== undefined &&\r\n            !(tenantProfile.isHomeTenant === tenantProfileFilter.isHomeTenant)) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    idTokenClaimsMatchTenantProfileFilter(idTokenClaims, tenantProfileFilter) {\r\n        // Tenant Profile filtering\r\n        if (tenantProfileFilter) {\r\n            if (!!tenantProfileFilter.localAccountId &&\r\n                !this.matchLocalAccountIdFromTokenClaims(idTokenClaims, tenantProfileFilter.localAccountId)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.loginHint &&\r\n                !this.matchLoginHintFromTokenClaims(idTokenClaims, tenantProfileFilter.loginHint)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.username &&\r\n                !this.matchUsername(idTokenClaims.preferred_username, tenantProfileFilter.username)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.name &&\r\n                !this.matchName(idTokenClaims, tenantProfileFilter.name)) {\r\n                return false;\r\n            }\r\n            if (!!tenantProfileFilter.sid &&\r\n                !this.matchSid(idTokenClaims, tenantProfileFilter.sid)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, correlationId, storeInCache) {\r\n        if (!cacheRecord) {\r\n            throw createClientAuthError(invalidCacheRecord);\r\n        }\r\n        try {\r\n            if (!!cacheRecord.account) {\r\n                await this.setAccount(cacheRecord.account, correlationId);\r\n            }\r\n            if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\r\n                await this.setIdTokenCredential(cacheRecord.idToken, correlationId);\r\n            }\r\n            if (!!cacheRecord.accessToken &&\r\n                storeInCache?.accessToken !== false) {\r\n                await this.saveAccessToken(cacheRecord.accessToken, correlationId);\r\n            }\r\n            if (!!cacheRecord.refreshToken &&\r\n                storeInCache?.refreshToken !== false) {\r\n                await this.setRefreshTokenCredential(cacheRecord.refreshToken, correlationId);\r\n            }\r\n            if (!!cacheRecord.appMetadata) {\r\n                this.setAppMetadata(cacheRecord.appMetadata);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.commonLogger?.error(`CacheManager.saveCacheRecord: failed`);\r\n            if (e instanceof Error) {\r\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e.message}`, correlationId);\r\n                if (e.name === \"QuotaExceededError\" ||\r\n                    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\" ||\r\n                    e.message.includes(\"exceeded the quota\")) {\r\n                    this.commonLogger?.error(`CacheManager.saveCacheRecord: exceeded storage quota`, correlationId);\r\n                    throw new CacheError(cacheQuotaExceededErrorCode);\r\n                }\r\n                else {\r\n                    throw new CacheError(e.name, e.message);\r\n                }\r\n            }\r\n            else {\r\n                this.commonLogger?.errorPii(`CacheManager.saveCacheRecord: ${e}`, correlationId);\r\n                throw new CacheError(cacheUnknownErrorCode);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * saves access token credential\r\n     * @param credential\r\n     */\r\n    async saveAccessToken(credential, correlationId) {\r\n        const accessTokenFilter = {\r\n            clientId: credential.clientId,\r\n            credentialType: credential.credentialType,\r\n            environment: credential.environment,\r\n            homeAccountId: credential.homeAccountId,\r\n            realm: credential.realm,\r\n            tokenType: credential.tokenType,\r\n            requestedClaimsHash: credential.requestedClaimsHash,\r\n        };\r\n        const tokenKeys = this.getTokenKeys();\r\n        const currentScopes = ScopeSet.fromString(credential.target);\r\n        const removedAccessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)) {\r\n                return;\r\n            }\r\n            const tokenEntity = this.getAccessTokenCredential(key);\r\n            if (tokenEntity &&\r\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)) {\r\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\r\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\r\n                    removedAccessTokens.push(this.removeAccessToken(key));\r\n                }\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        await this.setAccessTokenCredential(credential, correlationId);\r\n    }\r\n    /**\r\n     * Retrieve account entities matching all provided tenant-agnostic filters; if no filter is set, get all account entities in the cache\r\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\r\n     * @param accountFilter - An object containing Account properties to filter by\r\n     */\r\n    getAccountsFilteredBy(accountFilter) {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const matchingAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            if (!this.isAccountKey(cacheKey, accountFilter.homeAccountId)) {\r\n                // Don't parse value if the key doesn't match the account filters\r\n                return;\r\n            }\r\n            const entity = this.getAccount(cacheKey, this.commonLogger);\r\n            // Match base account fields\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.homeAccountId &&\r\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.username &&\r\n                !this.matchUsername(entity.username, accountFilter.username)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.environment &&\r\n                !this.matchEnvironment(entity, accountFilter.environment)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.realm &&\r\n                !this.matchRealm(entity, accountFilter.realm)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.nativeAccountId &&\r\n                !this.matchNativeAccountId(entity, accountFilter.nativeAccountId)) {\r\n                return;\r\n            }\r\n            if (!!accountFilter.authorityType &&\r\n                !this.matchAuthorityType(entity, accountFilter.authorityType)) {\r\n                return;\r\n            }\r\n            // If at least one tenant profile matches the tenant profile filter, add the account to the list of matching accounts\r\n            const tenantProfileFilter = {\r\n                localAccountId: accountFilter?.localAccountId,\r\n                name: accountFilter?.name,\r\n            };\r\n            const matchingTenantProfiles = entity.tenantProfiles?.filter((tenantProfile) => {\r\n                return this.tenantProfileMatchesFilter(tenantProfile, tenantProfileFilter);\r\n            });\r\n            if (matchingTenantProfiles && matchingTenantProfiles.length === 0) {\r\n                // No tenant profile for this account matches filter, don't add to list of matching accounts\r\n                return;\r\n            }\r\n            matchingAccounts.push(entity);\r\n        });\r\n        return matchingAccounts;\r\n    }\r\n    /**\r\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\r\n     * @param key\r\n     * @param homeAccountId\r\n     * @param tenantId\r\n     * @returns\r\n     */\r\n    isAccountKey(key, homeAccountId, tenantId) {\r\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\r\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n        if (homeAccountId &&\r\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())) {\r\n            return false;\r\n        }\r\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\r\n            return false;\r\n        }\r\n        // Do not check environment as aliasing can cause false negatives\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns true if the given key matches our credential key schema.\r\n     * @param key\r\n     */\r\n    isCredentialKey(key) {\r\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\r\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\r\n            return false;\r\n        }\r\n        const lowerCaseKey = key.toLowerCase();\r\n        // Credential keys must indicate what credential type they represent\r\n        if (lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\r\n            -1 &&\r\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\r\n                -1 &&\r\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) === -1 &&\r\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\r\n                -1) {\r\n            return false;\r\n        }\r\n        if (lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\r\n            -1) {\r\n            // Refresh tokens must contain the client id or family id\r\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\r\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\r\n            if (lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\r\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1) {\r\n                return false;\r\n            }\r\n        }\r\n        else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\r\n            // Tokens must contain the clientId\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Returns whether or not the given credential entity matches the filter\r\n     * @param entity\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    credentialMatchesFilter(entity, filter) {\r\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.userAssertionHash &&\r\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\r\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\r\n         */\r\n        if (typeof filter.homeAccountId === \"string\" &&\r\n            !this.matchHomeAccountId(entity, filter.homeAccountId)) {\r\n            return false;\r\n        }\r\n        if (!!filter.environment &&\r\n            !this.matchEnvironment(entity, filter.environment)) {\r\n            return false;\r\n        }\r\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\r\n            return false;\r\n        }\r\n        if (!!filter.credentialType &&\r\n            !this.matchCredentialType(entity, filter.credentialType)) {\r\n            return false;\r\n        }\r\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\r\n            return false;\r\n        }\r\n        /*\r\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\r\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\r\n         */\r\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\r\n            return false;\r\n        }\r\n        // If request OR cached entity has requested Claims Hash, check if they match\r\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\r\n            // Don't match if either is undefined or they are different\r\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\r\n                return false;\r\n            }\r\n        }\r\n        // Access Token with Auth Scheme specific matching\r\n        if (entity.credentialType ===\r\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME) {\r\n            if (!!filter.tokenType &&\r\n                !this.matchTokenType(entity, filter.tokenType)) {\r\n                return false;\r\n            }\r\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\r\n            if (filter.tokenType === AuthenticationScheme.SSH) {\r\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\r\n     * @param filter\r\n     */\r\n    getAppMetadataFilteredBy(filter) {\r\n        const allCacheKeys = this.getKeys();\r\n        const matchingAppMetadata = {};\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-appMetadata type cache entities\r\n            if (!this.isAppMetadata(cacheKey)) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAppMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (!!filter.environment &&\r\n                !this.matchEnvironment(entity, filter.environment)) {\r\n                return;\r\n            }\r\n            if (!!filter.clientId &&\r\n                !this.matchClientId(entity, filter.clientId)) {\r\n                return;\r\n            }\r\n            matchingAppMetadata[cacheKey] = entity;\r\n        });\r\n        return matchingAppMetadata;\r\n    }\r\n    /**\r\n     * retrieve authorityMetadata that contains a matching alias\r\n     * @param filter\r\n     */\r\n    getAuthorityMetadataByAlias(host) {\r\n        const allCacheKeys = this.getAuthorityMetadataKeys();\r\n        let matchedEntity = null;\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            // don't parse any non-authorityMetadata type cache entities\r\n            if (!this.isAuthorityMetadata(cacheKey) ||\r\n                cacheKey.indexOf(this.clientId) === -1) {\r\n                return;\r\n            }\r\n            // Attempt retrieval\r\n            const entity = this.getAuthorityMetadata(cacheKey);\r\n            if (!entity) {\r\n                return;\r\n            }\r\n            if (entity.aliases.indexOf(host) === -1) {\r\n                return;\r\n            }\r\n            matchedEntity = entity;\r\n        });\r\n        return matchedEntity;\r\n    }\r\n    /**\r\n     * Removes all accounts and related tokens from cache.\r\n     */\r\n    async removeAllAccounts() {\r\n        const allAccountKeys = this.getAccountKeys();\r\n        const removedAccounts = [];\r\n        allAccountKeys.forEach((cacheKey) => {\r\n            removedAccounts.push(this.removeAccount(cacheKey));\r\n        });\r\n        await Promise.all(removedAccounts);\r\n    }\r\n    /**\r\n     * Removes the account and related tokens for a given account key\r\n     * @param account\r\n     */\r\n    async removeAccount(accountKey) {\r\n        const account = this.getAccount(accountKey, this.commonLogger);\r\n        if (!account) {\r\n            return;\r\n        }\r\n        await this.removeAccountContext(account);\r\n        this.removeItem(accountKey);\r\n    }\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    async removeAccountContext(account) {\r\n        const allTokenKeys = this.getTokenKeys();\r\n        const accountId = account.generateAccountId();\r\n        const removedCredentials = [];\r\n        allTokenKeys.idToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeIdToken(key);\r\n            }\r\n        });\r\n        allTokenKeys.accessToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                removedCredentials.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        allTokenKeys.refreshToken.forEach((key) => {\r\n            if (key.indexOf(accountId) === 0) {\r\n                this.removeRefreshToken(key);\r\n            }\r\n        });\r\n        await Promise.all(removedCredentials);\r\n    }\r\n    /**\r\n     * returns a boolean if the given credential is removed\r\n     * @param credential\r\n     */\r\n    async removeAccessToken(key) {\r\n        const credential = this.getAccessTokenCredential(key);\r\n        if (!credential) {\r\n            return;\r\n        }\r\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\r\n        if (credential.credentialType.toLowerCase() ===\r\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()) {\r\n            if (credential.tokenType === AuthenticationScheme.POP) {\r\n                const accessTokenWithAuthSchemeEntity = credential;\r\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\r\n                if (kid) {\r\n                    try {\r\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\r\n                    }\r\n                    catch (error) {\r\n                        throw createClientAuthError(bindingKeyNotRemoved);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes all app metadata objects from cache.\r\n     */\r\n    removeAppMetadata() {\r\n        const allCacheKeys = this.getKeys();\r\n        allCacheKeys.forEach((cacheKey) => {\r\n            if (this.isAppMetadata(cacheKey)) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AccountEntity from cache\r\n     * @param account\r\n     */\r\n    readAccountFromCache(account) {\r\n        const accountKey = AccountEntity.generateAccountCacheKey(account);\r\n        return this.getAccount(accountKey, this.commonLogger);\r\n    }\r\n    /**\r\n     * Retrieve IdTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param targetRealm {?string}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getIdToken(account, tokenKeys, targetRealm, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\r\n        const idTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.ID_TOKEN,\r\n            clientId: this.clientId,\r\n            realm: targetRealm,\r\n        };\r\n        const idTokenMap = this.getIdTokensByFilter(idTokenFilter, tokenKeys);\r\n        const numIdTokens = idTokenMap.size;\r\n        if (numIdTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numIdTokens > 1) {\r\n            let tokensToBeRemoved = idTokenMap;\r\n            // Multiple tenant profiles and no tenant specified, pick home account\r\n            if (!targetRealm) {\r\n                const homeIdTokenMap = new Map();\r\n                idTokenMap.forEach((idToken, key) => {\r\n                    if (idToken.realm === account.tenantId) {\r\n                        homeIdTokenMap.set(key, idToken);\r\n                    }\r\n                });\r\n                const numHomeIdTokens = homeIdTokenMap.size;\r\n                if (numHomeIdTokens < 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account but none match account entity tenant id, returning first result\");\r\n                    return idTokenMap.values().next().value;\r\n                }\r\n                else if (numHomeIdTokens === 1) {\r\n                    this.commonLogger.info(\"CacheManager:getIdToken - Multiple ID tokens found for account, defaulting to home tenant profile\");\r\n                    return homeIdTokenMap.values().next().value;\r\n                }\r\n                else {\r\n                    // Multiple ID tokens for home tenant profile, remove all and return null\r\n                    tokensToBeRemoved = homeIdTokenMap;\r\n                }\r\n            }\r\n            // Multiple tokens for a single tenant profile, remove all and return null\r\n            this.commonLogger.info(\"CacheManager:getIdToken - Multiple matching ID tokens found, clearing them\");\r\n            tokensToBeRemoved.forEach((idToken, key) => {\r\n                this.removeIdToken(key);\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedID: idTokenMap.size }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning ID token\");\r\n        return idTokenMap.values().next().value;\r\n    }\r\n    /**\r\n     * Gets all idTokens matching the given filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getIdTokensByFilter(filter, tokenKeys) {\r\n        const idTokenKeys = (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\r\n        const idTokens = new Map();\r\n        idTokenKeys.forEach((key) => {\r\n            if (!this.idTokenKeyMatchesFilter(key, {\r\n                clientId: this.clientId,\r\n                ...filter,\r\n            })) {\r\n                return;\r\n            }\r\n            const idToken = this.getIdTokenCredential(key);\r\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\r\n                idTokens.set(key, idToken);\r\n            }\r\n        });\r\n        return idTokens;\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    idTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Removes idToken from the cache\r\n     * @param key\r\n     */\r\n    removeIdToken(key) {\r\n        this.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes refresh token from the cache\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key) {\r\n        this.removeItem(key);\r\n    }\r\n    /**\r\n     * Retrieve AccessTokenEntity from cache\r\n     * @param account {AccountInfo}\r\n     * @param request {BaseAuthRequest}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getAccessToken(account, request, tokenKeys, targetRealm, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\r\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\r\n        const authScheme = request.authenticationScheme || AuthenticationScheme.BEARER;\r\n        /*\r\n         * Distinguish between Bearer and PoP/SSH token cache types\r\n         * Cast to lowercase to handle \"bearer\" from ADFS\r\n         */\r\n        const credentialType = authScheme &&\r\n            authScheme.toLowerCase() !==\r\n                AuthenticationScheme.BEARER.toLowerCase()\r\n            ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\r\n            : CredentialType.ACCESS_TOKEN;\r\n        const accessTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: credentialType,\r\n            clientId: this.clientId,\r\n            realm: targetRealm || account.tenantId,\r\n            target: scopes,\r\n            tokenType: authScheme,\r\n            keyId: request.sshKid,\r\n            requestedClaimsHash: request.requestedClaimsHash,\r\n        };\r\n        const accessTokenKeys = (tokenKeys && tokenKeys.accessToken) ||\r\n            this.getTokenKeys().accessToken;\r\n        const accessTokens = [];\r\n        accessTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)) {\r\n                const accessToken = this.getAccessTokenCredential(key);\r\n                // Validate value\r\n                if (accessToken &&\r\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)) {\r\n                    accessTokens.push(accessToken);\r\n                }\r\n            }\r\n        });\r\n        const numAccessTokens = accessTokens.length;\r\n        if (numAccessTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - No token found\");\r\n            return null;\r\n        }\r\n        else if (numAccessTokens > 1) {\r\n            this.commonLogger.info(\"CacheManager:getAccessToken - Multiple access tokens found, clearing them\");\r\n            accessTokens.forEach((accessToken) => {\r\n                void this.removeAccessToken(generateCredentialKey(accessToken));\r\n            });\r\n            if (performanceClient && correlationId) {\r\n                performanceClient.addFields({ multiMatchedAT: accessTokens.length }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getAccessToken - Returning access token\");\r\n        return accessTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     * @param keyMustContainAllScopes\r\n     * @returns\r\n     */\r\n    accessTokenKeyMatchesFilter(inputKey, filter, keyMustContainAllScopes) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.requestedClaimsHash &&\r\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.target) {\r\n            const scopes = filter.target.asArray();\r\n            for (let i = 0; i < scopes.length; i++) {\r\n                if (keyMustContainAllScopes &&\r\n                    !key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache lookup a missing scope would be a cache miss\r\n                    return false;\r\n                }\r\n                else if (!keyMustContainAllScopes &&\r\n                    key.includes(scopes[i].toLowerCase())) {\r\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Gets all access tokens matching the filter\r\n     * @param filter\r\n     * @returns\r\n     */\r\n    getAccessTokensByFilter(filter) {\r\n        const tokenKeys = this.getTokenKeys();\r\n        const accessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\r\n                return;\r\n            }\r\n            const accessToken = this.getAccessTokenCredential(key);\r\n            if (accessToken &&\r\n                this.credentialMatchesFilter(accessToken, filter)) {\r\n                accessTokens.push(accessToken);\r\n            }\r\n        });\r\n        return accessTokens;\r\n    }\r\n    /**\r\n     * Helper to retrieve the appropriate refresh token from cache\r\n     * @param account {AccountInfo}\r\n     * @param familyRT {boolean}\r\n     * @param tokenKeys {?TokenKeys}\r\n     * @param performanceClient {?IPerformanceClient}\r\n     * @param correlationId {?string}\r\n     */\r\n    getRefreshToken(account, familyRT, tokenKeys, performanceClient, correlationId) {\r\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\r\n        const id = familyRT ? THE_FAMILY_ID : undefined;\r\n        const refreshTokenFilter = {\r\n            homeAccountId: account.homeAccountId,\r\n            environment: account.environment,\r\n            credentialType: CredentialType.REFRESH_TOKEN,\r\n            clientId: this.clientId,\r\n            familyId: id,\r\n        };\r\n        const refreshTokenKeys = (tokenKeys && tokenKeys.refreshToken) ||\r\n            this.getTokenKeys().refreshToken;\r\n        const refreshTokens = [];\r\n        refreshTokenKeys.forEach((key) => {\r\n            // Validate key\r\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\r\n                const refreshToken = this.getRefreshTokenCredential(key);\r\n                // Validate value\r\n                if (refreshToken &&\r\n                    this.credentialMatchesFilter(refreshToken, refreshTokenFilter)) {\r\n                    refreshTokens.push(refreshToken);\r\n                }\r\n            }\r\n        });\r\n        const numRefreshTokens = refreshTokens.length;\r\n        if (numRefreshTokens < 1) {\r\n            this.commonLogger.info(\"CacheManager:getRefreshToken - No refresh token found.\");\r\n            return null;\r\n        }\r\n        // address the else case after remove functions address environment aliases\r\n        if (numRefreshTokens > 1 && performanceClient && correlationId) {\r\n            performanceClient.addFields({ multiMatchedRT: numRefreshTokens }, correlationId);\r\n        }\r\n        this.commonLogger.info(\"CacheManager:getRefreshToken - returning refresh token\");\r\n        return refreshTokens[0];\r\n    }\r\n    /**\r\n     * Validate the cache key against filter before retrieving and parsing cache value\r\n     * @param key\r\n     * @param filter\r\n     */\r\n    refreshTokenKeyMatchesFilter(inputKey, filter) {\r\n        const key = inputKey.toLowerCase();\r\n        if (filter.familyId &&\r\n            key.indexOf(filter.familyId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        // If familyId is used, clientId is not in the key\r\n        if (!filter.familyId &&\r\n            filter.clientId &&\r\n            key.indexOf(filter.clientId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        if (filter.homeAccountId &&\r\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Retrieve AppMetadataEntity from cache\r\n     */\r\n    readAppMetadataFromCache(environment) {\r\n        const appMetadataFilter = {\r\n            environment,\r\n            clientId: this.clientId,\r\n        };\r\n        const appMetadata = this.getAppMetadataFilteredBy(appMetadataFilter);\r\n        const appMetadataEntries = Object.keys(appMetadata).map((key) => appMetadata[key]);\r\n        const numAppMetadata = appMetadataEntries.length;\r\n        if (numAppMetadata < 1) {\r\n            return null;\r\n        }\r\n        else if (numAppMetadata > 1) {\r\n            throw createClientAuthError(multipleMatchingAppMetadata);\r\n        }\r\n        return appMetadataEntries[0];\r\n    }\r\n    /**\r\n     * Return the family_id value associated  with FOCI\r\n     * @param environment\r\n     * @param clientId\r\n     */\r\n    isAppMetadataFOCI(environment) {\r\n        const appMetadata = this.readAppMetadataFromCache(environment);\r\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param value\r\n     * @param homeAccountId\r\n     */\r\n    matchHomeAccountId(entity, homeAccountId) {\r\n        return !!(typeof entity.homeAccountId === \"string\" &&\r\n            homeAccountId === entity.homeAccountId);\r\n    }\r\n    /**\r\n     * helper to match account ids\r\n     * @param entity\r\n     * @param localAccountId\r\n     * @returns\r\n     */\r\n    matchLocalAccountIdFromTokenClaims(tokenClaims, localAccountId) {\r\n        const idTokenLocalAccountId = tokenClaims.oid || tokenClaims.sub;\r\n        return localAccountId === idTokenLocalAccountId;\r\n    }\r\n    matchLocalAccountIdFromTenantProfile(tenantProfile, localAccountId) {\r\n        return tenantProfile.localAccountId === localAccountId;\r\n    }\r\n    /**\r\n     * helper to match names\r\n     * @param entity\r\n     * @param name\r\n     * @returns true if the downcased name properties are present and match in the filter and the entity\r\n     */\r\n    matchName(claims, name) {\r\n        return !!(name.toLowerCase() === claims.name?.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match usernames\r\n     * @param entity\r\n     * @param username\r\n     * @returns\r\n     */\r\n    matchUsername(cachedUsername, filterUsername) {\r\n        return !!(cachedUsername &&\r\n            typeof cachedUsername === \"string\" &&\r\n            filterUsername?.toLowerCase() === cachedUsername.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match assertion\r\n     * @param value\r\n     * @param oboAssertion\r\n     */\r\n    matchUserAssertionHash(entity, userAssertionHash) {\r\n        return !!(entity.userAssertionHash &&\r\n            userAssertionHash === entity.userAssertionHash);\r\n    }\r\n    /**\r\n     * helper to match environment\r\n     * @param value\r\n     * @param environment\r\n     */\r\n    matchEnvironment(entity, environment) {\r\n        // Check static authority options first for cases where authority metadata has not been resolved and cached yet\r\n        if (this.staticAuthorityOptions) {\r\n            const staticAliases = getAliasesFromStaticSources(this.staticAuthorityOptions, this.commonLogger);\r\n            if (staticAliases.includes(environment) &&\r\n                staticAliases.includes(entity.environment)) {\r\n                return true;\r\n            }\r\n        }\r\n        // Query metadata cache if no static authority configuration has aliases that match enviroment\r\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\r\n        if (cloudMetadata &&\r\n            cloudMetadata.aliases.indexOf(entity.environment) > -1) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * helper to match credential type\r\n     * @param entity\r\n     * @param credentialType\r\n     */\r\n    matchCredentialType(entity, credentialType) {\r\n        return (entity.credentialType &&\r\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match client ids\r\n     * @param entity\r\n     * @param clientId\r\n     */\r\n    matchClientId(entity, clientId) {\r\n        return !!(entity.clientId && clientId === entity.clientId);\r\n    }\r\n    /**\r\n     * helper to match family ids\r\n     * @param entity\r\n     * @param familyId\r\n     */\r\n    matchFamilyId(entity, familyId) {\r\n        return !!(entity.familyId && familyId === entity.familyId);\r\n    }\r\n    /**\r\n     * helper to match realm\r\n     * @param entity\r\n     * @param realm\r\n     */\r\n    matchRealm(entity, realm) {\r\n        return !!(entity.realm?.toLowerCase() === realm.toLowerCase());\r\n    }\r\n    /**\r\n     * helper to match nativeAccountId\r\n     * @param entity\r\n     * @param nativeAccountId\r\n     * @returns boolean indicating the match result\r\n     */\r\n    matchNativeAccountId(entity, nativeAccountId) {\r\n        return !!(entity.nativeAccountId && nativeAccountId === entity.nativeAccountId);\r\n    }\r\n    /**\r\n     * helper to match loginHint which can be either:\r\n     * 1. login_hint ID token claim\r\n     * 2. username in cached account object\r\n     * 3. upn in ID token claims\r\n     * @param entity\r\n     * @param loginHint\r\n     * @returns\r\n     */\r\n    matchLoginHintFromTokenClaims(tokenClaims, loginHint) {\r\n        if (tokenClaims.login_hint === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.preferred_username === loginHint) {\r\n            return true;\r\n        }\r\n        if (tokenClaims.upn === loginHint) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Helper to match sid\r\n     * @param entity\r\n     * @param sid\r\n     * @returns true if the sid claim is present and matches the filter\r\n     */\r\n    matchSid(idTokenClaims, sid) {\r\n        return idTokenClaims.sid === sid;\r\n    }\r\n    matchAuthorityType(entity, authorityType) {\r\n        return !!(entity.authorityType &&\r\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase());\r\n    }\r\n    /**\r\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\r\n     * @param entity\r\n     * @param target\r\n     */\r\n    matchTarget(entity, target) {\r\n        const isNotAccessTokenCredential = entity.credentialType !== CredentialType.ACCESS_TOKEN &&\r\n            entity.credentialType !==\r\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\r\n        if (isNotAccessTokenCredential || !entity.target) {\r\n            return false;\r\n        }\r\n        const entityScopeSet = ScopeSet.fromString(entity.target);\r\n        return entityScopeSet.containsScopeSet(target);\r\n    }\r\n    /**\r\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param tokenType\r\n     */\r\n    matchTokenType(entity, tokenType) {\r\n        return !!(entity.tokenType && entity.tokenType === tokenType);\r\n    }\r\n    /**\r\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\r\n     * @param entity\r\n     * @param keyId\r\n     */\r\n    matchKeyId(entity, keyId) {\r\n        return !!(entity.keyId && entity.keyId === keyId);\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type appmetadata\r\n     * @param key\r\n     */\r\n    isAppMetadata(key) {\r\n        return key.indexOf(APP_METADATA) !== -1;\r\n    }\r\n    /**\r\n     * returns if a given cache entity is of the type authoritymetadata\r\n     * @param key\r\n     */\r\n    isAuthorityMetadata(key) {\r\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\r\n    }\r\n    /**\r\n     * returns cache key used for cloud instance metadata\r\n     */\r\n    generateAuthorityMetadataCacheKey(authority) {\r\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\r\n    }\r\n    /**\r\n     * Helper to convert serialized data to object\r\n     * @param obj\r\n     * @param json\r\n     */\r\n    static toObject(obj, json) {\r\n        for (const propertyName in json) {\r\n            obj[propertyName] = json[propertyName];\r\n        }\r\n        return obj;\r\n    }\r\n}\r\n/** @internal */\r\nclass DefaultStorageClass extends CacheManager {\r\n    async setAccount() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAccount() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    async setIdTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getIdTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    async setAccessTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAccessTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    async setRefreshTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getRefreshTokenCredential() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setAppMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAppMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setServerTelemetry() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getServerTelemetry() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setAuthorityMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAuthorityMetadata() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAuthorityMetadataKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    setThrottlingCache() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getThrottlingCache() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    removeItem() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getAccountKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n    getTokenKeys() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    }\r\n}\r\n\r\nexport { CacheManager, DefaultStorageClass };\r\n//# sourceMappingURL=CacheManager.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { DEFAULT_CRYPTO_IMPLEMENTATION } from '../crypto/ICrypto.mjs';\r\nimport { Logger, LogLevel } from '../logger/Logger.mjs';\r\nimport { DEFAULT_TOKEN_RENEWAL_OFFSET_SEC, Constants } from '../utils/Constants.mjs';\r\nimport { version } from '../packageMetadata.mjs';\r\nimport { AzureCloudInstance } from '../authority/AuthorityOptions.mjs';\r\nimport { DefaultStorageClass } from '../cache/CacheManager.mjs';\r\nimport { ProtocolMode } from '../authority/ProtocolMode.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_SYSTEM_OPTIONS = {\r\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\r\n    preventCorsPreflight: false,\r\n};\r\nconst DEFAULT_LOGGER_IMPLEMENTATION = {\r\n    loggerCallback: () => {\r\n        // allow users to not set loggerCallback\r\n    },\r\n    piiLoggingEnabled: false,\r\n    logLevel: LogLevel.Info,\r\n    correlationId: Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CACHE_OPTIONS = {\r\n    claimsBasedCachingEnabled: false,\r\n};\r\nconst DEFAULT_NETWORK_IMPLEMENTATION = {\r\n    async sendGetRequestAsync() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n    async sendPostRequestAsync() {\r\n        throw createClientAuthError(methodNotImplemented);\r\n    },\r\n};\r\nconst DEFAULT_LIBRARY_INFO = {\r\n    sku: Constants.SKU,\r\n    version: version,\r\n    cpu: Constants.EMPTY_STRING,\r\n    os: Constants.EMPTY_STRING,\r\n};\r\nconst DEFAULT_CLIENT_CREDENTIALS = {\r\n    clientSecret: Constants.EMPTY_STRING,\r\n    clientAssertion: undefined,\r\n};\r\nconst DEFAULT_AZURE_CLOUD_OPTIONS = {\r\n    azureCloudInstance: AzureCloudInstance.None,\r\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\r\n};\r\nconst DEFAULT_TELEMETRY_OPTIONS = {\r\n    application: {\r\n        appName: \"\",\r\n        appVersion: \"\",\r\n    },\r\n};\r\n/**\r\n * Function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param Configuration\r\n *\r\n * @returns Configuration\r\n */\r\nfunction buildClientConfiguration({ authOptions: userAuthOptions, systemOptions: userSystemOptions, loggerOptions: userLoggerOption, cacheOptions: userCacheOptions, storageInterface: storageImplementation, networkInterface: networkImplementation, cryptoInterface: cryptoImplementation, clientCredentials: clientCredentials, libraryInfo: libraryInfo, telemetry: telemetry, serverTelemetryManager: serverTelemetryManager, persistencePlugin: persistencePlugin, serializableCache: serializableCache, }) {\r\n    const loggerOptions = {\r\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\r\n        ...userLoggerOption,\r\n    };\r\n    return {\r\n        authOptions: buildAuthOptions(userAuthOptions),\r\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\r\n        loggerOptions: loggerOptions,\r\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\r\n        storageInterface: storageImplementation ||\r\n            new DefaultStorageClass(userAuthOptions.clientId, DEFAULT_CRYPTO_IMPLEMENTATION, new Logger(loggerOptions)),\r\n        networkInterface: networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\r\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\r\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\r\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\r\n        serverTelemetryManager: serverTelemetryManager || null,\r\n        persistencePlugin: persistencePlugin || null,\r\n        serializableCache: serializableCache || null,\r\n    };\r\n}\r\n/**\r\n * Construct authoptions from the client and platform passed values\r\n * @param authOptions\r\n */\r\nfunction buildAuthOptions(authOptions) {\r\n    return {\r\n        clientCapabilities: [],\r\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\r\n        skipAuthorityMetadataCache: false,\r\n        instanceAware: false,\r\n        ...authOptions,\r\n    };\r\n}\r\n/**\r\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\r\n * @param ClientConfiguration\r\n */\r\nfunction isOidcProtocolMode(config) {\r\n    return (config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC);\r\n}\r\n\r\nexport { DEFAULT_SYSTEM_OPTIONS, buildClientConfiguration, isOidcProtocolMode };\r\n//# sourceMappingURL=ClientConfiguration.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { methodNotImplemented } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst StubbedNetworkModule = {\r\n    sendGetRequestAsync: () => {\r\n        return Promise.reject(createClientAuthError(methodNotImplemented));\r\n    },\r\n    sendPostRequestAsync: () => {\r\n        return Promise.reject(createClientAuthError(methodNotImplemented));\r\n    },\r\n};\r\n\r\nexport { StubbedNetworkModule };\r\n//# sourceMappingURL=INetworkModule.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEvents = {\r\n    /**\r\n     * acquireTokenByCode API (msal-browser and msal-node).\r\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\r\n     */\r\n    AcquireTokenByCode: \"acquireTokenByCode\",\r\n    /**\r\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\r\n     * Used to renew an access token using a refresh token against the token endpoint.\r\n     */\r\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\r\n    /**\r\n     * acquireTokenSilent API (msal-browser and msal-node).\r\n     * Used to silently acquire a new access token (from the cache or the network).\r\n     */\r\n    AcquireTokenSilent: \"acquireTokenSilent\",\r\n    /**\r\n     * acquireTokenSilentAsync (msal-browser).\r\n     * Internal API for acquireTokenSilent.\r\n     */\r\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\r\n    /**\r\n     * acquireTokenPopup (msal-browser).\r\n     * Used to acquire a new access token interactively through pop ups\r\n     */\r\n    AcquireTokenPopup: \"acquireTokenPopup\",\r\n    /**\r\n     * acquireTokenPreRedirect (msal-browser).\r\n     * First part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenPreRedirect: \"acquireTokenPreRedirect\",\r\n    /**\r\n     * acquireTokenRedirect (msal-browser).\r\n     * Second part of the redirect flow.\r\n     * Used to acquire a new access token interactively through redirects.\r\n     */\r\n    AcquireTokenRedirect: \"acquireTokenRedirect\",\r\n    /**\r\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\r\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\r\n     */\r\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\r\n    /**\r\n     * signJwt API in CryptoOpts class (msal-browser).\r\n     * Used to signed a pop token.\r\n     */\r\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\r\n    /**\r\n     * acquireToken API in the SilentCacheClient class (msal-browser).\r\n     * Used to read access tokens from the cache.\r\n     */\r\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\r\n    /**\r\n     * acquireToken API in the SilentIframeClient class (msal-browser).\r\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\r\n     */\r\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\r\n    AwaitConcurrentIframe: \"awaitConcurrentIframe\",\r\n    /**\r\n     * acquireToken API in SilentRereshClient (msal-browser).\r\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\r\n     */\r\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\r\n    /**\r\n     * ssoSilent API (msal-browser).\r\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\r\n     * Used to load authority metadata for a request.\r\n     */\r\n    StandardInteractionClientGetDiscoveredAuthority: \"standardInteractionClientGetDiscoveredAuthority\",\r\n    /**\r\n     * acquireToken APIs in msal-browser.\r\n     * Used to make an /authorize endpoint call with native brokering enabled.\r\n     */\r\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\r\n    /**\r\n     * acquireToken API in NativeInteractionClient class (msal-browser).\r\n     * Used to acquire a token from Native component when native brokering is enabled.\r\n     */\r\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\r\n    /**\r\n     * Time spent creating default headers for requests to token endpoint\r\n     */\r\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\r\n    /**\r\n     * Time spent sending/waiting for the response of a request to the token endpoint\r\n     */\r\n    NetworkClientSendPostRequestAsync: \"networkClientSendPostRequestAsync\",\r\n    RefreshTokenClientExecutePostToTokenEndpoint: \"refreshTokenClientExecutePostToTokenEndpoint\",\r\n    AuthorizationCodeClientExecutePostToTokenEndpoint: \"authorizationCodeClientExecutePostToTokenEndpoint\",\r\n    /**\r\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\r\n     */\r\n    BrokerHandhshake: \"brokerHandshake\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\r\n     */\r\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\r\n    /**\r\n     * Time taken for token acquisition by broker\r\n     */\r\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\r\n    /**\r\n     * Time spent on the network for refresh token acquisition\r\n     */\r\n    RefreshTokenClientExecuteTokenRequest: \"refreshTokenClientExecuteTokenRequest\",\r\n    /**\r\n     * Time taken for acquiring refresh token , records RT size\r\n     */\r\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\r\n    /**\r\n     * Time taken for acquiring cached refresh token\r\n     */\r\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken: \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\r\n    /**\r\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientAcquireTokenByRefreshToken: \"refreshTokenClientAcquireTokenByRefreshToken\",\r\n    /**\r\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\r\n     */\r\n    RefreshTokenClientCreateTokenRequestBody: \"refreshTokenClientCreateTokenRequestBody\",\r\n    /**\r\n     * acquireTokenFromCache (msal-browser).\r\n     * Internal API for acquiring token from cache\r\n     */\r\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\r\n    SilentFlowClientAcquireCachedToken: \"silentFlowClientAcquireCachedToken\",\r\n    SilentFlowClientGenerateResultFromCacheRecord: \"silentFlowClientGenerateResultFromCacheRecord\",\r\n    /**\r\n     * acquireTokenBySilentIframe (msal-browser).\r\n     * Internal API for acquiring token by silent Iframe\r\n     */\r\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\r\n    /**\r\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\r\n     */\r\n    InitializeBaseRequest: \"initializeBaseRequest\",\r\n    /**\r\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\r\n     */\r\n    InitializeSilentRequest: \"initializeSilentRequest\",\r\n    InitializeClientApplication: \"initializeClientApplication\",\r\n    InitializeCache: \"initializeCache\",\r\n    /**\r\n     * Helper function in SilentIframeClient class (msal-browser).\r\n     */\r\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\r\n    /**\r\n     * SilentHandler\r\n     */\r\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\r\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\r\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\r\n    SilentHandlerLoadFrameSync: \"silentHandlerLoadFrameSync\",\r\n    /**\r\n     * Helper functions in StandardInteractionClient class (msal-browser)\r\n     */\r\n    StandardInteractionClientCreateAuthCodeClient: \"standardInteractionClientCreateAuthCodeClient\",\r\n    StandardInteractionClientGetClientConfiguration: \"standardInteractionClientGetClientConfiguration\",\r\n    StandardInteractionClientInitializeAuthorizationRequest: \"standardInteractionClientInitializeAuthorizationRequest\",\r\n    StandardInteractionClientInitializeAuthorizationCodeRequest: \"standardInteractionClientInitializeAuthorizationCodeRequest\",\r\n    /**\r\n     * getAuthCodeUrl API (msal-browser and msal-node).\r\n     */\r\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\r\n    /**\r\n     * Functions from InteractionHandler (msal-browser)\r\n     */\r\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\r\n    HandleCodeResponse: \"handleCodeResponse\",\r\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\r\n    /**\r\n     * APIs in Authorization Code Client (msal-common)\r\n     */\r\n    AuthClientAcquireToken: \"authClientAcquireToken\",\r\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\r\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\r\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\r\n    /**\r\n     * Generate functions in PopTokenGenerator (msal-common)\r\n     */\r\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\r\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\r\n    /**\r\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\r\n     */\r\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\r\n    DeserializeResponse: \"deserializeResponse\",\r\n    /**\r\n     * Authority functions\r\n     */\r\n    AuthorityFactoryCreateDiscoveredInstance: \"authorityFactoryCreateDiscoveredInstance\",\r\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\r\n    AuthorityResolveEndpointsFromLocalSources: \"authorityResolveEndpointsFromLocalSources\",\r\n    AuthorityGetCloudDiscoveryMetadataFromNetwork: \"authorityGetCloudDiscoveryMetadataFromNetwork\",\r\n    AuthorityUpdateCloudDiscoveryMetadata: \"authorityUpdateCloudDiscoveryMetadata\",\r\n    AuthorityGetEndpointMetadataFromNetwork: \"authorityGetEndpointMetadataFromNetwork\",\r\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\r\n    AuthorityUpdateMetadataWithRegionalInformation: \"authorityUpdateMetadataWithRegionalInformation\",\r\n    /**\r\n     * Region Discovery functions\r\n     */\r\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\r\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\r\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\r\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\r\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\r\n    GetCloudDiscoveryMetadataFromNetworkMeasurement: \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\r\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromise\",\r\n    HandleNativeRedirectPromiseMeasurement: \"handleNativeRedirectPromise\",\r\n    UpdateCloudDiscoveryMetadataMeasurement: \"updateCloudDiscoveryMetadataMeasurement\",\r\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\r\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\r\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\r\n    RemoveHiddenIframe: \"removeHiddenIframe\",\r\n    /**\r\n     * Cache operations\r\n     */\r\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\r\n    CacheManagerGetRefreshToken: \"cacheManagerGetRefreshToken\",\r\n    ImportExistingCache: \"importExistingCache\",\r\n    SetUserData: \"setUserData\",\r\n    LocalStorageUpdated: \"localStorageUpdated\",\r\n    /**\r\n     * Crypto Operations\r\n     */\r\n    GeneratePkceCodes: \"generatePkceCodes\",\r\n    GenerateCodeVerifier: \"generateCodeVerifier\",\r\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\r\n    Sha256Digest: \"sha256Digest\",\r\n    GetRandomValues: \"getRandomValues\",\r\n    GenerateHKDF: \"generateHKDF\",\r\n    GenerateBaseKey: \"generateBaseKey\",\r\n    Base64Decode: \"base64Decode\",\r\n    UrlEncodeArr: \"urlEncodeArr\",\r\n    Encrypt: \"encrypt\",\r\n    Decrypt: \"decrypt\",\r\n};\r\nconst PerformanceEventAbbreviations = new Map([\r\n    [PerformanceEvents.AcquireTokenByCode, \"ATByCode\"],\r\n    [PerformanceEvents.AcquireTokenByRefreshToken, \"ATByRT\"],\r\n    [PerformanceEvents.AcquireTokenSilent, \"ATS\"],\r\n    [PerformanceEvents.AcquireTokenSilentAsync, \"ATSAsync\"],\r\n    [PerformanceEvents.AcquireTokenPopup, \"ATPopup\"],\r\n    [PerformanceEvents.AcquireTokenRedirect, \"ATRedirect\"],\r\n    [\r\n        PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\r\n        \"CryptoGetPKThumb\",\r\n    ],\r\n    [PerformanceEvents.CryptoOptsSignJwt, \"CryptoSignJwt\"],\r\n    [PerformanceEvents.SilentCacheClientAcquireToken, \"SltCacheClientAT\"],\r\n    [PerformanceEvents.SilentIframeClientAcquireToken, \"SltIframeClientAT\"],\r\n    [PerformanceEvents.SilentRefreshClientAcquireToken, \"SltRClientAT\"],\r\n    [PerformanceEvents.SsoSilent, \"SsoSlt\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\r\n        \"StdIntClientGetDiscAuth\",\r\n    ],\r\n    [\r\n        PerformanceEvents.FetchAccountIdWithNativeBroker,\r\n        \"FetchAccIdWithNtvBroker\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeInteractionClientAcquireToken,\r\n        \"NtvIntClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.BaseClientCreateTokenRequestHeaders,\r\n        \"BaseClientCreateTReqHead\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NetworkClientSendPostRequestAsync,\r\n        \"NetClientSendPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint,\r\n        \"RTClientExecPost\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint,\r\n        \"AuthCodeClientExecPost\",\r\n    ],\r\n    [PerformanceEvents.BrokerHandhshake, \"BrokerHandshake\"],\r\n    [\r\n        PerformanceEvents.AcquireTokenByRefreshTokenInBroker,\r\n        \"ATByRTInBroker\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByBroker, \"ATByBroker\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\r\n        \"RTClientExecTReq\",\r\n    ],\r\n    [PerformanceEvents.RefreshTokenClientAcquireToken, \"RTClientAT\"],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\r\n        \"RTClientATWithCachedRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\r\n        \"RTClientATByRT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\r\n        \"RTClientCreateTReqBody\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenFromCache, \"ATFromCache\"],\r\n    [\r\n        PerformanceEvents.SilentFlowClientAcquireCachedToken,\r\n        \"SltFlowClientATCached\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord,\r\n        \"SltFlowClientGenResFromCache\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenBySilentIframe, \"ATBySltIframe\"],\r\n    [PerformanceEvents.InitializeBaseRequest, \"InitBaseReq\"],\r\n    [PerformanceEvents.InitializeSilentRequest, \"InitSltReq\"],\r\n    [\r\n        PerformanceEvents.InitializeClientApplication,\r\n        \"InitClientApplication\",\r\n    ],\r\n    [PerformanceEvents.InitializeCache, \"InitCache\"],\r\n    [PerformanceEvents.ImportExistingCache, \"importCache\"],\r\n    [PerformanceEvents.SetUserData, \"setUserData\"],\r\n    [PerformanceEvents.LocalStorageUpdated, \"localStorageUpdated\"],\r\n    [PerformanceEvents.SilentIframeClientTokenHelper, \"SIClientTHelper\"],\r\n    [\r\n        PerformanceEvents.SilentHandlerInitiateAuthRequest,\r\n        \"SHandlerInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.SilentHandlerMonitorIframeForHash,\r\n        \"SltHandlerMonitorIframeForHash\",\r\n    ],\r\n    [PerformanceEvents.SilentHandlerLoadFrame, \"SHandlerLoadFrame\"],\r\n    [PerformanceEvents.SilentHandlerLoadFrameSync, \"SHandlerLoadFrameSync\"],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\r\n        \"StdIntClientCreateAuthCodeClient\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientGetClientConfiguration,\r\n        \"StdIntClientGetClientConf\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\r\n        \"StdIntClientInitAuthReq\",\r\n    ],\r\n    [\r\n        PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\r\n        \"StdIntClientInitAuthCodeReq\",\r\n    ],\r\n    [PerformanceEvents.GetAuthCodeUrl, \"GetAuthCodeUrl\"],\r\n    [\r\n        PerformanceEvents.HandleCodeResponseFromServer,\r\n        \"HandleCodeResFromServer\",\r\n    ],\r\n    [PerformanceEvents.HandleCodeResponse, \"HandleCodeResp\"],\r\n    [PerformanceEvents.UpdateTokenEndpointAuthority, \"UpdTEndpointAuth\"],\r\n    [PerformanceEvents.AuthClientAcquireToken, \"AuthClientAT\"],\r\n    [PerformanceEvents.AuthClientExecuteTokenRequest, \"AuthClientExecTReq\"],\r\n    [\r\n        PerformanceEvents.AuthClientCreateTokenRequestBody,\r\n        \"AuthClientCreateTReqBody\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthClientCreateQueryString,\r\n        \"AuthClientCreateQueryStr\",\r\n    ],\r\n    [PerformanceEvents.PopTokenGenerateCnf, \"PopTGenCnf\"],\r\n    [PerformanceEvents.PopTokenGenerateKid, \"PopTGenKid\"],\r\n    [PerformanceEvents.HandleServerTokenResponse, \"HandleServerTRes\"],\r\n    [PerformanceEvents.DeserializeResponse, \"DeserializeRes\"],\r\n    [\r\n        PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\r\n        \"AuthFactCreateDiscInst\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsAsync,\r\n        \"AuthResolveEndpointsAsync\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityResolveEndpointsFromLocalSources,\r\n        \"AuthResolveEndpointsFromLocal\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\r\n        \"AuthGetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\r\n        \"AuthUpdCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\r\n        \"AuthUpdCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateEndpointMetadata,\r\n        \"AuthUpdEndpointMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\r\n        \"AuthUpdMetaWithRegInfo\",\r\n    ],\r\n    [PerformanceEvents.RegionDiscoveryDetectRegion, \"RegDiscDetectReg\"],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\r\n        \"RegDiscGetRegFromIMDS\",\r\n    ],\r\n    [\r\n        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\r\n        \"RegDiscGetCurrentVer\",\r\n    ],\r\n    [PerformanceEvents.AcquireTokenByCodeAsync, \"ATByCodeAsync\"],\r\n    [\r\n        PerformanceEvents.GetEndpointMetadataFromNetwork,\r\n        \"GetEndpointMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.GetCloudDiscoveryMetadataFromNetworkMeasurement,\r\n        \"GetCDMetaFromNet\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleRedirectPromiseMeasurement,\r\n        \"HandleRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.HandleNativeRedirectPromiseMeasurement,\r\n        \"HandleNtvRedirectPromise\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UpdateCloudDiscoveryMetadataMeasurement,\r\n        \"UpdateCDMeta\",\r\n    ],\r\n    [\r\n        PerformanceEvents.UsernamePasswordClientAcquireToken,\r\n        \"UserPassClientAT\",\r\n    ],\r\n    [\r\n        PerformanceEvents.NativeMessageHandlerHandshake,\r\n        \"NtvMsgHandlerHandshake\",\r\n    ],\r\n    [PerformanceEvents.NativeGenerateAuthResult, \"NtvGenAuthRes\"],\r\n    [PerformanceEvents.RemoveHiddenIframe, \"RemoveHiddenIframe\"],\r\n    [\r\n        PerformanceEvents.ClearTokensAndKeysWithClaims,\r\n        \"ClearTAndKeysWithClaims\",\r\n    ],\r\n    [PerformanceEvents.CacheManagerGetRefreshToken, \"CacheManagerGetRT\"],\r\n    [PerformanceEvents.GeneratePkceCodes, \"GenPkceCodes\"],\r\n    [PerformanceEvents.GenerateCodeVerifier, \"GenCodeVerifier\"],\r\n    [\r\n        PerformanceEvents.GenerateCodeChallengeFromVerifier,\r\n        \"GenCodeChallengeFromVerifier\",\r\n    ],\r\n    [PerformanceEvents.Sha256Digest, \"Sha256Digest\"],\r\n    [PerformanceEvents.GetRandomValues, \"GetRandomValues\"],\r\n    [PerformanceEvents.GenerateHKDF, \"genHKDF\"],\r\n    [PerformanceEvents.GenerateBaseKey, \"genBaseKey\"],\r\n    [PerformanceEvents.Base64Decode, \"b64Decode\"],\r\n    [PerformanceEvents.UrlEncodeArr, \"urlEncArr\"],\r\n    [PerformanceEvents.Encrypt, \"encrypt\"],\r\n    [PerformanceEvents.Decrypt, \"decrypt\"],\r\n]);\r\n/**\r\n * State of the performance event.\r\n *\r\n * @export\r\n * @enum {number}\r\n */\r\nconst PerformanceEventStatus = {\r\n    NotStarted: 0,\r\n    InProgress: 1,\r\n    Completed: 2,\r\n};\r\nconst IntFields = new Set([\r\n    \"accessTokenSize\",\r\n    \"durationMs\",\r\n    \"idTokenSize\",\r\n    \"matsSilentStatus\",\r\n    \"matsHttpStatus\",\r\n    \"refreshTokenSize\",\r\n    \"queuedTimeMs\",\r\n    \"startTimeMs\",\r\n    \"status\",\r\n    \"multiMatchedAT\",\r\n    \"multiMatchedID\",\r\n    \"multiMatchedRT\",\r\n    \"unencryptedCacheCount\",\r\n    \"encryptedCacheExpiredCount\",\r\n]);\r\n\r\nexport { IntFields, PerformanceEventAbbreviations, PerformanceEventStatus, PerformanceEvents };\r\n//# sourceMappingURL=PerformanceEvent.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEventStatus } from './PerformanceEvent.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StubPerformanceMeasurement {\r\n    startMeasurement() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return;\r\n    }\r\n    flushMeasurement() {\r\n        return null;\r\n    }\r\n}\r\nclass StubPerformanceClient {\r\n    generateId() {\r\n        return \"callback-id\";\r\n    }\r\n    startMeasurement(measureName, correlationId) {\r\n        return {\r\n            end: () => null,\r\n            discard: () => { },\r\n            add: () => { },\r\n            increment: () => { },\r\n            event: {\r\n                eventId: this.generateId(),\r\n                status: PerformanceEventStatus.InProgress,\r\n                authority: \"\",\r\n                libraryName: \"\",\r\n                libraryVersion: \"\",\r\n                clientId: \"\",\r\n                name: measureName,\r\n                startTimeMs: Date.now(),\r\n                correlationId: correlationId || \"\",\r\n            },\r\n            measurement: new StubPerformanceMeasurement(),\r\n        };\r\n    }\r\n    startPerformanceMeasurement() {\r\n        return new StubPerformanceMeasurement();\r\n    }\r\n    calculateQueuedTime() {\r\n        return 0;\r\n    }\r\n    addQueueMeasurement() {\r\n        return;\r\n    }\r\n    setPreQueueTime() {\r\n        return;\r\n    }\r\n    endMeasurement() {\r\n        return null;\r\n    }\r\n    discardMeasurements() {\r\n        return;\r\n    }\r\n    removePerformanceCallback() {\r\n        return true;\r\n    }\r\n    addPerformanceCallback() {\r\n        return \"\";\r\n    }\r\n    emitEvents() {\r\n        return;\r\n    }\r\n    addFields() {\r\n        return;\r\n    }\r\n    incrementFields() {\r\n        return;\r\n    }\r\n    cacheEventByCorrelationId() {\r\n        return;\r\n    }\r\n}\r\n\r\nexport { StubPerformanceClient, StubPerformanceMeasurement };\r\n//# sourceMappingURL=StubPerformanceClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { OIDC_DEFAULT_SCOPES } from '@azure/msal-common/browser';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Constants\r\n */\r\nconst BrowserConstants = {\r\n    /**\r\n     * Interaction in progress cache value\r\n     */\r\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\r\n    /**\r\n     * Invalid grant error code\r\n     */\r\n    INVALID_GRANT_ERROR: \"invalid_grant\",\r\n    /**\r\n     * Default popup window width\r\n     */\r\n    POPUP_WIDTH: 483,\r\n    /**\r\n     * Default popup window height\r\n     */\r\n    POPUP_HEIGHT: 600,\r\n    /**\r\n     * Name of the popup window starts with\r\n     */\r\n    POPUP_NAME_PREFIX: \"msal\",\r\n    /**\r\n     * Default popup monitor poll interval in milliseconds\r\n     */\r\n    DEFAULT_POLL_INTERVAL_MS: 30,\r\n    /**\r\n     * Msal-browser SKU\r\n     */\r\n    MSAL_SKU: \"msal.js.browser\",\r\n};\r\nconst NativeConstants = {\r\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\r\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\r\n    MATS_TELEMETRY: \"MATS\",\r\n};\r\nconst NativeExtensionMethod = {\r\n    HandshakeRequest: \"Handshake\",\r\n    HandshakeResponse: \"HandshakeResponse\",\r\n    GetToken: \"GetToken\",\r\n    Response: \"Response\",\r\n};\r\nconst BrowserCacheLocation = {\r\n    LocalStorage: \"localStorage\",\r\n    SessionStorage: \"sessionStorage\",\r\n    MemoryStorage: \"memoryStorage\",\r\n};\r\n/**\r\n * HTTP Request types supported by MSAL.\r\n */\r\nconst HTTP_REQUEST_TYPE = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n};\r\n/**\r\n * Temporary cache keys for MSAL, deleted after any request.\r\n */\r\nconst TemporaryCacheKeys = {\r\n    AUTHORITY: \"authority\",\r\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\r\n    SESSION_STATE: \"session.state\",\r\n    REQUEST_STATE: \"request.state\",\r\n    NONCE_IDTOKEN: \"nonce.id_token\",\r\n    ORIGIN_URI: \"request.origin\",\r\n    RENEW_STATUS: \"token.renew.status\",\r\n    URL_HASH: \"urlHash\",\r\n    REQUEST_PARAMS: \"request.params\",\r\n    SCOPES: \"scopes\",\r\n    INTERACTION_STATUS_KEY: \"interaction.status\",\r\n    CCS_CREDENTIAL: \"ccs.credential\",\r\n    CORRELATION_ID: \"request.correlationId\",\r\n    NATIVE_REQUEST: \"request.native\",\r\n    REDIRECT_CONTEXT: \"request.redirect.context\",\r\n};\r\nconst StaticCacheKeys = {\r\n    ACCOUNT_KEYS: \"msal.account.keys\",\r\n    TOKEN_KEYS: \"msal.token.keys\",\r\n};\r\n/**\r\n * Cache keys stored in-memory\r\n */\r\nconst InMemoryCacheKeys = {\r\n    WRAPPER_SKU: \"wrapper.sku\",\r\n    WRAPPER_VER: \"wrapper.version\",\r\n};\r\n/**\r\n * API Codes for Telemetry purposes.\r\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\r\n * 0-99 Silent Flow\r\n * 800-899 Auth Code Flow\r\n */\r\nconst ApiId = {\r\n    acquireTokenRedirect: 861,\r\n    acquireTokenPopup: 862,\r\n    ssoSilent: 863,\r\n    acquireTokenSilent_authCode: 864,\r\n    handleRedirectPromise: 865,\r\n    acquireTokenByCode: 866,\r\n    acquireTokenSilent_silentFlow: 61,\r\n    logout: 961,\r\n    logoutPopup: 962,\r\n};\r\n/*\r\n * Interaction type of the API - used for state and telemetry\r\n */\r\nvar InteractionType;\r\n(function (InteractionType) {\r\n    InteractionType[\"Redirect\"] = \"redirect\";\r\n    InteractionType[\"Popup\"] = \"popup\";\r\n    InteractionType[\"Silent\"] = \"silent\";\r\n    InteractionType[\"None\"] = \"none\";\r\n})(InteractionType || (InteractionType = {}));\r\n/**\r\n * Types of interaction currently in progress.\r\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\r\n */\r\nconst InteractionStatus = {\r\n    /**\r\n     * Initial status before interaction occurs\r\n     */\r\n    Startup: \"startup\",\r\n    /**\r\n     * Status set when all login calls occuring\r\n     */\r\n    Login: \"login\",\r\n    /**\r\n     * Status set when logout call occuring\r\n     */\r\n    Logout: \"logout\",\r\n    /**\r\n     * Status set for acquireToken calls\r\n     */\r\n    AcquireToken: \"acquireToken\",\r\n    /**\r\n     * Status set for ssoSilent calls\r\n     */\r\n    SsoSilent: \"ssoSilent\",\r\n    /**\r\n     * Status set when handleRedirect in progress\r\n     */\r\n    HandleRedirect: \"handleRedirect\",\r\n    /**\r\n     * Status set when interaction is complete\r\n     */\r\n    None: \"none\",\r\n};\r\nconst DEFAULT_REQUEST = {\r\n    scopes: OIDC_DEFAULT_SCOPES,\r\n};\r\n/**\r\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\r\n */\r\nconst KEY_FORMAT_JWK = \"jwk\";\r\n// Supported wrapper SKUs\r\nconst WrapperSKU = {\r\n    React: \"@azure/msal-react\",\r\n    Angular: \"@azure/msal-angular\",\r\n};\r\n// DatabaseStorage Constants\r\nconst DB_NAME = \"msal.db\";\r\nconst DB_VERSION = 1;\r\nconst DB_TABLE_NAME = `${DB_NAME}.keys`;\r\nconst CacheLookupPolicy = {\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\r\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\r\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\r\n     */\r\n    Default: 0,\r\n    /*\r\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\r\n     * refresh tokens.\r\n     */\r\n    AccessToken: 1,\r\n    /*\r\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\r\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\r\n     * will not be renewed and acquireTokenSilent will fail.\r\n     */\r\n    AccessTokenAndRefreshToken: 2,\r\n    /*\r\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\r\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\r\n     * renewed and acquireTokenSilent will fail.\r\n     */\r\n    RefreshToken: 3,\r\n    /*\r\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\r\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\r\n     * setting \"forceRefresh: true\".\r\n     */\r\n    RefreshTokenAndNetwork: 4,\r\n    /*\r\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\r\n     * always fail if 3rd party cookies are blocked by the browser.\r\n     */\r\n    Skip: 5,\r\n};\r\nconst iFrameRenewalPolicies = [\r\n    CacheLookupPolicy.Default,\r\n    CacheLookupPolicy.Skip,\r\n    CacheLookupPolicy.RefreshTokenAndNetwork,\r\n];\r\nconst LOG_LEVEL_CACHE_KEY = \"msal.browser.log.level\";\r\nconst LOG_PII_CACHE_KEY = \"msal.browser.log.pii\";\r\nconst BROWSER_PERF_ENABLED_KEY = \"msal.browser.performance.enabled\";\r\n\r\nexport { ApiId, BROWSER_PERF_ENABLED_KEY, BrowserCacheLocation, BrowserConstants, CacheLookupPolicy, DB_NAME, DB_TABLE_NAME, DB_VERSION, DEFAULT_REQUEST, HTTP_REQUEST_TYPE, InMemoryCacheKeys, InteractionStatus, InteractionType, KEY_FORMAT_JWK, LOG_LEVEL_CACHE_KEY, LOG_PII_CACHE_KEY, NativeConstants, NativeExtensionMethod, StaticCacheKeys, TemporaryCacheKeys, WrapperSKU, iFrameRenewalPolicies };\r\n//# sourceMappingURL=BrowserConstants.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NavigationClient {\r\n    /**\r\n     * Navigates to other pages within the same web application\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateInternal(url, options) {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n    /**\r\n     * Navigates to other pages outside the web application i.e. the Identity Provider\r\n     * @param url\r\n     * @param options\r\n     */\r\n    navigateExternal(url, options) {\r\n        return NavigationClient.defaultNavigateWindow(url, options);\r\n    }\r\n    /**\r\n     * Default navigation implementation invoked by the internal and external functions\r\n     * @param url\r\n     * @param options\r\n     */\r\n    static defaultNavigateWindow(url, options) {\r\n        if (options.noHistory) {\r\n            window.location.replace(url);\r\n        }\r\n        else {\r\n            window.location.assign(url);\r\n        }\r\n        return new Promise((resolve) => {\r\n            setTimeout(() => {\r\n                resolve(true);\r\n            }, options.timeout);\r\n        });\r\n    }\r\n}\r\n\r\nexport { NavigationClient };\r\n//# sourceMappingURL=NavigationClient.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from './AuthError.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Represents network related errors\r\n */\r\nclass NetworkError extends AuthError {\r\n    constructor(error, httpStatus, responseHeaders) {\r\n        super(error.errorCode, error.errorMessage, error.subError);\r\n        Object.setPrototypeOf(this, NetworkError.prototype);\r\n        this.name = \"NetworkError\";\r\n        this.error = error;\r\n        this.httpStatus = httpStatus;\r\n        this.responseHeaders = responseHeaders;\r\n    }\r\n}\r\n/**\r\n * Creates NetworkError object for a failed network request\r\n * @param error - Error to be thrown back to the caller\r\n * @param httpStatus - Status code of the network request\r\n * @param responseHeaders - Response headers of the network request, when available\r\n * @returns NetworkError object\r\n */\r\nfunction createNetworkError(error, httpStatus, responseHeaders) {\r\n    return new NetworkError(error, httpStatus, responseHeaders);\r\n}\r\n\r\nexport { NetworkError, createNetworkError };\r\n//# sourceMappingURL=NetworkError.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst pkceNotCreated = \"pkce_not_created\";\r\nconst cryptoNonExistent = \"crypto_nonexistent\";\r\nconst emptyNavigateUri = \"empty_navigate_uri\";\r\nconst hashEmptyError = \"hash_empty_error\";\r\nconst noStateInHash = \"no_state_in_hash\";\r\nconst hashDoesNotContainKnownProperties = \"hash_does_not_contain_known_properties\";\r\nconst unableToParseState = \"unable_to_parse_state\";\r\nconst stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\r\nconst interactionInProgress = \"interaction_in_progress\";\r\nconst popupWindowError = \"popup_window_error\";\r\nconst emptyWindowError = \"empty_window_error\";\r\nconst userCancelled = \"user_cancelled\";\r\nconst monitorPopupTimeout = \"monitor_popup_timeout\";\r\nconst monitorWindowTimeout = \"monitor_window_timeout\";\r\nconst redirectInIframe = \"redirect_in_iframe\";\r\nconst blockIframeReload = \"block_iframe_reload\";\r\nconst blockNestedPopups = \"block_nested_popups\";\r\nconst iframeClosedPrematurely = \"iframe_closed_prematurely\";\r\nconst silentLogoutUnsupported = \"silent_logout_unsupported\";\r\nconst noAccountError = \"no_account_error\";\r\nconst silentPromptValueError = \"silent_prompt_value_error\";\r\nconst noTokenRequestCacheError = \"no_token_request_cache_error\";\r\nconst unableToParseTokenRequestCacheError = \"unable_to_parse_token_request_cache_error\";\r\nconst noCachedAuthorityError = \"no_cached_authority_error\";\r\nconst authRequestNotSetError = \"auth_request_not_set_error\";\r\nconst invalidCacheType = \"invalid_cache_type\";\r\nconst nonBrowserEnvironment = \"non_browser_environment\";\r\nconst databaseNotOpen = \"database_not_open\";\r\nconst noNetworkConnectivity = \"no_network_connectivity\";\r\nconst postRequestFailed = \"post_request_failed\";\r\nconst getRequestFailed = \"get_request_failed\";\r\nconst failedToParseResponse = \"failed_to_parse_response\";\r\nconst unableToLoadToken = \"unable_to_load_token\";\r\nconst cryptoKeyNotFound = \"crypto_key_not_found\";\r\nconst authCodeRequired = \"auth_code_required\";\r\nconst authCodeOrNativeAccountIdRequired = \"auth_code_or_nativeAccountId_required\";\r\nconst spaCodeAndNativeAccountIdPresent = \"spa_code_and_nativeAccountId_present\";\r\nconst databaseUnavailable = \"database_unavailable\";\r\nconst unableToAcquireTokenFromNativePlatform = \"unable_to_acquire_token_from_native_platform\";\r\nconst nativeHandshakeTimeout = \"native_handshake_timeout\";\r\nconst nativeExtensionNotInstalled = \"native_extension_not_installed\";\r\nconst nativeConnectionNotEstablished = \"native_connection_not_established\";\r\nconst uninitializedPublicClientApplication = \"uninitialized_public_client_application\";\r\nconst nativePromptNotSupported = \"native_prompt_not_supported\";\r\nconst invalidBase64String = \"invalid_base64_string\";\r\nconst invalidPopTokenRequest = \"invalid_pop_token_request\";\r\nconst failedToBuildHeaders = \"failed_to_build_headers\";\r\nconst failedToParseHeaders = \"failed_to_parse_headers\";\r\n\r\nexport { authCodeOrNativeAccountIdRequired, authCodeRequired, authRequestNotSetError, blockIframeReload, blockNestedPopups, cryptoKeyNotFound, cryptoNonExistent, databaseNotOpen, databaseUnavailable, emptyNavigateUri, emptyWindowError, failedToBuildHeaders, failedToParseHeaders, failedToParseResponse, getRequestFailed, hashDoesNotContainKnownProperties, hashEmptyError, iframeClosedPrematurely, interactionInProgress, invalidBase64String, invalidCacheType, invalidPopTokenRequest, monitorPopupTimeout, monitorWindowTimeout, nativeConnectionNotEstablished, nativeExtensionNotInstalled, nativeHandshakeTimeout, nativePromptNotSupported, noAccountError, noCachedAuthorityError, noNetworkConnectivity, noStateInHash, noTokenRequestCacheError, nonBrowserEnvironment, pkceNotCreated, popupWindowError, postRequestFailed, redirectInIframe, silentLogoutUnsupported, silentPromptValueError, spaCodeAndNativeAccountIdPresent, stateInteractionTypeMismatch, unableToAcquireTokenFromNativePlatform, unableToLoadToken, unableToParseState, unableToParseTokenRequestCacheError, uninitializedPublicClientApplication, userCancelled };\r\n//# sourceMappingURL=BrowserAuthErrorCodes.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from '@azure/msal-common/browser';\r\nimport { pkceNotCreated, cryptoNonExistent, emptyNavigateUri, hashEmptyError, noStateInHash, hashDoesNotContainKnownProperties, unableToParseState, stateInteractionTypeMismatch, interactionInProgress, popupWindowError, emptyWindowError, userCancelled, monitorPopupTimeout, monitorWindowTimeout, redirectInIframe, blockIframeReload, blockNestedPopups, iframeClosedPrematurely, silentLogoutUnsupported, noAccountError, silentPromptValueError, noTokenRequestCacheError, unableToParseTokenRequestCacheError, noCachedAuthorityError, authRequestNotSetError, invalidCacheType, nonBrowserEnvironment, databaseNotOpen, noNetworkConnectivity, postRequestFailed, getRequestFailed, failedToParseResponse, unableToLoadToken, cryptoKeyNotFound, authCodeRequired, authCodeOrNativeAccountIdRequired, spaCodeAndNativeAccountIdPresent, databaseUnavailable, unableToAcquireTokenFromNativePlatform, nativeHandshakeTimeout, nativeExtensionNotInstalled, nativeConnectionNotEstablished, uninitializedPublicClientApplication, nativePromptNotSupported, invalidBase64String, invalidPopTokenRequest, failedToBuildHeaders, failedToParseHeaders } from './BrowserAuthErrorCodes.mjs';\r\nimport * as BrowserAuthErrorCodes from './BrowserAuthErrorCodes.mjs';\r\nexport { BrowserAuthErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n */\r\nconst BrowserAuthErrorMessages = {\r\n    [pkceNotCreated]: \"The PKCE code challenge and verifier could not be generated.\",\r\n    [cryptoNonExistent]: \"The crypto object or function is not available.\",\r\n    [emptyNavigateUri]: \"Navigation URI is empty. Please check stack trace for more info.\",\r\n    [hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\r\n    [noStateInHash]: \"Hash does not contain state. Please verify that the request originated from msal.\",\r\n    [hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\r\n    [unableToParseState]: \"Unable to parse state. Please verify that the request originated from msal.\",\r\n    [stateInteractionTypeMismatch]: \"Hash contains state but the interaction type does not match the caller.\",\r\n    [interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\r\n    [popupWindowError]: \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\r\n    [emptyWindowError]: \"window.open returned null or undefined window object.\",\r\n    [userCancelled]: \"User cancelled the flow.\",\r\n    [monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\r\n    [monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\r\n    [redirectInIframe]: \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\r\n    [blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\r\n    [blockNestedPopups]: \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\r\n    [iframeClosedPrematurely]: \"The iframe being monitored was closed prematurely.\",\r\n    [silentLogoutUnsupported]: \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\r\n    [noAccountError]: \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\r\n    [silentPromptValueError]: \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\r\n    [noTokenRequestCacheError]: \"No token request found in cache.\",\r\n    [unableToParseTokenRequestCacheError]: \"The cached token request could not be parsed.\",\r\n    [noCachedAuthorityError]: \"No cached authority found.\",\r\n    [authRequestNotSetError]: \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\r\n    [invalidCacheType]: \"Invalid cache type\",\r\n    [nonBrowserEnvironment]: \"Login and token requests are not supported in non-browser environments.\",\r\n    [databaseNotOpen]: \"Database is not open!\",\r\n    [noNetworkConnectivity]: \"No network connectivity. Check your internet connection.\",\r\n    [postRequestFailed]: \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\r\n    [getRequestFailed]: \"Network request failed. Please check the network trace to determine root cause.\",\r\n    [failedToParseResponse]: \"Failed to parse network response. Check network trace.\",\r\n    [unableToLoadToken]: \"Error loading token to cache.\",\r\n    [cryptoKeyNotFound]: \"Cryptographic Key or Keypair not found in browser storage.\",\r\n    [authCodeRequired]: \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\r\n    [authCodeOrNativeAccountIdRequired]: \"An authorization code or nativeAccountId must be provided to this flow.\",\r\n    [spaCodeAndNativeAccountIdPresent]: \"Request cannot contain both spa code and native account id.\",\r\n    [databaseUnavailable]: \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\r\n    [unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\r\n    [nativeHandshakeTimeout]: \"Timed out while attempting to establish connection to browser extension\",\r\n    [nativeExtensionNotInstalled]: \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\r\n    [nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\r\n    [uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\r\n    [nativePromptNotSupported]: \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\r\n    [invalidBase64String]: \"Invalid base64 encoded string.\",\r\n    [invalidPopTokenRequest]: \"Invalid PoP token request. The request should not have both a popKid value and signPopToken set to true.\",\r\n    [failedToBuildHeaders]: \"Failed to build request headers object.\",\r\n    [failedToParseHeaders]: \"Failed to parse response headers\",\r\n};\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use exported BrowserAuthErrorCodes instead.\r\n * In your app you can do :\r\n * ```\r\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\r\n * ```\r\n */\r\nconst BrowserAuthErrorMessage = {\r\n    pkceNotGenerated: {\r\n        code: pkceNotCreated,\r\n        desc: BrowserAuthErrorMessages[pkceNotCreated],\r\n    },\r\n    cryptoDoesNotExist: {\r\n        code: cryptoNonExistent,\r\n        desc: BrowserAuthErrorMessages[cryptoNonExistent],\r\n    },\r\n    emptyNavigateUriError: {\r\n        code: emptyNavigateUri,\r\n        desc: BrowserAuthErrorMessages[emptyNavigateUri],\r\n    },\r\n    hashEmptyError: {\r\n        code: hashEmptyError,\r\n        desc: BrowserAuthErrorMessages[hashEmptyError],\r\n    },\r\n    hashDoesNotContainStateError: {\r\n        code: noStateInHash,\r\n        desc: BrowserAuthErrorMessages[noStateInHash],\r\n    },\r\n    hashDoesNotContainKnownPropertiesError: {\r\n        code: hashDoesNotContainKnownProperties,\r\n        desc: BrowserAuthErrorMessages[hashDoesNotContainKnownProperties],\r\n    },\r\n    unableToParseStateError: {\r\n        code: unableToParseState,\r\n        desc: BrowserAuthErrorMessages[unableToParseState],\r\n    },\r\n    stateInteractionTypeMismatchError: {\r\n        code: stateInteractionTypeMismatch,\r\n        desc: BrowserAuthErrorMessages[stateInteractionTypeMismatch],\r\n    },\r\n    interactionInProgress: {\r\n        code: interactionInProgress,\r\n        desc: BrowserAuthErrorMessages[interactionInProgress],\r\n    },\r\n    popupWindowError: {\r\n        code: popupWindowError,\r\n        desc: BrowserAuthErrorMessages[popupWindowError],\r\n    },\r\n    emptyWindowError: {\r\n        code: emptyWindowError,\r\n        desc: BrowserAuthErrorMessages[emptyWindowError],\r\n    },\r\n    userCancelledError: {\r\n        code: userCancelled,\r\n        desc: BrowserAuthErrorMessages[userCancelled],\r\n    },\r\n    monitorPopupTimeoutError: {\r\n        code: monitorPopupTimeout,\r\n        desc: BrowserAuthErrorMessages[monitorPopupTimeout],\r\n    },\r\n    monitorIframeTimeoutError: {\r\n        code: monitorWindowTimeout,\r\n        desc: BrowserAuthErrorMessages[monitorWindowTimeout],\r\n    },\r\n    redirectInIframeError: {\r\n        code: redirectInIframe,\r\n        desc: BrowserAuthErrorMessages[redirectInIframe],\r\n    },\r\n    blockTokenRequestsInHiddenIframeError: {\r\n        code: blockIframeReload,\r\n        desc: BrowserAuthErrorMessages[blockIframeReload],\r\n    },\r\n    blockAcquireTokenInPopupsError: {\r\n        code: blockNestedPopups,\r\n        desc: BrowserAuthErrorMessages[blockNestedPopups],\r\n    },\r\n    iframeClosedPrematurelyError: {\r\n        code: iframeClosedPrematurely,\r\n        desc: BrowserAuthErrorMessages[iframeClosedPrematurely],\r\n    },\r\n    silentLogoutUnsupportedError: {\r\n        code: silentLogoutUnsupported,\r\n        desc: BrowserAuthErrorMessages[silentLogoutUnsupported],\r\n    },\r\n    noAccountError: {\r\n        code: noAccountError,\r\n        desc: BrowserAuthErrorMessages[noAccountError],\r\n    },\r\n    silentPromptValueError: {\r\n        code: silentPromptValueError,\r\n        desc: BrowserAuthErrorMessages[silentPromptValueError],\r\n    },\r\n    noTokenRequestCacheError: {\r\n        code: noTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[noTokenRequestCacheError],\r\n    },\r\n    unableToParseTokenRequestCacheError: {\r\n        code: unableToParseTokenRequestCacheError,\r\n        desc: BrowserAuthErrorMessages[unableToParseTokenRequestCacheError],\r\n    },\r\n    noCachedAuthorityError: {\r\n        code: noCachedAuthorityError,\r\n        desc: BrowserAuthErrorMessages[noCachedAuthorityError],\r\n    },\r\n    authRequestNotSet: {\r\n        code: authRequestNotSetError,\r\n        desc: BrowserAuthErrorMessages[authRequestNotSetError],\r\n    },\r\n    invalidCacheType: {\r\n        code: invalidCacheType,\r\n        desc: BrowserAuthErrorMessages[invalidCacheType],\r\n    },\r\n    notInBrowserEnvironment: {\r\n        code: nonBrowserEnvironment,\r\n        desc: BrowserAuthErrorMessages[nonBrowserEnvironment],\r\n    },\r\n    databaseNotOpen: {\r\n        code: databaseNotOpen,\r\n        desc: BrowserAuthErrorMessages[databaseNotOpen],\r\n    },\r\n    noNetworkConnectivity: {\r\n        code: noNetworkConnectivity,\r\n        desc: BrowserAuthErrorMessages[noNetworkConnectivity],\r\n    },\r\n    postRequestFailed: {\r\n        code: postRequestFailed,\r\n        desc: BrowserAuthErrorMessages[postRequestFailed],\r\n    },\r\n    getRequestFailed: {\r\n        code: getRequestFailed,\r\n        desc: BrowserAuthErrorMessages[getRequestFailed],\r\n    },\r\n    failedToParseNetworkResponse: {\r\n        code: failedToParseResponse,\r\n        desc: BrowserAuthErrorMessages[failedToParseResponse],\r\n    },\r\n    unableToLoadTokenError: {\r\n        code: unableToLoadToken,\r\n        desc: BrowserAuthErrorMessages[unableToLoadToken],\r\n    },\r\n    signingKeyNotFoundInStorage: {\r\n        code: cryptoKeyNotFound,\r\n        desc: BrowserAuthErrorMessages[cryptoKeyNotFound],\r\n    },\r\n    authCodeRequired: {\r\n        code: authCodeRequired,\r\n        desc: BrowserAuthErrorMessages[authCodeRequired],\r\n    },\r\n    authCodeOrNativeAccountRequired: {\r\n        code: authCodeOrNativeAccountIdRequired,\r\n        desc: BrowserAuthErrorMessages[authCodeOrNativeAccountIdRequired],\r\n    },\r\n    spaCodeAndNativeAccountPresent: {\r\n        code: spaCodeAndNativeAccountIdPresent,\r\n        desc: BrowserAuthErrorMessages[spaCodeAndNativeAccountIdPresent],\r\n    },\r\n    databaseUnavailable: {\r\n        code: databaseUnavailable,\r\n        desc: BrowserAuthErrorMessages[databaseUnavailable],\r\n    },\r\n    unableToAcquireTokenFromNativePlatform: {\r\n        code: unableToAcquireTokenFromNativePlatform,\r\n        desc: BrowserAuthErrorMessages[unableToAcquireTokenFromNativePlatform],\r\n    },\r\n    nativeHandshakeTimeout: {\r\n        code: nativeHandshakeTimeout,\r\n        desc: BrowserAuthErrorMessages[nativeHandshakeTimeout],\r\n    },\r\n    nativeExtensionNotInstalled: {\r\n        code: nativeExtensionNotInstalled,\r\n        desc: BrowserAuthErrorMessages[nativeExtensionNotInstalled],\r\n    },\r\n    nativeConnectionNotEstablished: {\r\n        code: nativeConnectionNotEstablished,\r\n        desc: BrowserAuthErrorMessages[nativeConnectionNotEstablished],\r\n    },\r\n    uninitializedPublicClientApplication: {\r\n        code: uninitializedPublicClientApplication,\r\n        desc: BrowserAuthErrorMessages[uninitializedPublicClientApplication],\r\n    },\r\n    nativePromptNotSupported: {\r\n        code: nativePromptNotSupported,\r\n        desc: BrowserAuthErrorMessages[nativePromptNotSupported],\r\n    },\r\n    invalidBase64StringError: {\r\n        code: invalidBase64String,\r\n        desc: BrowserAuthErrorMessages[invalidBase64String],\r\n    },\r\n    invalidPopTokenRequest: {\r\n        code: invalidPopTokenRequest,\r\n        desc: BrowserAuthErrorMessages[invalidPopTokenRequest],\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nclass BrowserAuthError extends AuthError {\r\n    constructor(errorCode, subError) {\r\n        super(errorCode, BrowserAuthErrorMessages[errorCode], subError);\r\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\r\n        this.name = \"BrowserAuthError\";\r\n    }\r\n}\r\nfunction createBrowserAuthError(errorCode, subError) {\r\n    return new BrowserAuthError(errorCode, subError);\r\n}\r\n\r\nexport { BrowserAuthError, BrowserAuthErrorMessage, BrowserAuthErrorMessages, createBrowserAuthError };\r\n//# sourceMappingURL=BrowserAuthError.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createNetworkError } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { HTTP_REQUEST_TYPE } from '../utils/BrowserConstants.mjs';\r\nimport { getRequestFailed, noNetworkConnectivity, failedToParseResponse, postRequestFailed, failedToBuildHeaders, failedToParseHeaders } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\r\n */\r\nclass FetchClient {\r\n    /**\r\n     * Fetch Client for REST endpoints - Get request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendGetRequestAsync(url, options) {\r\n        let response;\r\n        let responseHeaders = {};\r\n        let responseStatus = 0;\r\n        const reqHeaders = getFetchHeaders(options);\r\n        try {\r\n            response = await fetch(url, {\r\n                method: HTTP_REQUEST_TYPE.GET,\r\n                headers: reqHeaders,\r\n            });\r\n        }\r\n        catch (e) {\r\n            throw createBrowserAuthError(window.navigator.onLine\r\n                ? getRequestFailed\r\n                : noNetworkConnectivity);\r\n        }\r\n        responseHeaders = getHeaderDict(response.headers);\r\n        try {\r\n            responseStatus = response.status;\r\n            return {\r\n                headers: responseHeaders,\r\n                body: (await response.json()),\r\n                status: responseStatus,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw createNetworkError(createBrowserAuthError(failedToParseResponse), responseStatus, responseHeaders);\r\n        }\r\n    }\r\n    /**\r\n     * Fetch Client for REST endpoints - Post request\r\n     * @param url\r\n     * @param headers\r\n     * @param body\r\n     */\r\n    async sendPostRequestAsync(url, options) {\r\n        const reqBody = (options && options.body) || \"\";\r\n        const reqHeaders = getFetchHeaders(options);\r\n        let response;\r\n        let responseStatus = 0;\r\n        let responseHeaders = {};\r\n        try {\r\n            response = await fetch(url, {\r\n                method: HTTP_REQUEST_TYPE.POST,\r\n                headers: reqHeaders,\r\n                body: reqBody,\r\n            });\r\n        }\r\n        catch (e) {\r\n            throw createBrowserAuthError(window.navigator.onLine\r\n                ? postRequestFailed\r\n                : noNetworkConnectivity);\r\n        }\r\n        responseHeaders = getHeaderDict(response.headers);\r\n        try {\r\n            responseStatus = response.status;\r\n            return {\r\n                headers: responseHeaders,\r\n                body: (await response.json()),\r\n                status: responseStatus,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw createNetworkError(createBrowserAuthError(failedToParseResponse), responseStatus, responseHeaders);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Get Fetch API Headers object from string map\r\n * @param inputHeaders\r\n */\r\nfunction getFetchHeaders(options) {\r\n    try {\r\n        const headers = new Headers();\r\n        if (!(options && options.headers)) {\r\n            return headers;\r\n        }\r\n        const optionsHeaders = options.headers;\r\n        Object.entries(optionsHeaders).forEach(([key, value]) => {\r\n            headers.append(key, value);\r\n        });\r\n        return headers;\r\n    }\r\n    catch (e) {\r\n        throw createBrowserAuthError(failedToBuildHeaders);\r\n    }\r\n}\r\n/**\r\n * Returns object representing response headers\r\n * @param headers\r\n * @returns\r\n */\r\nfunction getHeaderDict(headers) {\r\n    try {\r\n        const headerDict = {};\r\n        headers.forEach((value, key) => {\r\n            headerDict[key] = value;\r\n        });\r\n        return headerDict;\r\n    }\r\n    catch (e) {\r\n        throw createBrowserAuthError(failedToParseHeaders);\r\n    }\r\n}\r\n\r\nexport { FetchClient };\r\n//# sourceMappingURL=FetchClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\r\n */\r\n/**\r\n * Returns URL Safe b64 encoded string from a plaintext string.\r\n * @param input\r\n */\r\nfunction urlEncode(input) {\r\n    return encodeURIComponent(base64Encode(input)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\"));\r\n}\r\n/**\r\n * Returns URL Safe b64 encoded string from an int8Array.\r\n * @param inputArr\r\n */\r\nfunction urlEncodeArr(inputArr) {\r\n    return base64EncArr(inputArr)\r\n        .replace(/=/g, \"\")\r\n        .replace(/\\+/g, \"-\")\r\n        .replace(/\\//g, \"_\");\r\n}\r\n/**\r\n * Returns b64 encoded string from plaintext string.\r\n * @param input\r\n */\r\nfunction base64Encode(input) {\r\n    return base64EncArr(new TextEncoder().encode(input));\r\n}\r\n/**\r\n * Base64 encode byte array\r\n * @param aBytes\r\n */\r\nfunction base64EncArr(aBytes) {\r\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\"\");\r\n    return btoa(binString);\r\n}\r\n\r\nexport { base64Encode, urlEncode, urlEncodeArr };\r\n//# sourceMappingURL=Base64Encode.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { invalidBase64String } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which exposes APIs to decode base64 strings to plaintext. See here for implementation details:\r\n * https://developer.mozilla.org/en-US/docs/Glossary/Base64#the_unicode_problem\r\n */\r\n/**\r\n * Returns a URL-safe plaintext decoded string from b64 encoded input.\r\n * @param input\r\n */\r\nfunction base64Decode(input) {\r\n    return new TextDecoder().decode(base64DecToArr(input));\r\n}\r\n/**\r\n * Decodes base64 into Uint8Array\r\n * @param base64String\r\n */\r\nfunction base64DecToArr(base64String) {\r\n    let encodedString = base64String.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    switch (encodedString.length % 4) {\r\n        case 0:\r\n            break;\r\n        case 2:\r\n            encodedString += \"==\";\r\n            break;\r\n        case 3:\r\n            encodedString += \"=\";\r\n            break;\r\n        default:\r\n            throw createBrowserAuthError(invalidBase64String);\r\n    }\r\n    const binString = atob(encodedString);\r\n    return Uint8Array.from(binString, (m) => m.codePointAt(0) || 0);\r\n}\r\n\r\nexport { base64DecToArr, base64Decode };\r\n//# sourceMappingURL=Base64Decode.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { PerformanceEvents } from '@azure/msal-common/browser';\r\nimport { KEY_FORMAT_JWK } from '../utils/BrowserConstants.mjs';\r\nimport { urlEncodeArr } from '../encode/Base64Encode.mjs';\r\nimport { base64DecToArr } from '../encode/Base64Decode.mjs';\r\nimport { nonBrowserEnvironment, cryptoNonExistent } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This file defines functions used by the browser library to perform cryptography operations such as\r\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\r\n */\r\n/**\r\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\r\n */\r\n// Algorithms\r\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\r\nconst AES_GCM = \"AES-GCM\";\r\nconst HKDF = \"HKDF\";\r\n// SHA-256 hashing algorithm\r\nconst S256_HASH_ALG = \"SHA-256\";\r\n// MOD length for PoP tokens\r\nconst MODULUS_LENGTH = 2048;\r\n// Public Exponent\r\nconst PUBLIC_EXPONENT = new Uint8Array([0x01, 0x00, 0x01]);\r\n// UUID hex digits\r\nconst UUID_CHARS = \"0123456789abcdef\";\r\n// Array to store UINT32 random value\r\nconst UINT32_ARR = new Uint32Array(1);\r\n// Key Format\r\nconst RAW = \"raw\";\r\n// Key Usages\r\nconst ENCRYPT = \"encrypt\";\r\nconst DECRYPT = \"decrypt\";\r\nconst DERIVE_KEY = \"deriveKey\";\r\n// Suberror\r\nconst SUBTLE_SUBERROR = \"crypto_subtle_undefined\";\r\nconst keygenAlgorithmOptions = {\r\n    name: PKCS1_V15_KEYGEN_ALG,\r\n    hash: S256_HASH_ALG,\r\n    modulusLength: MODULUS_LENGTH,\r\n    publicExponent: PUBLIC_EXPONENT,\r\n};\r\n/**\r\n * Check whether browser crypto is available.\r\n */\r\nfunction validateCryptoAvailable(skipValidateSubtleCrypto) {\r\n    if (!window) {\r\n        throw createBrowserAuthError(nonBrowserEnvironment);\r\n    }\r\n    if (!window.crypto) {\r\n        throw createBrowserAuthError(cryptoNonExistent);\r\n    }\r\n    if (!skipValidateSubtleCrypto && !window.crypto.subtle) {\r\n        throw createBrowserAuthError(cryptoNonExistent, SUBTLE_SUBERROR);\r\n    }\r\n}\r\n/**\r\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\r\n * @param dataString {string} data string\r\n * @param performanceClient {?IPerformanceClient}\r\n * @param correlationId {?string} correlation id\r\n */\r\nasync function sha256Digest(dataString, performanceClient, correlationId) {\r\n    performanceClient?.addQueueMeasurement(PerformanceEvents.Sha256Digest, correlationId);\r\n    const encoder = new TextEncoder();\r\n    const data = encoder.encode(dataString);\r\n    return window.crypto.subtle.digest(S256_HASH_ALG, data);\r\n}\r\n/**\r\n * Populates buffer with cryptographically random values.\r\n * @param dataBuffer\r\n */\r\nfunction getRandomValues(dataBuffer) {\r\n    return window.crypto.getRandomValues(dataBuffer);\r\n}\r\n/**\r\n * Returns random Uint32 value.\r\n * @returns {number}\r\n */\r\nfunction getRandomUint32() {\r\n    window.crypto.getRandomValues(UINT32_ARR);\r\n    return UINT32_ARR[0];\r\n}\r\n/**\r\n * Creates a UUID v7 from the current timestamp.\r\n * Implementation relies on the system clock to guarantee increasing order of generated identifiers.\r\n * @returns {number}\r\n */\r\nfunction createNewGuid() {\r\n    const currentTimestamp = Date.now();\r\n    const baseRand = getRandomUint32() * 0x400 + (getRandomUint32() & 0x3ff);\r\n    // Result byte array\r\n    const bytes = new Uint8Array(16);\r\n    // A 12-bit `rand_a` field value\r\n    const randA = Math.trunc(baseRand / 2 ** 30);\r\n    // The higher 30 bits of 62-bit `rand_b` field value\r\n    const randBHi = baseRand & (2 ** 30 - 1);\r\n    // The lower 32 bits of 62-bit `rand_b` field value\r\n    const randBLo = getRandomUint32();\r\n    bytes[0] = currentTimestamp / 2 ** 40;\r\n    bytes[1] = currentTimestamp / 2 ** 32;\r\n    bytes[2] = currentTimestamp / 2 ** 24;\r\n    bytes[3] = currentTimestamp / 2 ** 16;\r\n    bytes[4] = currentTimestamp / 2 ** 8;\r\n    bytes[5] = currentTimestamp;\r\n    bytes[6] = 0x70 | (randA >>> 8);\r\n    bytes[7] = randA;\r\n    bytes[8] = 0x80 | (randBHi >>> 24);\r\n    bytes[9] = randBHi >>> 16;\r\n    bytes[10] = randBHi >>> 8;\r\n    bytes[11] = randBHi;\r\n    bytes[12] = randBLo >>> 24;\r\n    bytes[13] = randBLo >>> 16;\r\n    bytes[14] = randBLo >>> 8;\r\n    bytes[15] = randBLo;\r\n    let text = \"\";\r\n    for (let i = 0; i < bytes.length; i++) {\r\n        text += UUID_CHARS.charAt(bytes[i] >>> 4);\r\n        text += UUID_CHARS.charAt(bytes[i] & 0xf);\r\n        if (i === 3 || i === 5 || i === 7 || i === 9) {\r\n            text += \"-\";\r\n        }\r\n    }\r\n    return text;\r\n}\r\n/**\r\n * Generates a keypair based on current keygen algorithm config.\r\n * @param extractable\r\n * @param usages\r\n */\r\nasync function generateKeyPair(extractable, usages) {\r\n    return window.crypto.subtle.generateKey(keygenAlgorithmOptions, extractable, usages);\r\n}\r\n/**\r\n * Export key as Json Web Key (JWK)\r\n * @param key\r\n */\r\nasync function exportJwk(key) {\r\n    return window.crypto.subtle.exportKey(KEY_FORMAT_JWK, key);\r\n}\r\n/**\r\n * Imports key as Json Web Key (JWK), can set extractable and usages.\r\n * @param key\r\n * @param extractable\r\n * @param usages\r\n */\r\nasync function importJwk(key, extractable, usages) {\r\n    return window.crypto.subtle.importKey(KEY_FORMAT_JWK, key, keygenAlgorithmOptions, extractable, usages);\r\n}\r\n/**\r\n * Signs given data with given key\r\n * @param key\r\n * @param data\r\n */\r\nasync function sign(key, data) {\r\n    return window.crypto.subtle.sign(keygenAlgorithmOptions, key, data);\r\n}\r\n/**\r\n * Generates symmetric base encryption key. This may be stored as all encryption/decryption keys will be derived from this one.\r\n */\r\nasync function generateBaseKey() {\r\n    const key = await window.crypto.subtle.generateKey({\r\n        name: AES_GCM,\r\n        length: 256,\r\n    }, true, [ENCRYPT, DECRYPT]);\r\n    return window.crypto.subtle.exportKey(RAW, key);\r\n}\r\n/**\r\n * Returns the raw key to be passed into the key derivation function\r\n * @param baseKey\r\n * @returns\r\n */\r\nasync function generateHKDF(baseKey) {\r\n    return window.crypto.subtle.importKey(RAW, baseKey, HKDF, false, [\r\n        DERIVE_KEY,\r\n    ]);\r\n}\r\n/**\r\n * Given a base key and a nonce generates a derived key to be used in encryption and decryption.\r\n * Note: every time we encrypt a new key is derived\r\n * @param baseKey\r\n * @param nonce\r\n * @returns\r\n */\r\nasync function deriveKey(baseKey, nonce, context) {\r\n    return window.crypto.subtle.deriveKey({\r\n        name: HKDF,\r\n        salt: nonce,\r\n        hash: S256_HASH_ALG,\r\n        info: new TextEncoder().encode(context),\r\n    }, baseKey, { name: AES_GCM, length: 256 }, false, [ENCRYPT, DECRYPT]);\r\n}\r\n/**\r\n * Encrypt the given data given a base key. Returns encrypted data and a nonce that must be provided during decryption\r\n * @param key\r\n * @param rawData\r\n */\r\nasync function encrypt(baseKey, rawData, context) {\r\n    const encodedData = new TextEncoder().encode(rawData);\r\n    // The nonce must never be reused with a given key.\r\n    const nonce = window.crypto.getRandomValues(new Uint8Array(16));\r\n    const derivedKey = await deriveKey(baseKey, nonce, context);\r\n    const encryptedData = await window.crypto.subtle.encrypt({\r\n        name: AES_GCM,\r\n        iv: new Uint8Array(12), // New key is derived for every encrypt so we don't need a new nonce\r\n    }, derivedKey, encodedData);\r\n    return {\r\n        data: urlEncodeArr(new Uint8Array(encryptedData)),\r\n        nonce: urlEncodeArr(nonce),\r\n    };\r\n}\r\n/**\r\n * Decrypt data with the given key and nonce\r\n * @param key\r\n * @param nonce\r\n * @param encryptedData\r\n * @returns\r\n */\r\nasync function decrypt(baseKey, nonce, context, encryptedData) {\r\n    const encodedData = base64DecToArr(encryptedData);\r\n    const derivedKey = await deriveKey(baseKey, base64DecToArr(nonce), context);\r\n    const decryptedData = await window.crypto.subtle.decrypt({\r\n        name: AES_GCM,\r\n        iv: new Uint8Array(12), // New key is derived for every encrypt so we don't need a new nonce\r\n    }, derivedKey, encodedData);\r\n    return new TextDecoder().decode(decryptedData);\r\n}\r\n/**\r\n * Returns the SHA-256 hash of an input string\r\n * @param plainText\r\n */\r\nasync function hashString(plainText) {\r\n    const hashBuffer = await sha256Digest(plainText);\r\n    const hashBytes = new Uint8Array(hashBuffer);\r\n    return urlEncodeArr(hashBytes);\r\n}\r\n\r\nexport { createNewGuid, decrypt, encrypt, exportJwk, generateBaseKey, generateHKDF, generateKeyPair, getRandomValues, hashString, importJwk, sha256Digest, sign, validateCryptoAvailable };\r\n//# sourceMappingURL=BrowserCrypto.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst storageNotSupported = \"storage_not_supported\";\r\nconst stubbedPublicClientApplicationCalled = \"stubbed_public_client_application_called\";\r\nconst inMemRedirectUnavailable = \"in_mem_redirect_unavailable\";\r\n\r\nexport { inMemRedirectUnavailable, storageNotSupported, stubbedPublicClientApplicationCalled };\r\n//# sourceMappingURL=BrowserConfigurationAuthErrorCodes.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from '@azure/msal-common/browser';\r\nimport { storageNotSupported, stubbedPublicClientApplicationCalled, inMemRedirectUnavailable } from './BrowserConfigurationAuthErrorCodes.mjs';\r\nimport * as BrowserConfigurationAuthErrorCodes from './BrowserConfigurationAuthErrorCodes.mjs';\r\nexport { BrowserConfigurationAuthErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BrowserConfigurationAuthErrorMessages = {\r\n    [storageNotSupported]: \"Given storage configuration option was not supported.\",\r\n    [stubbedPublicClientApplicationCalled]: \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\r\n    [inMemRedirectUnavailable]: \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\r\n};\r\n/**\r\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\r\n * @deprecated Use BrowserAuthErrorCodes instead\r\n */\r\nconst BrowserConfigurationAuthErrorMessage = {\r\n    storageNotSupportedError: {\r\n        code: storageNotSupported,\r\n        desc: BrowserConfigurationAuthErrorMessages[storageNotSupported],\r\n    },\r\n    stubPcaInstanceCalled: {\r\n        code: stubbedPublicClientApplicationCalled,\r\n        desc: BrowserConfigurationAuthErrorMessages[stubbedPublicClientApplicationCalled],\r\n    },\r\n    inMemRedirectUnavailable: {\r\n        code: inMemRedirectUnavailable,\r\n        desc: BrowserConfigurationAuthErrorMessages[inMemRedirectUnavailable],\r\n    },\r\n};\r\n/**\r\n * Browser library error class thrown by the MSAL.js library for SPAs\r\n */\r\nclass BrowserConfigurationAuthError extends AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"BrowserConfigurationAuthError\";\r\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\r\n    }\r\n}\r\nfunction createBrowserConfigurationAuthError(errorCode) {\r\n    return new BrowserConfigurationAuthError(errorCode, BrowserConfigurationAuthErrorMessages[errorCode]);\r\n}\r\n\r\nexport { BrowserConfigurationAuthError, BrowserConfigurationAuthErrorMessage, BrowserConfigurationAuthErrorMessages, createBrowserConfigurationAuthError };\r\n//# sourceMappingURL=BrowserConfigurationAuthError.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { UrlString } from '@azure/msal-common/browser';\r\nexport { invoke, invokeAsync } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { BrowserConstants, BrowserCacheLocation } from './BrowserConstants.mjs';\r\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\r\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\r\nimport { blockIframeReload, redirectInIframe, blockNestedPopups, nonBrowserEnvironment, uninitializedPublicClientApplication } from '../error/BrowserAuthErrorCodes.mjs';\r\nimport { inMemRedirectUnavailable } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Clears hash from window url.\r\n */\r\nfunction clearHash(contentWindow) {\r\n    // Office.js sets history.replaceState to null\r\n    contentWindow.location.hash = \"\";\r\n    if (typeof contentWindow.history.replaceState === \"function\") {\r\n        // Full removes \"#\" from url\r\n        contentWindow.history.replaceState(null, \"\", `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`);\r\n    }\r\n}\r\n/**\r\n * Replaces current hash with hash from provided url\r\n */\r\nfunction replaceHash(url) {\r\n    const urlParts = url.split(\"#\");\r\n    urlParts.shift(); // Remove part before the hash\r\n    window.location.hash = urlParts.length > 0 ? urlParts.join(\"#\") : \"\";\r\n}\r\n/**\r\n * Returns boolean of whether the current window is in an iframe or not.\r\n */\r\nfunction isInIframe() {\r\n    return window.parent !== window;\r\n}\r\n/**\r\n * Returns boolean of whether or not the current window is a popup opened by msal\r\n */\r\nfunction isInPopup() {\r\n    return (typeof window !== \"undefined\" &&\r\n        !!window.opener &&\r\n        window.opener !== window &&\r\n        typeof window.name === \"string\" &&\r\n        window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0);\r\n}\r\n// #endregion\r\n/**\r\n * Returns current window URL as redirect uri\r\n */\r\nfunction getCurrentUri() {\r\n    return typeof window !== \"undefined\" && window.location\r\n        ? window.location.href.split(\"?\")[0].split(\"#\")[0]\r\n        : \"\";\r\n}\r\n/**\r\n * Gets the homepage url for the current window location.\r\n */\r\nfunction getHomepage() {\r\n    const currentUrl = new UrlString(window.location.href);\r\n    const urlComponents = currentUrl.getUrlComponents();\r\n    return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\r\n}\r\n/**\r\n * Throws error if we have completed an auth and are\r\n * attempting another auth request inside an iframe.\r\n */\r\nfunction blockReloadInHiddenIframes() {\r\n    const isResponseHash = UrlString.hashContainsKnownProperties(window.location.hash);\r\n    // return an error if called from the hidden iframe created by the msal js silent calls\r\n    if (isResponseHash && isInIframe()) {\r\n        throw createBrowserAuthError(blockIframeReload);\r\n    }\r\n}\r\n/**\r\n * Block redirect operations in iframes unless explicitly allowed\r\n * @param interactionType Interaction type for the request\r\n * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\r\n */\r\nfunction blockRedirectInIframe(allowRedirectInIframe) {\r\n    if (isInIframe() && !allowRedirectInIframe) {\r\n        // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\r\n        throw createBrowserAuthError(redirectInIframe);\r\n    }\r\n}\r\n/**\r\n * Block redirectUri loaded in popup from calling AcquireToken APIs\r\n */\r\nfunction blockAcquireTokenInPopups() {\r\n    // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\r\n    if (isInPopup()) {\r\n        throw createBrowserAuthError(blockNestedPopups);\r\n    }\r\n}\r\n/**\r\n * Throws error if token requests are made in non-browser environment\r\n * @param isBrowserEnvironment Flag indicating if environment is a browser.\r\n */\r\nfunction blockNonBrowserEnvironment() {\r\n    if (typeof window === \"undefined\") {\r\n        throw createBrowserAuthError(nonBrowserEnvironment);\r\n    }\r\n}\r\n/**\r\n * Throws error if initialize hasn't been called\r\n * @param initialized\r\n */\r\nfunction blockAPICallsBeforeInitialize(initialized) {\r\n    if (!initialized) {\r\n        throw createBrowserAuthError(uninitializedPublicClientApplication);\r\n    }\r\n}\r\n/**\r\n * Helper to validate app environment before making an auth request\r\n * @param initialized\r\n */\r\nfunction preflightCheck(initialized) {\r\n    // Block request if not in browser environment\r\n    blockNonBrowserEnvironment();\r\n    // Block auth requests inside a hidden iframe\r\n    blockReloadInHiddenIframes();\r\n    // Block redirectUri opened in a popup from calling MSAL APIs\r\n    blockAcquireTokenInPopups();\r\n    // Block token acquisition before initialize has been called\r\n    blockAPICallsBeforeInitialize(initialized);\r\n}\r\n/**\r\n * Helper to validate app enviornment before making redirect request\r\n * @param initialized\r\n * @param config\r\n */\r\nfunction redirectPreflightCheck(initialized, config) {\r\n    preflightCheck(initialized);\r\n    blockRedirectInIframe(config.system.allowRedirectInIframe);\r\n    // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\r\n    if (config.cache.cacheLocation === BrowserCacheLocation.MemoryStorage &&\r\n        !config.cache.storeAuthStateInCookie) {\r\n        throw createBrowserConfigurationAuthError(inMemRedirectUnavailable);\r\n    }\r\n}\r\n/**\r\n * Adds a preconnect link element to the header which begins DNS resolution and SSL connection in anticipation of the /token request\r\n * @param loginDomain Authority domain, including https protocol e.g. https://login.microsoftonline.com\r\n * @returns\r\n */\r\nfunction preconnect(authority) {\r\n    const link = document.createElement(\"link\");\r\n    link.rel = \"preconnect\";\r\n    link.href = new URL(authority).origin;\r\n    link.crossOrigin = \"anonymous\";\r\n    document.head.appendChild(link);\r\n    // The browser will close connection if not used within a few seconds, remove element from the header after 10s\r\n    window.setTimeout(() => {\r\n        try {\r\n            document.head.removeChild(link);\r\n        }\r\n        catch { }\r\n    }, 10000); // 10s Timeout\r\n}\r\n/**\r\n * Wrapper function that creates a UUID v7 from the current timestamp.\r\n * @returns {string}\r\n */\r\nfunction createGuid() {\r\n    return createNewGuid();\r\n}\r\n\r\nexport { blockAPICallsBeforeInitialize, blockAcquireTokenInPopups, blockNonBrowserEnvironment, blockRedirectInIframe, blockReloadInHiddenIframes, clearHash, createGuid, getCurrentUri, getHomepage, isInIframe, isInPopup, preconnect, preflightCheck, redirectPreflightCheck, replaceHash };\r\n//# sourceMappingURL=BrowserUtils.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { Constants, ProtocolMode, ServerResponseType, AzureCloudInstance, StubPerformanceClient, Logger, createClientConfigurationError, ClientConfigurationErrorCodes, LogLevel, DEFAULT_SYSTEM_OPTIONS, StubbedNetworkModule } from '@azure/msal-common/browser';\r\nimport { BrowserCacheLocation, BrowserConstants } from '../utils/BrowserConstants.mjs';\r\nimport { NavigationClient } from '../navigation/NavigationClient.mjs';\r\nimport { FetchClient } from '../network/FetchClient.mjs';\r\nimport { getCurrentUri } from '../utils/BrowserUtils.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Default timeout for popup windows and iframes in milliseconds\r\nconst DEFAULT_POPUP_TIMEOUT_MS = 60000;\r\nconst DEFAULT_IFRAME_TIMEOUT_MS = 10000;\r\nconst DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\r\nconst DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\r\n/**\r\n * MSAL function that sets the default options when not explicitly configured from app developer\r\n *\r\n * @param auth\r\n * @param cache\r\n * @param system\r\n *\r\n * @returns Configuration object\r\n */\r\nfunction buildConfiguration({ auth: userInputAuth, cache: userInputCache, system: userInputSystem, telemetry: userInputTelemetry, }, isBrowserEnvironment) {\r\n    // Default auth options for browser\r\n    const DEFAULT_AUTH_OPTIONS = {\r\n        clientId: Constants.EMPTY_STRING,\r\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\r\n        knownAuthorities: [],\r\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\r\n        authorityMetadata: Constants.EMPTY_STRING,\r\n        redirectUri: typeof window !== \"undefined\" ? getCurrentUri() : \"\",\r\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\r\n        navigateToLoginRequestUrl: true,\r\n        clientCapabilities: [],\r\n        protocolMode: ProtocolMode.AAD,\r\n        OIDCOptions: {\r\n            serverResponseType: ServerResponseType.FRAGMENT,\r\n            defaultScopes: [\r\n                Constants.OPENID_SCOPE,\r\n                Constants.PROFILE_SCOPE,\r\n                Constants.OFFLINE_ACCESS_SCOPE,\r\n            ],\r\n        },\r\n        azureCloudOptions: {\r\n            azureCloudInstance: AzureCloudInstance.None,\r\n            tenant: Constants.EMPTY_STRING,\r\n        },\r\n        skipAuthorityMetadataCache: false,\r\n        supportsNestedAppAuth: false,\r\n        instanceAware: false,\r\n    };\r\n    // Default cache options for browser\r\n    const DEFAULT_CACHE_OPTIONS = {\r\n        cacheLocation: BrowserCacheLocation.SessionStorage,\r\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\r\n        cacheMigrationEnabled: userInputCache &&\r\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\r\n            ? true\r\n            : false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    // Default logger options for browser\r\n    const DEFAULT_LOGGER_OPTIONS = {\r\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\r\n        loggerCallback: () => {\r\n            // allow users to not set logger call back\r\n        },\r\n        logLevel: LogLevel.Info,\r\n        piiLoggingEnabled: false,\r\n    };\r\n    // Default system options for browser\r\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS = {\r\n        ...DEFAULT_SYSTEM_OPTIONS,\r\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\r\n        networkClient: isBrowserEnvironment\r\n            ? new FetchClient()\r\n            : StubbedNetworkModule,\r\n        navigationClient: new NavigationClient(),\r\n        loadFrameTimeout: 0,\r\n        // If loadFrameTimeout is provided, use that as default.\r\n        windowHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\r\n        iframeHashTimeout: userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\r\n        navigateFrameWait: 0,\r\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\r\n        asyncPopups: false,\r\n        allowRedirectInIframe: false,\r\n        allowPlatformBroker: false,\r\n        nativeBrokerHandshakeTimeout: userInputSystem?.nativeBrokerHandshakeTimeout ||\r\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\r\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\r\n    };\r\n    const providedSystemOptions = {\r\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\r\n        ...userInputSystem,\r\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\r\n    };\r\n    const DEFAULT_TELEMETRY_OPTIONS = {\r\n        application: {\r\n            appName: Constants.EMPTY_STRING,\r\n            appVersion: Constants.EMPTY_STRING,\r\n        },\r\n        client: new StubPerformanceClient(),\r\n    };\r\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\r\n    if (userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\r\n        userInputAuth?.OIDCOptions) {\r\n        const logger = new Logger(providedSystemOptions.loggerOptions);\r\n        logger.warning(JSON.stringify(createClientConfigurationError(ClientConfigurationErrorCodes.cannotSetOIDCOptions)));\r\n    }\r\n    // Throw an error if user has set allowPlatformBroker to true without being in AAD protocol mode\r\n    if (userInputAuth?.protocolMode &&\r\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\r\n        providedSystemOptions?.allowPlatformBroker) {\r\n        throw createClientConfigurationError(ClientConfigurationErrorCodes.cannotAllowPlatformBroker);\r\n    }\r\n    const overlayedConfig = {\r\n        auth: {\r\n            ...DEFAULT_AUTH_OPTIONS,\r\n            ...userInputAuth,\r\n            OIDCOptions: {\r\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\r\n                ...userInputAuth?.OIDCOptions,\r\n            },\r\n        },\r\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\r\n        system: providedSystemOptions,\r\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\r\n    };\r\n    return overlayedConfig;\r\n}\r\n\r\nexport { DEFAULT_IFRAME_TIMEOUT_MS, DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS, DEFAULT_POPUP_TIMEOUT_MS, DEFAULT_REDIRECT_TIMEOUT_MS, buildConfiguration };\r\n//# sourceMappingURL=Configuration.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/* eslint-disable header/header */\r\nconst name = \"@azure/msal-browser\";\r\nconst version = \"4.7.0\";\r\n\r\nexport { name, version };\r\n//# sourceMappingURL=packageMetadata.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { LogLevel, Logger } from '@azure/msal-common/browser';\r\nimport { buildConfiguration } from '../config/Configuration.mjs';\r\nimport { name, version } from '../packageMetadata.mjs';\r\nimport { BrowserCacheLocation, LOG_LEVEL_CACHE_KEY, LOG_PII_CACHE_KEY } from '../utils/BrowserConstants.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base class for operating context\r\n * Operating contexts are contexts in which MSAL.js is being run\r\n * More than one operating context may be available at a time\r\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\r\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\r\n */\r\nclass BaseOperatingContext {\r\n    static loggerCallback(level, message) {\r\n        switch (level) {\r\n            case LogLevel.Error:\r\n                // eslint-disable-next-line no-console\r\n                console.error(message);\r\n                return;\r\n            case LogLevel.Info:\r\n                // eslint-disable-next-line no-console\r\n                console.info(message);\r\n                return;\r\n            case LogLevel.Verbose:\r\n                // eslint-disable-next-line no-console\r\n                console.debug(message);\r\n                return;\r\n            case LogLevel.Warning:\r\n                // eslint-disable-next-line no-console\r\n                console.warn(message);\r\n                return;\r\n            default:\r\n                // eslint-disable-next-line no-console\r\n                console.log(message);\r\n                return;\r\n        }\r\n    }\r\n    constructor(config) {\r\n        /*\r\n         * If loaded in an environment where window is not available,\r\n         * set internal flag to false so that further requests fail.\r\n         * This is to support server-side rendering environments.\r\n         */\r\n        this.browserEnvironment = typeof window !== \"undefined\";\r\n        this.config = buildConfiguration(config, this.browserEnvironment);\r\n        let sessionStorage;\r\n        try {\r\n            sessionStorage = window[BrowserCacheLocation.SessionStorage];\r\n            // Mute errors if it's a non-browser environment or cookies are blocked.\r\n        }\r\n        catch (e) { }\r\n        const logLevelKey = sessionStorage?.getItem(LOG_LEVEL_CACHE_KEY);\r\n        const piiLoggingKey = sessionStorage\r\n            ?.getItem(LOG_PII_CACHE_KEY)\r\n            ?.toLowerCase();\r\n        const piiLoggingEnabled = piiLoggingKey === \"true\"\r\n            ? true\r\n            : piiLoggingKey === \"false\"\r\n                ? false\r\n                : undefined;\r\n        const loggerOptions = { ...this.config.system.loggerOptions };\r\n        const logLevel = logLevelKey && Object.keys(LogLevel).includes(logLevelKey)\r\n            ? LogLevel[logLevelKey]\r\n            : undefined;\r\n        if (logLevel) {\r\n            loggerOptions.loggerCallback = BaseOperatingContext.loggerCallback;\r\n            loggerOptions.logLevel = logLevel;\r\n        }\r\n        if (piiLoggingEnabled !== undefined) {\r\n            loggerOptions.piiLoggingEnabled = piiLoggingEnabled;\r\n        }\r\n        this.logger = new Logger(loggerOptions, name, version);\r\n        this.available = false;\r\n    }\r\n    /**\r\n     * Return the MSAL config\r\n     * @returns BrowserConfiguration\r\n     */\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * Returns the MSAL Logger\r\n     * @returns Logger\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    isAvailable() {\r\n        return this.available;\r\n    }\r\n    isBrowserEnvironment() {\r\n        return this.browserEnvironment;\r\n    }\r\n}\r\n\r\nexport { BaseOperatingContext };\r\n//# sourceMappingURL=BaseOperatingContext.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { BaseOperatingContext } from './BaseOperatingContext.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass StandardOperatingContext extends BaseOperatingContext {\r\n    /**\r\n     * Return the module name.  Intended for use with import() to enable dynamic import\r\n     * of the implementation associated with this operating context\r\n     * @returns\r\n     */\r\n    getModuleName() {\r\n        return StandardOperatingContext.MODULE_NAME;\r\n    }\r\n    /**\r\n     * Returns the unique identifier for this operating context\r\n     * @returns string\r\n     */\r\n    getId() {\r\n        return StandardOperatingContext.ID;\r\n    }\r\n    /**\r\n     * Checks whether the operating context is available.\r\n     * Confirms that the code is running a browser rather.  This is required.\r\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\r\n     */\r\n    async initialize() {\r\n        this.available = typeof window !== \"undefined\";\r\n        return this.available;\r\n        /*\r\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\r\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\r\n         */\r\n    }\r\n}\r\n/*\r\n * TODO: Once we have determine the bundling code return here to specify the name of the bundle\r\n * containing the implementation for this operating context\r\n */\r\nStandardOperatingContext.MODULE_NAME = \"\";\r\n/**\r\n * Unique identifier for the operating context\r\n */\r\nStandardOperatingContext.ID = \"StandardOperatingContext\";\r\n\r\nexport { StandardOperatingContext };\r\n//# sourceMappingURL=StandardOperatingContext.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst missingKidError = \"missing_kid_error\";\r\nconst missingAlgError = \"missing_alg_error\";\r\n\r\nexport { missingAlgError, missingKidError };\r\n//# sourceMappingURL=JoseHeaderErrorCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from './AuthError.mjs';\r\nimport { missingKidError, missingAlgError } from './JoseHeaderErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst JoseHeaderErrorMessages = {\r\n    [missingKidError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\r\n    [missingAlgError]: \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\r\n};\r\n/**\r\n * Error thrown when there is an error in the client code running on the browser.\r\n */\r\nclass JoseHeaderError extends AuthError {\r\n    constructor(errorCode, errorMessage) {\r\n        super(errorCode, errorMessage);\r\n        this.name = \"JoseHeaderError\";\r\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\r\n    }\r\n}\r\n/** Returns JoseHeaderError object */\r\nfunction createJoseHeaderError(code) {\r\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\r\n}\r\n\r\nexport { JoseHeaderError, JoseHeaderErrorMessages, createJoseHeaderError };\r\n//# sourceMappingURL=JoseHeaderError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createJoseHeaderError } from '../error/JoseHeaderError.mjs';\r\nimport { JsonWebTokenTypes } from '../utils/Constants.mjs';\r\nimport { missingKidError, missingAlgError } from '../error/JoseHeaderErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass JoseHeader {\r\n    constructor(options) {\r\n        this.typ = options.typ;\r\n        this.alg = options.alg;\r\n        this.kid = options.kid;\r\n    }\r\n    /**\r\n     * Builds SignedHttpRequest formatted JOSE Header from the\r\n     * JOSE Header options provided or previously set on the object and returns\r\n     * the stringified header object.\r\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\r\n     * @param shrHeaderOptions\r\n     * @returns\r\n     */\r\n    static getShrHeaderString(shrHeaderOptions) {\r\n        // KeyID is required on the SHR header\r\n        if (!shrHeaderOptions.kid) {\r\n            throw createJoseHeaderError(missingKidError);\r\n        }\r\n        // Alg is required on the SHR header\r\n        if (!shrHeaderOptions.alg) {\r\n            throw createJoseHeaderError(missingAlgError);\r\n        }\r\n        const shrHeader = new JoseHeader({\r\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\r\n            typ: shrHeaderOptions.typ || JsonWebTokenTypes.Pop,\r\n            kid: shrHeaderOptions.kid,\r\n            alg: shrHeaderOptions.alg,\r\n        });\r\n        return JSON.stringify(shrHeader);\r\n    }\r\n}\r\n\r\nexport { JoseHeader };\r\n//# sourceMappingURL=JoseHeader.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { DB_NAME, DB_VERSION, DB_TABLE_NAME } from '../utils/BrowserConstants.mjs';\r\nimport { databaseUnavailable, databaseNotOpen } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\r\n */\r\nclass DatabaseStorage {\r\n    constructor() {\r\n        this.dbName = DB_NAME;\r\n        this.version = DB_VERSION;\r\n        this.tableName = DB_TABLE_NAME;\r\n        this.dbOpen = false;\r\n    }\r\n    /**\r\n     * Opens IndexedDB instance.\r\n     */\r\n    async open() {\r\n        return new Promise((resolve, reject) => {\r\n            const openDB = window.indexedDB.open(this.dbName, this.version);\r\n            openDB.addEventListener(\"upgradeneeded\", (e) => {\r\n                const event = e;\r\n                event.target.result.createObjectStore(this.tableName);\r\n            });\r\n            openDB.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.db = event.target.result;\r\n                this.dbOpen = true;\r\n                resolve();\r\n            });\r\n            openDB.addEventListener(\"error\", () => reject(createBrowserAuthError(databaseUnavailable)));\r\n        });\r\n    }\r\n    /**\r\n     * Closes the connection to IndexedDB database when all pending transactions\r\n     * complete.\r\n     */\r\n    closeConnection() {\r\n        const db = this.db;\r\n        if (db && this.dbOpen) {\r\n            db.close();\r\n            this.dbOpen = false;\r\n        }\r\n    }\r\n    /**\r\n     * Opens database if it's not already open\r\n     */\r\n    async validateDbIsOpen() {\r\n        if (!this.dbOpen) {\r\n            return this.open();\r\n        }\r\n    }\r\n    /**\r\n     * Retrieves item from IndexedDB instance.\r\n     * @param key\r\n     */\r\n    async getItem(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject(createBrowserAuthError(databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGet = objectStore.get(key);\r\n            dbGet.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n            dbGet.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Adds item to IndexedDB under given key\r\n     * @param key\r\n     * @param payload\r\n     */\r\n    async setItem(key, payload) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            // TODO: Add timeouts?\r\n            if (!this.db) {\r\n                return reject(createBrowserAuthError(databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbPut = objectStore.put(payload, key);\r\n            dbPut.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n            dbPut.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Removes item from IndexedDB under given key\r\n     * @param key\r\n     */\r\n    async removeItem(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject(createBrowserAuthError(databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readwrite\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbDelete = objectStore.delete(key);\r\n            dbDelete.addEventListener(\"success\", () => {\r\n                this.closeConnection();\r\n                resolve();\r\n            });\r\n            dbDelete.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Get all the keys from the storage object as an iterable array of strings.\r\n     */\r\n    async getKeys() {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject(createBrowserAuthError(databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbGetKeys = objectStore.getAllKeys();\r\n            dbGetKeys.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result);\r\n            });\r\n            dbGetKeys.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     *\r\n     * Checks whether there is an object under the search key in the object store\r\n     */\r\n    async containsKey(key) {\r\n        await this.validateDbIsOpen();\r\n        return new Promise((resolve, reject) => {\r\n            if (!this.db) {\r\n                return reject(createBrowserAuthError(databaseNotOpen));\r\n            }\r\n            const transaction = this.db.transaction([this.tableName], \"readonly\");\r\n            const objectStore = transaction.objectStore(this.tableName);\r\n            const dbContainsKey = objectStore.count(key);\r\n            dbContainsKey.addEventListener(\"success\", (e) => {\r\n                const event = e;\r\n                this.closeConnection();\r\n                resolve(event.target.result === 1);\r\n            });\r\n            dbContainsKey.addEventListener(\"error\", (e) => {\r\n                this.closeConnection();\r\n                reject(e);\r\n            });\r\n        });\r\n    }\r\n    /**\r\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\r\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\r\n     * with IndexedDB database versions.\r\n     */\r\n    async deleteDatabase() {\r\n        // Check if database being deleted exists\r\n        if (this.db && this.dbOpen) {\r\n            this.closeConnection();\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\r\n            const id = setTimeout(() => reject(false), 200); // Reject if events aren't raised within 200ms\r\n            deleteDbRequest.addEventListener(\"success\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"blocked\", () => {\r\n                clearTimeout(id);\r\n                return resolve(true);\r\n            });\r\n            deleteDbRequest.addEventListener(\"error\", () => {\r\n                clearTimeout(id);\r\n                return reject(false);\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\nexport { DatabaseStorage };\r\n//# sourceMappingURL=DatabaseStorage.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass MemoryStorage {\r\n    constructor() {\r\n        this.cache = new Map();\r\n    }\r\n    async initialize() {\r\n        // Memory storage does not require initialization\r\n    }\r\n    getItem(key) {\r\n        return this.cache.get(key) || null;\r\n    }\r\n    getUserData(key) {\r\n        return this.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        this.cache.set(key, value);\r\n    }\r\n    async setUserData(key, value) {\r\n        this.setItem(key, value);\r\n    }\r\n    removeItem(key) {\r\n        this.cache.delete(key);\r\n    }\r\n    getKeys() {\r\n        const cacheKeys = [];\r\n        this.cache.forEach((value, key) => {\r\n            cacheKeys.push(key);\r\n        });\r\n        return cacheKeys;\r\n    }\r\n    containsKey(key) {\r\n        return this.cache.has(key);\r\n    }\r\n    clear() {\r\n        this.cache.clear();\r\n    }\r\n}\r\n\r\nexport { MemoryStorage };\r\n//# sourceMappingURL=MemoryStorage.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { DatabaseStorage } from './DatabaseStorage.mjs';\r\nimport { MemoryStorage } from './MemoryStorage.mjs';\r\nimport { databaseUnavailable } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\r\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\r\n */\r\nclass AsyncMemoryStorage {\r\n    constructor(logger) {\r\n        this.inMemoryCache = new MemoryStorage();\r\n        this.indexedDBCache = new DatabaseStorage();\r\n        this.logger = logger;\r\n    }\r\n    handleDatabaseAccessError(error) {\r\n        if (error instanceof BrowserAuthError &&\r\n            error.errorCode === databaseUnavailable) {\r\n            this.logger.error(\"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\");\r\n        }\r\n        else {\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\r\n     * storage object if item isn't found in-memory.\r\n     * @param key\r\n     */\r\n    async getItem(key) {\r\n        const item = this.inMemoryCache.getItem(key);\r\n        if (!item) {\r\n            try {\r\n                this.logger.verbose(\"Queried item not found in in-memory cache, now querying persistent storage.\");\r\n                return await this.indexedDBCache.getItem(key);\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return item;\r\n    }\r\n    /**\r\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\r\n     * storage object with the given key.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    async setItem(key, value) {\r\n        this.inMemoryCache.setItem(key, value);\r\n        try {\r\n            await this.indexedDBCache.setItem(key, value);\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\r\n     * @param key\r\n     */\r\n    async removeItem(key) {\r\n        this.inMemoryCache.removeItem(key);\r\n        try {\r\n            await this.indexedDBCache.removeItem(key);\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n        }\r\n    }\r\n    /**\r\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\r\n     * asynchronous storage object.\r\n     */\r\n    async getKeys() {\r\n        const cacheKeys = this.inMemoryCache.getKeys();\r\n        if (cacheKeys.length === 0) {\r\n            try {\r\n                this.logger.verbose(\"In-memory cache is empty, now querying persistent storage.\");\r\n                return await this.indexedDBCache.getKeys();\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return cacheKeys;\r\n    }\r\n    /**\r\n     * Returns true or false if the given key is present in the cache.\r\n     * @param key\r\n     */\r\n    async containsKey(key) {\r\n        const containsKey = this.inMemoryCache.containsKey(key);\r\n        if (!containsKey) {\r\n            try {\r\n                this.logger.verbose(\"Key not found in in-memory cache, now querying persistent storage.\");\r\n                return await this.indexedDBCache.containsKey(key);\r\n            }\r\n            catch (e) {\r\n                this.handleDatabaseAccessError(e);\r\n            }\r\n        }\r\n        return containsKey;\r\n    }\r\n    /**\r\n     * Clears in-memory Map\r\n     */\r\n    clearInMemory() {\r\n        // InMemory cache is a Map instance, clear is straightforward\r\n        this.logger.verbose(`Deleting in-memory keystore`);\r\n        this.inMemoryCache.clear();\r\n        this.logger.verbose(`In-memory keystore deleted`);\r\n    }\r\n    /**\r\n     * Tries to delete the IndexedDB database\r\n     * @returns\r\n     */\r\n    async clearPersistent() {\r\n        try {\r\n            this.logger.verbose(\"Deleting persistent keystore\");\r\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\r\n            if (dbDeleted) {\r\n                this.logger.verbose(\"Persistent keystore deleted\");\r\n            }\r\n            return dbDeleted;\r\n        }\r\n        catch (e) {\r\n            this.handleDatabaseAccessError(e);\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nexport { AsyncMemoryStorage };\r\n//# sourceMappingURL=AsyncMemoryStorage.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, JoseHeader } from '@azure/msal-common/browser';\r\nimport { base64Encode, urlEncode, urlEncodeArr } from '../encode/Base64Encode.mjs';\r\nimport { base64Decode } from '../encode/Base64Decode.mjs';\r\nimport { validateCryptoAvailable, createNewGuid, generateKeyPair, exportJwk, importJwk, sign, hashString } from './BrowserCrypto.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { AsyncMemoryStorage } from '../cache/AsyncMemoryStorage.mjs';\r\nimport { cryptoKeyNotFound } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\r\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\r\n */\r\nclass CryptoOps {\r\n    constructor(logger, performanceClient, skipValidateSubtleCrypto) {\r\n        this.logger = logger;\r\n        // Browser crypto needs to be validated first before any other classes can be set.\r\n        validateCryptoAvailable(skipValidateSubtleCrypto ?? false);\r\n        this.cache = new AsyncMemoryStorage(this.logger);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates a new random GUID - used to populate state and nonce.\r\n     * @returns string (GUID)\r\n     */\r\n    createNewGuid() {\r\n        return createNewGuid();\r\n    }\r\n    /**\r\n     * Encodes input string to base64.\r\n     * @param input\r\n     */\r\n    base64Encode(input) {\r\n        return base64Encode(input);\r\n    }\r\n    /**\r\n     * Decodes input string from base64.\r\n     * @param input\r\n     */\r\n    base64Decode(input) {\r\n        return base64Decode(input);\r\n    }\r\n    /**\r\n     * Encodes input string to base64 URL safe string.\r\n     * @param input\r\n     */\r\n    base64UrlEncode(input) {\r\n        return urlEncode(input);\r\n    }\r\n    /**\r\n     * Stringifies and base64Url encodes input public key\r\n     * @param inputKid\r\n     * @returns Base64Url encoded public key\r\n     */\r\n    encodeKid(inputKid) {\r\n        return this.base64UrlEncode(JSON.stringify({ kid: inputKid }));\r\n    }\r\n    /**\r\n     * Generates a keypair, stores it and returns a thumbprint\r\n     * @param request\r\n     */\r\n    async getPublicKeyThumbprint(request) {\r\n        const publicKeyThumbMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsGetPublicKeyThumbprint, request.correlationId);\r\n        // Generate Keypair\r\n        const keyPair = await generateKeyPair(CryptoOps.EXTRACTABLE, CryptoOps.POP_KEY_USAGES);\r\n        // Generate Thumbprint for Public Key\r\n        const publicKeyJwk = await exportJwk(keyPair.publicKey);\r\n        const pubKeyThumprintObj = {\r\n            e: publicKeyJwk.e,\r\n            kty: publicKeyJwk.kty,\r\n            n: publicKeyJwk.n,\r\n        };\r\n        const publicJwkString = getSortedObjectString(pubKeyThumprintObj);\r\n        const publicJwkHash = await this.hashString(publicJwkString);\r\n        // Generate Thumbprint for Private Key\r\n        const privateKeyJwk = await exportJwk(keyPair.privateKey);\r\n        // Re-import private key to make it unextractable\r\n        const unextractablePrivateKey = await importJwk(privateKeyJwk, false, [\"sign\"]);\r\n        // Store Keypair data in keystore\r\n        await this.cache.setItem(publicJwkHash, {\r\n            privateKey: unextractablePrivateKey,\r\n            publicKey: keyPair.publicKey,\r\n            requestMethod: request.resourceRequestMethod,\r\n            requestUri: request.resourceRequestUri,\r\n        });\r\n        if (publicKeyThumbMeasurement) {\r\n            publicKeyThumbMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n        return publicJwkHash;\r\n    }\r\n    /**\r\n     * Removes cryptographic keypair from key store matching the keyId passed in\r\n     * @param kid\r\n     */\r\n    async removeTokenBindingKey(kid) {\r\n        await this.cache.removeItem(kid);\r\n        const keyFound = await this.cache.containsKey(kid);\r\n        return !keyFound;\r\n    }\r\n    /**\r\n     * Removes all cryptographic keys from IndexedDB storage\r\n     */\r\n    async clearKeystore() {\r\n        // Delete in-memory keystores\r\n        this.cache.clearInMemory();\r\n        /**\r\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\r\n         * every persistent keystore\r\n         */\r\n        try {\r\n            await this.cache.clearPersistent();\r\n            return true;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof Error) {\r\n                this.logger.error(`Clearing keystore failed with error: ${e.message}`);\r\n            }\r\n            else {\r\n                this.logger.error(\"Clearing keystore failed with unknown error\");\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\r\n     * @param payload\r\n     * @param kid\r\n     */\r\n    async signJwt(payload, kid, shrOptions, correlationId) {\r\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(PerformanceEvents.CryptoOptsSignJwt, correlationId);\r\n        const cachedKeyPair = await this.cache.getItem(kid);\r\n        if (!cachedKeyPair) {\r\n            throw createBrowserAuthError(cryptoKeyNotFound);\r\n        }\r\n        // Get public key as JWK\r\n        const publicKeyJwk = await exportJwk(cachedKeyPair.publicKey);\r\n        const publicKeyJwkString = getSortedObjectString(publicKeyJwk);\r\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\r\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\r\n        // Generate header\r\n        const shrHeader = JoseHeader.getShrHeaderString({\r\n            ...shrOptions?.header,\r\n            alg: publicKeyJwk.alg,\r\n            kid: encodedKeyIdThumbprint,\r\n        });\r\n        const encodedShrHeader = urlEncode(shrHeader);\r\n        // Generate payload\r\n        payload.cnf = {\r\n            jwk: JSON.parse(publicKeyJwkString),\r\n        };\r\n        const encodedPayload = urlEncode(JSON.stringify(payload));\r\n        // Form token string\r\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\r\n        // Sign token\r\n        const encoder = new TextEncoder();\r\n        const tokenBuffer = encoder.encode(tokenString);\r\n        const signatureBuffer = await sign(cachedKeyPair.privateKey, tokenBuffer);\r\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\r\n        const signedJwt = `${tokenString}.${encodedSignature}`;\r\n        if (signJwtMeasurement) {\r\n            signJwtMeasurement.end({\r\n                success: true,\r\n            });\r\n        }\r\n        return signedJwt;\r\n    }\r\n    /**\r\n     * Returns the SHA-256 hash of an input string\r\n     * @param plainText\r\n     */\r\n    async hashString(plainText) {\r\n        return hashString(plainText);\r\n    }\r\n}\r\nCryptoOps.POP_KEY_USAGES = [\"sign\", \"verify\"];\r\nCryptoOps.EXTRACTABLE = true;\r\nfunction getSortedObjectString(obj) {\r\n    return JSON.stringify(obj, Object.keys(obj).sort());\r\n}\r\n\r\nexport { CryptoOps };\r\n//# sourceMappingURL=CryptoOps.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Wraps a function with a performance measurement.\r\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invoke = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        try {\r\n            const result = callback(...args);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    };\r\n};\r\n/**\r\n * Wraps an async function with a performance measurement.\r\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\r\n * @param callback\r\n * @param eventName\r\n * @param logger\r\n * @param telemetryClient\r\n * @param correlationId\r\n * @returns\r\n * @internal\r\n *\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst invokeAsync = (callback, eventName, logger, telemetryClient, correlationId) => {\r\n    return (...args) => {\r\n        logger.trace(`Executing function ${eventName}`);\r\n        const inProgressEvent = telemetryClient?.startMeasurement(eventName, correlationId);\r\n        if (correlationId) {\r\n            // Track number of times this API is called in a single request\r\n            const eventCount = eventName + \"CallCount\";\r\n            telemetryClient?.incrementFields({ [eventCount]: 1 }, correlationId);\r\n        }\r\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\r\n        return callback(...args)\r\n            .then((response) => {\r\n            logger.trace(`Returning result from ${eventName}`);\r\n            inProgressEvent?.end({\r\n                success: true,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            logger.trace(`Error occurred in ${eventName}`);\r\n            try {\r\n                logger.trace(JSON.stringify(e));\r\n            }\r\n            catch (e) {\r\n                logger.trace(\"Unable to print error message.\");\r\n            }\r\n            inProgressEvent?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        });\r\n    };\r\n};\r\n\r\nexport { invoke, invokeAsync };\r\n//# sourceMappingURL=FunctionWrappers.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Constants, ResponseCodes, RegionDiscoverySources } from '../utils/Constants.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RegionDiscovery {\r\n    constructor(networkInterface, logger, performanceClient, correlationId) {\r\n        this.networkInterface = networkInterface;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n    /**\r\n     * Detect the region from the application's environment.\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async detectRegion(environmentRegion, regionDiscoveryMetadata) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryDetectRegion, this.correlationId);\r\n        // Initialize auto detected region with the region from the envrionment\r\n        let autodetectedRegionName = environmentRegion;\r\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\r\n        if (!autodetectedRegionName) {\r\n            const options = RegionDiscovery.IMDS_OPTIONS;\r\n            try {\r\n                const localIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(Constants.IMDS_VERSION, options);\r\n                if (localIMDSVersionResponse.status ===\r\n                    ResponseCodes.httpSuccess) {\r\n                    autodetectedRegionName = localIMDSVersionResponse.body;\r\n                    regionDiscoveryMetadata.region_source =\r\n                        RegionDiscoverySources.IMDS;\r\n                }\r\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\r\n                if (localIMDSVersionResponse.status ===\r\n                    ResponseCodes.httpBadRequest) {\r\n                    const currentIMDSVersion = await invokeAsync(this.getCurrentVersion.bind(this), PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.logger, this.performanceClient, this.correlationId)(options);\r\n                    if (!currentIMDSVersion) {\r\n                        regionDiscoveryMetadata.region_source =\r\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                        return null;\r\n                    }\r\n                    const currentIMDSVersionResponse = await invokeAsync(this.getRegionFromIMDS.bind(this), PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.logger, this.performanceClient, this.correlationId)(currentIMDSVersion, options);\r\n                    if (currentIMDSVersionResponse.status ===\r\n                        ResponseCodes.httpSuccess) {\r\n                        autodetectedRegionName =\r\n                            currentIMDSVersionResponse.body;\r\n                        regionDiscoveryMetadata.region_source =\r\n                            RegionDiscoverySources.IMDS;\r\n                    }\r\n                }\r\n            }\r\n            catch (e) {\r\n                regionDiscoveryMetadata.region_source =\r\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            regionDiscoveryMetadata.region_source =\r\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\r\n        }\r\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\r\n        if (!autodetectedRegionName) {\r\n            regionDiscoveryMetadata.region_source =\r\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\r\n        }\r\n        return autodetectedRegionName || null;\r\n    }\r\n    /**\r\n     * Make the call to the IMDS endpoint\r\n     *\r\n     * @param imdsEndpointUrl\r\n     * @returns Promise<NetworkResponse<string>>\r\n     */\r\n    async getRegionFromIMDS(version, options) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetRegionFromIMDS, this.correlationId);\r\n        return this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`, options, Constants.IMDS_TIMEOUT);\r\n    }\r\n    /**\r\n     * Get the most recent version of the IMDS endpoint available\r\n     *\r\n     * @returns Promise<string | null>\r\n     */\r\n    async getCurrentVersion(options) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RegionDiscoveryGetCurrentVersion, this.correlationId);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(`${Constants.IMDS_ENDPOINT}?format=json`, options);\r\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\r\n            if (response.status === ResponseCodes.httpBadRequest &&\r\n                response.body &&\r\n                response.body[\"newest-versions\"] &&\r\n                response.body[\"newest-versions\"].length > 0) {\r\n                return response.body[\"newest-versions\"][0];\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n// Options for the IMDS endpoint request\r\nRegionDiscovery.IMDS_OPTIONS = {\r\n    headers: {\r\n        Metadata: \"true\",\r\n    },\r\n};\r\n\r\nexport { RegionDiscovery };\r\n//# sourceMappingURL=RegionDiscovery.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { AuthorityType } from './AuthorityType.mjs';\r\nimport { isOpenIdConfigResponse } from './OpenIdConfigResponse.mjs';\r\nimport { UrlString } from '../url/UrlString.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { Constants, AuthorityMetadataSource, RegionDiscoveryOutcomes, AADAuthorityConstants } from '../utils/Constants.mjs';\r\nimport { EndpointMetadata, getCloudDiscoveryMetadataFromHardcodedValues, getCloudDiscoveryMetadataFromNetworkResponse, InstanceDiscoveryMetadataAliases } from './AuthorityMetadata.mjs';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { ProtocolMode } from './ProtocolMode.mjs';\r\nimport { AzureCloudInstance } from './AuthorityOptions.mjs';\r\nimport { isCloudInstanceDiscoveryResponse } from './CloudInstanceDiscoveryResponse.mjs';\r\nimport { isCloudInstanceDiscoveryErrorResponse } from './CloudInstanceDiscoveryErrorResponse.mjs';\r\nimport { RegionDiscovery } from './RegionDiscovery.mjs';\r\nimport { AuthError } from '../error/AuthError.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\nimport { generateAuthorityMetadataExpiresAt, updateAuthorityEndpointMetadata, isAuthorityMetadataExpired, updateCloudDiscoveryMetadata } from '../cache/utils/CacheHelpers.mjs';\r\nimport { endpointResolutionError, endSessionEndpointNotSupported, openIdConfigError } from '../error/ClientAuthErrorCodes.mjs';\r\nimport { invalidAuthorityMetadata, untrustedAuthority, invalidCloudDiscoveryMetadata } from '../error/ClientConfigurationErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\r\n * endpoint. It will store the pertinent config data in this object for use during token calls.\r\n * @internal\r\n */\r\nclass Authority {\r\n    constructor(authority, networkInterface, cacheManager, authorityOptions, logger, correlationId, performanceClient, managedIdentity) {\r\n        this.canonicalAuthority = authority;\r\n        this._canonicalAuthority.validateAsUri();\r\n        this.networkInterface = networkInterface;\r\n        this.cacheManager = cacheManager;\r\n        this.authorityOptions = authorityOptions;\r\n        this.regionDiscoveryMetadata = {\r\n            region_used: undefined,\r\n            region_source: undefined,\r\n            region_outcome: undefined,\r\n        };\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n        this.managedIdentity = managedIdentity || false;\r\n        this.regionDiscovery = new RegionDiscovery(networkInterface, this.logger, this.performanceClient, this.correlationId);\r\n    }\r\n    /**\r\n     * Get {@link AuthorityType}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    getAuthorityType(authorityUri) {\r\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\r\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\r\n            return AuthorityType.Ciam;\r\n        }\r\n        const pathSegments = authorityUri.PathSegments;\r\n        if (pathSegments.length) {\r\n            switch (pathSegments[0].toLowerCase()) {\r\n                case Constants.ADFS:\r\n                    return AuthorityType.Adfs;\r\n                case Constants.DSTS:\r\n                    return AuthorityType.Dsts;\r\n            }\r\n        }\r\n        return AuthorityType.Default;\r\n    }\r\n    // See above for AuthorityType\r\n    get authorityType() {\r\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\r\n    }\r\n    /**\r\n     * ProtocolMode enum representing the way endpoints are constructed.\r\n     */\r\n    get protocolMode() {\r\n        return this.authorityOptions.protocolMode;\r\n    }\r\n    /**\r\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\r\n     */\r\n    get options() {\r\n        return this.authorityOptions;\r\n    }\r\n    /**\r\n     * A URL that is the authority set by the developer\r\n     */\r\n    get canonicalAuthority() {\r\n        return this._canonicalAuthority.urlString;\r\n    }\r\n    /**\r\n     * Sets canonical authority.\r\n     */\r\n    set canonicalAuthority(url) {\r\n        this._canonicalAuthority = new UrlString(url);\r\n        this._canonicalAuthority.validateAsUri();\r\n        this._canonicalAuthorityUrlComponents = null;\r\n    }\r\n    /**\r\n     * Get authority components.\r\n     */\r\n    get canonicalAuthorityUrlComponents() {\r\n        if (!this._canonicalAuthorityUrlComponents) {\r\n            this._canonicalAuthorityUrlComponents =\r\n                this._canonicalAuthority.getUrlComponents();\r\n        }\r\n        return this._canonicalAuthorityUrlComponents;\r\n    }\r\n    /**\r\n     * Get hostname and port i.e. login.microsoftonline.com\r\n     */\r\n    get hostnameAndPort() {\r\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\r\n    }\r\n    /**\r\n     * Get tenant for authority.\r\n     */\r\n    get tenant() {\r\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\r\n    }\r\n    /**\r\n     * OAuth /authorize endpoint for requests\r\n     */\r\n    get authorizationEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.authorization_endpoint);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth /token endpoint for requests\r\n     */\r\n    get tokenEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    get deviceCodeEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\"));\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth logout endpoint for requests\r\n     */\r\n    get endSessionEndpoint() {\r\n        if (this.discoveryComplete()) {\r\n            // ROPC policies may not have end_session_endpoint set\r\n            if (!this.metadata.end_session_endpoint) {\r\n                throw createClientAuthError(endSessionEndpointNotSupported);\r\n            }\r\n            return this.replacePath(this.metadata.end_session_endpoint);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * OAuth issuer for requests\r\n     */\r\n    get selfSignedJwtAudience() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.issuer);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Jwks_uri for token signing keys\r\n     */\r\n    get jwksUri() {\r\n        if (this.discoveryComplete()) {\r\n            return this.replacePath(this.metadata.jwks_uri);\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\r\n     * @param authorityUri {@link IUri}\r\n     * @private\r\n     */\r\n    canReplaceTenant(authorityUri) {\r\n        return (authorityUri.PathSegments.length === 1 &&\r\n            !Authority.reservedTenantDomains.has(authorityUri.PathSegments[0]) &&\r\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\r\n            this.protocolMode === ProtocolMode.AAD);\r\n    }\r\n    /**\r\n     * Replaces tenant in url path with current tenant. Defaults to common.\r\n     * @param urlString\r\n     */\r\n    replaceTenant(urlString) {\r\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\r\n    }\r\n    /**\r\n     * Replaces path such as tenant or policy with the current tenant or policy.\r\n     * @param urlString\r\n     */\r\n    replacePath(urlString) {\r\n        let endpoint = urlString;\r\n        const cachedAuthorityUrl = new UrlString(this.metadata.canonical_authority);\r\n        const cachedAuthorityUrlComponents = cachedAuthorityUrl.getUrlComponents();\r\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\r\n        const currentAuthorityParts = this.canonicalAuthorityUrlComponents.PathSegments;\r\n        currentAuthorityParts.forEach((currentPart, index) => {\r\n            let cachedPart = cachedAuthorityParts[index];\r\n            if (index === 0 &&\r\n                this.canReplaceTenant(cachedAuthorityUrlComponents)) {\r\n                const tenantId = new UrlString(this.metadata.authorization_endpoint).getUrlComponents().PathSegments[0];\r\n                /**\r\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\r\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\r\n                 * always resolved with tenant id by OIDC.\r\n                 */\r\n                if (cachedPart !== tenantId) {\r\n                    this.logger.verbose(`Replacing tenant domain name ${cachedPart} with id ${tenantId}`);\r\n                    cachedPart = tenantId;\r\n                }\r\n            }\r\n            if (currentPart !== cachedPart) {\r\n                endpoint = endpoint.replace(`/${cachedPart}/`, `/${currentPart}/`);\r\n            }\r\n        });\r\n        return this.replaceTenant(endpoint);\r\n    }\r\n    /**\r\n     * The default open id configuration endpoint for any canonical authority.\r\n     */\r\n    get defaultOpenIdConfigurationEndpoint() {\r\n        const canonicalAuthorityHost = this.hostnameAndPort;\r\n        if (this.canonicalAuthority.endsWith(\"v2.0/\") ||\r\n            this.authorityType === AuthorityType.Adfs ||\r\n            (this.protocolMode !== ProtocolMode.AAD &&\r\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))) {\r\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\r\n        }\r\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\r\n    }\r\n    /**\r\n     * Boolean that returns whether or not tenant discovery has been completed.\r\n     */\r\n    discoveryComplete() {\r\n        return !!this.metadata;\r\n    }\r\n    /**\r\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\r\n     * and the /authorize, /token and logout endpoints.\r\n     */\r\n    async resolveEndpointsAsync() {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityResolveEndpointsAsync, this.correlationId);\r\n        const metadataEntity = this.getCurrentMetadataEntity();\r\n        const cloudDiscoverySource = await invokeAsync(this.updateCloudDiscoveryMetadata.bind(this), PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.canonicalAuthority = this.canonicalAuthority.replace(this.hostnameAndPort, metadataEntity.preferred_network);\r\n        const endpointSource = await invokeAsync(this.updateEndpointMetadata.bind(this), PerformanceEvents.AuthorityUpdateEndpointMetadata, this.logger, this.performanceClient, this.correlationId)(metadataEntity);\r\n        this.updateCachedMetadata(metadataEntity, cloudDiscoverySource, {\r\n            source: endpointSource,\r\n        });\r\n        this.performanceClient?.addFields({\r\n            cloudDiscoverySource: cloudDiscoverySource,\r\n            authorityEndpointSource: endpointSource,\r\n        }, this.correlationId);\r\n    }\r\n    /**\r\n     * Returns metadata entity from cache if it exists, otherwiser returns a new metadata entity built\r\n     * from the configured canonical authority\r\n     * @returns\r\n     */\r\n    getCurrentMetadataEntity() {\r\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(this.hostnameAndPort);\r\n        if (!metadataEntity) {\r\n            metadataEntity = {\r\n                aliases: [],\r\n                preferred_cache: this.hostnameAndPort,\r\n                preferred_network: this.hostnameAndPort,\r\n                canonical_authority: this.canonicalAuthority,\r\n                authorization_endpoint: \"\",\r\n                token_endpoint: \"\",\r\n                end_session_endpoint: \"\",\r\n                issuer: \"\",\r\n                aliasesFromNetwork: false,\r\n                endpointsFromNetwork: false,\r\n                expiresAt: generateAuthorityMetadataExpiresAt(),\r\n                jwks_uri: \"\",\r\n            };\r\n        }\r\n        return metadataEntity;\r\n    }\r\n    /**\r\n     * Updates cached metadata based on metadata source and sets the instance's metadata\r\n     * property to the same value\r\n     * @param metadataEntity\r\n     * @param cloudDiscoverySource\r\n     * @param endpointMetadataResult\r\n     */\r\n    updateCachedMetadata(metadataEntity, cloudDiscoverySource, endpointMetadataResult) {\r\n        if (cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\r\n            endpointMetadataResult?.source !== AuthorityMetadataSource.CACHE) {\r\n            // Reset the expiration time unless both values came from a successful cache lookup\r\n            metadataEntity.expiresAt =\r\n                generateAuthorityMetadataExpiresAt();\r\n            metadataEntity.canonical_authority = this.canonicalAuthority;\r\n        }\r\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(metadataEntity.preferred_cache);\r\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\r\n        this.metadata = metadataEntity;\r\n    }\r\n    /**\r\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\r\n     * @param metadataEntity\r\n     */\r\n    async updateEndpointMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateEndpointMetadata, this.correlationId);\r\n        const localMetadata = this.updateEndpointMetadataFromLocalSources(metadataEntity);\r\n        // Further update may be required for hardcoded metadata if regional metadata is preferred\r\n        if (localMetadata) {\r\n            if (localMetadata.source ===\r\n                AuthorityMetadataSource.HARDCODED_VALUES) {\r\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n                if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                    if (localMetadata.metadata) {\r\n                        const hardcodedMetadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(localMetadata.metadata);\r\n                        updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);\r\n                        metadataEntity.canonical_authority =\r\n                            this.canonicalAuthority;\r\n                    }\r\n                }\r\n            }\r\n            return localMetadata.source;\r\n        }\r\n        // Get metadata from network if local sources aren't available\r\n        let metadata = await invokeAsync(this.getEndpointMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\r\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\r\n                metadata = await invokeAsync(this.updateMetadataWithRegionalInformation.bind(this), PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.logger, this.performanceClient, this.correlationId)(metadata);\r\n            }\r\n            updateAuthorityEndpointMetadata(metadataEntity, metadata, true);\r\n            return AuthorityMetadataSource.NETWORK;\r\n        }\r\n        else {\r\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n            throw createClientAuthError(openIdConfigError, this.defaultOpenIdConfigurationEndpoint);\r\n        }\r\n    }\r\n    /**\r\n     * Updates endpoint metadata from local sources and returns where the information was retrieved from and the metadata config\r\n     * response if the source is hardcoded metadata\r\n     * @param metadataEntity\r\n     * @returns\r\n     */\r\n    updateEndpointMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get endpoint metadata from authority configuration\");\r\n        const configMetadata = this.getEndpointMetadataFromConfig();\r\n        if (configMetadata) {\r\n            this.logger.verbose(\"Found endpoint metadata in authority configuration\");\r\n            updateAuthorityEndpointMetadata(metadataEntity, configMetadata, false);\r\n            return {\r\n                source: AuthorityMetadataSource.CONFIG,\r\n            };\r\n        }\r\n        this.logger.verbose(\"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\");\r\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\r\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = this.getEndpointMetadataFromHardcodedValues();\r\n            if (hardcodedMetadata) {\r\n                updateAuthorityEndpointMetadata(metadataEntity, hardcodedMetadata, false);\r\n                return {\r\n                    source: AuthorityMetadataSource.HARDCODED_VALUES,\r\n                    metadata: hardcodedMetadata,\r\n                };\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\");\r\n            }\r\n        }\r\n        // Check cached metadata entity expiration status\r\n        const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.endpointsFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            // No need to update\r\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\r\n            return { source: AuthorityMetadataSource.CACHE };\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Compares the number of url components after the domain to determine if the cached\r\n     * authority metadata can be used for the requested authority. Protects against same domain different\r\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\r\n     * @param metadataEntity\r\n     */\r\n    isAuthoritySameType(metadataEntity) {\r\n        const cachedAuthorityUrl = new UrlString(metadataEntity.canonical_authority);\r\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\r\n        return (cachedParts.length ===\r\n            this.canonicalAuthorityUrlComponents.PathSegments.length);\r\n    }\r\n    /**\r\n     * Parse authorityMetadata config option\r\n     */\r\n    getEndpointMetadataFromConfig() {\r\n        if (this.authorityOptions.authorityMetadata) {\r\n            try {\r\n                return JSON.parse(this.authorityOptions.authorityMetadata);\r\n            }\r\n            catch (e) {\r\n                throw createClientConfigurationError(invalidAuthorityMetadata);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getEndpointMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork, this.correlationId);\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        const openIdConfigurationEndpoint = this.defaultOpenIdConfigurationEndpoint;\r\n        this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`);\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(openIdConfigurationEndpoint, options);\r\n            const isValidResponse = isOpenIdConfigResponse(response.body);\r\n            if (isValidResponse) {\r\n                return response.body;\r\n            }\r\n            else {\r\n                this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`);\r\n                return null;\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.logger.verbose(`Authority.getEndpointMetadataFromNetwork: ${e}`);\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Get OAuth endpoints for common authorities.\r\n     */\r\n    getEndpointMetadataFromHardcodedValues() {\r\n        if (this.hostnameAndPort in EndpointMetadata) {\r\n            return EndpointMetadata[this.hostnameAndPort];\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Update the retrieved metadata with regional information.\r\n     * User selected Azure region will be used if configured.\r\n     */\r\n    async updateMetadataWithRegionalInformation(metadata) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation, this.correlationId);\r\n        const userConfiguredAzureRegion = this.authorityOptions.azureRegionConfiguration?.azureRegion;\r\n        if (userConfiguredAzureRegion) {\r\n            if (userConfiguredAzureRegion !==\r\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    userConfiguredAzureRegion;\r\n                return Authority.replaceWithRegionalInformation(metadata, userConfiguredAzureRegion);\r\n            }\r\n            const autodetectedRegionName = await invokeAsync(this.regionDiscovery.detectRegion.bind(this.regionDiscovery), PerformanceEvents.RegionDiscoveryDetectRegion, this.logger, this.performanceClient, this.correlationId)(this.authorityOptions.azureRegionConfiguration\r\n                ?.environmentRegion, this.regionDiscoveryMetadata);\r\n            if (autodetectedRegionName) {\r\n                this.regionDiscoveryMetadata.region_outcome =\r\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\r\n                this.regionDiscoveryMetadata.region_used =\r\n                    autodetectedRegionName;\r\n                return Authority.replaceWithRegionalInformation(metadata, autodetectedRegionName);\r\n            }\r\n            this.regionDiscoveryMetadata.region_outcome =\r\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\r\n        }\r\n        return metadata;\r\n    }\r\n    /**\r\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\r\n     * and returns where the information was retrieved from\r\n     * @param metadataEntity\r\n     * @returns AuthorityMetadataSource\r\n     */\r\n    async updateCloudDiscoveryMetadata(metadataEntity) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata, this.correlationId);\r\n        const localMetadataSource = this.updateCloudDiscoveryMetadataFromLocalSources(metadataEntity);\r\n        if (localMetadataSource) {\r\n            return localMetadataSource;\r\n        }\r\n        // Fallback to network as metadata source\r\n        const metadata = await invokeAsync(this.getCloudDiscoveryMetadataFromNetwork.bind(this), PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.logger, this.performanceClient, this.correlationId)();\r\n        if (metadata) {\r\n            updateCloudDiscoveryMetadata(metadataEntity, metadata, true);\r\n            return AuthorityMetadataSource.NETWORK;\r\n        }\r\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\r\n        throw createClientConfigurationError(untrustedAuthority);\r\n    }\r\n    updateCloudDiscoveryMetadataFromLocalSources(metadataEntity) {\r\n        this.logger.verbose(\"Attempting to get cloud discovery metadata  from authority configuration\");\r\n        this.logger.verbosePii(`Known Authorities: ${this.authorityOptions.knownAuthorities ||\r\n            Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Authority Metadata: ${this.authorityOptions.authorityMetadata ||\r\n            Constants.NOT_APPLICABLE}`);\r\n        this.logger.verbosePii(`Canonical Authority: ${metadataEntity.canonical_authority || Constants.NOT_APPLICABLE}`);\r\n        const metadata = this.getCloudDiscoveryMetadataFromConfig();\r\n        if (metadata) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in authority configuration\");\r\n            updateCloudDiscoveryMetadata(metadataEntity, metadata, false);\r\n            return AuthorityMetadataSource.CONFIG;\r\n        }\r\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\r\n        this.logger.verbose(\"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\");\r\n        if (this.options.skipAuthorityMetadataCache) {\r\n            this.logger.verbose(\"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        else {\r\n            const hardcodedMetadata = getCloudDiscoveryMetadataFromHardcodedValues(this.hostnameAndPort);\r\n            if (hardcodedMetadata) {\r\n                this.logger.verbose(\"Found cloud discovery metadata from hardcoded values.\");\r\n                updateCloudDiscoveryMetadata(metadataEntity, hardcodedMetadata, false);\r\n                return AuthorityMetadataSource.HARDCODED_VALUES;\r\n            }\r\n            this.logger.verbose(\"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\");\r\n        }\r\n        const metadataEntityExpired = isAuthorityMetadataExpired(metadataEntity);\r\n        if (this.isAuthoritySameType(metadataEntity) &&\r\n            metadataEntity.aliasesFromNetwork &&\r\n            !metadataEntityExpired) {\r\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\r\n            // No need to update\r\n            return AuthorityMetadataSource.CACHE;\r\n        }\r\n        else if (metadataEntityExpired) {\r\n            this.logger.verbose(\"The metadata entity is expired.\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\r\n     */\r\n    getCloudDiscoveryMetadataFromConfig() {\r\n        // CIAM does not support cloud discovery metadata\r\n        if (this.authorityType === AuthorityType.Ciam) {\r\n            this.logger.verbose(\"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        // Check if network response was provided in config\r\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\r\n            this.logger.verbose(\"The cloud discovery metadata has been provided as a network response, in the config.\");\r\n            try {\r\n                this.logger.verbose(\"Attempting to parse the cloud discovery metadata.\");\r\n                const parsedResponse = JSON.parse(this.authorityOptions.cloudDiscoveryMetadata);\r\n                const metadata = getCloudDiscoveryMetadataFromNetworkResponse(parsedResponse.metadata, this.hostnameAndPort);\r\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\r\n                if (metadata) {\r\n                    this.logger.verbose(\"There is returnable metadata attached to the parsed cloud discovery metadata.\");\r\n                    return metadata;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"There is no metadata attached to the parsed cloud discovery metadata.\");\r\n                }\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\");\r\n                throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\r\n            }\r\n        }\r\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\r\n        if (this.isInKnownAuthorities()) {\r\n            this.logger.verbose(\"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\");\r\n            return Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\r\n     *\r\n     * @param hasHardcodedMetadata boolean\r\n     */\r\n    async getCloudDiscoveryMetadataFromNetwork() {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork, this.correlationId);\r\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\r\n        const options = {};\r\n        /*\r\n         * TODO: Add a timeout if the authority exists in our library's\r\n         * hardcoded list of metadata\r\n         */\r\n        let match = null;\r\n        try {\r\n            const response = await this.networkInterface.sendGetRequestAsync(instanceDiscoveryEndpoint, options);\r\n            let typedResponseBody;\r\n            let metadata;\r\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\r\n                typedResponseBody =\r\n                    response.body;\r\n                metadata = typedResponseBody.metadata;\r\n                this.logger.verbosePii(`tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`);\r\n            }\r\n            else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\r\n                this.logger.warning(`A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`);\r\n                typedResponseBody =\r\n                    response.body;\r\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\r\n                    this.logger.error(\"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\");\r\n                    return null;\r\n                }\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`);\r\n                this.logger.warning(`The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`);\r\n                this.logger.warning(\"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\");\r\n                metadata = [];\r\n            }\r\n            else {\r\n                this.logger.error(\"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\");\r\n                return null;\r\n            }\r\n            this.logger.verbose(\"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            match = getCloudDiscoveryMetadataFromNetworkResponse(metadata, this.hostnameAndPort);\r\n        }\r\n        catch (error) {\r\n            if (error instanceof AuthError) {\r\n                this.logger.error(`There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`);\r\n            }\r\n            else {\r\n                const typedError = error;\r\n                this.logger.error(`A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`);\r\n            }\r\n            return null;\r\n        }\r\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\r\n        if (!match) {\r\n            this.logger.warning(\"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\");\r\n            this.logger.verbose(\"Creating custom Authority for custom domain scenario.\");\r\n            match = Authority.createCloudDiscoveryMetadataFromHost(this.hostnameAndPort);\r\n        }\r\n        return match;\r\n    }\r\n    /**\r\n     * Helper function to determine if this host is included in the knownAuthorities config option\r\n     */\r\n    isInKnownAuthorities() {\r\n        const matches = this.authorityOptions.knownAuthorities.filter((authority) => {\r\n            return (authority &&\r\n                UrlString.getDomainFromUrl(authority).toLowerCase() ===\r\n                    this.hostnameAndPort);\r\n        });\r\n        return matches.length > 0;\r\n    }\r\n    /**\r\n     * helper function to populate the authority based on azureCloudOptions\r\n     * @param authorityString\r\n     * @param azureCloudOptions\r\n     */\r\n    static generateAuthority(authorityString, azureCloudOptions) {\r\n        let authorityAzureCloudInstance;\r\n        if (azureCloudOptions &&\r\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None) {\r\n            const tenant = azureCloudOptions.tenant\r\n                ? azureCloudOptions.tenant\r\n                : Constants.DEFAULT_COMMON_TENANT;\r\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\r\n        }\r\n        return authorityAzureCloudInstance\r\n            ? authorityAzureCloudInstance\r\n            : authorityString;\r\n    }\r\n    /**\r\n     * Creates cloud discovery metadata object from a given host\r\n     * @param host\r\n     */\r\n    static createCloudDiscoveryMetadataFromHost(host) {\r\n        return {\r\n            preferred_network: host,\r\n            preferred_cache: host,\r\n            aliases: [host],\r\n        };\r\n    }\r\n    /**\r\n     * helper function to generate environment from authority object\r\n     */\r\n    getPreferredCache() {\r\n        if (this.managedIdentity) {\r\n            return Constants.DEFAULT_AUTHORITY_HOST;\r\n        }\r\n        else if (this.discoveryComplete()) {\r\n            return this.metadata.preferred_cache;\r\n        }\r\n        else {\r\n            throw createClientAuthError(endpointResolutionError);\r\n        }\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of this authority instance\r\n     * @param host\r\n     */\r\n    isAlias(host) {\r\n        return this.metadata.aliases.indexOf(host) > -1;\r\n    }\r\n    /**\r\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\r\n     * @param host\r\n     */\r\n    isAliasOfKnownMicrosoftAuthority(host) {\r\n        return InstanceDiscoveryMetadataAliases.has(host);\r\n    }\r\n    /**\r\n     * Checks whether the provided host is that of a public cloud authority\r\n     *\r\n     * @param authority string\r\n     * @returns bool\r\n     */\r\n    static isPublicCloudAuthority(host) {\r\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\r\n    }\r\n    /**\r\n     * Rebuild the authority string with the region\r\n     *\r\n     * @param host string\r\n     * @param region string\r\n     */\r\n    static buildRegionalAuthorityString(host, region, queryString) {\r\n        // Create and validate a Url string object with the initial authority string\r\n        const authorityUrlInstance = new UrlString(host);\r\n        authorityUrlInstance.validateAsUri();\r\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\r\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\r\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\r\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\r\n        }\r\n        // Include the query string portion of the url\r\n        const url = UrlString.constructAuthorityUriFromObject({\r\n            ...authorityUrlInstance.getUrlComponents(),\r\n            HostNameAndPort: hostNameAndPort,\r\n        }).urlString;\r\n        // Add the query string if a query string was provided\r\n        if (queryString)\r\n            return `${url}?${queryString}`;\r\n        return url;\r\n    }\r\n    /**\r\n     * Replace the endpoints in the metadata object with their regional equivalents.\r\n     *\r\n     * @param metadata OpenIdConfigResponse\r\n     * @param azureRegion string\r\n     */\r\n    static replaceWithRegionalInformation(metadata, azureRegion) {\r\n        const regionalMetadata = { ...metadata };\r\n        regionalMetadata.authorization_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.authorization_endpoint, azureRegion);\r\n        regionalMetadata.token_endpoint =\r\n            Authority.buildRegionalAuthorityString(regionalMetadata.token_endpoint, azureRegion);\r\n        if (regionalMetadata.end_session_endpoint) {\r\n            regionalMetadata.end_session_endpoint =\r\n                Authority.buildRegionalAuthorityString(regionalMetadata.end_session_endpoint, azureRegion);\r\n        }\r\n        return regionalMetadata;\r\n    }\r\n    /**\r\n     * Transform CIAM_AUTHORIY as per the below rules:\r\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\r\n     *\r\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\r\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\r\n     *\r\n     * @param authority\r\n     */\r\n    static transformCIAMAuthority(authority) {\r\n        let ciamAuthority = authority;\r\n        const authorityUrl = new UrlString(authority);\r\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n        // check if transformation is needed\r\n        if (authorityUrlComponents.PathSegments.length === 0 &&\r\n            authorityUrlComponents.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\r\n            const tenantIdOrDomain = authorityUrlComponents.HostNameAndPort.split(\".\")[0];\r\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\r\n        }\r\n        return ciamAuthority;\r\n    }\r\n}\r\n// Reserved tenant domain names that will not be replaced with tenant id\r\nAuthority.reservedTenantDomains = new Set([\r\n    \"{tenant}\",\r\n    \"{tenantid}\",\r\n    AADAuthorityConstants.COMMON,\r\n    AADAuthorityConstants.CONSUMERS,\r\n    AADAuthorityConstants.ORGANIZATIONS,\r\n]);\r\n/**\r\n * Extract tenantId from authority\r\n */\r\nfunction getTenantFromAuthorityString(authority) {\r\n    const authorityUrl = new UrlString(authority);\r\n    const authorityUrlComponents = authorityUrl.getUrlComponents();\r\n    /**\r\n     * For credential matching purposes, tenantId is the last path segment of the authority URL:\r\n     *  AAD Authority - domain/tenantId -> Credentials are cached with realm = tenantId\r\n     *  B2C Authority - domain/{tenantId}?/.../policy -> Credentials are cached with realm = policy\r\n     *  tenantId is downcased because B2C policies can have mixed case but tfp claim is downcased\r\n     *\r\n     * Note that we may not have any path segments in certain OIDC scenarios.\r\n     */\r\n    const tenantId = authorityUrlComponents.PathSegments.slice(-1)[0]?.toLowerCase();\r\n    switch (tenantId) {\r\n        case AADAuthorityConstants.COMMON:\r\n        case AADAuthorityConstants.ORGANIZATIONS:\r\n        case AADAuthorityConstants.CONSUMERS:\r\n            return undefined;\r\n        default:\r\n            return tenantId;\r\n    }\r\n}\r\nfunction formatAuthorityUri(authorityUri) {\r\n    return authorityUri.endsWith(Constants.FORWARD_SLASH)\r\n        ? authorityUri\r\n        : `${authorityUri}${Constants.FORWARD_SLASH}`;\r\n}\r\nfunction buildStaticAuthorityOptions(authOptions) {\r\n    const rawCloudDiscoveryMetadata = authOptions.cloudDiscoveryMetadata;\r\n    let cloudDiscoveryMetadata = undefined;\r\n    if (rawCloudDiscoveryMetadata) {\r\n        try {\r\n            cloudDiscoveryMetadata = JSON.parse(rawCloudDiscoveryMetadata);\r\n        }\r\n        catch (e) {\r\n            throw createClientConfigurationError(invalidCloudDiscoveryMetadata);\r\n        }\r\n    }\r\n    return {\r\n        canonicalAuthority: authOptions.authority\r\n            ? formatAuthorityUri(authOptions.authority)\r\n            : undefined,\r\n        knownAuthorities: authOptions.knownAuthorities,\r\n        cloudDiscoveryMetadata: cloudDiscoveryMetadata,\r\n    };\r\n}\r\n\r\nexport { Authority, buildStaticAuthorityOptions, formatAuthorityUri, getTenantFromAuthorityString };\r\n//# sourceMappingURL=Authority.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isOpenIdConfigResponse(response) {\r\n    return (response.hasOwnProperty(\"authorization_endpoint\") &&\r\n        response.hasOwnProperty(\"token_endpoint\") &&\r\n        response.hasOwnProperty(\"issuer\") &&\r\n        response.hasOwnProperty(\"jwks_uri\"));\r\n}\r\n\r\nexport { isOpenIdConfigResponse };\r\n//# sourceMappingURL=OpenIdConfigResponse.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryResponse(response) {\r\n    return (response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\r\n        response.hasOwnProperty(\"metadata\"));\r\n}\r\n\r\nexport { isCloudInstanceDiscoveryResponse };\r\n//# sourceMappingURL=CloudInstanceDiscoveryResponse.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction isCloudInstanceDiscoveryErrorResponse(response) {\r\n    return (response.hasOwnProperty(\"error\") &&\r\n        response.hasOwnProperty(\"error_description\"));\r\n}\r\n\r\nexport { isCloudInstanceDiscoveryErrorResponse };\r\n//# sourceMappingURL=CloudInstanceDiscoveryErrorResponse.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Codes defined by MSAL\r\nconst noTokensFound = \"no_tokens_found\";\r\nconst nativeAccountUnavailable = \"native_account_unavailable\";\r\nconst refreshTokenExpired = \"refresh_token_expired\";\r\n// Codes potentially returned by server\r\nconst interactionRequired = \"interaction_required\";\r\nconst consentRequired = \"consent_required\";\r\nconst loginRequired = \"login_required\";\r\nconst badToken = \"bad_token\";\r\n\r\nexport { badToken, consentRequired, interactionRequired, loginRequired, nativeAccountUnavailable, noTokensFound, refreshTokenExpired };\r\n//# sourceMappingURL=InteractionRequiredAuthErrorCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Constants } from '../utils/Constants.mjs';\r\nimport { AuthError } from './AuthError.mjs';\r\nimport { noTokensFound, nativeAccountUnavailable, badToken, refreshTokenExpired, interactionRequired, consentRequired, loginRequired } from './InteractionRequiredAuthErrorCodes.mjs';\r\nimport * as InteractionRequiredAuthErrorCodes from './InteractionRequiredAuthErrorCodes.mjs';\r\nexport { InteractionRequiredAuthErrorCodes };\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\r\n */\r\nconst InteractionRequiredServerErrorMessage = [\r\n    interactionRequired,\r\n    consentRequired,\r\n    loginRequired,\r\n    badToken,\r\n];\r\nconst InteractionRequiredAuthSubErrorMessage = [\r\n    \"message_only\",\r\n    \"additional_action\",\r\n    \"basic_action\",\r\n    \"user_password_expired\",\r\n    \"consent_required\",\r\n    \"bad_token\",\r\n];\r\nconst InteractionRequiredAuthErrorMessages = {\r\n    [noTokensFound]: \"No refresh token found in the cache. Please sign-in.\",\r\n    [nativeAccountUnavailable]: \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\r\n    [refreshTokenExpired]: \"Refresh token has expired.\",\r\n    [badToken]: \"Identity provider returned bad_token due to an expired or invalid refresh token. Please invoke an interactive API to resolve.\",\r\n};\r\n/**\r\n * Interaction required errors defined by the SDK\r\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\r\n */\r\nconst InteractionRequiredAuthErrorMessage = {\r\n    noTokensFoundError: {\r\n        code: noTokensFound,\r\n        desc: InteractionRequiredAuthErrorMessages[noTokensFound],\r\n    },\r\n    native_account_unavailable: {\r\n        code: nativeAccountUnavailable,\r\n        desc: InteractionRequiredAuthErrorMessages[nativeAccountUnavailable],\r\n    },\r\n    bad_token: {\r\n        code: badToken,\r\n        desc: InteractionRequiredAuthErrorMessages[badToken],\r\n    },\r\n};\r\n/**\r\n * Error thrown when user interaction is required.\r\n */\r\nclass InteractionRequiredAuthError extends AuthError {\r\n    constructor(errorCode, errorMessage, subError, timestamp, traceId, correlationId, claims, errorNo) {\r\n        super(errorCode, errorMessage, subError);\r\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\r\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\r\n        this.traceId = traceId || Constants.EMPTY_STRING;\r\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\r\n        this.claims = claims || Constants.EMPTY_STRING;\r\n        this.name = \"InteractionRequiredAuthError\";\r\n        this.errorNo = errorNo;\r\n    }\r\n}\r\n/**\r\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\r\n * @param errorCode\r\n * @param errorString\r\n * @param subError\r\n */\r\nfunction isInteractionRequiredError(errorCode, errorString, subError) {\r\n    const isInteractionRequiredErrorCode = !!errorCode &&\r\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\r\n    const isInteractionRequiredSubError = !!subError &&\r\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\r\n    const isInteractionRequiredErrorDesc = !!errorString &&\r\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\r\n            return errorString.indexOf(irErrorCode) > -1;\r\n        });\r\n    return (isInteractionRequiredErrorCode ||\r\n        isInteractionRequiredErrorDesc ||\r\n        isInteractionRequiredSubError);\r\n}\r\n/**\r\n * Creates an InteractionRequiredAuthError\r\n */\r\nfunction createInteractionRequiredAuthError(errorCode) {\r\n    return new InteractionRequiredAuthError(errorCode, InteractionRequiredAuthErrorMessages[errorCode]);\r\n}\r\n\r\nexport { InteractionRequiredAuthError, InteractionRequiredAuthErrorMessage, InteractionRequiredAuthSubErrorMessage, InteractionRequiredServerErrorMessage, createInteractionRequiredAuthError, isInteractionRequiredError };\r\n//# sourceMappingURL=InteractionRequiredAuthError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getRequestThumbprint(clientId, request, homeAccountId) {\r\n    return {\r\n        clientId: clientId,\r\n        authority: request.authority,\r\n        scopes: request.scopes,\r\n        homeAccountIdentifier: homeAccountId,\r\n        claims: request.claims,\r\n        authenticationScheme: request.authenticationScheme,\r\n        resourceRequestMethod: request.resourceRequestMethod,\r\n        resourceRequestUri: request.resourceRequestUri,\r\n        shrClaims: request.shrClaims,\r\n        sshKid: request.sshKid,\r\n        embeddedClientId: request.embeddedClientId || request.tokenBodyParameters?.clientId,\r\n    };\r\n}\r\n\r\nexport { getRequestThumbprint };\r\n//# sourceMappingURL=RequestThumbprint.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Constants } from './Constants.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { noCryptoObject, invalidState } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Class which provides helpers for OAuth 2.0 protocol specific values\r\n */\r\nclass ProtocolUtils {\r\n    /**\r\n     * Appends user state with random guid, or returns random guid.\r\n     * @param userState\r\n     * @param randomGuid\r\n     */\r\n    static setRequestState(cryptoObj, userState, meta) {\r\n        const libraryState = ProtocolUtils.generateLibraryState(cryptoObj, meta);\r\n        return userState\r\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\r\n            : libraryState;\r\n    }\r\n    /**\r\n     * Generates the state value used by the common library.\r\n     * @param randomGuid\r\n     * @param cryptoObj\r\n     */\r\n    static generateLibraryState(cryptoObj, meta) {\r\n        if (!cryptoObj) {\r\n            throw createClientAuthError(noCryptoObject);\r\n        }\r\n        // Create a state object containing a unique id and the timestamp of the request creation\r\n        const stateObj = {\r\n            id: cryptoObj.createNewGuid(),\r\n        };\r\n        if (meta) {\r\n            stateObj.meta = meta;\r\n        }\r\n        const stateString = JSON.stringify(stateObj);\r\n        return cryptoObj.base64Encode(stateString);\r\n    }\r\n    /**\r\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\r\n     * @param state\r\n     * @param cryptoObj\r\n     */\r\n    static parseRequestState(cryptoObj, state) {\r\n        if (!cryptoObj) {\r\n            throw createClientAuthError(noCryptoObject);\r\n        }\r\n        if (!state) {\r\n            throw createClientAuthError(invalidState);\r\n        }\r\n        try {\r\n            // Split the state between library state and user passed state and decode them separately\r\n            const splitState = state.split(Constants.RESOURCE_DELIM);\r\n            const libraryState = splitState[0];\r\n            const userState = splitState.length > 1\r\n                ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\r\n                : Constants.EMPTY_STRING;\r\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\r\n            const libraryStateObj = JSON.parse(libraryStateString);\r\n            return {\r\n                userRequestState: userState || Constants.EMPTY_STRING,\r\n                libraryState: libraryStateObj,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw createClientAuthError(invalidState);\r\n        }\r\n    }\r\n}\r\n\r\nexport { ProtocolUtils };\r\n//# sourceMappingURL=ProtocolUtils.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CcsCredentialType = {\r\n    HOME_ACCOUNT_ID: \"home_account_id\",\r\n    UPN: \"UPN\",\r\n};\r\n\r\nexport { CcsCredentialType };\r\n//# sourceMappingURL=CcsCredential.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError, ClientAuthErrorCodes } from '@azure/msal-common/browser';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Cookie life calculation (hours * minutes * seconds * ms)\r\nconst COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\r\nconst SameSiteOptions = {\r\n    Lax: \"Lax\",\r\n    None: \"None\",\r\n};\r\nclass CookieStorage {\r\n    initialize() {\r\n        return Promise.resolve();\r\n    }\r\n    getItem(key) {\r\n        const name = `${encodeURIComponent(key)}`;\r\n        const cookieList = document.cookie.split(\";\");\r\n        for (let i = 0; i < cookieList.length; i++) {\r\n            const cookie = cookieList[i];\r\n            const [key, ...rest] = decodeURIComponent(cookie).trim().split(\"=\");\r\n            const value = rest.join(\"=\");\r\n            if (key === name) {\r\n                return value;\r\n            }\r\n        }\r\n        return \"\";\r\n    }\r\n    getUserData() {\r\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\r\n    }\r\n    setItem(key, value, cookieLifeDays, secure = true, sameSite = SameSiteOptions.Lax) {\r\n        let cookieStr = `${encodeURIComponent(key)}=${encodeURIComponent(value)};path=/;SameSite=${sameSite};`;\r\n        if (cookieLifeDays) {\r\n            const expireTime = getCookieExpirationTime(cookieLifeDays);\r\n            cookieStr += `expires=${expireTime};`;\r\n        }\r\n        if (secure || sameSite === SameSiteOptions.None) {\r\n            // SameSite None requires Secure flag\r\n            cookieStr += \"Secure;\";\r\n        }\r\n        document.cookie = cookieStr;\r\n    }\r\n    async setUserData() {\r\n        return Promise.reject(createClientAuthError(ClientAuthErrorCodes.methodNotImplemented));\r\n    }\r\n    removeItem(key) {\r\n        // Setting expiration to -1 removes it\r\n        this.setItem(key, \"\", -1);\r\n    }\r\n    getKeys() {\r\n        const cookieList = document.cookie.split(\";\");\r\n        const keys = [];\r\n        cookieList.forEach((cookie) => {\r\n            const cookieParts = decodeURIComponent(cookie).trim().split(\"=\");\r\n            keys.push(cookieParts[0]);\r\n        });\r\n        return keys;\r\n    }\r\n    containsKey(key) {\r\n        return this.getKeys().includes(key);\r\n    }\r\n}\r\n/**\r\n * Get cookie expiration time\r\n * @param cookieLifeDays\r\n */\r\nfunction getCookieExpirationTime(cookieLifeDays) {\r\n    const today = new Date();\r\n    const expr = new Date(today.getTime() + cookieLifeDays * COOKIE_LIFE_MULTIPLIER);\r\n    return expr.toUTCString();\r\n}\r\n\r\nexport { CookieStorage, SameSiteOptions, getCookieExpirationTime };\r\n//# sourceMappingURL=CookieStorage.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { StaticCacheKeys } from '../utils/BrowserConstants.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns a list of cache keys for all known accounts\r\n * @param storage\r\n * @returns\r\n */\r\nfunction getAccountKeys(storage) {\r\n    const accountKeys = storage.getItem(StaticCacheKeys.ACCOUNT_KEYS);\r\n    if (accountKeys) {\r\n        return JSON.parse(accountKeys);\r\n    }\r\n    return [];\r\n}\r\n/**\r\n * Returns a list of cache keys for all known tokens\r\n * @param clientId\r\n * @param storage\r\n * @returns\r\n */\r\nfunction getTokenKeys(clientId, storage) {\r\n    const item = storage.getItem(`${StaticCacheKeys.TOKEN_KEYS}.${clientId}`);\r\n    if (item) {\r\n        const tokenKeys = JSON.parse(item);\r\n        if (tokenKeys &&\r\n            tokenKeys.hasOwnProperty(\"idToken\") &&\r\n            tokenKeys.hasOwnProperty(\"accessToken\") &&\r\n            tokenKeys.hasOwnProperty(\"refreshToken\")) {\r\n            return tokenKeys;\r\n        }\r\n    }\r\n    return {\r\n        idToken: [],\r\n        accessToken: [],\r\n        refreshToken: [],\r\n    };\r\n}\r\n\r\nexport { getAccountKeys, getTokenKeys };\r\n//# sourceMappingURL=CacheHelpers.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { invoke, PerformanceEvents, invokeAsync, Constants } from '@azure/msal-common/browser';\r\nimport { generateHKDF, createNewGuid, generateBaseKey, encrypt, decrypt } from '../crypto/BrowserCrypto.mjs';\r\nimport { base64DecToArr } from '../encode/Base64Decode.mjs';\r\nimport { urlEncodeArr } from '../encode/Base64Encode.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\r\nimport { SameSiteOptions, CookieStorage } from './CookieStorage.mjs';\r\nimport { MemoryStorage } from './MemoryStorage.mjs';\r\nimport { getAccountKeys, getTokenKeys } from './CacheHelpers.mjs';\r\nimport { StaticCacheKeys } from '../utils/BrowserConstants.mjs';\r\nimport { storageNotSupported } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\r\nimport { uninitializedPublicClientApplication } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst ENCRYPTION_KEY = \"msal.cache.encryption\";\r\nconst BROADCAST_CHANNEL_NAME = \"msal.broadcast.cache\";\r\nclass LocalStorage {\r\n    constructor(clientId, logger, performanceClient) {\r\n        if (!window.localStorage) {\r\n            throw createBrowserConfigurationAuthError(storageNotSupported);\r\n        }\r\n        this.memoryStorage = new MemoryStorage();\r\n        this.initialized = false;\r\n        this.clientId = clientId;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n        this.broadcast = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\r\n    }\r\n    async initialize(correlationId) {\r\n        this.initialized = true;\r\n        const cookies = new CookieStorage();\r\n        const cookieString = cookies.getItem(ENCRYPTION_KEY);\r\n        let parsedCookie = { key: \"\", id: \"\" };\r\n        if (cookieString) {\r\n            try {\r\n                parsedCookie = JSON.parse(cookieString);\r\n            }\r\n            catch (e) { }\r\n        }\r\n        if (parsedCookie.key && parsedCookie.id) {\r\n            // Encryption key already exists, import\r\n            const baseKey = invoke(base64DecToArr, PerformanceEvents.Base64Decode, this.logger, this.performanceClient, correlationId)(parsedCookie.key);\r\n            this.encryptionCookie = {\r\n                id: parsedCookie.id,\r\n                key: await invokeAsync(generateHKDF, PerformanceEvents.GenerateHKDF, this.logger, this.performanceClient, correlationId)(baseKey),\r\n            };\r\n            await invokeAsync(this.importExistingCache.bind(this), PerformanceEvents.ImportExistingCache, this.logger, this.performanceClient, correlationId)(correlationId);\r\n        }\r\n        else {\r\n            // Encryption key doesn't exist or is invalid, generate a new one and clear existing cache\r\n            this.clear();\r\n            const id = createNewGuid();\r\n            const baseKey = await invokeAsync(generateBaseKey, PerformanceEvents.GenerateBaseKey, this.logger, this.performanceClient, correlationId)();\r\n            const keyStr = invoke(urlEncodeArr, PerformanceEvents.UrlEncodeArr, this.logger, this.performanceClient, correlationId)(new Uint8Array(baseKey));\r\n            this.encryptionCookie = {\r\n                id: id,\r\n                key: await invokeAsync(generateHKDF, PerformanceEvents.GenerateHKDF, this.logger, this.performanceClient, correlationId)(baseKey),\r\n            };\r\n            const cookieData = {\r\n                id: id,\r\n                key: keyStr,\r\n            };\r\n            cookies.setItem(ENCRYPTION_KEY, JSON.stringify(cookieData), 0, // Expiration - 0 means cookie will be cleared at the end of the browser session\r\n            true, // Secure flag\r\n            SameSiteOptions.None // SameSite must be None to support iframed apps\r\n            );\r\n        }\r\n        // Register listener for cache updates in other tabs\r\n        this.broadcast.addEventListener(\"message\", this.updateCache.bind(this));\r\n    }\r\n    getItem(key) {\r\n        return window.localStorage.getItem(key);\r\n    }\r\n    getUserData(key) {\r\n        if (!this.initialized) {\r\n            throw createBrowserAuthError(uninitializedPublicClientApplication);\r\n        }\r\n        return this.memoryStorage.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        window.localStorage.setItem(key, value);\r\n    }\r\n    async setUserData(key, value, correlationId) {\r\n        if (!this.initialized || !this.encryptionCookie) {\r\n            throw createBrowserAuthError(uninitializedPublicClientApplication);\r\n        }\r\n        const { data, nonce } = await invokeAsync(encrypt, PerformanceEvents.Encrypt, this.logger, this.performanceClient, correlationId)(this.encryptionCookie.key, value, this.getContext(key));\r\n        const encryptedData = {\r\n            id: this.encryptionCookie.id,\r\n            nonce: nonce,\r\n            data: data,\r\n        };\r\n        this.memoryStorage.setItem(key, value);\r\n        this.setItem(key, JSON.stringify(encryptedData));\r\n        // Notify other frames to update their in-memory cache\r\n        this.broadcast.postMessage({\r\n            key: key,\r\n            value: value,\r\n            context: this.getContext(key),\r\n        });\r\n    }\r\n    removeItem(key) {\r\n        if (this.memoryStorage.containsKey(key)) {\r\n            this.memoryStorage.removeItem(key);\r\n            this.broadcast.postMessage({\r\n                key: key,\r\n                value: null,\r\n                context: this.getContext(key),\r\n            });\r\n        }\r\n        window.localStorage.removeItem(key);\r\n    }\r\n    getKeys() {\r\n        return Object.keys(window.localStorage);\r\n    }\r\n    containsKey(key) {\r\n        return window.localStorage.hasOwnProperty(key);\r\n    }\r\n    /**\r\n     * Removes all known MSAL keys from the cache\r\n     */\r\n    clear() {\r\n        // Removes all remaining MSAL cache items\r\n        this.memoryStorage.clear();\r\n        const accountKeys = getAccountKeys(this);\r\n        accountKeys.forEach((key) => this.removeItem(key));\r\n        const tokenKeys = getTokenKeys(this.clientId, this);\r\n        tokenKeys.idToken.forEach((key) => this.removeItem(key));\r\n        tokenKeys.accessToken.forEach((key) => this.removeItem(key));\r\n        tokenKeys.refreshToken.forEach((key) => this.removeItem(key));\r\n        // Clean up anything left\r\n        this.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.startsWith(Constants.CACHE_PREFIX) ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.removeItem(cacheKey);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Helper to decrypt all known MSAL keys in localStorage and save them to inMemory storage\r\n     * @returns\r\n     */\r\n    async importExistingCache(correlationId) {\r\n        if (!this.encryptionCookie) {\r\n            return;\r\n        }\r\n        let accountKeys = getAccountKeys(this);\r\n        accountKeys = await this.importArray(accountKeys, correlationId);\r\n        // Write valid account keys back to map\r\n        this.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n        const tokenKeys = getTokenKeys(this.clientId, this);\r\n        tokenKeys.idToken = await this.importArray(tokenKeys.idToken, correlationId);\r\n        tokenKeys.accessToken = await this.importArray(tokenKeys.accessToken, correlationId);\r\n        tokenKeys.refreshToken = await this.importArray(tokenKeys.refreshToken, correlationId);\r\n        // Write valid token keys back to map\r\n        this.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * Helper to decrypt and save cache entries\r\n     * @param key\r\n     * @returns\r\n     */\r\n    async getItemFromEncryptedCache(key, correlationId) {\r\n        if (!this.encryptionCookie) {\r\n            return null;\r\n        }\r\n        const rawCache = this.getItem(key);\r\n        if (!rawCache) {\r\n            return null;\r\n        }\r\n        let encObj;\r\n        try {\r\n            encObj = JSON.parse(rawCache);\r\n        }\r\n        catch (e) {\r\n            // Not a valid encrypted object, remove\r\n            return null;\r\n        }\r\n        if (!encObj.id || !encObj.nonce || !encObj.data) {\r\n            // Data is not encrypted, likely from old version of MSAL. It must be removed because we don't know how old it is.\r\n            this.performanceClient.incrementFields({ unencryptedCacheCount: 1 }, correlationId);\r\n            return null;\r\n        }\r\n        if (encObj.id !== this.encryptionCookie.id) {\r\n            // Data was encrypted with a different key. It must be removed because it is from a previous session.\r\n            this.performanceClient.incrementFields({ encryptedCacheExpiredCount: 1 }, correlationId);\r\n            return null;\r\n        }\r\n        return invokeAsync(decrypt, PerformanceEvents.Decrypt, this.logger, this.performanceClient, correlationId)(this.encryptionCookie.key, encObj.nonce, this.getContext(key), encObj.data);\r\n    }\r\n    /**\r\n     * Helper to decrypt and save an array of cache keys\r\n     * @param arr\r\n     * @returns Array of keys successfully imported\r\n     */\r\n    async importArray(arr, correlationId) {\r\n        const importedArr = [];\r\n        const promiseArr = [];\r\n        arr.forEach((key) => {\r\n            const promise = this.getItemFromEncryptedCache(key, correlationId).then((value) => {\r\n                if (value) {\r\n                    this.memoryStorage.setItem(key, value);\r\n                    importedArr.push(key);\r\n                }\r\n                else {\r\n                    // If value is empty, unencrypted or expired remove\r\n                    this.removeItem(key);\r\n                }\r\n            });\r\n            promiseArr.push(promise);\r\n        });\r\n        await Promise.all(promiseArr);\r\n        return importedArr;\r\n    }\r\n    /**\r\n     * Gets encryption context for a given cache entry. This is clientId for app specific entries, empty string for shared entries\r\n     * @param key\r\n     * @returns\r\n     */\r\n    getContext(key) {\r\n        let context = \"\";\r\n        if (key.includes(this.clientId)) {\r\n            context = this.clientId; // Used to bind encryption key to this appId\r\n        }\r\n        return context;\r\n    }\r\n    updateCache(event) {\r\n        this.logger.trace(\"Updating internal cache from broadcast event\");\r\n        const perfMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.LocalStorageUpdated);\r\n        perfMeasurement.add({ isBackground: true });\r\n        const { key, value, context } = event.data;\r\n        if (!key) {\r\n            this.logger.error(\"Broadcast event missing key\");\r\n            perfMeasurement.end({ success: false, errorCode: \"noKey\" });\r\n            return;\r\n        }\r\n        if (context && context !== this.clientId) {\r\n            this.logger.trace(`Ignoring broadcast event from clientId: ${context}`);\r\n            perfMeasurement.end({\r\n                success: false,\r\n                errorCode: \"contextMismatch\",\r\n            });\r\n            return;\r\n        }\r\n        if (!value) {\r\n            this.memoryStorage.removeItem(key);\r\n            this.logger.verbose(\"Removed item from internal cache\");\r\n        }\r\n        else {\r\n            this.memoryStorage.setItem(key, value);\r\n            this.logger.verbose(\"Updated item in internal cache\");\r\n        }\r\n        perfMeasurement.end({ success: true });\r\n    }\r\n}\r\n\r\nexport { LocalStorage };\r\n//# sourceMappingURL=LocalStorage.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createBrowserConfigurationAuthError } from '../error/BrowserConfigurationAuthError.mjs';\r\nimport { storageNotSupported } from '../error/BrowserConfigurationAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SessionStorage {\r\n    constructor() {\r\n        if (!window.sessionStorage) {\r\n            throw createBrowserConfigurationAuthError(storageNotSupported);\r\n        }\r\n    }\r\n    async initialize() {\r\n        // Session storage does not require initialization\r\n    }\r\n    getItem(key) {\r\n        return window.sessionStorage.getItem(key);\r\n    }\r\n    getUserData(key) {\r\n        return this.getItem(key);\r\n    }\r\n    setItem(key, value) {\r\n        window.sessionStorage.setItem(key, value);\r\n    }\r\n    async setUserData(key, value) {\r\n        this.setItem(key, value);\r\n    }\r\n    removeItem(key) {\r\n        window.sessionStorage.removeItem(key);\r\n    }\r\n    getKeys() {\r\n        return Object.keys(window.sessionStorage);\r\n    }\r\n    containsKey(key) {\r\n        return window.sessionStorage.hasOwnProperty(key);\r\n    }\r\n}\r\n\r\nexport { SessionStorage };\r\n//# sourceMappingURL=SessionStorage.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { ProtocolUtils, createClientAuthError, ClientAuthErrorCodes } from '@azure/msal-common/browser';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Extracts the BrowserStateObject from the state string.\r\n * @param browserCrypto\r\n * @param state\r\n */\r\nfunction extractBrowserRequestState(browserCrypto, state) {\r\n    if (!state) {\r\n        return null;\r\n    }\r\n    try {\r\n        const requestStateObj = ProtocolUtils.parseRequestState(browserCrypto, state);\r\n        return requestStateObj.libraryState.meta;\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(ClientAuthErrorCodes.invalidState);\r\n    }\r\n}\r\n\r\nexport { extractBrowserRequestState };\r\n//# sourceMappingURL=BrowserProtocolUtils.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst EventType = {\r\n    INITIALIZE_START: \"msal:initializeStart\",\r\n    INITIALIZE_END: \"msal:initializeEnd\",\r\n    ACCOUNT_ADDED: \"msal:accountAdded\",\r\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\r\n    ACTIVE_ACCOUNT_CHANGED: \"msal:activeAccountChanged\",\r\n    LOGIN_START: \"msal:loginStart\",\r\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\r\n    LOGIN_FAILURE: \"msal:loginFailure\",\r\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\r\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\r\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\r\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\r\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\r\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\r\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\r\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\r\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\r\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\r\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\r\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\r\n    POPUP_OPENED: \"msal:popupOpened\",\r\n    LOGOUT_START: \"msal:logoutStart\",\r\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\r\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\r\n    LOGOUT_END: \"msal:logoutEnd\",\r\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\r\n};\r\n\r\nexport { EventType };\r\n//# sourceMappingURL=EventType.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { CacheManager, AccountEntity, invokeAsync, PerformanceEvents, CredentialType, createClientAuthError, ClientAuthErrorCodes, CacheHelpers, Constants, PersistentCacheKeys, StringUtils, ProtocolUtils, TimeUtils, CacheError, DEFAULT_CRYPTO_IMPLEMENTATION, CcsCredentialType } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { BrowserCacheLocation, StaticCacheKeys, InMemoryCacheKeys, TemporaryCacheKeys } from '../utils/BrowserConstants.mjs';\r\nimport { LocalStorage } from './LocalStorage.mjs';\r\nimport { SessionStorage } from './SessionStorage.mjs';\r\nimport { MemoryStorage } from './MemoryStorage.mjs';\r\nimport { extractBrowserRequestState } from '../utils/BrowserProtocolUtils.mjs';\r\nimport { base64Decode } from '../encode/Base64Decode.mjs';\r\nimport { base64Encode } from '../encode/Base64Encode.mjs';\r\nimport { CookieStorage } from './CookieStorage.mjs';\r\nimport { getAccountKeys, getTokenKeys } from './CacheHelpers.mjs';\r\nimport { EventType } from '../event/EventType.mjs';\r\nimport { noTokenRequestCacheError, unableToParseTokenRequestCacheError, noCachedAuthorityError, interactionInProgress } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class implements the cache storage interface for MSAL through browser local or session storage.\r\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\r\n * parameters such as state and nonce, generally.\r\n */\r\nclass BrowserCacheManager extends CacheManager {\r\n    constructor(clientId, cacheConfig, cryptoImpl, logger, performanceClient, eventHandler, staticAuthorityOptions) {\r\n        super(clientId, cryptoImpl, logger, staticAuthorityOptions);\r\n        this.cacheConfig = cacheConfig;\r\n        this.logger = logger;\r\n        this.internalStorage = new MemoryStorage();\r\n        this.browserStorage = getStorageImplementation(clientId, cacheConfig.cacheLocation, logger, performanceClient);\r\n        this.temporaryCacheStorage = getStorageImplementation(clientId, cacheConfig.temporaryCacheLocation, logger, performanceClient);\r\n        this.cookieStorage = new CookieStorage();\r\n        this.performanceClient = performanceClient;\r\n        this.eventHandler = eventHandler;\r\n    }\r\n    async initialize(correlationId) {\r\n        await this.browserStorage.initialize(correlationId);\r\n    }\r\n    /**\r\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\r\n     * @param input\r\n     */\r\n    validateAndParseJson(jsonValue) {\r\n        try {\r\n            const parsedJson = JSON.parse(jsonValue);\r\n            /**\r\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\r\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\r\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\r\n             *\r\n             */\r\n            return parsedJson && typeof parsedJson === \"object\"\r\n                ? parsedJson\r\n                : null;\r\n        }\r\n        catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n    /**\r\n     * Reads account from cache, deserializes it into an account entity and returns it.\r\n     * If account is not found from the key, returns null and removes key from map.\r\n     * @param accountKey\r\n     * @returns\r\n     */\r\n    getAccount(accountKey) {\r\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\r\n        const serializedAccount = this.browserStorage.getUserData(accountKey);\r\n        if (!serializedAccount) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n        const parsedAccount = this.validateAndParseJson(serializedAccount);\r\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\r\n            this.removeAccountKeyFromMap(accountKey);\r\n            return null;\r\n        }\r\n        return CacheManager.toObject(new AccountEntity(), parsedAccount);\r\n    }\r\n    /**\r\n     * set account entity in the platform cache\r\n     * @param account\r\n     */\r\n    async setAccount(account, correlationId) {\r\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\r\n        const key = account.generateAccountKey();\r\n        await invokeAsync(this.browserStorage.setUserData.bind(this.browserStorage), PerformanceEvents.SetUserData, this.logger, this.performanceClient)(key, JSON.stringify(account), correlationId);\r\n        const wasAdded = this.addAccountKeyToMap(key);\r\n        /**\r\n         * @deprecated - Remove this in next major version in favor of more consistent LOGIN event\r\n         */\r\n        if (this.cacheConfig.cacheLocation ===\r\n            BrowserCacheLocation.LocalStorage &&\r\n            wasAdded) {\r\n            this.eventHandler.emitEvent(EventType.ACCOUNT_ADDED, undefined, account.getAccountInfo());\r\n        }\r\n    }\r\n    /**\r\n     * Returns the array of account keys currently cached\r\n     * @returns\r\n     */\r\n    getAccountKeys() {\r\n        return getAccountKeys(this.browserStorage);\r\n    }\r\n    /**\r\n     * Add a new account to the key map\r\n     * @param key\r\n     */\r\n    addAccountKeyToMap(key) {\r\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\r\n        this.logger.tracePii(`BrowserCacheManager.addAccountKeyToMap called with key: ${key}`);\r\n        const accountKeys = this.getAccountKeys();\r\n        if (accountKeys.indexOf(key) === -1) {\r\n            // Only add key if it does not already exist in the map\r\n            accountKeys.push(key);\r\n            this.browserStorage.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key added\");\r\n            return true;\r\n        }\r\n        else {\r\n            this.logger.verbose(\"BrowserCacheManager.addAccountKeyToMap account key already exists in map\");\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * Remove an account from the key map\r\n     * @param key\r\n     */\r\n    removeAccountKeyFromMap(key) {\r\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\r\n        this.logger.tracePii(`BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`);\r\n        const accountKeys = this.getAccountKeys();\r\n        const removalIndex = accountKeys.indexOf(key);\r\n        if (removalIndex > -1) {\r\n            accountKeys.splice(removalIndex, 1);\r\n            this.browserStorage.setItem(StaticCacheKeys.ACCOUNT_KEYS, JSON.stringify(accountKeys));\r\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap account key removed\");\r\n        }\r\n        else {\r\n            this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\");\r\n        }\r\n    }\r\n    /**\r\n     * Extends inherited removeAccount function to include removal of the account key from the map\r\n     * @param key\r\n     */\r\n    async removeAccount(key) {\r\n        void super.removeAccount(key);\r\n        this.removeAccountKeyFromMap(key);\r\n    }\r\n    /**\r\n     * Removes credentials associated with the provided account\r\n     * @param account\r\n     */\r\n    async removeAccountContext(account) {\r\n        await super.removeAccountContext(account);\r\n        /**\r\n         * @deprecated - Remove this in next major version in favor of more consistent LOGOUT event\r\n         */\r\n        if (this.cacheConfig.cacheLocation === BrowserCacheLocation.LocalStorage) {\r\n            this.eventHandler.emitEvent(EventType.ACCOUNT_REMOVED, undefined, account.getAccountInfo());\r\n        }\r\n    }\r\n    /**\r\n     * Removes given idToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeIdToken(key) {\r\n        super.removeIdToken(key);\r\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\r\n    }\r\n    /**\r\n     * Removes given accessToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    async removeAccessToken(key) {\r\n        void super.removeAccessToken(key);\r\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\r\n    }\r\n    /**\r\n     * Removes given refreshToken from the cache and from the key map\r\n     * @param key\r\n     */\r\n    removeRefreshToken(key) {\r\n        super.removeRefreshToken(key);\r\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\r\n    }\r\n    /**\r\n     * Gets the keys for the cached tokens associated with this clientId\r\n     * @returns\r\n     */\r\n    getTokenKeys() {\r\n        return getTokenKeys(this.clientId, this.browserStorage);\r\n    }\r\n    /**\r\n     * Adds the given key to the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    addTokenKey(key, type) {\r\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n        switch (type) {\r\n            case CredentialType.ID_TOKEN:\r\n                if (tokenKeys.idToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - idToken added to map\");\r\n                    tokenKeys.idToken.push(key);\r\n                }\r\n                break;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - accessToken added to map\");\r\n                    tokenKeys.accessToken.push(key);\r\n                }\r\n                break;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\r\n                    this.logger.info(\"BrowserCacheManager: addTokenKey - refreshToken added to map\");\r\n                    tokenKeys.refreshToken.push(key);\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(`BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\r\n                throw createClientAuthError(ClientAuthErrorCodes.unexpectedCredentialType);\r\n        }\r\n        this.browserStorage.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * Removes the given key from the token key map\r\n     * @param key\r\n     * @param type\r\n     */\r\n    removeTokenKey(key, type) {\r\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\r\n        const tokenKeys = this.getTokenKeys();\r\n        switch (type) {\r\n            case CredentialType.ID_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`);\r\n                const idRemoval = tokenKeys.idToken.indexOf(key);\r\n                if (idRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken removed from map\");\r\n                    tokenKeys.idToken.splice(idRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            case CredentialType.ACCESS_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`);\r\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\r\n                if (accessRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken removed from map\");\r\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            case CredentialType.REFRESH_TOKEN:\r\n                this.logger.infoPii(`BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`);\r\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\r\n                if (refreshRemoval > -1) {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken removed from map\");\r\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\r\n                }\r\n                else {\r\n                    this.logger.info(\"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\");\r\n                }\r\n                break;\r\n            default:\r\n                this.logger.error(`BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`);\r\n                throw createClientAuthError(ClientAuthErrorCodes.unexpectedCredentialType);\r\n        }\r\n        this.browserStorage.setItem(`${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`, JSON.stringify(tokenKeys));\r\n    }\r\n    /**\r\n     * generates idToken entity from a string\r\n     * @param idTokenKey\r\n     */\r\n    getIdTokenCredential(idTokenKey) {\r\n        const value = this.browserStorage.getUserData(idTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedIdToken = this.validateAndParseJson(value);\r\n        if (!parsedIdToken || !CacheHelpers.isIdTokenEntity(parsedIdToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getIdTokenCredential: cache hit\");\r\n        return parsedIdToken;\r\n    }\r\n    /**\r\n     * set IdToken credential to the platform cache\r\n     * @param idToken\r\n     */\r\n    async setIdTokenCredential(idToken, correlationId) {\r\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\r\n        const idTokenKey = CacheHelpers.generateCredentialKey(idToken);\r\n        await invokeAsync(this.browserStorage.setUserData.bind(this.browserStorage), PerformanceEvents.SetUserData, this.logger, this.performanceClient)(idTokenKey, JSON.stringify(idToken), correlationId);\r\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\r\n    }\r\n    /**\r\n     * generates accessToken entity from a string\r\n     * @param key\r\n     */\r\n    getAccessTokenCredential(accessTokenKey) {\r\n        const value = this.browserStorage.getUserData(accessTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedAccessToken = this.validateAndParseJson(value);\r\n        if (!parsedAccessToken ||\r\n            !CacheHelpers.isAccessTokenEntity(parsedAccessToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getAccessTokenCredential: cache hit\");\r\n        return parsedAccessToken;\r\n    }\r\n    /**\r\n     * set accessToken credential to the platform cache\r\n     * @param accessToken\r\n     */\r\n    async setAccessTokenCredential(accessToken, correlationId) {\r\n        this.logger.trace(\"BrowserCacheManager.setAccessTokenCredential called\");\r\n        const accessTokenKey = CacheHelpers.generateCredentialKey(accessToken);\r\n        await invokeAsync(this.browserStorage.setUserData.bind(this.browserStorage), PerformanceEvents.SetUserData, this.logger, this.performanceClient)(accessTokenKey, JSON.stringify(accessToken), correlationId);\r\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\r\n    }\r\n    /**\r\n     * generates refreshToken entity from a string\r\n     * @param refreshTokenKey\r\n     */\r\n    getRefreshTokenCredential(refreshTokenKey) {\r\n        const value = this.browserStorage.getUserData(refreshTokenKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        const parsedRefreshToken = this.validateAndParseJson(value);\r\n        if (!parsedRefreshToken ||\r\n            !CacheHelpers.isRefreshTokenEntity(parsedRefreshToken)) {\r\n            this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\");\r\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getRefreshTokenCredential: cache hit\");\r\n        return parsedRefreshToken;\r\n    }\r\n    /**\r\n     * set refreshToken credential to the platform cache\r\n     * @param refreshToken\r\n     */\r\n    async setRefreshTokenCredential(refreshToken, correlationId) {\r\n        this.logger.trace(\"BrowserCacheManager.setRefreshTokenCredential called\");\r\n        const refreshTokenKey = CacheHelpers.generateCredentialKey(refreshToken);\r\n        await invokeAsync(this.browserStorage.setUserData.bind(this.browserStorage), PerformanceEvents.SetUserData, this.logger, this.performanceClient)(refreshTokenKey, JSON.stringify(refreshToken), correlationId);\r\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\r\n    }\r\n    /**\r\n     * fetch appMetadata entity from the platform cache\r\n     * @param appMetadataKey\r\n     */\r\n    getAppMetadata(appMetadataKey) {\r\n        const value = this.browserStorage.getItem(appMetadataKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (!parsedMetadata ||\r\n            !CacheHelpers.isAppMetadataEntity(appMetadataKey, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAppMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\r\n        return parsedMetadata;\r\n    }\r\n    /**\r\n     * set appMetadata entity to the platform cache\r\n     * @param appMetadata\r\n     */\r\n    setAppMetadata(appMetadata) {\r\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\r\n        const appMetadataKey = CacheHelpers.generateAppMetadataKey(appMetadata);\r\n        this.browserStorage.setItem(appMetadataKey, JSON.stringify(appMetadata));\r\n    }\r\n    /**\r\n     * fetch server telemetry entity from the platform cache\r\n     * @param serverTelemetryKey\r\n     */\r\n    getServerTelemetry(serverTelemetryKey) {\r\n        const value = this.browserStorage.getItem(serverTelemetryKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedEntity = this.validateAndParseJson(value);\r\n        if (!parsedEntity ||\r\n            !CacheHelpers.isServerTelemetryEntity(serverTelemetryKey, parsedEntity)) {\r\n            this.logger.trace(\"BrowserCacheManager.getServerTelemetry: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\r\n        return parsedEntity;\r\n    }\r\n    /**\r\n     * set server telemetry entity to the platform cache\r\n     * @param serverTelemetryKey\r\n     * @param serverTelemetry\r\n     */\r\n    setServerTelemetry(serverTelemetryKey, serverTelemetry) {\r\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\r\n        this.browserStorage.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadata(key) {\r\n        const value = this.internalStorage.getItem(key);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedMetadata = this.validateAndParseJson(value);\r\n        if (parsedMetadata &&\r\n            CacheHelpers.isAuthorityMetadataEntity(key, parsedMetadata)) {\r\n            this.logger.trace(\"BrowserCacheManager.getAuthorityMetadata: cache hit\");\r\n            return parsedMetadata;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     *\r\n     */\r\n    getAuthorityMetadataKeys() {\r\n        const allKeys = this.internalStorage.getKeys();\r\n        return allKeys.filter((key) => {\r\n            return this.isAuthorityMetadata(key);\r\n        });\r\n    }\r\n    /**\r\n     * Sets wrapper metadata in memory\r\n     * @param wrapperSKU\r\n     * @param wrapperVersion\r\n     */\r\n    setWrapperMetadata(wrapperSKU, wrapperVersion) {\r\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\r\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_VER, wrapperVersion);\r\n    }\r\n    /**\r\n     * Returns wrapper metadata from in-memory storage\r\n     */\r\n    getWrapperMetadata() {\r\n        const sku = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\r\n            Constants.EMPTY_STRING;\r\n        const version = this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\r\n            Constants.EMPTY_STRING;\r\n        return [sku, version];\r\n    }\r\n    /**\r\n     *\r\n     * @param entity\r\n     */\r\n    setAuthorityMetadata(key, entity) {\r\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\r\n        this.internalStorage.setItem(key, JSON.stringify(entity));\r\n    }\r\n    /**\r\n     * Gets the active account\r\n     */\r\n    getActiveAccount() {\r\n        const activeAccountKeyFilters = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\r\n        const activeAccountValueFilters = this.browserStorage.getItem(activeAccountKeyFilters);\r\n        if (!activeAccountValueFilters) {\r\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account filters found\");\r\n            return null;\r\n        }\r\n        const activeAccountValueObj = this.validateAndParseJson(activeAccountValueFilters);\r\n        if (activeAccountValueObj) {\r\n            this.logger.trace(\"BrowserCacheManager.getActiveAccount: Active account filters schema found\");\r\n            return this.getAccountInfoFilteredBy({\r\n                homeAccountId: activeAccountValueObj.homeAccountId,\r\n                localAccountId: activeAccountValueObj.localAccountId,\r\n                tenantId: activeAccountValueObj.tenantId,\r\n            });\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getActiveAccount: No active account found\");\r\n        return null;\r\n    }\r\n    /**\r\n     * Sets the active account's localAccountId in cache\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        const activeAccountKey = this.generateCacheKey(PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS);\r\n        if (account) {\r\n            this.logger.verbose(\"setActiveAccount: Active account set\");\r\n            const activeAccountValue = {\r\n                homeAccountId: account.homeAccountId,\r\n                localAccountId: account.localAccountId,\r\n                tenantId: account.tenantId,\r\n            };\r\n            this.browserStorage.setItem(activeAccountKey, JSON.stringify(activeAccountValue));\r\n        }\r\n        else {\r\n            this.logger.verbose(\"setActiveAccount: No account passed, active account not set\");\r\n            this.browserStorage.removeItem(activeAccountKey);\r\n        }\r\n        this.eventHandler.emitEvent(EventType.ACTIVE_ACCOUNT_CHANGED);\r\n    }\r\n    /**\r\n     * fetch throttling entity from the platform cache\r\n     * @param throttlingCacheKey\r\n     */\r\n    getThrottlingCache(throttlingCacheKey) {\r\n        const value = this.browserStorage.getItem(throttlingCacheKey);\r\n        if (!value) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n        const parsedThrottlingCache = this.validateAndParseJson(value);\r\n        if (!parsedThrottlingCache ||\r\n            !CacheHelpers.isThrottlingEntity(throttlingCacheKey, parsedThrottlingCache)) {\r\n            this.logger.trace(\"BrowserCacheManager.getThrottlingCache: called, no cache hit\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\r\n        return parsedThrottlingCache;\r\n    }\r\n    /**\r\n     * set throttling entity to the platform cache\r\n     * @param throttlingCacheKey\r\n     * @param throttlingCache\r\n     */\r\n    setThrottlingCache(throttlingCacheKey, throttlingCache) {\r\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\r\n        this.browserStorage.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\r\n    }\r\n    /**\r\n     * Gets cache item with given key.\r\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    getTemporaryCache(cacheKey, generateKey) {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            const itemCookie = this.cookieStorage.getItem(key);\r\n            if (itemCookie) {\r\n                this.logger.trace(\"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\");\r\n                return itemCookie;\r\n            }\r\n        }\r\n        const value = this.temporaryCacheStorage.getItem(key);\r\n        if (!value) {\r\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\r\n            if (this.cacheConfig.cacheLocation ===\r\n                BrowserCacheLocation.LocalStorage) {\r\n                const item = this.browserStorage.getItem(key);\r\n                if (item) {\r\n                    this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\");\r\n                    return item;\r\n                }\r\n            }\r\n            this.logger.trace(\"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\");\r\n            return null;\r\n        }\r\n        this.logger.trace(\"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\");\r\n        return value;\r\n    }\r\n    /**\r\n     * Sets the cache item with the key and value given.\r\n     * Stores in cookie if storeAuthStateInCookie is set to true.\r\n     * This can cause cookie overflow if used incorrectly.\r\n     * @param key\r\n     * @param value\r\n     */\r\n    setTemporaryCache(cacheKey, value, generateKey) {\r\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\r\n        this.temporaryCacheStorage.setItem(key, value);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\");\r\n            this.cookieStorage.setItem(key, value, undefined, this.cacheConfig.secureCookies);\r\n        }\r\n    }\r\n    /**\r\n     * Removes the cache item with the given key.\r\n     * @param key\r\n     */\r\n    removeItem(key) {\r\n        this.browserStorage.removeItem(key);\r\n    }\r\n    /**\r\n     * Removes the temporary cache item with the given key.\r\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\r\n     * @param key\r\n     */\r\n    removeTemporaryItem(key) {\r\n        this.temporaryCacheStorage.removeItem(key);\r\n        if (this.cacheConfig.storeAuthStateInCookie) {\r\n            this.logger.trace(\"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\");\r\n            this.cookieStorage.removeItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Gets all keys in window.\r\n     */\r\n    getKeys() {\r\n        return this.browserStorage.getKeys();\r\n    }\r\n    /**\r\n     * Clears all cache entries created by MSAL.\r\n     */\r\n    async clear() {\r\n        // Removes all accounts and their credentials\r\n        await this.removeAllAccounts();\r\n        this.removeAppMetadata();\r\n        // Remove temp storage first to make sure any cookies are cleared\r\n        this.temporaryCacheStorage.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.removeTemporaryItem(cacheKey);\r\n            }\r\n        });\r\n        // Removes all remaining MSAL cache items\r\n        this.browserStorage.getKeys().forEach((cacheKey) => {\r\n            if (cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\r\n                cacheKey.indexOf(this.clientId) !== -1) {\r\n                this.browserStorage.removeItem(cacheKey);\r\n            }\r\n        });\r\n        this.internalStorage.clear();\r\n    }\r\n    /**\r\n     * Clears all access tokes that have claims prior to saving the current one\r\n     * @param performanceClient {IPerformanceClient}\r\n     * @param correlationId {string} correlation id\r\n     * @returns\r\n     */\r\n    async clearTokensAndKeysWithClaims(performanceClient, correlationId) {\r\n        performanceClient.addQueueMeasurement(PerformanceEvents.ClearTokensAndKeysWithClaims, correlationId);\r\n        const tokenKeys = this.getTokenKeys();\r\n        const removedAccessTokens = [];\r\n        tokenKeys.accessToken.forEach((key) => {\r\n            // if the access token has claims in its key, remove the token key and the token\r\n            const credential = this.getAccessTokenCredential(key);\r\n            if (credential?.requestedClaimsHash &&\r\n                key.includes(credential.requestedClaimsHash.toLowerCase())) {\r\n                removedAccessTokens.push(this.removeAccessToken(key));\r\n            }\r\n        });\r\n        await Promise.all(removedAccessTokens);\r\n        // warn if any access tokens are removed\r\n        if (removedAccessTokens.length > 0) {\r\n            this.logger.warning(`${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`);\r\n        }\r\n    }\r\n    /**\r\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\r\n     * @param key\r\n     * @param addInstanceId\r\n     */\r\n    generateCacheKey(key) {\r\n        const generatedKey = this.validateAndParseJson(key);\r\n        if (!generatedKey) {\r\n            if (StringUtils.startsWith(key, Constants.CACHE_PREFIX)) {\r\n                return key;\r\n            }\r\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\r\n        }\r\n        return JSON.stringify(key);\r\n    }\r\n    /**\r\n     * Create authorityKey to cache authority\r\n     * @param state\r\n     */\r\n    generateAuthorityKey(stateString) {\r\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${TemporaryCacheKeys.AUTHORITY}.${stateId}`);\r\n    }\r\n    /**\r\n     * Create Nonce key to cache nonce\r\n     * @param state\r\n     */\r\n    generateNonceKey(stateString) {\r\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`);\r\n    }\r\n    /**\r\n     * Creates full cache key for the request state\r\n     * @param stateString State string for the request\r\n     */\r\n    generateStateKey(stateString) {\r\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\r\n        const { libraryState: { id: stateId }, } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\r\n        return this.generateCacheKey(`${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`);\r\n    }\r\n    /**\r\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\r\n     */\r\n    getCachedAuthority(cachedState) {\r\n        const stateCacheKey = this.generateStateKey(cachedState);\r\n        const state = this.getTemporaryCache(stateCacheKey);\r\n        if (!state) {\r\n            return null;\r\n        }\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        return this.getTemporaryCache(authorityCacheKey);\r\n    }\r\n    /**\r\n     * Updates account, authority, and state in cache\r\n     * @param serverAuthenticationRequest\r\n     * @param account\r\n     */\r\n    updateCacheEntries(state, nonce, authorityInstance, loginHint, account) {\r\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\r\n        // Cache the request state\r\n        const stateCacheKey = this.generateStateKey(state);\r\n        this.setTemporaryCache(stateCacheKey, state, false);\r\n        // Cache the nonce\r\n        const nonceCacheKey = this.generateNonceKey(state);\r\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\r\n        // Cache authorityKey\r\n        const authorityCacheKey = this.generateAuthorityKey(state);\r\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\r\n        if (account) {\r\n            const ccsCredential = {\r\n                credential: account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n        else if (loginHint) {\r\n            const ccsCredential = {\r\n                credential: loginHint,\r\n                type: CcsCredentialType.UPN,\r\n            };\r\n            this.setTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, JSON.stringify(ccsCredential), true);\r\n        }\r\n    }\r\n    /**\r\n     * Reset all temporary cache items\r\n     * @param state\r\n     */\r\n    resetRequestCache(state) {\r\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\r\n        // check state and remove associated cache items\r\n        if (state) {\r\n            this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n                if (key.indexOf(state) !== -1) {\r\n                    this.removeTemporaryItem(key);\r\n                }\r\n            });\r\n            // delete generic interactive request parameters\r\n            this.removeTemporaryItem(this.generateStateKey(state));\r\n            this.removeTemporaryItem(this.generateNonceKey(state));\r\n            this.removeTemporaryItem(this.generateAuthorityKey(state));\r\n        }\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID));\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL));\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\r\n        this.setInteractionInProgress(false);\r\n    }\r\n    /**\r\n     * Removes temporary cache for the provided state\r\n     * @param stateString\r\n     */\r\n    cleanRequestByState(stateString) {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\r\n        // Interaction is completed - remove interaction status.\r\n        if (stateString) {\r\n            const stateKey = this.generateStateKey(stateString);\r\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\r\n            this.logger.infoPii(`BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`);\r\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\r\n        }\r\n    }\r\n    /**\r\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\r\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\r\n     * @param interactionType\r\n     */\r\n    cleanRequestByInteractionType(interactionType) {\r\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByInteractionType called\");\r\n        // Loop through all keys to find state key\r\n        this.temporaryCacheStorage.getKeys().forEach((key) => {\r\n            // If this key is not the state key, move on\r\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\r\n                return;\r\n            }\r\n            // Retrieve state value, return if not a valid value\r\n            const stateValue = this.temporaryCacheStorage.getItem(key);\r\n            if (!stateValue) {\r\n                return;\r\n            }\r\n            // Extract state and ensure it matches given InteractionType, then clean request cache\r\n            const parsedState = extractBrowserRequestState(this.cryptoImpl, stateValue);\r\n            if (parsedState &&\r\n                parsedState.interactionType === interactionType) {\r\n                this.logger.infoPii(`BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`);\r\n                this.resetRequestCache(stateValue);\r\n            }\r\n        });\r\n        this.setInteractionInProgress(false);\r\n    }\r\n    cacheCodeRequest(authCodeRequest) {\r\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\r\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\r\n        this.setTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, encodedValue, true);\r\n    }\r\n    /**\r\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\r\n     */\r\n    getCachedRequest(state) {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\r\n        // Get token request from cache and parse as TokenExchangeParameters.\r\n        const encodedTokenRequest = this.getTemporaryCache(TemporaryCacheKeys.REQUEST_PARAMS, true);\r\n        if (!encodedTokenRequest) {\r\n            throw createBrowserAuthError(noTokenRequestCacheError);\r\n        }\r\n        let parsedRequest;\r\n        try {\r\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\r\n        }\r\n        catch (e) {\r\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\r\n            this.logger.error(`Parsing cached token request threw with error: ${e}`);\r\n            throw createBrowserAuthError(unableToParseTokenRequestCacheError);\r\n        }\r\n        this.removeTemporaryItem(this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS));\r\n        // Get cached authority and use if no authority is cached with request.\r\n        if (!parsedRequest.authority) {\r\n            const authorityCacheKey = this.generateAuthorityKey(state);\r\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\r\n            if (!cachedAuthority) {\r\n                throw createBrowserAuthError(noCachedAuthorityError);\r\n            }\r\n            parsedRequest.authority = cachedAuthority;\r\n        }\r\n        return parsedRequest;\r\n    }\r\n    /**\r\n     * Gets cached native request for redirect flows\r\n     */\r\n    getCachedNativeRequest() {\r\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\r\n        const cachedRequest = this.getTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, true);\r\n        if (!cachedRequest) {\r\n            this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest: No cached native request found\");\r\n            return null;\r\n        }\r\n        const parsedRequest = this.validateAndParseJson(cachedRequest);\r\n        if (!parsedRequest) {\r\n            this.logger.error(\"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\");\r\n            return null;\r\n        }\r\n        return parsedRequest;\r\n    }\r\n    isInteractionInProgress(matchClientId) {\r\n        const clientId = this.getInteractionInProgress();\r\n        if (matchClientId) {\r\n            return clientId === this.clientId;\r\n        }\r\n        else {\r\n            return !!clientId;\r\n        }\r\n    }\r\n    getInteractionInProgress() {\r\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        return this.getTemporaryCache(key, false);\r\n    }\r\n    setInteractionInProgress(inProgress) {\r\n        // Ensure we don't overwrite interaction in progress for a different clientId\r\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\r\n        if (inProgress) {\r\n            if (this.getInteractionInProgress()) {\r\n                throw createBrowserAuthError(interactionInProgress);\r\n            }\r\n            else {\r\n                // No interaction is in progress\r\n                this.setTemporaryCache(key, this.clientId, false);\r\n            }\r\n        }\r\n        else if (!inProgress &&\r\n            this.getInteractionInProgress() === this.clientId) {\r\n            this.removeTemporaryItem(key);\r\n        }\r\n    }\r\n    /**\r\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\r\n     * @param result\r\n     * @param request\r\n     */\r\n    async hydrateCache(result, request) {\r\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(result.account?.homeAccountId, result.account?.environment, result.idToken, this.clientId, result.tenantId);\r\n        let claimsHash;\r\n        if (request.claims) {\r\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\r\n        }\r\n        /**\r\n         * meta data for cache stores time in seconds from epoch\r\n         * AuthenticationResult returns expiresOn and extExpiresOn in milliseconds (as a Date object which is in ms)\r\n         * We need to map these for the cache when building tokens from AuthenticationResult\r\n         *\r\n         * The next MSAL VFuture should map these both to same value if possible\r\n         */\r\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(result.account?.homeAccountId, result.account.environment, result.accessToken, this.clientId, result.tenantId, result.scopes.join(\" \"), \r\n        // Access token expiresOn stored in seconds, converting from AuthenticationResult expiresOn stored as Date\r\n        result.expiresOn\r\n            ? TimeUtils.toSecondsFromDate(result.expiresOn)\r\n            : 0, result.extExpiresOn\r\n            ? TimeUtils.toSecondsFromDate(result.extExpiresOn)\r\n            : 0, base64Decode, undefined, // refreshOn\r\n        result.tokenType, undefined, // userAssertionHash\r\n        request.sshKid, request.claims, claimsHash);\r\n        const cacheRecord = {\r\n            idToken: idTokenEntity,\r\n            accessToken: accessTokenEntity,\r\n        };\r\n        return this.saveCacheRecord(cacheRecord, result.correlationId);\r\n    }\r\n    /**\r\n     * saves a cache record\r\n     * @param cacheRecord {CacheRecord}\r\n     * @param storeInCache {?StoreInCache}\r\n     * @param correlationId {?string} correlation id\r\n     */\r\n    async saveCacheRecord(cacheRecord, correlationId, storeInCache) {\r\n        try {\r\n            await super.saveCacheRecord(cacheRecord, correlationId, storeInCache);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof CacheError &&\r\n                this.performanceClient &&\r\n                correlationId) {\r\n                try {\r\n                    const tokenKeys = this.getTokenKeys();\r\n                    this.performanceClient.addFields({\r\n                        cacheRtCount: tokenKeys.refreshToken.length,\r\n                        cacheIdCount: tokenKeys.idToken.length,\r\n                        cacheAtCount: tokenKeys.accessToken.length,\r\n                    }, correlationId);\r\n                }\r\n                catch (e) { }\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n}\r\n/**\r\n * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\r\n * @param cacheLocation\r\n */\r\nfunction getStorageImplementation(clientId, cacheLocation, logger, performanceClient) {\r\n    try {\r\n        switch (cacheLocation) {\r\n            case BrowserCacheLocation.LocalStorage:\r\n                return new LocalStorage(clientId, logger, performanceClient);\r\n            case BrowserCacheLocation.SessionStorage:\r\n                return new SessionStorage();\r\n            case BrowserCacheLocation.MemoryStorage:\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    catch (e) {\r\n        logger.error(e);\r\n    }\r\n    return new MemoryStorage();\r\n}\r\nconst DEFAULT_BROWSER_CACHE_MANAGER = (clientId, logger, performanceClient, eventHandler) => {\r\n    const cacheOptions = {\r\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\r\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\r\n        storeAuthStateInCookie: false,\r\n        secureCookies: false,\r\n        cacheMigrationEnabled: false,\r\n        claimsBasedCachingEnabled: false,\r\n    };\r\n    return new BrowserCacheManager(clientId, cacheOptions, DEFAULT_CRYPTO_IMPLEMENTATION, logger, performanceClient, eventHandler);\r\n};\r\n\r\nexport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER };\r\n//# sourceMappingURL=BrowserCacheManager.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { Logger } from '@azure/msal-common/browser';\r\nimport { EventType } from './EventType.mjs';\r\nimport { createGuid } from '../utils/BrowserUtils.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst BROADCAST_CHANNEL_NAME = \"msal.broadcast.event\";\r\nclass EventHandler {\r\n    constructor(logger) {\r\n        this.eventCallbacks = new Map();\r\n        this.logger = logger || new Logger({});\r\n        if (typeof BroadcastChannel !== \"undefined\") {\r\n            this.broadcastChannel = new BroadcastChannel(BROADCAST_CHANNEL_NAME);\r\n        }\r\n        this.invokeCrossTabCallbacks = this.invokeCrossTabCallbacks.bind(this);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback - callback to be invoked when an event is raised\r\n     * @param eventTypes - list of events that this callback will be invoked for, if not provided callback will be invoked for all events\r\n     * @param callbackId - Identifier for the callback, used to locate and remove the callback when no longer required\r\n     */\r\n    addEventCallback(callback, eventTypes, callbackId) {\r\n        if (typeof window !== \"undefined\") {\r\n            const id = callbackId || createGuid();\r\n            if (this.eventCallbacks.has(id)) {\r\n                this.logger.error(`Event callback with id: ${id} is already registered. Please provide a unique id or remove the existing callback and try again.`);\r\n                return null;\r\n            }\r\n            this.eventCallbacks.set(id, [callback, eventTypes || []]);\r\n            this.logger.verbose(`Event callback registered with id: ${id}`);\r\n            return id;\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventCallbacks.delete(callbackId);\r\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\r\n    }\r\n    /**\r\n     * Emits events by calling callback with event message\r\n     * @param eventType\r\n     * @param interactionType\r\n     * @param payload\r\n     * @param error\r\n     */\r\n    emitEvent(eventType, interactionType, payload, error) {\r\n        const message = {\r\n            eventType: eventType,\r\n            interactionType: interactionType || null,\r\n            payload: payload || null,\r\n            error: error || null,\r\n            timestamp: Date.now(),\r\n        };\r\n        switch (eventType) {\r\n            case EventType.ACCOUNT_ADDED:\r\n            case EventType.ACCOUNT_REMOVED:\r\n            case EventType.ACTIVE_ACCOUNT_CHANGED:\r\n                // Send event to other open tabs / MSAL instances on same domain\r\n                this.broadcastChannel?.postMessage(message);\r\n                break;\r\n            default:\r\n                // Emit event to callbacks registered in this instance\r\n                this.invokeCallbacks(message);\r\n                break;\r\n        }\r\n    }\r\n    /**\r\n     * Invoke registered callbacks\r\n     * @param message\r\n     */\r\n    invokeCallbacks(message) {\r\n        this.eventCallbacks.forEach(([callback, eventTypes], callbackId) => {\r\n            if (eventTypes.length === 0 ||\r\n                eventTypes.includes(message.eventType)) {\r\n                this.logger.verbose(`Emitting event to callback ${callbackId}: ${message.eventType}`);\r\n                callback.apply(null, [message]);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * Wrapper around invokeCallbacks to handle broadcast events received from other tabs/instances\r\n     * @param event\r\n     */\r\n    invokeCrossTabCallbacks(event) {\r\n        const message = event.data;\r\n        this.invokeCallbacks(message);\r\n    }\r\n    /**\r\n     * Listen for events broadcasted from other tabs/instances\r\n     */\r\n    subscribeCrossTab() {\r\n        this.broadcastChannel?.addEventListener(\"message\", this.invokeCrossTabCallbacks);\r\n    }\r\n    /**\r\n     * Unsubscribe from broadcast events\r\n     */\r\n    unsubscribeCrossTab() {\r\n        this.broadcastChannel?.removeEventListener(\"message\", this.invokeCrossTabCallbacks);\r\n    }\r\n}\r\n\r\nexport { EventHandler };\r\n//# sourceMappingURL=EventHandler.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { AuthError } from './AuthError.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Error thrown when there is an error with the server code, for example, unavailability.\r\n */\r\nclass ServerError extends AuthError {\r\n    constructor(errorCode, errorMessage, subError, errorNo, status) {\r\n        super(errorCode, errorMessage, subError);\r\n        this.name = \"ServerError\";\r\n        this.errorNo = errorNo;\r\n        this.status = status;\r\n        Object.setPrototypeOf(this, ServerError.prototype);\r\n    }\r\n}\r\n\r\nexport { ServerError };\r\n//# sourceMappingURL=ServerError.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { ThrottlingConstants, Constants, HeaderNames } from '../utils/Constants.mjs';\r\nimport { ServerError } from '../error/ServerError.mjs';\r\nimport { getRequestThumbprint } from './RequestThumbprint.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass ThrottlingUtils {\r\n    /**\r\n     * Prepares a RequestThumbprint to be stored as a key.\r\n     * @param thumbprint\r\n     */\r\n    static generateThrottlingStorageKey(thumbprint) {\r\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(thumbprint)}`;\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks before a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     */\r\n    static preProcess(cacheManager, thumbprint) {\r\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\r\n        const value = cacheManager.getThrottlingCache(key);\r\n        if (value) {\r\n            if (value.throttleTime < Date.now()) {\r\n                cacheManager.removeItem(key);\r\n                return;\r\n            }\r\n            throw new ServerError(value.errorCodes?.join(\" \") || Constants.EMPTY_STRING, value.errorMessage, value.subError);\r\n        }\r\n    }\r\n    /**\r\n     * Performs necessary throttling checks after a network request.\r\n     * @param cacheManager\r\n     * @param thumbprint\r\n     * @param response\r\n     */\r\n    static postProcess(cacheManager, thumbprint, response) {\r\n        if (ThrottlingUtils.checkResponseStatus(response) ||\r\n            ThrottlingUtils.checkResponseForRetryAfter(response)) {\r\n            const thumbprintValue = {\r\n                throttleTime: ThrottlingUtils.calculateThrottleTime(parseInt(response.headers[HeaderNames.RETRY_AFTER])),\r\n                error: response.body.error,\r\n                errorCodes: response.body.error_codes,\r\n                errorMessage: response.body.error_description,\r\n                subError: response.body.suberror,\r\n            };\r\n            cacheManager.setThrottlingCache(ThrottlingUtils.generateThrottlingStorageKey(thumbprint), thumbprintValue);\r\n        }\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\r\n     * @param response\r\n     */\r\n    static checkResponseStatus(response) {\r\n        return (response.status === 429 ||\r\n            (response.status >= 500 && response.status < 600));\r\n    }\r\n    /**\r\n     * Checks a NetworkResponse object's RetryAfter header\r\n     * @param response\r\n     */\r\n    static checkResponseForRetryAfter(response) {\r\n        if (response.headers) {\r\n            return (response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\r\n                (response.status < 200 || response.status >= 300));\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\r\n     * @param throttleTime\r\n     */\r\n    static calculateThrottleTime(throttleTime) {\r\n        const time = throttleTime <= 0 ? 0 : throttleTime;\r\n        const currentSeconds = Date.now() / 1000;\r\n        return Math.floor(Math.min(currentSeconds +\r\n            (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS), currentSeconds +\r\n            ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS) * 1000);\r\n    }\r\n    static removeThrottle(cacheManager, clientId, request, homeAccountIdentifier) {\r\n        const thumbprint = getRequestThumbprint(clientId, request, homeAccountIdentifier);\r\n        const key = this.generateThrottlingStorageKey(thumbprint);\r\n        cacheManager.removeItem(key);\r\n    }\r\n}\r\n\r\nexport { ThrottlingUtils };\r\n//# sourceMappingURL=ThrottlingUtils.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst CLIENT_ID = \"client_id\";\r\nconst REDIRECT_URI = \"redirect_uri\";\r\nconst RESPONSE_TYPE = \"response_type\";\r\nconst RESPONSE_MODE = \"response_mode\";\r\nconst GRANT_TYPE = \"grant_type\";\r\nconst CLAIMS = \"claims\";\r\nconst SCOPE = \"scope\";\r\nconst ERROR = \"error\";\r\nconst ERROR_DESCRIPTION = \"error_description\";\r\nconst ACCESS_TOKEN = \"access_token\";\r\nconst ID_TOKEN = \"id_token\";\r\nconst REFRESH_TOKEN = \"refresh_token\";\r\nconst EXPIRES_IN = \"expires_in\";\r\nconst REFRESH_TOKEN_EXPIRES_IN = \"refresh_token_expires_in\";\r\nconst STATE = \"state\";\r\nconst NONCE = \"nonce\";\r\nconst PROMPT = \"prompt\";\r\nconst SESSION_STATE = \"session_state\";\r\nconst CLIENT_INFO = \"client_info\";\r\nconst CODE = \"code\";\r\nconst CODE_CHALLENGE = \"code_challenge\";\r\nconst CODE_CHALLENGE_METHOD = \"code_challenge_method\";\r\nconst CODE_VERIFIER = \"code_verifier\";\r\nconst CLIENT_REQUEST_ID = \"client-request-id\";\r\nconst X_CLIENT_SKU = \"x-client-SKU\";\r\nconst X_CLIENT_VER = \"x-client-VER\";\r\nconst X_CLIENT_OS = \"x-client-OS\";\r\nconst X_CLIENT_CPU = \"x-client-CPU\";\r\nconst X_CLIENT_CURR_TELEM = \"x-client-current-telemetry\";\r\nconst X_CLIENT_LAST_TELEM = \"x-client-last-telemetry\";\r\nconst X_MS_LIB_CAPABILITY = \"x-ms-lib-capability\";\r\nconst X_APP_NAME = \"x-app-name\";\r\nconst X_APP_VER = \"x-app-ver\";\r\nconst POST_LOGOUT_URI = \"post_logout_redirect_uri\";\r\nconst ID_TOKEN_HINT = \"id_token_hint\";\r\nconst DEVICE_CODE = \"device_code\";\r\nconst CLIENT_SECRET = \"client_secret\";\r\nconst CLIENT_ASSERTION = \"client_assertion\";\r\nconst CLIENT_ASSERTION_TYPE = \"client_assertion_type\";\r\nconst TOKEN_TYPE = \"token_type\";\r\nconst REQ_CNF = \"req_cnf\";\r\nconst OBO_ASSERTION = \"assertion\";\r\nconst REQUESTED_TOKEN_USE = \"requested_token_use\";\r\nconst ON_BEHALF_OF = \"on_behalf_of\";\r\nconst FOCI = \"foci\";\r\nconst CCS_HEADER = \"X-AnchorMailbox\";\r\nconst RETURN_SPA_CODE = \"return_spa_code\";\r\nconst NATIVE_BROKER = \"nativebroker\";\r\nconst LOGOUT_HINT = \"logout_hint\";\r\nconst SID = \"sid\";\r\nconst LOGIN_HINT = \"login_hint\";\r\nconst DOMAIN_HINT = \"domain_hint\";\r\nconst X_CLIENT_EXTRA_SKU = \"x-client-xtra-sku\";\r\nconst BROKER_CLIENT_ID = \"brk_client_id\";\r\nconst BROKER_REDIRECT_URI = \"brk_redirect_uri\";\r\n\r\nexport { ACCESS_TOKEN, BROKER_CLIENT_ID, BROKER_REDIRECT_URI, CCS_HEADER, CLAIMS, CLIENT_ASSERTION, CLIENT_ASSERTION_TYPE, CLIENT_ID, CLIENT_INFO, CLIENT_REQUEST_ID, CLIENT_SECRET, CODE, CODE_CHALLENGE, CODE_CHALLENGE_METHOD, CODE_VERIFIER, DEVICE_CODE, DOMAIN_HINT, ERROR, ERROR_DESCRIPTION, EXPIRES_IN, FOCI, GRANT_TYPE, ID_TOKEN, ID_TOKEN_HINT, LOGIN_HINT, LOGOUT_HINT, NATIVE_BROKER, NONCE, OBO_ASSERTION, ON_BEHALF_OF, POST_LOGOUT_URI, PROMPT, REDIRECT_URI, REFRESH_TOKEN, REFRESH_TOKEN_EXPIRES_IN, REQUESTED_TOKEN_USE, REQ_CNF, RESPONSE_MODE, RESPONSE_TYPE, RETURN_SPA_CODE, SCOPE, SESSION_STATE, SID, STATE, TOKEN_TYPE, X_APP_NAME, X_APP_VER, X_CLIENT_CPU, X_CLIENT_CURR_TELEM, X_CLIENT_EXTRA_SKU, X_CLIENT_LAST_TELEM, X_CLIENT_OS, X_CLIENT_SKU, X_CLIENT_VER, X_MS_LIB_CAPABILITY };\r\n//# sourceMappingURL=AADServerParamKeys.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { CodeChallengeMethodValues, PromptValue } from '../utils/Constants.mjs';\r\nimport { redirectUriEmpty, invalidPromptValue, invalidClaims, pkceParamsMissing, invalidCodeChallengeMethod } from '../error/ClientConfigurationErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Validates server consumable params from the \"request\" objects\r\n */\r\nclass RequestValidator {\r\n    /**\r\n     * Utility to check if the `redirectUri` in the request is a non-null value\r\n     * @param redirectUri\r\n     */\r\n    static validateRedirectUri(redirectUri) {\r\n        if (!redirectUri) {\r\n            throw createClientConfigurationError(redirectUriEmpty);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate prompt sent by the user in the request\r\n     * @param prompt\r\n     */\r\n    static validatePrompt(prompt) {\r\n        const promptValues = [];\r\n        for (const value in PromptValue) {\r\n            promptValues.push(PromptValue[value]);\r\n        }\r\n        if (promptValues.indexOf(prompt) < 0) {\r\n            throw createClientConfigurationError(invalidPromptValue);\r\n        }\r\n    }\r\n    static validateClaims(claims) {\r\n        try {\r\n            JSON.parse(claims);\r\n        }\r\n        catch (e) {\r\n            throw createClientConfigurationError(invalidClaims);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate code_challenge and code_challenge_method\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeParams(codeChallenge, codeChallengeMethod) {\r\n        if (!codeChallenge || !codeChallengeMethod) {\r\n            throw createClientConfigurationError(pkceParamsMissing);\r\n        }\r\n        else {\r\n            this.validateCodeChallengeMethod(codeChallengeMethod);\r\n        }\r\n    }\r\n    /**\r\n     * Utility to validate code_challenge_method\r\n     * @param codeChallengeMethod\r\n     */\r\n    static validateCodeChallengeMethod(codeChallengeMethod) {\r\n        if ([\r\n            CodeChallengeMethodValues.PLAIN,\r\n            CodeChallengeMethodValues.S256,\r\n        ].indexOf(codeChallengeMethod) < 0) {\r\n            throw createClientConfigurationError(invalidCodeChallengeMethod);\r\n        }\r\n    }\r\n}\r\n\r\nexport { RequestValidator };\r\n//# sourceMappingURL=RequestValidator.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Constants, ResponseMode, OIDC_DEFAULT_SCOPES, HeaderNames, CLIENT_INFO, ClaimsRequestKeys, PasswordGrantConstants, AuthenticationScheme, ThrottlingConstants } from '../utils/Constants.mjs';\r\nimport { RESPONSE_TYPE, RESPONSE_MODE, NATIVE_BROKER, SCOPE, CLIENT_ID, REDIRECT_URI, POST_LOGOUT_URI, ID_TOKEN_HINT, DOMAIN_HINT, LOGIN_HINT, SID, CLAIMS, CLIENT_REQUEST_ID, X_CLIENT_SKU, X_CLIENT_VER, X_CLIENT_OS, X_CLIENT_CPU, X_APP_NAME, X_APP_VER, PROMPT, STATE, NONCE, CODE_CHALLENGE, CODE_CHALLENGE_METHOD, CODE, DEVICE_CODE, REFRESH_TOKEN, CODE_VERIFIER, CLIENT_SECRET, CLIENT_ASSERTION, CLIENT_ASSERTION_TYPE, OBO_ASSERTION, REQUESTED_TOKEN_USE, GRANT_TYPE, TOKEN_TYPE, REQ_CNF, X_CLIENT_CURR_TELEM, X_CLIENT_LAST_TELEM, X_MS_LIB_CAPABILITY, LOGOUT_HINT, BROKER_CLIENT_ID, BROKER_REDIRECT_URI } from '../constants/AADServerParamKeys.mjs';\r\nimport { ScopeSet } from './ScopeSet.mjs';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { RequestValidator } from './RequestValidator.mjs';\r\nimport { pkceParamsMissing, invalidClaims } from '../error/ClientConfigurationErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction instrumentBrokerParams(parameters, correlationId, performanceClient) {\r\n    if (!correlationId) {\r\n        return;\r\n    }\r\n    const clientId = parameters.get(CLIENT_ID);\r\n    if (clientId && parameters.has(BROKER_CLIENT_ID)) {\r\n        performanceClient?.addFields({\r\n            embeddedClientId: clientId,\r\n            embeddedRedirectUri: parameters.get(REDIRECT_URI),\r\n        }, correlationId);\r\n    }\r\n}\r\n/** @internal */\r\nclass RequestParameterBuilder {\r\n    constructor(correlationId, performanceClient) {\r\n        this.parameters = new Map();\r\n        this.performanceClient = performanceClient;\r\n        this.correlationId = correlationId;\r\n    }\r\n    /**\r\n     * add response_type = code\r\n     */\r\n    addResponseTypeCode() {\r\n        this.parameters.set(RESPONSE_TYPE, encodeURIComponent(Constants.CODE_RESPONSE_TYPE));\r\n    }\r\n    /**\r\n     * add response_type = token id_token\r\n     */\r\n    addResponseTypeForTokenAndIdToken() {\r\n        this.parameters.set(RESPONSE_TYPE, encodeURIComponent(`${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`));\r\n    }\r\n    /**\r\n     * add response_mode. defaults to query.\r\n     * @param responseMode\r\n     */\r\n    addResponseMode(responseMode) {\r\n        this.parameters.set(RESPONSE_MODE, encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY));\r\n    }\r\n    /**\r\n     * Add flag to indicate STS should attempt to use WAM if available\r\n     */\r\n    addNativeBroker() {\r\n        this.parameters.set(NATIVE_BROKER, encodeURIComponent(\"1\"));\r\n    }\r\n    /**\r\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\r\n     * @param scopeSet\r\n     * @param addOidcScopes\r\n     */\r\n    addScopes(scopes, addOidcScopes = true, defaultScopes = OIDC_DEFAULT_SCOPES) {\r\n        // Always add openid to the scopes when adding OIDC scopes\r\n        if (addOidcScopes &&\r\n            !defaultScopes.includes(\"openid\") &&\r\n            !scopes.includes(\"openid\")) {\r\n            defaultScopes.push(\"openid\");\r\n        }\r\n        const requestScopes = addOidcScopes\r\n            ? [...(scopes || []), ...defaultScopes]\r\n            : scopes || [];\r\n        const scopeSet = new ScopeSet(requestScopes);\r\n        this.parameters.set(SCOPE, encodeURIComponent(scopeSet.printScopes()));\r\n    }\r\n    /**\r\n     * add clientId\r\n     * @param clientId\r\n     */\r\n    addClientId(clientId) {\r\n        this.parameters.set(CLIENT_ID, encodeURIComponent(clientId));\r\n    }\r\n    /**\r\n     * add redirect_uri\r\n     * @param redirectUri\r\n     */\r\n    addRedirectUri(redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(REDIRECT_URI, encodeURIComponent(redirectUri));\r\n    }\r\n    /**\r\n     * add post logout redirectUri\r\n     * @param redirectUri\r\n     */\r\n    addPostLogoutRedirectUri(redirectUri) {\r\n        RequestValidator.validateRedirectUri(redirectUri);\r\n        this.parameters.set(POST_LOGOUT_URI, encodeURIComponent(redirectUri));\r\n    }\r\n    /**\r\n     * add id_token_hint to logout request\r\n     * @param idTokenHint\r\n     */\r\n    addIdTokenHint(idTokenHint) {\r\n        this.parameters.set(ID_TOKEN_HINT, encodeURIComponent(idTokenHint));\r\n    }\r\n    /**\r\n     * add domain_hint\r\n     * @param domainHint\r\n     */\r\n    addDomainHint(domainHint) {\r\n        this.parameters.set(DOMAIN_HINT, encodeURIComponent(domainHint));\r\n    }\r\n    /**\r\n     * add login_hint\r\n     * @param loginHint\r\n     */\r\n    addLoginHint(loginHint) {\r\n        this.parameters.set(LOGIN_HINT, encodeURIComponent(loginHint));\r\n    }\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\r\n     * @param loginHint\r\n     */\r\n    addCcsUpn(loginHint) {\r\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`UPN:${loginHint}`));\r\n    }\r\n    /**\r\n     * Adds the CCS (Cache Credential Service) query parameter for account object\r\n     * @param loginHint\r\n     */\r\n    addCcsOid(clientInfo) {\r\n        this.parameters.set(HeaderNames.CCS_HEADER, encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`));\r\n    }\r\n    /**\r\n     * add sid\r\n     * @param sid\r\n     */\r\n    addSid(sid) {\r\n        this.parameters.set(SID, encodeURIComponent(sid));\r\n    }\r\n    /**\r\n     * add claims\r\n     * @param claims\r\n     */\r\n    addClaims(claims, clientCapabilities) {\r\n        const mergedClaims = this.addClientCapabilitiesToClaims(claims, clientCapabilities);\r\n        RequestValidator.validateClaims(mergedClaims);\r\n        this.parameters.set(CLAIMS, encodeURIComponent(mergedClaims));\r\n    }\r\n    /**\r\n     * add correlationId\r\n     * @param correlationId\r\n     */\r\n    addCorrelationId(correlationId) {\r\n        this.parameters.set(CLIENT_REQUEST_ID, encodeURIComponent(correlationId));\r\n    }\r\n    /**\r\n     * add library info query params\r\n     * @param libraryInfo\r\n     */\r\n    addLibraryInfo(libraryInfo) {\r\n        // Telemetry Info\r\n        this.parameters.set(X_CLIENT_SKU, libraryInfo.sku);\r\n        this.parameters.set(X_CLIENT_VER, libraryInfo.version);\r\n        if (libraryInfo.os) {\r\n            this.parameters.set(X_CLIENT_OS, libraryInfo.os);\r\n        }\r\n        if (libraryInfo.cpu) {\r\n            this.parameters.set(X_CLIENT_CPU, libraryInfo.cpu);\r\n        }\r\n    }\r\n    /**\r\n     * Add client telemetry parameters\r\n     * @param appTelemetry\r\n     */\r\n    addApplicationTelemetry(appTelemetry) {\r\n        if (appTelemetry?.appName) {\r\n            this.parameters.set(X_APP_NAME, appTelemetry.appName);\r\n        }\r\n        if (appTelemetry?.appVersion) {\r\n            this.parameters.set(X_APP_VER, appTelemetry.appVersion);\r\n        }\r\n    }\r\n    /**\r\n     * add prompt\r\n     * @param prompt\r\n     */\r\n    addPrompt(prompt) {\r\n        RequestValidator.validatePrompt(prompt);\r\n        this.parameters.set(`${PROMPT}`, encodeURIComponent(prompt));\r\n    }\r\n    /**\r\n     * add state\r\n     * @param state\r\n     */\r\n    addState(state) {\r\n        if (state) {\r\n            this.parameters.set(STATE, encodeURIComponent(state));\r\n        }\r\n    }\r\n    /**\r\n     * add nonce\r\n     * @param nonce\r\n     */\r\n    addNonce(nonce) {\r\n        this.parameters.set(NONCE, encodeURIComponent(nonce));\r\n    }\r\n    /**\r\n     * add code_challenge and code_challenge_method\r\n     * - throw if either of them are not passed\r\n     * @param codeChallenge\r\n     * @param codeChallengeMethod\r\n     */\r\n    addCodeChallengeParams(codeChallenge, codeChallengeMethod) {\r\n        RequestValidator.validateCodeChallengeParams(codeChallenge, codeChallengeMethod);\r\n        if (codeChallenge && codeChallengeMethod) {\r\n            this.parameters.set(CODE_CHALLENGE, encodeURIComponent(codeChallenge));\r\n            this.parameters.set(CODE_CHALLENGE_METHOD, encodeURIComponent(codeChallengeMethod));\r\n        }\r\n        else {\r\n            throw createClientConfigurationError(pkceParamsMissing);\r\n        }\r\n    }\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addAuthorizationCode(code) {\r\n        this.parameters.set(CODE, encodeURIComponent(code));\r\n    }\r\n    /**\r\n     * add the `authorization_code` passed by the user to exchange for a token\r\n     * @param code\r\n     */\r\n    addDeviceCode(code) {\r\n        this.parameters.set(DEVICE_CODE, encodeURIComponent(code));\r\n    }\r\n    /**\r\n     * add the `refreshToken` passed by the user\r\n     * @param refreshToken\r\n     */\r\n    addRefreshToken(refreshToken) {\r\n        this.parameters.set(REFRESH_TOKEN, encodeURIComponent(refreshToken));\r\n    }\r\n    /**\r\n     * add the `code_verifier` passed by the user to exchange for a token\r\n     * @param codeVerifier\r\n     */\r\n    addCodeVerifier(codeVerifier) {\r\n        this.parameters.set(CODE_VERIFIER, encodeURIComponent(codeVerifier));\r\n    }\r\n    /**\r\n     * add client_secret\r\n     * @param clientSecret\r\n     */\r\n    addClientSecret(clientSecret) {\r\n        this.parameters.set(CLIENT_SECRET, encodeURIComponent(clientSecret));\r\n    }\r\n    /**\r\n     * add clientAssertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addClientAssertion(clientAssertion) {\r\n        if (clientAssertion) {\r\n            this.parameters.set(CLIENT_ASSERTION, encodeURIComponent(clientAssertion));\r\n        }\r\n    }\r\n    /**\r\n     * add clientAssertionType for confidential client flows\r\n     * @param clientAssertionType\r\n     */\r\n    addClientAssertionType(clientAssertionType) {\r\n        if (clientAssertionType) {\r\n            this.parameters.set(CLIENT_ASSERTION_TYPE, encodeURIComponent(clientAssertionType));\r\n        }\r\n    }\r\n    /**\r\n     * add OBO assertion for confidential client flows\r\n     * @param clientAssertion\r\n     */\r\n    addOboAssertion(oboAssertion) {\r\n        this.parameters.set(OBO_ASSERTION, encodeURIComponent(oboAssertion));\r\n    }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addRequestTokenUse(tokenUse) {\r\n        this.parameters.set(REQUESTED_TOKEN_USE, encodeURIComponent(tokenUse));\r\n    }\r\n    /**\r\n     * add grant type\r\n     * @param grantType\r\n     */\r\n    addGrantType(grantType) {\r\n        this.parameters.set(GRANT_TYPE, encodeURIComponent(grantType));\r\n    }\r\n    /**\r\n     * add client info\r\n     *\r\n     */\r\n    addClientInfo() {\r\n        this.parameters.set(CLIENT_INFO, \"1\");\r\n    }\r\n    /**\r\n     * add extraQueryParams\r\n     * @param eQParams\r\n     */\r\n    addExtraQueryParameters(eQParams) {\r\n        Object.entries(eQParams).forEach(([key, value]) => {\r\n            if (!this.parameters.has(key) && value) {\r\n                this.parameters.set(key, value);\r\n            }\r\n        });\r\n    }\r\n    addClientCapabilitiesToClaims(claims, clientCapabilities) {\r\n        let mergedClaims;\r\n        // Parse provided claims into JSON object or initialize empty object\r\n        if (!claims) {\r\n            mergedClaims = {};\r\n        }\r\n        else {\r\n            try {\r\n                mergedClaims = JSON.parse(claims);\r\n            }\r\n            catch (e) {\r\n                throw createClientConfigurationError(invalidClaims);\r\n            }\r\n        }\r\n        if (clientCapabilities && clientCapabilities.length > 0) {\r\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\r\n                // Add access_token key to claims object\r\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\r\n            }\r\n            // Add xms_cc claim with provided clientCapabilities to access_token key\r\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][ClaimsRequestKeys.XMS_CC] = {\r\n                values: clientCapabilities,\r\n            };\r\n        }\r\n        return JSON.stringify(mergedClaims);\r\n    }\r\n    /**\r\n     * adds `username` for Password Grant flow\r\n     * @param username\r\n     */\r\n    addUsername(username) {\r\n        this.parameters.set(PasswordGrantConstants.username, encodeURIComponent(username));\r\n    }\r\n    /**\r\n     * adds `password` for Password Grant flow\r\n     * @param password\r\n     */\r\n    addPassword(password) {\r\n        this.parameters.set(PasswordGrantConstants.password, encodeURIComponent(password));\r\n    }\r\n    /**\r\n     * add pop_jwk to query params\r\n     * @param cnfString\r\n     */\r\n    addPopToken(cnfString) {\r\n        if (cnfString) {\r\n            this.parameters.set(TOKEN_TYPE, AuthenticationScheme.POP);\r\n            this.parameters.set(REQ_CNF, encodeURIComponent(cnfString));\r\n        }\r\n    }\r\n    /**\r\n     * add SSH JWK and key ID to query params\r\n     */\r\n    addSshJwk(sshJwkString) {\r\n        if (sshJwkString) {\r\n            this.parameters.set(TOKEN_TYPE, AuthenticationScheme.SSH);\r\n            this.parameters.set(REQ_CNF, encodeURIComponent(sshJwkString));\r\n        }\r\n    }\r\n    /**\r\n     * add server telemetry fields\r\n     * @param serverTelemetryManager\r\n     */\r\n    addServerTelemetry(serverTelemetryManager) {\r\n        this.parameters.set(X_CLIENT_CURR_TELEM, serverTelemetryManager.generateCurrentRequestHeaderValue());\r\n        this.parameters.set(X_CLIENT_LAST_TELEM, serverTelemetryManager.generateLastRequestHeaderValue());\r\n    }\r\n    /**\r\n     * Adds parameter that indicates to the server that throttling is supported\r\n     */\r\n    addThrottling() {\r\n        this.parameters.set(X_MS_LIB_CAPABILITY, ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE);\r\n    }\r\n    /**\r\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\r\n     */\r\n    addLogoutHint(logoutHint) {\r\n        this.parameters.set(LOGOUT_HINT, encodeURIComponent(logoutHint));\r\n    }\r\n    addBrokerParameters(params) {\r\n        const brokerParams = {};\r\n        brokerParams[BROKER_CLIENT_ID] =\r\n            params.brokerClientId;\r\n        brokerParams[BROKER_REDIRECT_URI] =\r\n            params.brokerRedirectUri;\r\n        this.addExtraQueryParameters(brokerParams);\r\n    }\r\n    /**\r\n     * Utility to create a URL from the params map\r\n     */\r\n    createQueryString() {\r\n        const queryParameterArray = new Array();\r\n        this.parameters.forEach((value, key) => {\r\n            queryParameterArray.push(`${key}=${value}`);\r\n        });\r\n        instrumentBrokerParams(this.parameters, this.correlationId, this.performanceClient);\r\n        return queryParameterArray.join(\"&\");\r\n    }\r\n}\r\n\r\nexport { RequestParameterBuilder };\r\n//# sourceMappingURL=RequestParameterBuilder.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { Authority, formatAuthorityUri } from './Authority.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\nimport { endpointResolutionError } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Create an authority object of the correct type based on the url\r\n * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\r\n *\r\n * Also performs endpoint discovery.\r\n *\r\n * @param authorityUri\r\n * @param networkClient\r\n * @param protocolMode\r\n * @internal\r\n */\r\nasync function createDiscoveredInstance(authorityUri, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient) {\r\n    performanceClient?.addQueueMeasurement(PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, correlationId);\r\n    const authorityUriFinal = Authority.transformCIAMAuthority(formatAuthorityUri(authorityUri));\r\n    // Initialize authority and perform discovery endpoint check.\r\n    const acquireTokenAuthority = new Authority(authorityUriFinal, networkClient, cacheManager, authorityOptions, logger, correlationId, performanceClient);\r\n    try {\r\n        await invokeAsync(acquireTokenAuthority.resolveEndpointsAsync.bind(acquireTokenAuthority), PerformanceEvents.AuthorityResolveEndpointsAsync, logger, performanceClient, correlationId)();\r\n        return acquireTokenAuthority;\r\n    }\r\n    catch (e) {\r\n        throw createClientAuthError(endpointResolutionError);\r\n    }\r\n}\r\n\r\nexport { createDiscoveredInstance };\r\n//# sourceMappingURL=AuthorityFactory.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { buildClientConfiguration } from '../config/ClientConfiguration.mjs';\r\nimport { Logger } from '../logger/Logger.mjs';\r\nimport { HeaderNames, Constants } from '../utils/Constants.mjs';\r\nimport { name, version } from '../packageMetadata.mjs';\r\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\r\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\r\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.mjs';\r\nimport { createDiscoveredInstance } from '../authority/AuthorityFactory.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { ThrottlingUtils } from '../network/ThrottlingUtils.mjs';\r\nimport { AuthError } from '../error/AuthError.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { NetworkError } from '../error/NetworkError.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\nimport { networkError } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\r\n * @internal\r\n */\r\nclass BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        // Set the configuration\r\n        this.config = buildClientConfiguration(configuration);\r\n        // Initialize the logger\r\n        this.logger = new Logger(this.config.loggerOptions, name, version);\r\n        // Initialize crypto\r\n        this.cryptoUtils = this.config.cryptoInterface;\r\n        // Initialize storage interface\r\n        this.cacheManager = this.config.storageInterface;\r\n        // Set the network interface\r\n        this.networkClient = this.config.networkInterface;\r\n        // Set TelemetryManager\r\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\r\n        // set Authority\r\n        this.authority = this.config.authOptions.authority;\r\n        // set performance telemetry client\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Creates default headers for requests to token endpoint\r\n     */\r\n    createTokenRequestHeaders(ccsCred) {\r\n        const headers = {};\r\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\r\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\r\n                        headers[HeaderNames.CCS_HEADER] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    headers[HeaderNames.CCS_HEADER] = `UPN: ${ccsCred.credential}`;\r\n                    break;\r\n            }\r\n        }\r\n        return headers;\r\n    }\r\n    /**\r\n     * Http post to token endpoint\r\n     * @param tokenEndpoint\r\n     * @param queryString\r\n     * @param headers\r\n     * @param thumbprint\r\n     */\r\n    async executePostToTokenEndpoint(tokenEndpoint, queryString, headers, thumbprint, correlationId, queuedEvent) {\r\n        if (queuedEvent) {\r\n            this.performanceClient?.addQueueMeasurement(queuedEvent, correlationId);\r\n        }\r\n        const response = await this.sendPostRequest(thumbprint, tokenEndpoint, { body: queryString, headers: headers }, correlationId);\r\n        if (this.config.serverTelemetryManager &&\r\n            response.status < 500 &&\r\n            response.status !== 429) {\r\n            // Telemetry data successfully logged by server, clear Telemetry cache\r\n            this.config.serverTelemetryManager.clearTelemetryCache();\r\n        }\r\n        return response;\r\n    }\r\n    /**\r\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\r\n     * @param thumbprint - Request thumbprint for throttling\r\n     * @param tokenEndpoint - Endpoint to make the POST to\r\n     * @param options - Body and Headers to include on the POST request\r\n     * @param correlationId - CorrelationId for telemetry\r\n     */\r\n    async sendPostRequest(thumbprint, tokenEndpoint, options, correlationId) {\r\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\r\n        let response;\r\n        try {\r\n            response = await invokeAsync((this.networkClient.sendPostRequestAsync.bind(this.networkClient)), PerformanceEvents.NetworkClientSendPostRequestAsync, this.logger, this.performanceClient, correlationId)(tokenEndpoint, options);\r\n            const responseHeaders = response.headers || {};\r\n            this.performanceClient?.addFields({\r\n                refreshTokenSize: response.body.refresh_token?.length || 0,\r\n                httpVerToken: responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                requestId: responseHeaders[HeaderNames.X_MS_REQUEST_ID] || \"\",\r\n            }, correlationId);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof NetworkError) {\r\n                const responseHeaders = e.responseHeaders;\r\n                if (responseHeaders) {\r\n                    this.performanceClient?.addFields({\r\n                        httpVerToken: responseHeaders[HeaderNames.X_MS_HTTP_VERSION] || \"\",\r\n                        requestId: responseHeaders[HeaderNames.X_MS_REQUEST_ID] ||\r\n                            \"\",\r\n                        contentTypeHeader: responseHeaders[HeaderNames.CONTENT_TYPE] ||\r\n                            undefined,\r\n                        contentLengthHeader: responseHeaders[HeaderNames.CONTENT_LENGTH] ||\r\n                            undefined,\r\n                        httpStatus: e.httpStatus,\r\n                    }, correlationId);\r\n                }\r\n                throw e.error;\r\n            }\r\n            if (e instanceof AuthError) {\r\n                throw e;\r\n            }\r\n            else {\r\n                throw createClientAuthError(networkError);\r\n            }\r\n        }\r\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\r\n        return response;\r\n    }\r\n    /**\r\n     * Updates the authority object of the client. Endpoint discovery must be completed.\r\n     * @param updatedAuthority\r\n     */\r\n    async updateAuthority(cloudInstanceHostname, correlationId) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.UpdateTokenEndpointAuthority, correlationId);\r\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${this.authority.tenant}/`;\r\n        const cloudInstanceAuthority = await createDiscoveredInstance(cloudInstanceAuthorityUri, this.networkClient, this.cacheManager, this.authority.options, this.logger, correlationId, this.performanceClient);\r\n        this.authority = cloudInstanceAuthority;\r\n    }\r\n    /**\r\n     * Creates query string for the /token request\r\n     * @param request\r\n     */\r\n    createTokenQueryParameters(request) {\r\n        const parameterBuilder = new RequestParameterBuilder(request.correlationId, this.performanceClient);\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        if (request.tokenQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenQueryParameters);\r\n        }\r\n        parameterBuilder.addCorrelationId(request.correlationId);\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\r\n\r\nexport { BaseClient };\r\n//# sourceMappingURL=BaseClient.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { nowSeconds } from '../utils/TimeUtils.mjs';\r\nimport { UrlString } from '../url/UrlString.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst KeyLocation = {\r\n    SW: \"sw\",\r\n    UHW: \"uhw\",\r\n};\r\n/** @internal */\r\nclass PopTokenGenerator {\r\n    constructor(cryptoUtils, performanceClient) {\r\n        this.cryptoUtils = cryptoUtils;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\r\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateCnf(request, logger) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateCnf, request.correlationId);\r\n        const reqCnf = await invokeAsync(this.generateKid.bind(this), PerformanceEvents.PopTokenGenerateCnf, logger, this.performanceClient, request.correlationId)(request);\r\n        const reqCnfString = this.cryptoUtils.base64UrlEncode(JSON.stringify(reqCnf));\r\n        return {\r\n            kid: reqCnf.kid,\r\n            reqCnfString,\r\n        };\r\n    }\r\n    /**\r\n     * Generates key_id for a SHR token request\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async generateKid(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.PopTokenGenerateKid, request.correlationId);\r\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(request);\r\n        return {\r\n            kid: kidThumbprint,\r\n            xms_ksl: KeyLocation.SW,\r\n        };\r\n    }\r\n    /**\r\n     * Signs the POP access_token with the local generated key-pair\r\n     * @param accessToken\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async signPopToken(accessToken, keyId, request) {\r\n        return this.signPayload(accessToken, keyId, request);\r\n    }\r\n    /**\r\n     * Utility function to generate the signed JWT for an access_token\r\n     * @param payload\r\n     * @param kid\r\n     * @param request\r\n     * @param claims\r\n     * @returns\r\n     */\r\n    async signPayload(payload, keyId, request, claims) {\r\n        // Deconstruct request to extract SHR parameters\r\n        const { resourceRequestMethod, resourceRequestUri, shrClaims, shrNonce, shrOptions, } = request;\r\n        const resourceUrlString = resourceRequestUri\r\n            ? new UrlString(resourceRequestUri)\r\n            : undefined;\r\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\r\n        return this.cryptoUtils.signJwt({\r\n            at: payload,\r\n            ts: nowSeconds(),\r\n            m: resourceRequestMethod?.toUpperCase(),\r\n            u: resourceUrlComponents?.HostNameAndPort,\r\n            nonce: shrNonce || this.cryptoUtils.createNewGuid(),\r\n            p: resourceUrlComponents?.AbsolutePath,\r\n            q: resourceUrlComponents?.QueryString\r\n                ? [[], resourceUrlComponents.QueryString]\r\n                : undefined,\r\n            client_claims: shrClaims || undefined,\r\n            ...claims,\r\n        }, keyId, shrOptions, request.correlationId);\r\n    }\r\n}\r\n\r\nexport { PopTokenGenerator };\r\n//# sourceMappingURL=PopTokenGenerator.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * This class instance helps track the memory changes facilitating\r\n * decisions to read from and write to the persistent cache\r\n */ class TokenCacheContext {\r\n    constructor(tokenCache, hasChanged) {\r\n        this.cache = tokenCache;\r\n        this.hasChanged = hasChanged;\r\n    }\r\n    /**\r\n     * boolean which indicates the changes in cache\r\n     */\r\n    get cacheHasChanged() {\r\n        return this.hasChanged;\r\n    }\r\n    /**\r\n     * function to retrieve the token cache\r\n     */\r\n    get tokenCache() {\r\n        return this.cache;\r\n    }\r\n}\r\n\r\nexport { TokenCacheContext };\r\n//# sourceMappingURL=TokenCacheContext.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { ServerError } from '../error/ServerError.mjs';\r\nimport { ScopeSet } from '../request/ScopeSet.mjs';\r\nimport { AccountEntity } from '../cache/entities/AccountEntity.mjs';\r\nimport { isInteractionRequiredError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\r\nimport { ProtocolUtils } from '../utils/ProtocolUtils.mjs';\r\nimport { HttpStatus, Constants, AuthenticationScheme, THE_FAMILY_ID } from '../utils/Constants.mjs';\r\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\r\nimport { TokenCacheContext } from '../cache/persistence/TokenCacheContext.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { extractTokenClaims, checkMaxAge } from '../account/AuthToken.mjs';\r\nimport { getTenantIdFromIdTokenClaims } from '../account/TokenClaims.mjs';\r\nimport { updateAccountTenantProfileData, buildTenantProfile } from '../account/AccountInfo.mjs';\r\nimport { createAccessTokenEntity, createRefreshTokenEntity, createIdTokenEntity } from '../cache/utils/CacheHelpers.mjs';\r\nimport { toDateFromSeconds } from '../utils/TimeUtils.mjs';\r\nimport { stateNotFound, invalidState, stateMismatch, nonceMismatch, authTimeNotFound, invalidCacheEnvironment, keyIdMissing } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction parseServerErrorNo(serverResponse) {\r\n    const errorCodePrefix = \"code=\";\r\n    const errorCodePrefixIndex = serverResponse.error_uri?.lastIndexOf(errorCodePrefix);\r\n    return errorCodePrefixIndex && errorCodePrefixIndex >= 0\r\n        ? serverResponse.error_uri?.substring(errorCodePrefixIndex + errorCodePrefix.length)\r\n        : undefined;\r\n}\r\n/**\r\n * Class that handles response parsing.\r\n * @internal\r\n */\r\nclass ResponseHandler {\r\n    constructor(clientId, cacheStorage, cryptoObj, logger, serializableCache, persistencePlugin, performanceClient) {\r\n        this.clientId = clientId;\r\n        this.cacheStorage = cacheStorage;\r\n        this.cryptoObj = cryptoObj;\r\n        this.logger = logger;\r\n        this.serializableCache = serializableCache;\r\n        this.persistencePlugin = persistencePlugin;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function which validates server authorization code response.\r\n     * @param serverResponseHash\r\n     * @param requestState\r\n     * @param cryptoObj\r\n     */\r\n    validateServerAuthorizationCodeResponse(serverResponse, requestState) {\r\n        if (!serverResponse.state || !requestState) {\r\n            throw serverResponse.state\r\n                ? createClientAuthError(stateNotFound, \"Cached State\")\r\n                : createClientAuthError(stateNotFound, \"Server State\");\r\n        }\r\n        let decodedServerResponseState;\r\n        let decodedRequestState;\r\n        try {\r\n            decodedServerResponseState = decodeURIComponent(serverResponse.state);\r\n        }\r\n        catch (e) {\r\n            throw createClientAuthError(invalidState, serverResponse.state);\r\n        }\r\n        try {\r\n            decodedRequestState = decodeURIComponent(requestState);\r\n        }\r\n        catch (e) {\r\n            throw createClientAuthError(invalidState, serverResponse.state);\r\n        }\r\n        if (decodedServerResponseState !== decodedRequestState) {\r\n            throw createClientAuthError(stateMismatch);\r\n        }\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const serverErrorNo = parseServerErrorNo(serverResponse);\r\n            if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || \"\", serverResponse.trace_id || \"\", serverResponse.correlation_id || \"\", serverResponse.claims || \"\", serverErrorNo);\r\n            }\r\n            throw new ServerError(serverResponse.error || \"\", serverResponse.error_description, serverResponse.suberror, serverErrorNo);\r\n        }\r\n    }\r\n    /**\r\n     * Function which validates server authorization token response.\r\n     * @param serverResponse\r\n     * @param refreshAccessToken\r\n     */\r\n    validateTokenResponse(serverResponse, refreshAccessToken) {\r\n        // Check for error\r\n        if (serverResponse.error ||\r\n            serverResponse.error_description ||\r\n            serverResponse.suberror) {\r\n            const errString = `Error(s): ${serverResponse.error_codes || Constants.NOT_AVAILABLE} - Timestamp: ${serverResponse.timestamp || Constants.NOT_AVAILABLE} - Description: ${serverResponse.error_description || Constants.NOT_AVAILABLE} - Correlation ID: ${serverResponse.correlation_id || Constants.NOT_AVAILABLE} - Trace ID: ${serverResponse.trace_id || Constants.NOT_AVAILABLE}`;\r\n            const serverErrorNo = serverResponse.error_codes?.length\r\n                ? serverResponse.error_codes[0]\r\n                : undefined;\r\n            const serverError = new ServerError(serverResponse.error, errString, serverResponse.suberror, serverErrorNo, serverResponse.status);\r\n            // check if 500 error\r\n            if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\r\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n                // check if 400 error\r\n            }\r\n            else if (refreshAccessToken &&\r\n                serverResponse.status &&\r\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\r\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END) {\r\n                this.logger.warning(`executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`);\r\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\r\n                return;\r\n            }\r\n            if (isInteractionRequiredError(serverResponse.error, serverResponse.error_description, serverResponse.suberror)) {\r\n                throw new InteractionRequiredAuthError(serverResponse.error, serverResponse.error_description, serverResponse.suberror, serverResponse.timestamp || Constants.EMPTY_STRING, serverResponse.trace_id || Constants.EMPTY_STRING, serverResponse.correlation_id || Constants.EMPTY_STRING, serverResponse.claims || Constants.EMPTY_STRING, serverErrorNo);\r\n            }\r\n            throw serverError;\r\n        }\r\n    }\r\n    /**\r\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\r\n     * @param serverTokenResponse\r\n     * @param authority\r\n     */\r\n    async handleServerTokenResponse(serverTokenResponse, authority, reqTimestamp, request, authCodePayload, userAssertionHash, handlingRefreshTokenResponse, forceCacheRefreshTokenResponse, serverRequestId) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.HandleServerTokenResponse, serverTokenResponse.correlation_id);\r\n        // create an idToken object (not entity)\r\n        let idTokenClaims;\r\n        if (serverTokenResponse.id_token) {\r\n            idTokenClaims = extractTokenClaims(serverTokenResponse.id_token || Constants.EMPTY_STRING, this.cryptoObj.base64Decode);\r\n            // token nonce check (TODO: Add a warning if no nonce is given?)\r\n            if (authCodePayload && authCodePayload.nonce) {\r\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\r\n                    throw createClientAuthError(nonceMismatch);\r\n                }\r\n            }\r\n            // token max_age check\r\n            if (request.maxAge || request.maxAge === 0) {\r\n                const authTime = idTokenClaims.auth_time;\r\n                if (!authTime) {\r\n                    throw createClientAuthError(authTimeNotFound);\r\n                }\r\n                checkMaxAge(authTime, request.maxAge);\r\n            }\r\n        }\r\n        // generate homeAccountId\r\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(serverTokenResponse.client_info || Constants.EMPTY_STRING, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        // save the response tokens\r\n        let requestStateObj;\r\n        if (!!authCodePayload && !!authCodePayload.state) {\r\n            requestStateObj = ProtocolUtils.parseRequestState(this.cryptoObj, authCodePayload.state);\r\n        }\r\n        // Add keyId from request to serverTokenResponse if defined\r\n        serverTokenResponse.key_id =\r\n            serverTokenResponse.key_id || request.sshKid || undefined;\r\n        const cacheRecord = this.generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload);\r\n        let cacheContext;\r\n        try {\r\n            if (this.persistencePlugin && this.serializableCache) {\r\n                this.logger.verbose(\"Persistence enabled, calling beforeCacheAccess\");\r\n                cacheContext = new TokenCacheContext(this.serializableCache, true);\r\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\r\n            }\r\n            /*\r\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\r\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\r\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\r\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\r\n             */\r\n            if (handlingRefreshTokenResponse &&\r\n                !forceCacheRefreshTokenResponse &&\r\n                cacheRecord.account) {\r\n                const key = cacheRecord.account.generateAccountKey();\r\n                const account = this.cacheStorage.getAccount(key);\r\n                if (!account) {\r\n                    this.logger.warning(\"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\");\r\n                    return await ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, undefined, serverRequestId);\r\n                }\r\n            }\r\n            await this.cacheStorage.saveCacheRecord(cacheRecord, request.correlationId, request.storeInCache);\r\n        }\r\n        finally {\r\n            if (this.persistencePlugin &&\r\n                this.serializableCache &&\r\n                cacheContext) {\r\n                this.logger.verbose(\"Persistence enabled, calling afterCacheAccess\");\r\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\r\n            }\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoObj, authority, cacheRecord, false, request, idTokenClaims, requestStateObj, serverTokenResponse, serverRequestId);\r\n    }\r\n    /**\r\n     * Generates CacheRecord\r\n     * @param serverTokenResponse\r\n     * @param idTokenObj\r\n     * @param authority\r\n     */\r\n    generateCacheRecord(serverTokenResponse, authority, reqTimestamp, request, idTokenClaims, userAssertionHash, authCodePayload) {\r\n        const env = authority.getPreferredCache();\r\n        if (!env) {\r\n            throw createClientAuthError(invalidCacheEnvironment);\r\n        }\r\n        const claimsTenantId = getTenantIdFromIdTokenClaims(idTokenClaims);\r\n        // IdToken: non AAD scenarios can have empty realm\r\n        let cachedIdToken;\r\n        let cachedAccount;\r\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\r\n            cachedIdToken = createIdTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.id_token, this.clientId, claimsTenantId || \"\");\r\n            cachedAccount = buildAccountToCache(this.cacheStorage, authority, this.homeAccountIdentifier, this.cryptoObj.base64Decode, idTokenClaims, serverTokenResponse.client_info, env, claimsTenantId, authCodePayload, undefined, // nativeAccountId\r\n            this.logger);\r\n        }\r\n        // AccessToken\r\n        let cachedAccessToken = null;\r\n        if (serverTokenResponse.access_token) {\r\n            // If scopes not returned in server response, use request scopes\r\n            const responseScopes = serverTokenResponse.scope\r\n                ? ScopeSet.fromString(serverTokenResponse.scope)\r\n                : new ScopeSet(request.scopes || []);\r\n            /*\r\n             * Use timestamp calculated before request\r\n             * Server may return timestamps as strings, parse to numbers if so.\r\n             */\r\n            const expiresIn = (typeof serverTokenResponse.expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.expires_in, 10)\r\n                : serverTokenResponse.expires_in) || 0;\r\n            const extExpiresIn = (typeof serverTokenResponse.ext_expires_in === \"string\"\r\n                ? parseInt(serverTokenResponse.ext_expires_in, 10)\r\n                : serverTokenResponse.ext_expires_in) || 0;\r\n            const refreshIn = (typeof serverTokenResponse.refresh_in === \"string\"\r\n                ? parseInt(serverTokenResponse.refresh_in, 10)\r\n                : serverTokenResponse.refresh_in) || undefined;\r\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n            const extendedTokenExpirationSeconds = tokenExpirationSeconds + extExpiresIn;\r\n            const refreshOnSeconds = refreshIn && refreshIn > 0\r\n                ? reqTimestamp + refreshIn\r\n                : undefined;\r\n            // non AAD scenarios can have empty realm\r\n            cachedAccessToken = createAccessTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.access_token, this.clientId, claimsTenantId || authority.tenant || \"\", responseScopes.printScopes(), tokenExpirationSeconds, extendedTokenExpirationSeconds, this.cryptoObj.base64Decode, refreshOnSeconds, serverTokenResponse.token_type, userAssertionHash, serverTokenResponse.key_id, request.claims, request.requestedClaimsHash);\r\n        }\r\n        // refreshToken\r\n        let cachedRefreshToken = null;\r\n        if (serverTokenResponse.refresh_token) {\r\n            let rtExpiresOn;\r\n            if (serverTokenResponse.refresh_token_expires_in) {\r\n                const rtExpiresIn = typeof serverTokenResponse.refresh_token_expires_in ===\r\n                    \"string\"\r\n                    ? parseInt(serverTokenResponse.refresh_token_expires_in, 10)\r\n                    : serverTokenResponse.refresh_token_expires_in;\r\n                rtExpiresOn = reqTimestamp + rtExpiresIn;\r\n            }\r\n            cachedRefreshToken = createRefreshTokenEntity(this.homeAccountIdentifier, env, serverTokenResponse.refresh_token, this.clientId, serverTokenResponse.foci, userAssertionHash, rtExpiresOn);\r\n        }\r\n        // appMetadata\r\n        let cachedAppMetadata = null;\r\n        if (serverTokenResponse.foci) {\r\n            cachedAppMetadata = {\r\n                clientId: this.clientId,\r\n                environment: env,\r\n                familyId: serverTokenResponse.foci,\r\n            };\r\n        }\r\n        return {\r\n            account: cachedAccount,\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n            refreshToken: cachedRefreshToken,\r\n            appMetadata: cachedAppMetadata,\r\n        };\r\n    }\r\n    /**\r\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\r\n     *\r\n     * Optionally takes a state string that is set as-is in the response.\r\n     *\r\n     * @param cacheRecord\r\n     * @param idTokenObj\r\n     * @param fromTokenCache\r\n     * @param stateString\r\n     */\r\n    static async generateAuthenticationResult(cryptoObj, authority, cacheRecord, fromTokenCache, request, idTokenClaims, requestState, serverTokenResponse, requestId) {\r\n        let accessToken = Constants.EMPTY_STRING;\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        let refreshOn;\r\n        let familyId = Constants.EMPTY_STRING;\r\n        if (cacheRecord.accessToken) {\r\n            /*\r\n             * if the request object has `popKid` property, `signPopToken` will be set to false and\r\n             * the token will be returned unsigned\r\n             */\r\n            if (cacheRecord.accessToken.tokenType ===\r\n                AuthenticationScheme.POP &&\r\n                !request.popKid) {\r\n                const popTokenGenerator = new PopTokenGenerator(cryptoObj);\r\n                const { secret, keyId } = cacheRecord.accessToken;\r\n                if (!keyId) {\r\n                    throw createClientAuthError(keyIdMissing);\r\n                }\r\n                accessToken = await popTokenGenerator.signPopToken(secret, keyId, request);\r\n            }\r\n            else {\r\n                accessToken = cacheRecord.accessToken.secret;\r\n            }\r\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            // Access token expiresOn cached in seconds, converting to Date for AuthenticationResult\r\n            expiresOn = toDateFromSeconds(cacheRecord.accessToken.expiresOn);\r\n            extExpiresOn = toDateFromSeconds(cacheRecord.accessToken.extendedExpiresOn);\r\n            if (cacheRecord.accessToken.refreshOn) {\r\n                refreshOn = toDateFromSeconds(cacheRecord.accessToken.refreshOn);\r\n            }\r\n        }\r\n        if (cacheRecord.appMetadata) {\r\n            familyId =\r\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\r\n                    ? THE_FAMILY_ID\r\n                    : \"\";\r\n        }\r\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\r\n        const tid = idTokenClaims?.tid || \"\";\r\n        // for hybrid + native bridge enablement, send back the native account Id\r\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\r\n            cacheRecord.account.nativeAccountId =\r\n                serverTokenResponse?.spa_accountid;\r\n        }\r\n        const accountInfo = cacheRecord.account\r\n            ? updateAccountTenantProfileData(cacheRecord.account.getAccountInfo(), undefined, // tenantProfile optional\r\n            idTokenClaims, cacheRecord.idToken?.secret)\r\n            : null;\r\n        return {\r\n            authority: authority.canonicalAuthority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes,\r\n            account: accountInfo,\r\n            idToken: cacheRecord?.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: fromTokenCache,\r\n            expiresOn: expiresOn,\r\n            extExpiresOn: extExpiresOn,\r\n            refreshOn: refreshOn,\r\n            correlationId: request.correlationId,\r\n            requestId: requestId || Constants.EMPTY_STRING,\r\n            familyId: familyId,\r\n            tokenType: cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\r\n            state: requestState\r\n                ? requestState.userRequestState\r\n                : Constants.EMPTY_STRING,\r\n            cloudGraphHostName: cacheRecord.account?.cloudGraphHostName ||\r\n                Constants.EMPTY_STRING,\r\n            msGraphHost: cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\r\n            code: serverTokenResponse?.spa_code,\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\nfunction buildAccountToCache(cacheStorage, authority, homeAccountId, base64Decode, idTokenClaims, clientInfo, environment, claimsTenantId, authCodePayload, nativeAccountId, logger) {\r\n    logger?.verbose(\"setCachedAccount called\");\r\n    // Check if base account is already cached\r\n    const accountKeys = cacheStorage.getAccountKeys();\r\n    const baseAccountKey = accountKeys.find((accountKey) => {\r\n        return accountKey.startsWith(homeAccountId);\r\n    });\r\n    let cachedAccount = null;\r\n    if (baseAccountKey) {\r\n        cachedAccount = cacheStorage.getAccount(baseAccountKey);\r\n    }\r\n    const baseAccount = cachedAccount ||\r\n        AccountEntity.createAccount({\r\n            homeAccountId,\r\n            idTokenClaims,\r\n            clientInfo,\r\n            environment,\r\n            cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\r\n            msGraphHost: authCodePayload?.msgraph_host,\r\n            nativeAccountId: nativeAccountId,\r\n        }, authority, base64Decode);\r\n    const tenantProfiles = baseAccount.tenantProfiles || [];\r\n    const tenantId = claimsTenantId || baseAccount.realm;\r\n    if (tenantId &&\r\n        !tenantProfiles.find((tenantProfile) => {\r\n            return tenantProfile.tenantId === tenantId;\r\n        })) {\r\n        const newTenantProfile = buildTenantProfile(homeAccountId, baseAccount.localAccountId, tenantId, idTokenClaims);\r\n        tenantProfiles.push(newTenantProfile);\r\n    }\r\n    baseAccount.tenantProfiles = tenantProfiles;\r\n    return baseAccount;\r\n}\r\n\r\nexport { ResponseHandler, buildAccountToCache };\r\n//# sourceMappingURL=ResponseHandler.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function getClientAssertion(clientAssertion, clientId, tokenEndpoint) {\r\n    if (typeof clientAssertion === \"string\") {\r\n        return clientAssertion;\r\n    }\r\n    else {\r\n        const config = {\r\n            clientId: clientId,\r\n            tokenEndpoint: tokenEndpoint,\r\n        };\r\n        return clientAssertion(config);\r\n    }\r\n}\r\n\r\nexport { getClientAssertion };\r\n//# sourceMappingURL=ClientAssertionUtils.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { BaseClient } from './BaseClient.mjs';\r\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.mjs';\r\nimport { Separators, GrantType, AuthenticationScheme, PromptValue, HeaderNames } from '../utils/Constants.mjs';\r\nimport { CLIENT_ID, RETURN_SPA_CODE } from '../constants/AADServerParamKeys.mjs';\r\nimport { isOidcProtocolMode } from '../config/ClientConfiguration.mjs';\r\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\r\nimport { StringUtils } from '../utils/StringUtils.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { UrlString } from '../url/UrlString.mjs';\r\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\r\nimport { nowSeconds } from '../utils/TimeUtils.mjs';\r\nimport { buildClientInfo, buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\r\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { RequestValidator } from '../request/RequestValidator.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\nimport { getClientAssertion } from '../utils/ClientAssertionUtils.mjs';\r\nimport { getRequestThumbprint } from '../network/RequestThumbprint.mjs';\r\nimport { requestCannotBeMade, authorizationCodeMissingFromServerResponse } from '../error/ClientAuthErrorCodes.mjs';\r\nimport { logoutRequestEmpty, missingSshJwk } from '../error/ClientConfigurationErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Oauth2.0 Authorization Code client\r\n * @internal\r\n */\r\nclass AuthorizationCodeClient extends BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n        // Flag to indicate if client is for hybrid spa auth code redemption\r\n        this.includeRedirectUri = true;\r\n        this.oidcDefaultScopes =\r\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\r\n    }\r\n    /**\r\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\r\n     * application. The URL target the /authorize endpoint of the authority configured in the\r\n     * application object.\r\n     *\r\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\r\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\r\n     * acquireToken(AuthorizationCodeRequest)\r\n     * @param request\r\n     */\r\n    async getAuthCodeUrl(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.GetAuthCodeUrl, request.correlationId);\r\n        const queryString = await invokeAsync(this.createAuthCodeUrlQueryString.bind(this), PerformanceEvents.AuthClientCreateQueryString, this.logger, this.performanceClient, request.correlationId)(request);\r\n        return UrlString.appendQueryString(this.authority.authorizationEndpoint, queryString);\r\n    }\r\n    /**\r\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\r\n     * authorization_code_grant\r\n     * @param request\r\n     */\r\n    async acquireToken(request, authCodePayload) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientAcquireToken, request.correlationId);\r\n        if (!request.code) {\r\n            throw createClientAuthError(requestCannotBeMade);\r\n        }\r\n        const reqTimestamp = nowSeconds();\r\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.AuthClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(this.authority, request);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin, this.performanceClient);\r\n        // Validate response. This function throws a server error if an error is returned by the server.\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, authCodePayload, undefined, undefined, undefined, requestId);\r\n    }\r\n    /**\r\n     * Handles the hash fragment response from public client code request. Returns a code response used by\r\n     * the client to exchange for a token in acquireToken.\r\n     * @param hashFragment\r\n     */\r\n    handleFragmentResponse(serverParams, cachedState) {\r\n        // Handle responses.\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, null, null);\r\n        // Get code response\r\n        responseHandler.validateServerAuthorizationCodeResponse(serverParams, cachedState);\r\n        // throw when there is no auth code in the response\r\n        if (!serverParams.code) {\r\n            throw createClientAuthError(authorizationCodeMissingFromServerResponse);\r\n        }\r\n        return serverParams;\r\n    }\r\n    /**\r\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param authorityUri\r\n     */\r\n    getLogoutUri(logoutRequest) {\r\n        // Throw error if logoutRequest is null/undefined\r\n        if (!logoutRequest) {\r\n            throw createClientConfigurationError(logoutRequestEmpty);\r\n        }\r\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\r\n        // Construct logout URI\r\n        return UrlString.appendQueryString(this.authority.endSessionEndpoint, queryString);\r\n    }\r\n    /**\r\n     * Executes POST request to token endpoint\r\n     * @param authority\r\n     * @param request\r\n     */\r\n    async executeTokenRequest(authority, request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.AuthClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        let ccsCredential = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCredential = {\r\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        const headers = this.createTokenRequestHeaders(ccsCredential || request.ccsCredential);\r\n        const thumbprint = getRequestThumbprint(this.config.authOptions.clientId, request);\r\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.AuthorizationCodeClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Generates a map for all the params to be sent to the service\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateTokenRequestBody, request.correlationId);\r\n        const parameterBuilder = new RequestParameterBuilder(request.correlationId, this.performanceClient);\r\n        parameterBuilder.addClientId(request.embeddedClientId ||\r\n            request.tokenBodyParameters?.[CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        /*\r\n         * For hybrid spa flow, there will be a code but no verifier\r\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\r\n         */\r\n        if (!this.includeRedirectUri) {\r\n            // Just validate\r\n            RequestValidator.validateRedirectUri(request.redirectUri);\r\n        }\r\n        else {\r\n            // Validate and include redirect uri\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n        // Add scope array, parameter builder will add default scopes and dedupe\r\n        parameterBuilder.addScopes(request.scopes, true, this.oidcDefaultScopes);\r\n        // add code: user set, not validated\r\n        parameterBuilder.addAuthorizationCode(request.code);\r\n        // Add library metadata\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        parameterBuilder.addThrottling();\r\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n        // add code_verifier if passed\r\n        if (request.codeVerifier) {\r\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\r\n        }\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            }\r\n            else {\r\n                throw createClientConfigurationError(missingSshJwk);\r\n            }\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        let ccsCred = undefined;\r\n        if (request.clientInfo) {\r\n            try {\r\n                const clientInfo = buildClientInfo(request.clientInfo, this.cryptoUtils.base64Decode);\r\n                ccsCred = {\r\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\r\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n                };\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(\"Could not parse client info for CCS Header: \" + e);\r\n            }\r\n        }\r\n        else {\r\n            ccsCred = request.ccsCredential;\r\n        }\r\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\r\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\r\n            switch (ccsCred.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(ccsCred.credential);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\r\n        }\r\n        // Add hybrid spa parameters if not already provided\r\n        if (request.enableSpaAuthorizationCode &&\r\n            (!request.tokenBodyParameters ||\r\n                !request.tokenBodyParameters[RETURN_SPA_CODE])) {\r\n            parameterBuilder.addExtraQueryParameters({\r\n                [RETURN_SPA_CODE]: \"1\",\r\n            });\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    /**\r\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    async createAuthCodeUrlQueryString(request) {\r\n        // generate the correlationId if not set by the user and add\r\n        const correlationId = request.correlationId ||\r\n            this.config.cryptoInterface.createNewGuid();\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.AuthClientCreateQueryString, correlationId);\r\n        const parameterBuilder = new RequestParameterBuilder(correlationId, this.performanceClient);\r\n        parameterBuilder.addClientId(request.embeddedClientId ||\r\n            request.extraQueryParameters?.[CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        const requestScopes = [\r\n            ...(request.scopes || []),\r\n            ...(request.extraScopesToConsent || []),\r\n        ];\r\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\r\n        // validate the redirectUri (to be a non null value)\r\n        parameterBuilder.addRedirectUri(request.redirectUri);\r\n        parameterBuilder.addCorrelationId(correlationId);\r\n        // add response_mode. If not passed in it defaults to query.\r\n        parameterBuilder.addResponseMode(request.responseMode);\r\n        // add response_type = code\r\n        parameterBuilder.addResponseTypeCode();\r\n        // add library info parameters\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        if (!isOidcProtocolMode(this.config)) {\r\n            parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        }\r\n        // add client_info=1\r\n        parameterBuilder.addClientInfo();\r\n        if (request.codeChallenge && request.codeChallengeMethod) {\r\n            parameterBuilder.addCodeChallengeParams(request.codeChallenge, request.codeChallengeMethod);\r\n        }\r\n        if (request.prompt) {\r\n            parameterBuilder.addPrompt(request.prompt);\r\n        }\r\n        if (request.domainHint) {\r\n            parameterBuilder.addDomainHint(request.domainHint);\r\n            this.performanceClient?.addFields({ domainHintFromRequest: true }, correlationId);\r\n        }\r\n        this.performanceClient?.addFields({ prompt: request.prompt }, correlationId);\r\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\r\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\r\n            // AAD will throw if prompt=select_account is passed with an account hint\r\n            if (request.sid && request.prompt === PromptValue.NONE) {\r\n                // SessionID is only used in silent calls\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\");\r\n                parameterBuilder.addSid(request.sid);\r\n                this.performanceClient?.addFields({ sidFromRequest: true }, correlationId);\r\n            }\r\n            else if (request.account) {\r\n                const accountSid = this.extractAccountSid(request.account);\r\n                let accountLoginHintClaim = this.extractLoginHint(request.account);\r\n                if (accountLoginHintClaim && request.domainHint) {\r\n                    this.logger.warning(`AuthorizationCodeClient.createAuthCodeUrlQueryString: \"domainHint\" param is set, skipping opaque \"login_hint\" claim. Please consider not passing domainHint`);\r\n                    accountLoginHintClaim = null;\r\n                }\r\n                // If login_hint claim is present, use it over sid/username\r\n                if (accountLoginHintClaim) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: login_hint claim present on account\");\r\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\r\n                    this.performanceClient?.addFields({ loginHintFromClaim: true }, correlationId);\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n                else if (accountSid && request.prompt === PromptValue.NONE) {\r\n                    /*\r\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\r\n                     * SessionId is only used in silent calls\r\n                     */\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\");\r\n                    parameterBuilder.addSid(accountSid);\r\n                    this.performanceClient?.addFields({ sidFromClaim: true }, correlationId);\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n                else if (request.loginHint) {\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from request\");\r\n                    parameterBuilder.addLoginHint(request.loginHint);\r\n                    parameterBuilder.addCcsUpn(request.loginHint);\r\n                    this.performanceClient?.addFields({ loginHintFromRequest: true }, correlationId);\r\n                }\r\n                else if (request.account.username) {\r\n                    // Fallback to account username if provided\r\n                    this.logger.verbose(\"createAuthCodeUrlQueryString: Adding login_hint from account\");\r\n                    parameterBuilder.addLoginHint(request.account.username);\r\n                    this.performanceClient?.addFields({ loginHintFromUpn: true }, correlationId);\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.account.homeAccountId);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\");\r\n                    }\r\n                }\r\n            }\r\n            else if (request.loginHint) {\r\n                this.logger.verbose(\"createAuthCodeUrlQueryString: No account, adding login_hint from request\");\r\n                parameterBuilder.addLoginHint(request.loginHint);\r\n                parameterBuilder.addCcsUpn(request.loginHint);\r\n                this.performanceClient?.addFields({ loginHintFromRequest: true }, correlationId);\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\");\r\n        }\r\n        if (request.nonce) {\r\n            parameterBuilder.addNonce(request.nonce);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.claims ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n        if (request.platformBroker) {\r\n            // signal ests that this is a WAM call\r\n            parameterBuilder.addNativeBroker();\r\n            // pass the req_cnf for POP\r\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n                const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils);\r\n                // req_cnf is always sent as a string for SPAs\r\n                let reqCnfData;\r\n                if (!request.popKid) {\r\n                    const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                    reqCnfData = generatedReqCnfData.reqCnfString;\r\n                }\r\n                else {\r\n                    reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n                }\r\n                parameterBuilder.addPopToken(reqCnfData);\r\n            }\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    /**\r\n     * This API validates the `EndSessionRequest` and creates a URL\r\n     * @param request\r\n     */\r\n    createLogoutUrlQueryString(request) {\r\n        const parameterBuilder = new RequestParameterBuilder(request.correlationId, this.performanceClient);\r\n        if (request.postLogoutRedirectUri) {\r\n            parameterBuilder.addPostLogoutRedirectUri(request.postLogoutRedirectUri);\r\n        }\r\n        if (request.correlationId) {\r\n            parameterBuilder.addCorrelationId(request.correlationId);\r\n        }\r\n        if (request.idTokenHint) {\r\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\r\n        }\r\n        if (request.state) {\r\n            parameterBuilder.addState(request.state);\r\n        }\r\n        if (request.logoutHint) {\r\n            parameterBuilder.addLogoutHint(request.logoutHint);\r\n        }\r\n        this.addExtraQueryParams(request, parameterBuilder);\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n    addExtraQueryParams(request, parameterBuilder) {\r\n        const hasRequestInstanceAware = request.extraQueryParameters &&\r\n            request.extraQueryParameters.hasOwnProperty(\"instance_aware\");\r\n        // Set instance_aware flag if config auth param is set\r\n        if (!hasRequestInstanceAware && this.config.authOptions.instanceAware) {\r\n            request.extraQueryParameters = request.extraQueryParameters || {};\r\n            request.extraQueryParameters[\"instance_aware\"] = \"true\";\r\n        }\r\n        if (request.extraQueryParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.extraQueryParameters);\r\n        }\r\n    }\r\n    /**\r\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\r\n     * @param account\r\n     */\r\n    extractAccountSid(account) {\r\n        return account.idTokenClaims?.sid || null;\r\n    }\r\n    extractLoginHint(account) {\r\n        return account.idTokenClaims?.login_hint || null;\r\n    }\r\n}\r\n\r\nexport { AuthorizationCodeClient };\r\n//# sourceMappingURL=AuthorizationCodeClient.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { CacheOutcome, Constants, SERVER_TELEM_CONSTANTS, Separators } from '../../utils/Constants.mjs';\r\nimport { AuthError } from '../../error/AuthError.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst skuGroupSeparator = \",\";\r\nconst skuValueSeparator = \"|\";\r\nfunction makeExtraSkuString(params) {\r\n    const { skus, libraryName, libraryVersion, extensionName, extensionVersion, } = params;\r\n    const skuMap = new Map([\r\n        [0, [libraryName, libraryVersion]],\r\n        [2, [extensionName, extensionVersion]],\r\n    ]);\r\n    let skuArr = [];\r\n    if (skus?.length) {\r\n        skuArr = skus.split(skuGroupSeparator);\r\n        // Ignore invalid input sku param\r\n        if (skuArr.length < 4) {\r\n            return skus;\r\n        }\r\n    }\r\n    else {\r\n        skuArr = Array.from({ length: 4 }, () => skuValueSeparator);\r\n    }\r\n    skuMap.forEach((value, key) => {\r\n        if (value.length === 2 && value[0]?.length && value[1]?.length) {\r\n            setSku({\r\n                skuArr,\r\n                index: key,\r\n                skuName: value[0],\r\n                skuVersion: value[1],\r\n            });\r\n        }\r\n    });\r\n    return skuArr.join(skuGroupSeparator);\r\n}\r\nfunction setSku(params) {\r\n    const { skuArr, index, skuName, skuVersion } = params;\r\n    if (index >= skuArr.length) {\r\n        return;\r\n    }\r\n    skuArr[index] = [skuName, skuVersion].join(skuValueSeparator);\r\n}\r\n/** @internal */\r\nclass ServerTelemetryManager {\r\n    constructor(telemetryRequest, cacheManager) {\r\n        this.cacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n        this.cacheManager = cacheManager;\r\n        this.apiId = telemetryRequest.apiId;\r\n        this.correlationId = telemetryRequest.correlationId;\r\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\r\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\r\n        this.telemetryCacheKey =\r\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\r\n                Separators.CACHE_KEY_SEPARATOR +\r\n                telemetryRequest.clientId;\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry to request\r\n     */\r\n    generateCurrentRequestHeaderValue() {\r\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\r\n        const platformFieldsArr = [this.wrapperSKU, this.wrapperVer];\r\n        const nativeBrokerErrorCode = this.getNativeBrokerErrorCode();\r\n        if (nativeBrokerErrorCode?.length) {\r\n            platformFieldsArr.push(`broker_error=${nativeBrokerErrorCode}`);\r\n        }\r\n        const platformFields = platformFieldsArr.join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\r\n        const requestWithRegionDiscoveryFields = [\r\n            request,\r\n            regionDiscoveryFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            requestWithRegionDiscoveryFields,\r\n            platformFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to add MSER Telemetry for the last failed request\r\n     */\r\n    generateLastRequestHeaderValue() {\r\n        const lastRequests = this.getLastRequests();\r\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const failedRequests = lastRequests.failedRequests\r\n            .slice(0, 2 * maxErrors)\r\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errors = lastRequests.errors\r\n            .slice(0, maxErrors)\r\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        const errorCount = lastRequests.errors.length;\r\n        // Indicate whether this header contains all data or partial data\r\n        const overflow = maxErrors < errorCount\r\n            ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\r\n            : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\r\n        const platformFields = [errorCount, overflow].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\r\n        return [\r\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\r\n            lastRequests.cacheHits,\r\n            failedRequests,\r\n            errors,\r\n            platformFields,\r\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\r\n    }\r\n    /**\r\n     * API to cache token failures for MSER data capture\r\n     * @param error\r\n     */\r\n    cacheFailedRequest(error) {\r\n        const lastRequests = this.getLastRequests();\r\n        if (lastRequests.errors.length >=\r\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS) {\r\n            // Remove a cached error to make room, first in first out\r\n            lastRequests.failedRequests.shift(); // apiId\r\n            lastRequests.failedRequests.shift(); // correlationId\r\n            lastRequests.errors.shift();\r\n        }\r\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\r\n        if (error instanceof Error && !!error && error.toString()) {\r\n            if (error instanceof AuthError) {\r\n                if (error.subError) {\r\n                    lastRequests.errors.push(error.subError);\r\n                }\r\n                else if (error.errorCode) {\r\n                    lastRequests.errors.push(error.errorCode);\r\n                }\r\n                else {\r\n                    lastRequests.errors.push(error.toString());\r\n                }\r\n            }\r\n            else {\r\n                lastRequests.errors.push(error.toString());\r\n            }\r\n        }\r\n        else {\r\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\r\n        }\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return;\r\n    }\r\n    /**\r\n     * Update server telemetry cache entry by incrementing cache hit counter\r\n     */\r\n    incrementCacheHits() {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.cacheHits += 1;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n        return lastRequests.cacheHits;\r\n    }\r\n    /**\r\n     * Get the server telemetry entity from cache or initialize a new one\r\n     */\r\n    getLastRequests() {\r\n        const initialValue = {\r\n            failedRequests: [],\r\n            errors: [],\r\n            cacheHits: 0,\r\n        };\r\n        const lastRequests = this.cacheManager.getServerTelemetry(this.telemetryCacheKey);\r\n        return lastRequests || initialValue;\r\n    }\r\n    /**\r\n     * Remove server telemetry cache entry\r\n     */\r\n    clearTelemetryCache() {\r\n        const lastRequests = this.getLastRequests();\r\n        const numErrorsFlushed = ServerTelemetryManager.maxErrorsToSend(lastRequests);\r\n        const errorCount = lastRequests.errors.length;\r\n        if (numErrorsFlushed === errorCount) {\r\n            // All errors were sent on last request, clear Telemetry cache\r\n            this.cacheManager.removeItem(this.telemetryCacheKey);\r\n        }\r\n        else {\r\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\r\n            const serverTelemEntity = {\r\n                failedRequests: lastRequests.failedRequests.slice(numErrorsFlushed * 2),\r\n                errors: lastRequests.errors.slice(numErrorsFlushed),\r\n                cacheHits: 0,\r\n            };\r\n            this.cacheManager.setServerTelemetry(this.telemetryCacheKey, serverTelemEntity);\r\n        }\r\n    }\r\n    /**\r\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\r\n     * @param serverTelemetryEntity\r\n     */\r\n    static maxErrorsToSend(serverTelemetryEntity) {\r\n        let i;\r\n        let maxErrors = 0;\r\n        let dataSize = 0;\r\n        const errorCount = serverTelemetryEntity.errors.length;\r\n        for (i = 0; i < errorCount; i++) {\r\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\r\n            const apiId = serverTelemetryEntity.failedRequests[2 * i] ||\r\n                Constants.EMPTY_STRING;\r\n            const correlationId = serverTelemetryEntity.failedRequests[2 * i + 1] ||\r\n                Constants.EMPTY_STRING;\r\n            const errorCode = serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\r\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\r\n            dataSize +=\r\n                apiId.toString().length +\r\n                    correlationId.toString().length +\r\n                    errorCode.length +\r\n                    3;\r\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\r\n                // Adding this entry to the header would still keep header size below the limit\r\n                maxErrors += 1;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return maxErrors;\r\n    }\r\n    /**\r\n     * Get the region discovery fields\r\n     *\r\n     * @returns string\r\n     */\r\n    getRegionDiscoveryFields() {\r\n        const regionDiscoveryFields = [];\r\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\r\n        regionDiscoveryFields.push(this.regionOutcome || Constants.EMPTY_STRING);\r\n        return regionDiscoveryFields.join(\",\");\r\n    }\r\n    /**\r\n     * Update the region discovery metadata\r\n     *\r\n     * @param regionDiscoveryMetadata\r\n     * @returns void\r\n     */\r\n    updateRegionDiscoveryMetadata(regionDiscoveryMetadata) {\r\n        this.regionUsed = regionDiscoveryMetadata.region_used;\r\n        this.regionSource = regionDiscoveryMetadata.region_source;\r\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\r\n    }\r\n    /**\r\n     * Set cache outcome\r\n     */\r\n    setCacheOutcome(cacheOutcome) {\r\n        this.cacheOutcome = cacheOutcome;\r\n    }\r\n    setNativeBrokerErrorCode(errorCode) {\r\n        const lastRequests = this.getLastRequests();\r\n        lastRequests.nativeBrokerErrorCode = errorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n    }\r\n    getNativeBrokerErrorCode() {\r\n        return this.getLastRequests().nativeBrokerErrorCode;\r\n    }\r\n    clearNativeBrokerErrorCode() {\r\n        const lastRequests = this.getLastRequests();\r\n        delete lastRequests.nativeBrokerErrorCode;\r\n        this.cacheManager.setServerTelemetry(this.telemetryCacheKey, lastRequests);\r\n    }\r\n    static makeExtraSkuString(params) {\r\n        return makeExtraSkuString(params);\r\n    }\r\n}\r\n\r\nexport { ServerTelemetryManager };\r\n//# sourceMappingURL=ServerTelemetryManager.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { AccountEntity, UrlString, ServerTelemetryManager, PerformanceEvents, Authority, invokeAsync, AuthorityFactory, createClientConfigurationError, ClientConfigurationErrorCodes } from '@azure/msal-common/browser';\r\nimport { version } from '../packageMetadata.mjs';\r\nimport { BrowserConstants } from '../utils/BrowserConstants.mjs';\r\nimport { getCurrentUri } from '../utils/BrowserUtils.mjs';\r\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass BaseInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId) {\r\n        this.config = config;\r\n        this.browserStorage = storageImpl;\r\n        this.browserCrypto = browserCrypto;\r\n        this.networkClient = this.config.system.networkClient;\r\n        this.eventHandler = eventHandler;\r\n        this.navigationClient = navigationClient;\r\n        this.nativeMessageHandler = nativeMessageHandler;\r\n        this.correlationId = correlationId || createNewGuid();\r\n        this.logger = logger.clone(BrowserConstants.MSAL_SKU, version, this.correlationId);\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    async clearCacheOnLogout(account) {\r\n        if (account) {\r\n            if (AccountEntity.accountInfoIsEqual(account, this.browserStorage.getActiveAccount(), false)) {\r\n                this.logger.verbose(\"Setting active account to null\");\r\n                this.browserStorage.setActiveAccount(null);\r\n            }\r\n            // Clear given account.\r\n            try {\r\n                await this.browserStorage.removeAccount(AccountEntity.generateAccountCacheKey(account));\r\n                this.logger.verbose(\"Cleared cache items belonging to the account provided in the logout request.\");\r\n            }\r\n            catch (error) {\r\n                this.logger.error(\"Account provided in logout request was not found. Local cache unchanged.\");\r\n            }\r\n        }\r\n        else {\r\n            try {\r\n                this.logger.verbose(\"No account provided in logout request, clearing all cache items.\", this.correlationId);\r\n                // Clear all accounts and tokens\r\n                await this.browserStorage.clear();\r\n                // Clear any stray keys from IndexedDB\r\n                await this.browserCrypto.clearKeystore();\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\");\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * Use to get the redirect uri configured in MSAL or null.\r\n     * @param requestRedirectUri\r\n     * @returns Redirect URL\r\n     *\r\n     */\r\n    getRedirectUri(requestRedirectUri) {\r\n        this.logger.verbose(\"getRedirectUri called\");\r\n        const redirectUri = requestRedirectUri || this.config.auth.redirectUri;\r\n        return UrlString.getAbsoluteUrl(redirectUri, getCurrentUri());\r\n    }\r\n    /**\r\n     *\r\n     * @param apiId\r\n     * @param correlationId\r\n     * @param forceRefresh\r\n     */\r\n    initializeServerTelemetryManager(apiId, forceRefresh) {\r\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\r\n        const telemetryPayload = {\r\n            clientId: this.config.auth.clientId,\r\n            correlationId: this.correlationId,\r\n            apiId: apiId,\r\n            forceRefresh: forceRefresh || false,\r\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\r\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\r\n        };\r\n        return new ServerTelemetryManager(telemetryPayload, this.browserStorage);\r\n    }\r\n    /**\r\n     * Used to get a discovered version of the default authority.\r\n     * @param params {\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async getDiscoveredAuthority(params) {\r\n        const { account } = params;\r\n        const instanceAwareEQ = params.requestExtraQueryParameters &&\r\n            params.requestExtraQueryParameters.hasOwnProperty(\"instance_aware\")\r\n            ? params.requestExtraQueryParameters[\"instance_aware\"]\r\n            : undefined;\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.correlationId);\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            OIDCOptions: this.config.auth.OIDCOptions,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\r\n        const resolvedAuthority = params.requestAuthority || this.config.auth.authority;\r\n        const resolvedInstanceAware = instanceAwareEQ?.length\r\n            ? instanceAwareEQ === \"true\"\r\n            : this.config.auth.instanceAware;\r\n        const userAuthority = account && resolvedInstanceAware\r\n            ? this.config.auth.authority.replace(UrlString.getDomainFromUrl(resolvedAuthority), account.environment)\r\n            : resolvedAuthority;\r\n        // fall back to the authority from config\r\n        const builtAuthority = Authority.generateAuthority(userAuthority, params.requestAzureCloudOptions ||\r\n            this.config.auth.azureCloudOptions);\r\n        const discoveredAuthority = await invokeAsync(AuthorityFactory.createDiscoveredInstance, PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance, this.logger, this.performanceClient, this.correlationId)(builtAuthority, this.config.system.networkClient, this.browserStorage, authorityOptions, this.logger, this.correlationId, this.performanceClient);\r\n        if (account && !discoveredAuthority.isAlias(account.environment)) {\r\n            throw createClientConfigurationError(ClientConfigurationErrorCodes.authorityMismatch);\r\n        }\r\n        return discoveredAuthority;\r\n    }\r\n}\r\n\r\nexport { BaseInteractionClient };\r\n//# sourceMappingURL=BaseInteractionClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, invoke, invokeAsync } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { urlEncodeArr } from '../encode/Base64Encode.mjs';\r\nimport { getRandomValues, sha256Digest } from './BrowserCrypto.mjs';\r\nimport { pkceNotCreated } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Constant byte array length\r\nconst RANDOM_BYTE_ARR_LENGTH = 32;\r\n/**\r\n * This file defines APIs to generate PKCE codes and code verifiers.\r\n */\r\n/**\r\n * Generates PKCE Codes. See the RFC for more information: https://tools.ietf.org/html/rfc7636\r\n */\r\nasync function generatePkceCodes(performanceClient, logger, correlationId) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.GeneratePkceCodes, correlationId);\r\n    const codeVerifier = invoke(generateCodeVerifier, PerformanceEvents.GenerateCodeVerifier, logger, performanceClient, correlationId)(performanceClient, logger, correlationId);\r\n    const codeChallenge = await invokeAsync(generateCodeChallengeFromVerifier, PerformanceEvents.GenerateCodeChallengeFromVerifier, logger, performanceClient, correlationId)(codeVerifier, performanceClient, logger, correlationId);\r\n    return {\r\n        verifier: codeVerifier,\r\n        challenge: codeChallenge,\r\n    };\r\n}\r\n/**\r\n * Generates a random 32 byte buffer and returns the base64\r\n * encoded string to be used as a PKCE Code Verifier\r\n */\r\nfunction generateCodeVerifier(performanceClient, logger, correlationId) {\r\n    try {\r\n        // Generate random values as utf-8\r\n        const buffer = new Uint8Array(RANDOM_BYTE_ARR_LENGTH);\r\n        invoke(getRandomValues, PerformanceEvents.GetRandomValues, logger, performanceClient, correlationId)(buffer);\r\n        // encode verifier as base64\r\n        const pkceCodeVerifierB64 = urlEncodeArr(buffer);\r\n        return pkceCodeVerifierB64;\r\n    }\r\n    catch (e) {\r\n        throw createBrowserAuthError(pkceNotCreated);\r\n    }\r\n}\r\n/**\r\n * Creates a base64 encoded PKCE Code Challenge string from the\r\n * hash created from the PKCE Code Verifier supplied\r\n */\r\nasync function generateCodeChallengeFromVerifier(pkceCodeVerifier, performanceClient, logger, correlationId) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.GenerateCodeChallengeFromVerifier, correlationId);\r\n    try {\r\n        // hashed verifier\r\n        const pkceHashedCodeVerifier = await invokeAsync(sha256Digest, PerformanceEvents.Sha256Digest, logger, performanceClient, correlationId)(pkceCodeVerifier, performanceClient, correlationId);\r\n        // encode hash as base64\r\n        return urlEncodeArr(new Uint8Array(pkceHashedCodeVerifier));\r\n    }\r\n    catch (e) {\r\n        throw createBrowserAuthError(pkceNotCreated);\r\n    }\r\n}\r\n\r\nexport { generatePkceCodes };\r\n//# sourceMappingURL=PkceGenerator.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, invokeAsync, AuthenticationScheme, createClientConfigurationError, ClientConfigurationErrorCodes, StringUtils } from '@azure/msal-common/browser';\r\nimport { hashString } from '../crypto/BrowserCrypto.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Initializer function for all request APIs\r\n * @param request\r\n */\r\nasync function initializeBaseRequest(request, config, performanceClient, logger) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.InitializeBaseRequest, request.correlationId);\r\n    const authority = request.authority || config.auth.authority;\r\n    const scopes = [...((request && request.scopes) || [])];\r\n    const validatedRequest = {\r\n        ...request,\r\n        correlationId: request.correlationId,\r\n        authority,\r\n        scopes,\r\n    };\r\n    // Set authenticationScheme to BEARER if not explicitly set in the request\r\n    if (!validatedRequest.authenticationScheme) {\r\n        validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\r\n        logger.verbose('Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request');\r\n    }\r\n    else {\r\n        if (validatedRequest.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (!request.sshJwk) {\r\n                throw createClientConfigurationError(ClientConfigurationErrorCodes.missingSshJwk);\r\n            }\r\n            if (!request.sshKid) {\r\n                throw createClientConfigurationError(ClientConfigurationErrorCodes.missingSshKid);\r\n            }\r\n        }\r\n        logger.verbose(`Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`);\r\n    }\r\n    // Set requested claims hash if claims-based caching is enabled and claims were requested\r\n    if (config.cache.claimsBasedCachingEnabled &&\r\n        request.claims &&\r\n        // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\r\n        !StringUtils.isEmptyObj(request.claims)) {\r\n        validatedRequest.requestedClaimsHash = await hashString(request.claims);\r\n    }\r\n    return validatedRequest;\r\n}\r\nasync function initializeSilentRequest(request, account, config, performanceClient, logger) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.InitializeSilentRequest, request.correlationId);\r\n    const baseRequest = await invokeAsync(initializeBaseRequest, PerformanceEvents.InitializeBaseRequest, logger, performanceClient, request.correlationId)(request, config, performanceClient, logger);\r\n    return {\r\n        ...request,\r\n        ...baseRequest,\r\n        account: account,\r\n        forceRefresh: request.forceRefresh || false,\r\n    };\r\n}\r\n\r\nexport { initializeBaseRequest, initializeSilentRequest };\r\n//# sourceMappingURL=RequestHelpers.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, invokeAsync, Constants, UrlString, AuthorizationCodeClient, ProtocolUtils } from '@azure/msal-common/browser';\r\nimport { BaseInteractionClient } from './BaseInteractionClient.mjs';\r\nimport { BrowserConstants } from '../utils/BrowserConstants.mjs';\r\nimport { version } from '../packageMetadata.mjs';\r\nimport { getCurrentUri } from '../utils/BrowserUtils.mjs';\r\nimport { generatePkceCodes } from '../crypto/PkceGenerator.mjs';\r\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\r\nimport { initializeBaseRequest } from '../request/RequestHelpers.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\r\n */\r\nclass StandardInteractionClient extends BaseInteractionClient {\r\n    /**\r\n     * Generates an auth code request tied to the url request.\r\n     * @param request\r\n     * @param pkceCodes\r\n     */\r\n    async initializeAuthorizationCodeRequest(request, pkceCodes) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.correlationId);\r\n        const generatedPkceParams = pkceCodes ||\r\n            (await invokeAsync(generatePkceCodes, PerformanceEvents.GeneratePkceCodes, this.logger, this.performanceClient, this.correlationId)(this.performanceClient, this.logger, this.correlationId));\r\n        const authCodeRequest = {\r\n            ...request,\r\n            redirectUri: request.redirectUri,\r\n            code: Constants.EMPTY_STRING,\r\n            codeVerifier: generatedPkceParams.verifier,\r\n        };\r\n        request.codeChallenge = generatedPkceParams.challenge;\r\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\r\n        return authCodeRequest;\r\n    }\r\n    /**\r\n     * Initializer for the logout request.\r\n     * @param logoutRequest\r\n     */\r\n    initializeLogoutRequest(logoutRequest) {\r\n        this.logger.verbose(\"initializeLogoutRequest called\", logoutRequest?.correlationId);\r\n        const validLogoutRequest = {\r\n            correlationId: this.correlationId || createNewGuid(),\r\n            ...logoutRequest,\r\n        };\r\n        /**\r\n         * Set logout_hint to be login_hint from ID Token Claims if present\r\n         * and logoutHint attribute wasn't manually set in logout request\r\n         */\r\n        if (logoutRequest) {\r\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\r\n            if (!logoutRequest.logoutHint) {\r\n                if (logoutRequest.account) {\r\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(logoutRequest.account);\r\n                    if (logoutHint) {\r\n                        this.logger.verbose(\"Setting logoutHint to login_hint ID Token Claim value for the account provided\");\r\n                        validLogoutRequest.logoutHint = logoutHint;\r\n                    }\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\");\r\n                }\r\n            }\r\n            else {\r\n                this.logger.verbose(\"logoutHint has already been set in logoutRequest\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"logoutHint will not be set since no logout request was configured\");\r\n        }\r\n        /*\r\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\r\n         * Otherwise, use passed uri, config, or current page.\r\n         */\r\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\r\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to uri set on logout request\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    UrlString.getAbsoluteUrl(logoutRequest.postLogoutRedirectUri, getCurrentUri());\r\n            }\r\n            else if (this.config.auth.postLogoutRedirectUri === null) {\r\n                this.logger.verbose(\"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\", validLogoutRequest.correlationId);\r\n            }\r\n            else if (this.config.auth.postLogoutRedirectUri) {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to configured uri\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    UrlString.getAbsoluteUrl(this.config.auth.postLogoutRedirectUri, getCurrentUri());\r\n            }\r\n            else {\r\n                this.logger.verbose(\"Setting postLogoutRedirectUri to current page\", validLogoutRequest.correlationId);\r\n                validLogoutRequest.postLogoutRedirectUri =\r\n                    UrlString.getAbsoluteUrl(getCurrentUri(), getCurrentUri());\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"postLogoutRedirectUri passed as null, not setting post logout redirect uri\", validLogoutRequest.correlationId);\r\n        }\r\n        return validLogoutRequest;\r\n    }\r\n    /**\r\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\r\n     * logout_hint in end session request.\r\n     * @param account\r\n     */\r\n    getLogoutHintFromIdTokenClaims(account) {\r\n        const idTokenClaims = account.idTokenClaims;\r\n        if (idTokenClaims) {\r\n            if (idTokenClaims.login_hint) {\r\n                return idTokenClaims.login_hint;\r\n            }\r\n            else {\r\n                this.logger.verbose(\"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\");\r\n            }\r\n        }\r\n        else {\r\n            this.logger.verbose(\"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\");\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Creates an Authorization Code Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async createAuthCodeClient(params) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.correlationId);\r\n        // Create auth module.\r\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)(params);\r\n        return new AuthorizationCodeClient(clientConfig, this.performanceClient);\r\n    }\r\n    /**\r\n     * Creates a Client Configuration object with the given request authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         requestAuthority?: string;\r\n     *         requestAzureCloudOptions?: AzureCloudOptions;\r\n     *         requestExtraQueryParameters?: boolean;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async getClientConfiguration(params) {\r\n        const { serverTelemetryManager, requestAuthority, requestAzureCloudOptions, requestExtraQueryParameters, account, } = params;\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.correlationId);\r\n        const discoveredAuthority = await invokeAsync(this.getDiscoveredAuthority.bind(this), PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority, this.logger, this.performanceClient, this.correlationId)({\r\n            requestAuthority,\r\n            requestAzureCloudOptions,\r\n            requestExtraQueryParameters,\r\n            account,\r\n        });\r\n        const logger = this.config.system.loggerOptions;\r\n        return {\r\n            authOptions: {\r\n                clientId: this.config.auth.clientId,\r\n                authority: discoveredAuthority,\r\n                clientCapabilities: this.config.auth.clientCapabilities,\r\n                redirectUri: this.config.auth.redirectUri,\r\n            },\r\n            systemOptions: {\r\n                tokenRenewalOffsetSeconds: this.config.system.tokenRenewalOffsetSeconds,\r\n                preventCorsPreflight: true,\r\n            },\r\n            loggerOptions: {\r\n                loggerCallback: logger.loggerCallback,\r\n                piiLoggingEnabled: logger.piiLoggingEnabled,\r\n                logLevel: logger.logLevel,\r\n                correlationId: this.correlationId,\r\n            },\r\n            cacheOptions: {\r\n                claimsBasedCachingEnabled: this.config.cache.claimsBasedCachingEnabled,\r\n            },\r\n            cryptoInterface: this.browserCrypto,\r\n            networkInterface: this.networkClient,\r\n            storageInterface: this.browserStorage,\r\n            serverTelemetryManager: serverTelemetryManager,\r\n            libraryInfo: {\r\n                sku: BrowserConstants.MSAL_SKU,\r\n                version: version,\r\n                cpu: Constants.EMPTY_STRING,\r\n                os: Constants.EMPTY_STRING,\r\n            },\r\n            telemetry: this.config.telemetry,\r\n        };\r\n    }\r\n    /**\r\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\r\n     * @param request\r\n     * @param interactionType\r\n     */\r\n    async initializeAuthorizationRequest(request, interactionType) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.correlationId);\r\n        const redirectUri = this.getRedirectUri(request.redirectUri);\r\n        const browserState = {\r\n            interactionType: interactionType,\r\n        };\r\n        const state = ProtocolUtils.setRequestState(this.browserCrypto, (request && request.state) || Constants.EMPTY_STRING, browserState);\r\n        const baseRequest = await invokeAsync(initializeBaseRequest, PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, this.correlationId)({ ...request, correlationId: this.correlationId }, this.config, this.performanceClient, this.logger);\r\n        const validatedRequest = {\r\n            ...baseRequest,\r\n            redirectUri: redirectUri,\r\n            state: state,\r\n            nonce: request.nonce || createNewGuid(),\r\n            responseMode: this.config.auth.OIDCOptions\r\n                .serverResponseType,\r\n        };\r\n        // Skip active account lookup if either login hint or session id is set\r\n        if (request.loginHint || request.sid) {\r\n            return validatedRequest;\r\n        }\r\n        const account = request.account || this.browserStorage.getActiveAccount();\r\n        if (account) {\r\n            this.logger.verbose(\"Setting validated request account\", this.correlationId);\r\n            this.logger.verbosePii(`Setting validated request account: ${account.homeAccountId}`, this.correlationId);\r\n            validatedRequest.account = account;\r\n        }\r\n        return validatedRequest;\r\n    }\r\n}\r\n\r\nexport { StandardInteractionClient };\r\n//# sourceMappingURL=StandardInteractionClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst contentError = \"ContentError\";\r\nconst userSwitch = \"user_switch\";\r\n\r\nexport { contentError, userSwitch };\r\n//# sourceMappingURL=NativeAuthErrorCodes.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { AuthError, InteractionRequiredAuthError, createInteractionRequiredAuthError, InteractionRequiredAuthErrorCodes } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from './BrowserAuthError.mjs';\r\nimport { contentError, userSwitch } from './NativeAuthErrorCodes.mjs';\r\nimport { PERSISTENT_ERROR, DISABLED, NO_NETWORK, USER_CANCEL, USER_INTERACTION_REQUIRED, ACCOUNT_UNAVAILABLE } from '../broker/nativeBroker/NativeStatusCodes.mjs';\r\nimport { noNetworkConnectivity, userCancelled } from './BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst INVALID_METHOD_ERROR = -2147186943;\r\nconst NativeAuthErrorMessages = {\r\n    [userSwitch]: \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\r\n};\r\nclass NativeAuthError extends AuthError {\r\n    constructor(errorCode, description, ext) {\r\n        super(errorCode, description);\r\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\r\n        this.name = \"NativeAuthError\";\r\n        this.ext = ext;\r\n    }\r\n}\r\n/**\r\n * These errors should result in a fallback to the 'standard' browser based auth flow.\r\n */\r\nfunction isFatalNativeAuthError(error) {\r\n    if (error.ext &&\r\n        error.ext.status &&\r\n        (error.ext.status === PERSISTENT_ERROR ||\r\n            error.ext.status === DISABLED)) {\r\n        return true;\r\n    }\r\n    if (error.ext &&\r\n        error.ext.error &&\r\n        error.ext.error === INVALID_METHOD_ERROR) {\r\n        return true;\r\n    }\r\n    switch (error.errorCode) {\r\n        case contentError:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\n/**\r\n * Create the appropriate error object based on the WAM status code.\r\n * @param code\r\n * @param description\r\n * @param ext\r\n * @returns\r\n */\r\nfunction createNativeAuthError(code, description, ext) {\r\n    if (ext && ext.status) {\r\n        switch (ext.status) {\r\n            case ACCOUNT_UNAVAILABLE:\r\n                return createInteractionRequiredAuthError(InteractionRequiredAuthErrorCodes.nativeAccountUnavailable);\r\n            case USER_INTERACTION_REQUIRED:\r\n                return new InteractionRequiredAuthError(code, description);\r\n            case USER_CANCEL:\r\n                return createBrowserAuthError(userCancelled);\r\n            case NO_NETWORK:\r\n                return createBrowserAuthError(noNetworkConnectivity);\r\n        }\r\n    }\r\n    return new NativeAuthError(code, NativeAuthErrorMessages[code] || description, ext);\r\n}\r\n\r\nexport { NativeAuthError, NativeAuthErrorMessages, createNativeAuthError, isFatalNativeAuthError };\r\n//# sourceMappingURL=NativeAuthError.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n// Status Codes that can be thrown by WAM\r\nconst USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\r\nconst USER_CANCEL = \"USER_CANCEL\";\r\nconst NO_NETWORK = \"NO_NETWORK\";\r\nconst PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\r\nconst DISABLED = \"DISABLED\";\r\nconst ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\r\n\r\nexport { ACCOUNT_UNAVAILABLE, DISABLED, NO_NETWORK, PERSISTENT_ERROR, USER_CANCEL, USER_INTERACTION_REQUIRED };\r\n//# sourceMappingURL=NativeStatusCodes.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { BaseClient } from './BaseClient.mjs';\r\nimport { wasClockTurnedBack, isTokenExpired } from '../utils/TimeUtils.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\r\nimport { CacheOutcome } from '../utils/Constants.mjs';\r\nimport { StringUtils } from '../utils/StringUtils.mjs';\r\nimport { extractTokenClaims, checkMaxAge } from '../account/AuthToken.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync } from '../utils/FunctionWrappers.mjs';\r\nimport { getTenantFromAuthorityString } from '../authority/Authority.mjs';\r\nimport { tokenRefreshRequired, noAccountInSilentRequest, authTimeNotFound } from '../error/ClientAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/** @internal */\r\nclass SilentFlowClient extends BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    /**\r\n     * Retrieves token from cache or throws an error if it must be refreshed.\r\n     * @param request\r\n     */\r\n    async acquireCachedToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientAcquireCachedToken, request.correlationId);\r\n        let lastCacheOutcome = CacheOutcome.NOT_APPLICABLE;\r\n        if (request.forceRefresh ||\r\n            (!this.config.cacheOptions.claimsBasedCachingEnabled &&\r\n                !StringUtils.isEmptyObj(request.claims))) {\r\n            // Must refresh due to present force_refresh flag.\r\n            this.setCacheOutcome(CacheOutcome.FORCE_REFRESH_OR_CLAIMS, request.correlationId);\r\n            throw createClientAuthError(tokenRefreshRequired);\r\n        }\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw createClientAuthError(noAccountInSilentRequest);\r\n        }\r\n        const requestTenantId = request.account.tenantId ||\r\n            getTenantFromAuthorityString(request.authority);\r\n        const tokenKeys = this.cacheManager.getTokenKeys();\r\n        const cachedAccessToken = this.cacheManager.getAccessToken(request.account, request, tokenKeys, requestTenantId, this.performanceClient, request.correlationId);\r\n        if (!cachedAccessToken) {\r\n            // must refresh due to non-existent access_token\r\n            this.setCacheOutcome(CacheOutcome.NO_CACHED_ACCESS_TOKEN, request.correlationId);\r\n            throw createClientAuthError(tokenRefreshRequired);\r\n        }\r\n        else if (wasClockTurnedBack(cachedAccessToken.cachedAt) ||\r\n            isTokenExpired(cachedAccessToken.expiresOn, this.config.systemOptions.tokenRenewalOffsetSeconds)) {\r\n            // must refresh due to the expires_in value\r\n            this.setCacheOutcome(CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED, request.correlationId);\r\n            throw createClientAuthError(tokenRefreshRequired);\r\n        }\r\n        else if (cachedAccessToken.refreshOn &&\r\n            isTokenExpired(cachedAccessToken.refreshOn, 0)) {\r\n            // must refresh (in the background) due to the refresh_in value\r\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\r\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\r\n        }\r\n        const environment = request.authority || this.authority.getPreferredCache();\r\n        const cacheRecord = {\r\n            account: this.cacheManager.readAccountFromCache(request.account),\r\n            accessToken: cachedAccessToken,\r\n            idToken: this.cacheManager.getIdToken(request.account, tokenKeys, requestTenantId, this.performanceClient, request.correlationId),\r\n            refreshToken: null,\r\n            appMetadata: this.cacheManager.readAppMetadataFromCache(environment),\r\n        };\r\n        this.setCacheOutcome(lastCacheOutcome, request.correlationId);\r\n        if (this.config.serverTelemetryManager) {\r\n            this.config.serverTelemetryManager.incrementCacheHits();\r\n        }\r\n        return [\r\n            await invokeAsync(this.generateResultFromCacheRecord.bind(this), PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, this.logger, this.performanceClient, request.correlationId)(cacheRecord, request),\r\n            lastCacheOutcome,\r\n        ];\r\n    }\r\n    setCacheOutcome(cacheOutcome, correlationId) {\r\n        this.serverTelemetryManager?.setCacheOutcome(cacheOutcome);\r\n        this.performanceClient?.addFields({\r\n            cacheOutcome: cacheOutcome,\r\n        }, correlationId);\r\n        if (cacheOutcome !== CacheOutcome.NOT_APPLICABLE) {\r\n            this.logger.info(`Token refresh is required due to cache outcome: ${cacheOutcome}`);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to build response object from the CacheRecord\r\n     * @param cacheRecord\r\n     */\r\n    async generateResultFromCacheRecord(cacheRecord, request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.SilentFlowClientGenerateResultFromCacheRecord, request.correlationId);\r\n        let idTokenClaims;\r\n        if (cacheRecord.idToken) {\r\n            idTokenClaims = extractTokenClaims(cacheRecord.idToken.secret, this.config.cryptoInterface.base64Decode);\r\n        }\r\n        // token max_age check\r\n        if (request.maxAge || request.maxAge === 0) {\r\n            const authTime = idTokenClaims?.auth_time;\r\n            if (!authTime) {\r\n                throw createClientAuthError(authTimeNotFound);\r\n            }\r\n            checkMaxAge(authTime, request.maxAge);\r\n        }\r\n        return ResponseHandler.generateAuthenticationResult(this.cryptoUtils, this.authority, cacheRecord, true, request, idTokenClaims);\r\n    }\r\n}\r\n\r\nexport { SilentFlowClient };\r\n//# sourceMappingURL=SilentFlowClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\r\nimport { PerformanceEvents, invokeAsync, SilentFlowClient } from '@azure/msal-common/browser';\r\nimport { ApiId } from '../utils/BrowserConstants.mjs';\r\nimport { BrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { cryptoKeyNotFound } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentCacheClient extends StandardInteractionClient {\r\n    /**\r\n     * Returns unexpired tokens from the cache, if available\r\n     * @param silentRequest\r\n     */\r\n    async acquireToken(silentRequest) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentCacheClientAcquireToken, silentRequest.correlationId);\r\n        // Telemetry manager only used to increment cacheHits here\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\r\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)({\r\n            serverTelemetryManager,\r\n            requestAuthority: silentRequest.authority,\r\n            requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        const silentAuthClient = new SilentFlowClient(clientConfig, this.performanceClient);\r\n        this.logger.verbose(\"Silent auth client created\");\r\n        try {\r\n            const response = await invokeAsync(silentAuthClient.acquireCachedToken.bind(silentAuthClient), PerformanceEvents.SilentFlowClientAcquireCachedToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\r\n            const authResponse = response[0];\r\n            this.performanceClient.addFields({\r\n                fromCache: true,\r\n            }, silentRequest.correlationId);\r\n            return authResponse;\r\n        }\r\n        catch (error) {\r\n            if (error instanceof BrowserAuthError &&\r\n                error.errorCode === cryptoKeyNotFound) {\r\n                this.logger.verbose(\"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\");\r\n            }\r\n            throw error;\r\n        }\r\n    }\r\n    /**\r\n     * API to silenty clear the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest) {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\r\n    }\r\n}\r\n\r\nexport { SilentCacheClient };\r\n//# sourceMappingURL=SilentCacheClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { ServerTelemetryManager, AADServerParamKeys, PerformanceEvents, TimeUtils, ScopeSet, createClientAuthError, ClientAuthErrorCodes, AuthToken, buildAccountToCache, AccountEntity, Constants, AuthorityType, AuthenticationScheme, PopTokenGenerator, updateAccountTenantProfileData, CacheHelpers, createAuthError, AuthErrorCodes, UrlString, OIDC_DEFAULT_SCOPES, invokeAsync, PromptValue } from '@azure/msal-common/browser';\r\nimport { BaseInteractionClient } from './BaseInteractionClient.mjs';\r\nimport { NativeConstants, BrowserConstants, CacheLookupPolicy, NativeExtensionMethod, TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.mjs';\r\nimport { NativeAuthError, isFatalNativeAuthError, createNativeAuthError } from '../error/NativeAuthError.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { SilentCacheClient } from './SilentCacheClient.mjs';\r\nimport { base64Decode } from '../encode/Base64Decode.mjs';\r\nimport { version } from '../packageMetadata.mjs';\r\nimport { invalidPopTokenRequest, nativePromptNotSupported } from '../error/BrowserAuthErrorCodes.mjs';\r\nimport { userSwitch } from '../error/NativeAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NativeInteractionClient extends BaseInteractionClient {\r\n    constructor(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, provider, accountId, nativeStorageImpl, correlationId) {\r\n        super(config, browserStorage, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        this.apiId = apiId;\r\n        this.accountId = accountId;\r\n        this.nativeMessageHandler = provider;\r\n        this.nativeStorageManager = nativeStorageImpl;\r\n        this.silentCacheClient = new SilentCacheClient(config, this.nativeStorageManager, browserCrypto, logger, eventHandler, navigationClient, performanceClient, provider, correlationId);\r\n        const extensionName = this.nativeMessageHandler.getExtensionId() ===\r\n            NativeConstants.PREFERRED_EXTENSION_ID\r\n            ? \"chrome\"\r\n            : this.nativeMessageHandler.getExtensionId()?.length\r\n                ? \"unknown\"\r\n                : undefined;\r\n        this.skus = ServerTelemetryManager.makeExtraSkuString({\r\n            libraryName: BrowserConstants.MSAL_SKU,\r\n            libraryVersion: version,\r\n            extensionName: extensionName,\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n        });\r\n    }\r\n    /**\r\n     * Adds SKUs to request extra query parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    addRequestSKUs(request) {\r\n        request.extraParameters = {\r\n            ...request.extraParameters,\r\n            [AADServerParamKeys.X_CLIENT_EXTRA_SKU]: this.skus,\r\n        };\r\n    }\r\n    /**\r\n     * Acquire token from native platform via browser extension\r\n     * @param request\r\n     */\r\n    async acquireToken(request, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\r\n        // start the perf measurement\r\n        const nativeATMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.NativeInteractionClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        try {\r\n            // initialize native request\r\n            const nativeRequest = await this.initializeNativeRequest(request);\r\n            // check if the tokens can be retrieved from internal cache\r\n            try {\r\n                const result = await this.acquireTokensFromCache(this.accountId, nativeRequest);\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: false,\r\n                    fromCache: true,\r\n                });\r\n                return result;\r\n            }\r\n            catch (e) {\r\n                if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\r\n                    this.logger.info(\"MSAL internal Cache does not contain tokens, return error as per cache policy\");\r\n                    throw e;\r\n                }\r\n                // continue with a native call for any and all errors\r\n                this.logger.info(\"MSAL internal Cache does not contain tokens, proceed to make a native call\");\r\n            }\r\n            const { ...nativeTokenRequest } = nativeRequest;\r\n            // fall back to native calls\r\n            const messageBody = {\r\n                method: NativeExtensionMethod.GetToken,\r\n                request: nativeTokenRequest,\r\n            };\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            const validatedResponse = this.validateNativeResponse(response);\r\n            return await this.handleNativeResponse(validatedResponse, nativeRequest, reqTimestamp)\r\n                .then((result) => {\r\n                nativeATMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: true,\r\n                    requestId: result.requestId,\r\n                });\r\n                serverTelemetryManager.clearNativeBrokerErrorCode();\r\n                return result;\r\n            })\r\n                .catch((error) => {\r\n                nativeATMeasurement.end({\r\n                    success: false,\r\n                    errorCode: error.errorCode,\r\n                    subErrorCode: error.subError,\r\n                    isNativeBroker: true,\r\n                });\r\n                throw error;\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e instanceof NativeAuthError) {\r\n                serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Creates silent flow request\r\n     * @param request\r\n     * @param cachedAccount\r\n     * @returns CommonSilentFlowRequest\r\n     */\r\n    createSilentCacheRequest(request, cachedAccount) {\r\n        return {\r\n            authority: request.authority,\r\n            correlationId: this.correlationId,\r\n            scopes: ScopeSet.fromString(request.scope).asArray(),\r\n            account: cachedAccount,\r\n            forceRefresh: false,\r\n        };\r\n    }\r\n    /**\r\n     * Fetches the tokens from the cache if un-expired\r\n     * @param nativeAccountId\r\n     * @param request\r\n     * @returns authenticationResult\r\n     */\r\n    async acquireTokensFromCache(nativeAccountId, request) {\r\n        if (!nativeAccountId) {\r\n            this.logger.warning(\"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\");\r\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\r\n        }\r\n        // fetch the account from browser cache\r\n        const account = this.browserStorage.getBaseAccountInfo({\r\n            nativeAccountId,\r\n        });\r\n        if (!account) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\r\n        }\r\n        // leverage silent flow for cached tokens retrieval\r\n        try {\r\n            const silentRequest = this.createSilentCacheRequest(request, account);\r\n            const result = await this.silentCacheClient.acquireToken(silentRequest);\r\n            const fullAccount = {\r\n                ...account,\r\n                idTokenClaims: result?.idTokenClaims,\r\n                idToken: result?.idToken,\r\n            };\r\n            return {\r\n                ...result,\r\n                account: fullAccount,\r\n            };\r\n        }\r\n        catch (e) {\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\r\n     * @param {RedirectRequest} request\r\n     * @param {InProgressPerformanceEvent} rootMeasurement\r\n     */\r\n    async acquireTokenRedirect(request, rootMeasurement) {\r\n        this.logger.trace(\"NativeInteractionClient - acquireTokenRedirect called.\");\r\n        const { ...remainingParameters } = request;\r\n        delete remainingParameters.onRedirectNavigate;\r\n        const nativeRequest = await this.initializeNativeRequest(remainingParameters);\r\n        const messageBody = {\r\n            method: NativeExtensionMethod.GetToken,\r\n            request: nativeRequest,\r\n        };\r\n        try {\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n        }\r\n        catch (e) {\r\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\r\n            if (e instanceof NativeAuthError) {\r\n                const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n                serverTelemetryManager.setNativeBrokerErrorCode(e.errorCode);\r\n                if (isFatalNativeAuthError(e)) {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        this.browserStorage.setTemporaryCache(TemporaryCacheKeys.NATIVE_REQUEST, JSON.stringify(nativeRequest), true);\r\n        const navigationOptions = {\r\n            apiId: ApiId.acquireTokenRedirect,\r\n            timeout: this.config.system.redirectNavigationTimeout,\r\n            noHistory: false,\r\n        };\r\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\r\n            ? window.location.href\r\n            : this.getRedirectUri(request.redirectUri);\r\n        rootMeasurement.end({ success: true });\r\n        await this.navigationClient.navigateExternal(redirectUri, navigationOptions); // Need to treat this as external to ensure handleRedirectPromise is run again\r\n    }\r\n    /**\r\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\r\n     * @param performanceClient {IPerformanceClient?}\r\n     * @param correlationId {string?} correlation identifier\r\n     */\r\n    async handleRedirectPromise(performanceClient, correlationId) {\r\n        this.logger.trace(\"NativeInteractionClient - handleRedirectPromise called.\");\r\n        if (!this.browserStorage.isInteractionInProgress(true)) {\r\n            this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n            return null;\r\n        }\r\n        // remove prompt from the request to prevent WAM from prompting twice\r\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\r\n        if (!cachedRequest) {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\");\r\n            if (performanceClient && correlationId) {\r\n                performanceClient?.addFields({ errorCode: \"no_cached_request\" }, correlationId);\r\n            }\r\n            return null;\r\n        }\r\n        const { prompt, ...request } = cachedRequest;\r\n        if (prompt) {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\");\r\n        }\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST));\r\n        const messageBody = {\r\n            method: NativeExtensionMethod.GetToken,\r\n            request: request,\r\n        };\r\n        const reqTimestamp = TimeUtils.nowSeconds();\r\n        try {\r\n            this.logger.verbose(\"NativeInteractionClient - handleRedirectPromise sending message to native broker.\");\r\n            const response = await this.nativeMessageHandler.sendMessage(messageBody);\r\n            this.validateNativeResponse(response);\r\n            const result = this.handleNativeResponse(response, request, reqTimestamp);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            const res = await result;\r\n            const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n            serverTelemetryManager.clearNativeBrokerErrorCode();\r\n            return res;\r\n        }\r\n        catch (e) {\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Logout from native platform via browser extension\r\n     * @param request\r\n     */\r\n    logout() {\r\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\r\n        return Promise.reject(\"Logout not implemented yet\");\r\n    }\r\n    /**\r\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\r\n     * @param response\r\n     * @param request\r\n     * @param reqTimestamp\r\n     */\r\n    async handleNativeResponse(response, request, reqTimestamp) {\r\n        this.logger.trace(\"NativeInteractionClient - handleNativeResponse called.\");\r\n        // generate identifiers\r\n        const idTokenClaims = AuthToken.extractTokenClaims(response.id_token, base64Decode);\r\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(response, idTokenClaims);\r\n        const cachedhomeAccountId = this.browserStorage.getAccountInfoFilteredBy({\r\n            nativeAccountId: request.accountId,\r\n        })?.homeAccountId;\r\n        if (homeAccountIdentifier !== cachedhomeAccountId &&\r\n            response.account.id !== request.accountId) {\r\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\r\n            throw createNativeAuthError(userSwitch);\r\n        }\r\n        // Get the preferred_cache domain for the given authority\r\n        const authority = await this.getDiscoveredAuthority({\r\n            requestAuthority: request.authority,\r\n        });\r\n        const baseAccount = buildAccountToCache(this.browserStorage, authority, homeAccountIdentifier, base64Decode, idTokenClaims, response.client_info, undefined, // environment\r\n        idTokenClaims.tid, undefined, // auth code payload\r\n        response.account.id, this.logger);\r\n        // generate authenticationResult\r\n        const result = await this.generateAuthenticationResult(response, request, idTokenClaims, baseAccount, authority.canonicalAuthority, reqTimestamp);\r\n        // cache accounts and tokens in the appropriate storage\r\n        await this.cacheAccount(baseAccount);\r\n        await this.cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, response.access_token, result.tenantId, reqTimestamp);\r\n        return result;\r\n    }\r\n    /**\r\n     * creates an homeAccountIdentifier for the account\r\n     * @param response\r\n     * @param idTokenObj\r\n     * @returns\r\n     */\r\n    createHomeAccountIdentifier(response, idTokenClaims) {\r\n        // Save account in browser storage\r\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(response.client_info || Constants.EMPTY_STRING, AuthorityType.Default, this.logger, this.browserCrypto, idTokenClaims);\r\n        return homeAccountIdentifier;\r\n    }\r\n    /**\r\n     * Helper to generate scopes\r\n     * @param response\r\n     * @param request\r\n     * @returns\r\n     */\r\n    generateScopes(response, request) {\r\n        return response.scope\r\n            ? ScopeSet.fromString(response.scope)\r\n            : ScopeSet.fromString(request.scope);\r\n    }\r\n    /**\r\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\r\n     * @param request\r\n     * @param response\r\n     */\r\n    async generatePopAccessToken(response, request) {\r\n        if (request.tokenType === AuthenticationScheme.POP &&\r\n            request.signPopToken) {\r\n            /**\r\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\r\n             * is still received, SHR is calculated locally\r\n             */\r\n            // Check if native layer returned an SHR token\r\n            if (response.shr) {\r\n                this.logger.trace(\"handleNativeServerResponse: SHR is enabled in native layer\");\r\n                return response.shr;\r\n            }\r\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\r\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n            const shrParameters = {\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n            /**\r\n             * KeyID must be present in the native request from when the PoP key was generated in order for\r\n             * PopTokenGenerator to query the full key for signing\r\n             */\r\n            if (!request.keyId) {\r\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\r\n            }\r\n            return popTokenGenerator.signPopToken(response.access_token, request.keyId, shrParameters);\r\n        }\r\n        else {\r\n            return response.access_token;\r\n        }\r\n    }\r\n    /**\r\n     * Generates authentication result\r\n     * @param response\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param accountEntity\r\n     * @param authority\r\n     * @param reqTimestamp\r\n     * @returns\r\n     */\r\n    async generateAuthenticationResult(response, request, idTokenClaims, accountEntity, authority, reqTimestamp) {\r\n        // Add Native Broker fields to Telemetry\r\n        const mats = this.addTelemetryFromNativeResponse(response);\r\n        // If scopes not returned in server response, use request scopes\r\n        const responseScopes = response.scope\r\n            ? ScopeSet.fromString(response.scope)\r\n            : ScopeSet.fromString(request.scope);\r\n        const accountProperties = response.account.properties || {};\r\n        const uid = accountProperties[\"UID\"] ||\r\n            idTokenClaims.oid ||\r\n            idTokenClaims.sub ||\r\n            Constants.EMPTY_STRING;\r\n        const tid = accountProperties[\"TenantId\"] ||\r\n            idTokenClaims.tid ||\r\n            Constants.EMPTY_STRING;\r\n        const accountInfo = updateAccountTenantProfileData(accountEntity.getAccountInfo(), undefined, // tenantProfile optional\r\n        idTokenClaims, response.id_token);\r\n        /**\r\n         * In pairwise broker flows, this check prevents the broker's native account id\r\n         * from being returned over the embedded app's account id.\r\n         */\r\n        if (accountInfo.nativeAccountId !== response.account.id) {\r\n            accountInfo.nativeAccountId = response.account.id;\r\n        }\r\n        // generate PoP token as needed\r\n        const responseAccessToken = await this.generatePopAccessToken(response, request);\r\n        const tokenType = request.tokenType === AuthenticationScheme.POP\r\n            ? AuthenticationScheme.POP\r\n            : AuthenticationScheme.BEARER;\r\n        const result = {\r\n            authority: authority,\r\n            uniqueId: uid,\r\n            tenantId: tid,\r\n            scopes: responseScopes.asArray(),\r\n            account: accountInfo,\r\n            idToken: response.id_token,\r\n            idTokenClaims: idTokenClaims,\r\n            accessToken: responseAccessToken,\r\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\r\n            // Request timestamp and NativeResponse expires_in are in seconds, converting to Date for AuthenticationResult\r\n            expiresOn: TimeUtils.toDateFromSeconds(reqTimestamp + response.expires_in),\r\n            tokenType: tokenType,\r\n            correlationId: this.correlationId,\r\n            state: response.state,\r\n            fromNativeBroker: true,\r\n        };\r\n        return result;\r\n    }\r\n    /**\r\n     * cache the account entity in browser storage\r\n     * @param accountEntity\r\n     */\r\n    async cacheAccount(accountEntity) {\r\n        // Store the account info and hence `nativeAccountId` in browser cache\r\n        await this.browserStorage.setAccount(accountEntity, this.correlationId);\r\n        // Remove any existing cached tokens for this account in browser storage\r\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\r\n            this.logger.error(`Error occurred while removing account context from browser storage. ${e}`);\r\n        });\r\n    }\r\n    /**\r\n     * Stores the access_token and id_token in inmemory storage\r\n     * @param response\r\n     * @param request\r\n     * @param homeAccountIdentifier\r\n     * @param idTokenObj\r\n     * @param responseAccessToken\r\n     * @param tenantId\r\n     * @param reqTimestamp\r\n     */\r\n    cacheNativeTokens(response, request, homeAccountIdentifier, idTokenClaims, responseAccessToken, tenantId, reqTimestamp) {\r\n        const cachedIdToken = CacheHelpers.createIdTokenEntity(homeAccountIdentifier, request.authority, response.id_token || \"\", request.clientId, idTokenClaims.tid || \"\");\r\n        // cache accessToken in inmemory storage\r\n        const expiresIn = request.tokenType === AuthenticationScheme.POP\r\n            ? Constants.SHR_NONCE_VALIDITY\r\n            : (typeof response.expires_in === \"string\"\r\n                ? parseInt(response.expires_in, 10)\r\n                : response.expires_in) || 0;\r\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\r\n        const responseScopes = this.generateScopes(response, request);\r\n        const cachedAccessToken = CacheHelpers.createAccessTokenEntity(homeAccountIdentifier, request.authority, responseAccessToken, request.clientId, idTokenClaims.tid || tenantId, responseScopes.printScopes(), tokenExpirationSeconds, 0, base64Decode, undefined, request.tokenType, undefined, request.keyId);\r\n        const nativeCacheRecord = {\r\n            idToken: cachedIdToken,\r\n            accessToken: cachedAccessToken,\r\n        };\r\n        return this.nativeStorageManager.saveCacheRecord(nativeCacheRecord, this.correlationId, request.storeInCache);\r\n    }\r\n    addTelemetryFromNativeResponse(response) {\r\n        const mats = this.getMATSFromResponse(response);\r\n        if (!mats) {\r\n            return null;\r\n        }\r\n        this.performanceClient.addFields({\r\n            extensionId: this.nativeMessageHandler.getExtensionId(),\r\n            extensionVersion: this.nativeMessageHandler.getExtensionVersion(),\r\n            matsBrokerVersion: mats.broker_version,\r\n            matsAccountJoinOnStart: mats.account_join_on_start,\r\n            matsAccountJoinOnEnd: mats.account_join_on_end,\r\n            matsDeviceJoin: mats.device_join,\r\n            matsPromptBehavior: mats.prompt_behavior,\r\n            matsApiErrorCode: mats.api_error_code,\r\n            matsUiVisible: mats.ui_visible,\r\n            matsSilentCode: mats.silent_code,\r\n            matsSilentBiSubCode: mats.silent_bi_sub_code,\r\n            matsSilentMessage: mats.silent_message,\r\n            matsSilentStatus: mats.silent_status,\r\n            matsHttpStatus: mats.http_status,\r\n            matsHttpEventCount: mats.http_event_count,\r\n        }, this.correlationId);\r\n        return mats;\r\n    }\r\n    /**\r\n     * Validates native platform response before processing\r\n     * @param response\r\n     */\r\n    validateNativeResponse(response) {\r\n        if (response.hasOwnProperty(\"access_token\") &&\r\n            response.hasOwnProperty(\"id_token\") &&\r\n            response.hasOwnProperty(\"client_info\") &&\r\n            response.hasOwnProperty(\"account\") &&\r\n            response.hasOwnProperty(\"scope\") &&\r\n            response.hasOwnProperty(\"expires_in\")) {\r\n            return response;\r\n        }\r\n        else {\r\n            throw createAuthError(AuthErrorCodes.unexpectedError, \"Response missing expected properties.\");\r\n        }\r\n    }\r\n    /**\r\n     * Gets MATS telemetry from native response\r\n     * @param response\r\n     * @returns\r\n     */\r\n    getMATSFromResponse(response) {\r\n        if (response.properties.MATS) {\r\n            try {\r\n                return JSON.parse(response.properties.MATS);\r\n            }\r\n            catch (e) {\r\n                this.logger.error(\"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\");\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * Returns whether or not response came from native cache\r\n     * @param response\r\n     * @returns\r\n     */\r\n    isResponseFromCache(mats) {\r\n        if (typeof mats.is_cached === \"undefined\") {\r\n            this.logger.verbose(\"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\");\r\n            return false;\r\n        }\r\n        return !!mats.is_cached;\r\n    }\r\n    /**\r\n     * Translates developer provided request object into NativeRequest object\r\n     * @param request\r\n     */\r\n    async initializeNativeRequest(request) {\r\n        this.logger.trace(\"NativeInteractionClient - initializeNativeRequest called\");\r\n        const requestAuthority = request.authority || this.config.auth.authority;\r\n        if (request.account) {\r\n            // validate authority\r\n            await this.getDiscoveredAuthority({\r\n                requestAuthority,\r\n                requestAzureCloudOptions: request.azureCloudOptions,\r\n                account: request.account,\r\n            });\r\n        }\r\n        const canonicalAuthority = new UrlString(requestAuthority);\r\n        canonicalAuthority.validateAsUri();\r\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\r\n        const { scopes, ...remainingProperties } = request;\r\n        const scopeSet = new ScopeSet(scopes || []);\r\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\r\n        const getPrompt = () => {\r\n            // If request is silent, prompt is always none\r\n            switch (this.apiId) {\r\n                case ApiId.ssoSilent:\r\n                case ApiId.acquireTokenSilent_silentFlow:\r\n                    this.logger.trace(\"initializeNativeRequest: silent request sets prompt to none\");\r\n                    return PromptValue.NONE;\r\n            }\r\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\r\n            if (!request.prompt) {\r\n                this.logger.trace(\"initializeNativeRequest: prompt was not provided\");\r\n                return undefined;\r\n            }\r\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\r\n            switch (request.prompt) {\r\n                case PromptValue.NONE:\r\n                case PromptValue.CONSENT:\r\n                case PromptValue.LOGIN:\r\n                    this.logger.trace(\"initializeNativeRequest: prompt is compatible with native flow\");\r\n                    return request.prompt;\r\n                default:\r\n                    this.logger.trace(`initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`);\r\n                    throw createBrowserAuthError(nativePromptNotSupported);\r\n            }\r\n        };\r\n        const validatedRequest = {\r\n            ...remainingProperties,\r\n            accountId: this.accountId,\r\n            clientId: this.config.auth.clientId,\r\n            authority: canonicalAuthority.urlString,\r\n            scope: scopeSet.printScopes(),\r\n            redirectUri: this.getRedirectUri(request.redirectUri),\r\n            prompt: getPrompt(),\r\n            correlationId: this.correlationId,\r\n            tokenType: request.authenticationScheme,\r\n            windowTitleSubstring: document.title,\r\n            extraParameters: {\r\n                ...request.extraQueryParameters,\r\n                ...request.tokenQueryParameters,\r\n            },\r\n            extendedExpiryToken: false,\r\n            keyId: request.popKid,\r\n        };\r\n        // Check for PoP token requests: signPopToken should only be set to true if popKid is not set\r\n        if (validatedRequest.signPopToken && !!request.popKid) {\r\n            throw createBrowserAuthError(invalidPopTokenRequest);\r\n        }\r\n        this.handleExtraBrokerParams(validatedRequest);\r\n        validatedRequest.extraParameters =\r\n            validatedRequest.extraParameters || {};\r\n        validatedRequest.extraParameters.telemetry =\r\n            NativeConstants.MATS_TELEMETRY;\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            // add POP request type\r\n            const shrParameters = {\r\n                resourceRequestUri: request.resourceRequestUri,\r\n                resourceRequestMethod: request.resourceRequestMethod,\r\n                shrClaims: request.shrClaims,\r\n                shrNonce: request.shrNonce,\r\n            };\r\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\r\n            // generate reqCnf if not provided in the request\r\n            let reqCnfData;\r\n            if (!validatedRequest.keyId) {\r\n                const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(shrParameters, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n                validatedRequest.keyId = generatedReqCnfData.kid;\r\n                validatedRequest.signPopToken = true;\r\n            }\r\n            else {\r\n                reqCnfData = this.browserCrypto.base64UrlEncode(JSON.stringify({ kid: validatedRequest.keyId }));\r\n                validatedRequest.signPopToken = false;\r\n            }\r\n            // SPAs require whole string to be passed to broker\r\n            validatedRequest.reqCnf = reqCnfData;\r\n        }\r\n        this.addRequestSKUs(validatedRequest);\r\n        return validatedRequest;\r\n    }\r\n    /**\r\n     * Handles extra broker request parameters\r\n     * @param request {NativeTokenRequest}\r\n     * @private\r\n     */\r\n    handleExtraBrokerParams(request) {\r\n        const hasExtraBrokerParams = request.extraParameters &&\r\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.BROKER_CLIENT_ID) &&\r\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.BROKER_REDIRECT_URI) &&\r\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.CLIENT_ID);\r\n        if (!request.embeddedClientId && !hasExtraBrokerParams) {\r\n            return;\r\n        }\r\n        let child_client_id = \"\";\r\n        const child_redirect_uri = request.redirectUri;\r\n        if (request.embeddedClientId) {\r\n            request.redirectUri = this.config.auth.redirectUri;\r\n            child_client_id = request.embeddedClientId;\r\n        }\r\n        else if (request.extraParameters) {\r\n            request.redirectUri =\r\n                request.extraParameters[AADServerParamKeys.BROKER_REDIRECT_URI];\r\n            child_client_id =\r\n                request.extraParameters[AADServerParamKeys.CLIENT_ID];\r\n        }\r\n        request.extraParameters = {\r\n            child_client_id,\r\n            child_redirect_uri,\r\n        };\r\n        this.performanceClient?.addFields({\r\n            embeddedClientId: child_client_id,\r\n            embeddedRedirectUri: child_redirect_uri,\r\n        }, request.correlationId);\r\n    }\r\n}\r\n\r\nexport { NativeInteractionClient };\r\n//# sourceMappingURL=NativeInteractionClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { NativeConstants, NativeExtensionMethod } from '../../utils/BrowserConstants.mjs';\r\nimport { PerformanceEvents, createAuthError, AuthErrorCodes, AuthenticationScheme } from '@azure/msal-common/browser';\r\nimport { createNativeAuthError } from '../../error/NativeAuthError.mjs';\r\nimport { createBrowserAuthError } from '../../error/BrowserAuthError.mjs';\r\nimport { createNewGuid } from '../../crypto/BrowserCrypto.mjs';\r\nimport { nativeHandshakeTimeout, nativeExtensionNotInstalled } from '../../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass NativeMessageHandler {\r\n    constructor(logger, handshakeTimeoutMs, performanceClient, extensionId) {\r\n        this.logger = logger;\r\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\r\n        this.extensionId = extensionId;\r\n        this.resolvers = new Map(); // Used for non-handshake messages\r\n        this.handshakeResolvers = new Map(); // Used for handshake messages\r\n        this.messageChannel = new MessageChannel();\r\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\r\n        this.performanceClient = performanceClient;\r\n        this.handshakeEvent = performanceClient.startMeasurement(PerformanceEvents.NativeMessageHandlerHandshake);\r\n    }\r\n    /**\r\n     * Sends a given message to the extension and resolves with the extension response\r\n     * @param body\r\n     */\r\n    async sendMessage(body) {\r\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\r\n        const req = {\r\n            channel: NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: createNewGuid(),\r\n            body: body,\r\n        };\r\n        this.logger.trace(\"NativeMessageHandler - Sending request to browser extension\");\r\n        this.logger.tracePii(`NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(req)}`);\r\n        this.messageChannel.port1.postMessage(req);\r\n        return new Promise((resolve, reject) => {\r\n            this.resolvers.set(req.responseId, { resolve, reject });\r\n        });\r\n    }\r\n    /**\r\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\r\n     * @param {Logger} logger\r\n     * @param {number} handshakeTimeoutMs\r\n     * @param {IPerformanceClient} performanceClient\r\n     * @param {ICrypto} crypto\r\n     */\r\n    static async createProvider(logger, handshakeTimeoutMs, performanceClient) {\r\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\r\n        try {\r\n            const preferredProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient, NativeConstants.PREFERRED_EXTENSION_ID);\r\n            await preferredProvider.sendHandshakeRequest();\r\n            return preferredProvider;\r\n        }\r\n        catch (e) {\r\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\r\n            const backupProvider = new NativeMessageHandler(logger, handshakeTimeoutMs, performanceClient);\r\n            await backupProvider.sendHandshakeRequest();\r\n            return backupProvider;\r\n        }\r\n    }\r\n    /**\r\n     * Send handshake request helper.\r\n     */\r\n    async sendHandshakeRequest() {\r\n        this.logger.trace(\"NativeMessageHandler - sendHandshakeRequest called.\");\r\n        // Register this event listener before sending handshake\r\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\r\n        const req = {\r\n            channel: NativeConstants.CHANNEL_ID,\r\n            extensionId: this.extensionId,\r\n            responseId: createNewGuid(),\r\n            body: {\r\n                method: NativeExtensionMethod.HandshakeRequest,\r\n            },\r\n        };\r\n        this.handshakeEvent.add({\r\n            extensionId: this.extensionId,\r\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\r\n        });\r\n        this.messageChannel.port1.onmessage = (event) => {\r\n            this.onChannelMessage(event);\r\n        };\r\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\r\n        return new Promise((resolve, reject) => {\r\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\r\n            this.timeoutId = window.setTimeout(() => {\r\n                /*\r\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\r\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\r\n                 */\r\n                window.removeEventListener(\"message\", this.windowListener, false);\r\n                this.messageChannel.port1.close();\r\n                this.messageChannel.port2.close();\r\n                this.handshakeEvent.end({\r\n                    extensionHandshakeTimedOut: true,\r\n                    success: false,\r\n                });\r\n                reject(createBrowserAuthError(nativeHandshakeTimeout));\r\n                this.handshakeResolvers.delete(req.responseId);\r\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\r\n        });\r\n    }\r\n    /**\r\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\r\n     * @param event\r\n     */\r\n    onWindowMessage(event) {\r\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\r\n        // We only accept messages from ourselves\r\n        if (event.source !== window) {\r\n            return;\r\n        }\r\n        const request = event.data;\r\n        if (!request.channel ||\r\n            request.channel !== NativeConstants.CHANNEL_ID) {\r\n            return;\r\n        }\r\n        if (request.extensionId && request.extensionId !== this.extensionId) {\r\n            return;\r\n        }\r\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\r\n            const handshakeResolver = this.handshakeResolvers.get(request.responseId);\r\n            /*\r\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\r\n             * the proper response.\r\n             */\r\n            if (!handshakeResolver) {\r\n                this.logger.trace(`NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`);\r\n                return;\r\n            }\r\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\r\n            this.logger.verbose(request.extensionId\r\n                ? `Extension with id: ${request.extensionId} not installed`\r\n                : \"No extension installed\");\r\n            clearTimeout(this.timeoutId);\r\n            this.messageChannel.port1.close();\r\n            this.messageChannel.port2.close();\r\n            window.removeEventListener(\"message\", this.windowListener, false);\r\n            this.handshakeEvent.end({\r\n                success: false,\r\n                extensionInstalled: false,\r\n            });\r\n            handshakeResolver.reject(createBrowserAuthError(nativeExtensionNotInstalled));\r\n        }\r\n    }\r\n    /**\r\n     * Invoked when a message is received from the extension on the MessageChannel port\r\n     * @param event\r\n     */\r\n    onChannelMessage(event) {\r\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\r\n        const request = event.data;\r\n        const resolver = this.resolvers.get(request.responseId);\r\n        const handshakeResolver = this.handshakeResolvers.get(request.responseId);\r\n        try {\r\n            const method = request.body.method;\r\n            if (method === NativeExtensionMethod.Response) {\r\n                if (!resolver) {\r\n                    return;\r\n                }\r\n                const response = request.body.response;\r\n                this.logger.trace(\"NativeMessageHandler - Received response from browser extension\");\r\n                this.logger.tracePii(`NativeMessageHandler - Received response from browser extension: ${JSON.stringify(response)}`);\r\n                if (response.status !== \"Success\") {\r\n                    resolver.reject(createNativeAuthError(response.code, response.description, response.ext));\r\n                }\r\n                else if (response.result) {\r\n                    if (response.result[\"code\"] &&\r\n                        response.result[\"description\"]) {\r\n                        resolver.reject(createNativeAuthError(response.result[\"code\"], response.result[\"description\"], response.result[\"ext\"]));\r\n                    }\r\n                    else {\r\n                        resolver.resolve(response.result);\r\n                    }\r\n                }\r\n                else {\r\n                    throw createAuthError(AuthErrorCodes.unexpectedError, \"Event does not contain result.\");\r\n                }\r\n                this.resolvers.delete(request.responseId);\r\n            }\r\n            else if (method === NativeExtensionMethod.HandshakeResponse) {\r\n                if (!handshakeResolver) {\r\n                    this.logger.trace(`NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`);\r\n                    return;\r\n                }\r\n                clearTimeout(this.timeoutId); // Clear setTimeout\r\n                window.removeEventListener(\"message\", this.windowListener, false); // Remove 'No extension' listener\r\n                this.extensionId = request.extensionId;\r\n                this.extensionVersion = request.body.version;\r\n                this.logger.verbose(`NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`);\r\n                this.handshakeEvent.end({\r\n                    extensionInstalled: true,\r\n                    success: true,\r\n                });\r\n                handshakeResolver.resolve();\r\n                this.handshakeResolvers.delete(request.responseId);\r\n            }\r\n            // Do nothing if method is not Response or HandshakeResponse\r\n        }\r\n        catch (err) {\r\n            this.logger.error(\"Error parsing response from WAM Extension\");\r\n            this.logger.errorPii(`Error parsing response from WAM Extension: ${err}`);\r\n            this.logger.errorPii(`Unable to parse ${event}`);\r\n            if (resolver) {\r\n                resolver.reject(err);\r\n            }\r\n            else if (handshakeResolver) {\r\n                handshakeResolver.reject(err);\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Returns the Id for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionId() {\r\n        return this.extensionId;\r\n    }\r\n    /**\r\n     * Returns the version for the browser extension this handler is communicating with\r\n     * @returns\r\n     */\r\n    getExtensionVersion() {\r\n        return this.extensionVersion;\r\n    }\r\n    /**\r\n     * Returns boolean indicating whether or not the request should attempt to use native broker\r\n     * @param logger\r\n     * @param config\r\n     * @param nativeExtensionProvider\r\n     * @param authenticationScheme\r\n     */\r\n    static isPlatformBrokerAvailable(config, logger, nativeExtensionProvider, authenticationScheme) {\r\n        logger.trace(\"isPlatformBrokerAvailable called\");\r\n        if (!config.system.allowPlatformBroker) {\r\n            logger.trace(\"isPlatformBrokerAvailable: allowPlatformBroker is not enabled, returning false\");\r\n            // Developer disabled WAM\r\n            return false;\r\n        }\r\n        if (!nativeExtensionProvider) {\r\n            logger.trace(\"isPlatformBrokerAvailable: Platform extension provider is not initialized, returning false\");\r\n            // Extension is not available\r\n            return false;\r\n        }\r\n        if (authenticationScheme) {\r\n            switch (authenticationScheme) {\r\n                case AuthenticationScheme.BEARER:\r\n                case AuthenticationScheme.POP:\r\n                    logger.trace(\"isPlatformBrokerAvailable: authenticationScheme is supported, returning true\");\r\n                    return true;\r\n                default:\r\n                    logger.trace(\"isPlatformBrokerAvailable: authenticationScheme is not supported, returning false\");\r\n                    return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { NativeMessageHandler };\r\n//# sourceMappingURL=NativeMessageHandler.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, ServerError, invokeAsync, CcsCredentialType } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { userCancelled } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Abstract class which defines operations for a browser interaction handling class.\r\n */\r\nclass InteractionHandler {\r\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Function to handle response parameters from hash.\r\n     * @param locationHash\r\n     */\r\n    async handleCodeResponse(response, request) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.HandleCodeResponse, request.correlationId);\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(response, request.state);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof ServerError &&\r\n                e.subError === userCancelled) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw createBrowserAuthError(userCancelled);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        return invokeAsync(this.handleCodeResponseFromServer.bind(this), PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)(authCodeResponse, request);\r\n    }\r\n    /**\r\n     * Process auth code response from AAD\r\n     * @param authCodeResponse\r\n     * @param state\r\n     * @param authority\r\n     * @param networkModule\r\n     * @returns\r\n     */\r\n    async handleCodeResponseFromServer(authCodeResponse, request, validateNonce = true) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.HandleCodeResponseFromServer, request.correlationId);\r\n        this.logger.trace(\"InteractionHandler.handleCodeResponseFromServer called\");\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await invokeAsync(this.authModule.updateAuthority.bind(this.authModule), PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, request.correlationId)(authCodeResponse.cloud_instance_host_name, request.correlationId);\r\n        }\r\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\r\n        if (validateNonce) {\r\n            // TODO: Assigning \"response nonce\" to \"request nonce\" is confusing. Refactor the function doing validation to accept request nonce directly\r\n            authCodeResponse.nonce = request.nonce || undefined;\r\n        }\r\n        authCodeResponse.state = request.state;\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        }\r\n        else {\r\n            const ccsCred = this.createCcsCredentials(request);\r\n            if (ccsCred) {\r\n                this.authCodeRequest.ccsCredential = ccsCred;\r\n            }\r\n        }\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await invokeAsync(this.authModule.acquireToken.bind(this.authModule), PerformanceEvents.AuthClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(this.authCodeRequest, authCodeResponse));\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Build ccs creds if available\r\n     */\r\n    createCcsCredentials(request) {\r\n        if (request.account) {\r\n            return {\r\n                credential: request.account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            };\r\n        }\r\n        else if (request.loginHint) {\r\n            return {\r\n                credential: request.loginHint,\r\n                type: CcsCredentialType.UPN,\r\n            };\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport { InteractionHandler };\r\n//# sourceMappingURL=InteractionHandler.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { UrlUtils } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { extractBrowserRequestState } from '../utils/BrowserProtocolUtils.mjs';\r\nimport { hashEmptyError, hashDoesNotContainKnownProperties, noStateInHash, unableToParseState, stateInteractionTypeMismatch } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction deserializeResponse(responseString, responseLocation, logger) {\r\n    // Deserialize hash fragment response parameters.\r\n    const serverParams = UrlUtils.getDeserializedResponse(responseString);\r\n    if (!serverParams) {\r\n        if (!UrlUtils.stripLeadingHashOrQuery(responseString)) {\r\n            // Hash or Query string is empty\r\n            logger.error(`The request has returned to the redirectUri but a ${responseLocation} is not present. It's likely that the ${responseLocation} has been removed or the page has been redirected by code running on the redirectUri page.`);\r\n            throw createBrowserAuthError(hashEmptyError);\r\n        }\r\n        else {\r\n            logger.error(`A ${responseLocation} is present in the iframe but it does not contain known properties. It's likely that the ${responseLocation} has been replaced by code running on the redirectUri page.`);\r\n            logger.errorPii(`The ${responseLocation} detected is: ${responseString}`);\r\n            throw createBrowserAuthError(hashDoesNotContainKnownProperties);\r\n        }\r\n    }\r\n    return serverParams;\r\n}\r\n/**\r\n * Returns the interaction type that the response object belongs to\r\n */\r\nfunction validateInteractionType(response, browserCrypto, interactionType) {\r\n    if (!response.state) {\r\n        throw createBrowserAuthError(noStateInHash);\r\n    }\r\n    const platformStateObj = extractBrowserRequestState(browserCrypto, response.state);\r\n    if (!platformStateObj) {\r\n        throw createBrowserAuthError(unableToParseState);\r\n    }\r\n    if (platformStateObj.interactionType !== interactionType) {\r\n        throw createBrowserAuthError(stateInteractionTypeMismatch);\r\n    }\r\n}\r\n\r\nexport { deserializeResponse, validateInteractionType };\r\n//# sourceMappingURL=ResponseHandler.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { OIDC_DEFAULT_SCOPES, invokeAsync, PerformanceEvents, invoke, ThrottlingUtils, ProtocolUtils, AuthError, ProtocolMode, UrlString, ServerResponseType } from '@azure/msal-common/browser';\r\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\r\nimport { EventType } from '../event/EventType.mjs';\r\nimport { ApiId, InteractionType, BrowserConstants } from '../utils/BrowserConstants.mjs';\r\nimport { preconnect, getCurrentUri } from '../utils/BrowserUtils.mjs';\r\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\r\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\r\nimport { deserializeResponse } from '../response/ResponseHandler.mjs';\r\nimport { nativeConnectionNotEstablished, emptyNavigateUri, userCancelled, emptyWindowError, popupWindowError } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass PopupClient extends StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        // Properly sets this reference for the unload event.\r\n        this.unloadWindow = this.unloadWindow.bind(this);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\r\n     * @param request\r\n     * @param pkceCodes\r\n     */\r\n    acquireToken(request, pkceCodes) {\r\n        try {\r\n            const popupName = this.generatePopupName(request.scopes || OIDC_DEFAULT_SCOPES, request.authority || this.config.auth.authority);\r\n            const popupParams = {\r\n                popupName,\r\n                popupWindowAttributes: request.popupWindowAttributes || {},\r\n                popupWindowParent: request.popupWindowParent ?? window,\r\n            };\r\n            this.performanceClient.addFields({ isAsyncPopup: this.config.system.asyncPopups }, this.correlationId);\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.acquireTokenPopupAsync(request, popupParams, pkceCodes);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup before acquiring token\");\r\n                popupParams.popup = this.openSizedPopup(\"about:blank\", popupParams);\r\n                return this.acquireTokenPopupAsync(request, popupParams, pkceCodes);\r\n            }\r\n        }\r\n        catch (e) {\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logout(logoutRequest) {\r\n        try {\r\n            this.logger.verbose(\"logoutPopup called\");\r\n            const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n            const popupParams = {\r\n                popupName: this.generateLogoutPopupName(validLogoutRequest),\r\n                popupWindowAttributes: logoutRequest?.popupWindowAttributes || {},\r\n                popupWindowParent: logoutRequest?.popupWindowParent ?? window,\r\n            };\r\n            const authority = logoutRequest && logoutRequest.authority;\r\n            const mainWindowRedirectUri = logoutRequest && logoutRequest.mainWindowRedirectUri;\r\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\r\n            if (this.config.system.asyncPopups) {\r\n                this.logger.verbose(\"asyncPopups set to true\");\r\n                // Passes on popup position and dimensions if in request\r\n                return this.logoutPopupAsync(validLogoutRequest, popupParams, authority, mainWindowRedirectUri);\r\n            }\r\n            else {\r\n                // asyncPopups flag is set to false. Opens popup before logging out.\r\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\r\n                popupParams.popup = this.openSizedPopup(\"about:blank\", popupParams);\r\n                return this.logoutPopupAsync(validLogoutRequest, popupParams, authority, mainWindowRedirectUri);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Since this function is synchronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\r\n     * @param request\r\n     * @param popupParams\r\n     * @param pkceCodes\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopupAsync(request, popupParams, pkceCodes) {\r\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenPopup);\r\n        const validRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, InteractionType.Popup);\r\n        /*\r\n         * Skip pre-connect for async popups to reduce time between user interaction and popup window creation to avoid\r\n         * popup from being blocked by browsers with shorter popup timers\r\n         */\r\n        if (popupParams.popup) {\r\n            preconnect(validRequest.authority);\r\n        }\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest, pkceCodes);\r\n            // Initialize the client\r\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n            const isPlatformBroker = NativeMessageHandler.isPlatformBrokerAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme);\r\n            // Start measurement for server calls with native brokering enabled\r\n            let fetchNativeAccountIdMeasurement;\r\n            if (isPlatformBroker) {\r\n                fetchNativeAccountIdMeasurement =\r\n                    this.performanceClient.startMeasurement(PerformanceEvents.FetchAccountIdWithNativeBroker, request.correlationId);\r\n            }\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                platformBroker: isPlatformBroker,\r\n            });\r\n            // Create popup interaction handler.\r\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Show the UI once the url has been created. Get the window handle for the popup.\r\n            const popupWindow = this.initiateAuthRequest(navigateUrl, popupParams);\r\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow }, null);\r\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n            const responseString = await this.monitorPopupForHash(popupWindow, popupParams.popupWindowParent);\r\n            const serverParams = invoke(deserializeResponse, PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, this.config.auth.OIDCOptions.serverResponseType, this.logger);\r\n            // Remove throttle if it exists\r\n            ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, authCodeRequest);\r\n            if (serverParams.accountId) {\r\n                this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n                // end measurement for server call with native brokering enabled\r\n                if (fetchNativeAccountIdMeasurement) {\r\n                    fetchNativeAccountIdMeasurement.end({\r\n                        success: true,\r\n                        isNativeBroker: true,\r\n                    });\r\n                }\r\n                if (!this.nativeMessageHandler) {\r\n                    throw createBrowserAuthError(nativeConnectionNotEstablished);\r\n                }\r\n                const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, validRequest.correlationId);\r\n                const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, validRequest.state);\r\n                return await nativeInteractionClient.acquireToken({\r\n                    ...validRequest,\r\n                    state: userRequestState,\r\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n                });\r\n            }\r\n            // Handle response from hash string.\r\n            const result = await interactionHandler.handleCodeResponse(serverParams, validRequest);\r\n            return result;\r\n        }\r\n        catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     *\r\n     * @param validRequest\r\n     * @param popupName\r\n     * @param requestAuthority\r\n     * @param popup\r\n     * @param mainWindowRedirectUri\r\n     * @param popupWindowAttributes\r\n     */\r\n    async logoutPopupAsync(validRequest, popupParams, requestAuthority, mainWindowRedirectUri) {\r\n        this.logger.verbose(\"logoutPopupAsync called\");\r\n        this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Popup, validRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logoutPopup);\r\n        try {\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validRequest.account);\r\n            // Initialize the client\r\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: requestAuthority,\r\n                account: validRequest.account || undefined,\r\n            });\r\n            try {\r\n                authClient.authority.endSessionEndpoint;\r\n            }\r\n            catch {\r\n                if (validRequest.account?.homeAccountId &&\r\n                    validRequest.postLogoutRedirectUri &&\r\n                    authClient.authority.protocolMode === ProtocolMode.OIDC) {\r\n                    void this.browserStorage.removeAccount(validRequest.account?.homeAccountId);\r\n                    this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\r\n                    if (mainWindowRedirectUri) {\r\n                        const navigationOptions = {\r\n                            apiId: ApiId.logoutPopup,\r\n                            timeout: this.config.system.redirectNavigationTimeout,\r\n                            noHistory: false,\r\n                        };\r\n                        const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, getCurrentUri());\r\n                        await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n                    }\r\n                    popupParams.popup?.close();\r\n                    return;\r\n                }\r\n            }\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri = authClient.getLogoutUri(validRequest);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Popup, validRequest);\r\n            // Open the popup window to requestUrl.\r\n            const popupWindow = this.openPopup(logoutUri, popupParams);\r\n            this.eventHandler.emitEvent(EventType.POPUP_OPENED, InteractionType.Popup, { popupWindow }, null);\r\n            await this.monitorPopupForHash(popupWindow, popupParams.popupWindowParent).catch(() => {\r\n                // Swallow any errors related to monitoring the window. Server logout is best effort\r\n            });\r\n            if (mainWindowRedirectUri) {\r\n                const navigationOptions = {\r\n                    apiId: ApiId.logoutPopup,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: false,\r\n                };\r\n                const absoluteUrl = UrlString.getAbsoluteUrl(mainWindowRedirectUri, getCurrentUri());\r\n                this.logger.verbose(\"Redirecting main window to url specified in the request\");\r\n                this.logger.verbosePii(`Redirecting main window to: ${absoluteUrl}`);\r\n                await this.navigationClient.navigateInternal(absoluteUrl, navigationOptions);\r\n            }\r\n            else {\r\n                this.logger.verbose(\"No main window navigation requested\");\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Close the synchronous popup if an error is thrown before the window unload event is registered\r\n            popupParams.popup?.close();\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Popup, null, e);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n            throw e;\r\n        }\r\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Popup);\r\n    }\r\n    /**\r\n     * Opens a popup window with given request Url.\r\n     * @param requestUrl\r\n     */\r\n    initiateAuthRequest(requestUrl, params) {\r\n        // Check that request url is not empty.\r\n        if (requestUrl) {\r\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\r\n            // Open the popup window to requestUrl.\r\n            return this.openPopup(requestUrl, params);\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.error(\"Navigate url is empty\");\r\n            throw createBrowserAuthError(emptyNavigateUri);\r\n        }\r\n    }\r\n    /**\r\n     * Monitors a window until it loads a url with the same origin.\r\n     * @param popupWindow - window that is being monitored\r\n     * @param timeout - timeout for processing hash once popup is redirected back to application\r\n     */\r\n    monitorPopupForHash(popupWindow, popupWindowParent) {\r\n        return new Promise((resolve, reject) => {\r\n            this.logger.verbose(\"PopupHandler.monitorPopupForHash - polling started\");\r\n            const intervalId = setInterval(() => {\r\n                // Window is closed\r\n                if (popupWindow.closed) {\r\n                    this.logger.error(\"PopupHandler.monitorPopupForHash - window closed\");\r\n                    clearInterval(intervalId);\r\n                    reject(createBrowserAuthError(userCancelled));\r\n                    return;\r\n                }\r\n                let href = \"\";\r\n                try {\r\n                    /*\r\n                     * Will throw if cross origin,\r\n                     * which should be caught and ignored\r\n                     * since we need the interval to keep running while on STS UI.\r\n                     */\r\n                    href = popupWindow.location.href;\r\n                }\r\n                catch (e) { }\r\n                // Don't process blank pages or cross domain\r\n                if (!href || href === \"about:blank\") {\r\n                    return;\r\n                }\r\n                clearInterval(intervalId);\r\n                let responseString = \"\";\r\n                const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n                if (popupWindow) {\r\n                    if (responseType === ServerResponseType.QUERY) {\r\n                        responseString = popupWindow.location.search;\r\n                    }\r\n                    else {\r\n                        responseString = popupWindow.location.hash;\r\n                    }\r\n                }\r\n                this.logger.verbose(\"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\");\r\n                resolve(responseString);\r\n            }, this.config.system.pollIntervalMilliseconds);\r\n        }).finally(() => {\r\n            this.cleanPopup(popupWindow, popupWindowParent);\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     *\r\n     * Configures popup window for login.\r\n     *\r\n     * @param urlNavigate\r\n     * @param title\r\n     * @param popUpWidth\r\n     * @param popUpHeight\r\n     * @param popupWindowAttributes\r\n     * @ignore\r\n     * @hidden\r\n     */\r\n    openPopup(urlNavigate, popupParams) {\r\n        try {\r\n            let popupWindow;\r\n            // Popup window passed in, setting url to navigate to\r\n            if (popupParams.popup) {\r\n                popupWindow = popupParams.popup;\r\n                this.logger.verbosePii(`Navigating popup window to: ${urlNavigate}`);\r\n                popupWindow.location.assign(urlNavigate);\r\n            }\r\n            else if (typeof popupParams.popup === \"undefined\") {\r\n                // Popup will be undefined if it was not passed in\r\n                this.logger.verbosePii(`Opening popup window to: ${urlNavigate}`);\r\n                popupWindow = this.openSizedPopup(urlNavigate, popupParams);\r\n            }\r\n            // Popup will be null if popups are blocked\r\n            if (!popupWindow) {\r\n                throw createBrowserAuthError(emptyWindowError);\r\n            }\r\n            if (popupWindow.focus) {\r\n                popupWindow.focus();\r\n            }\r\n            this.currentWindow = popupWindow;\r\n            popupParams.popupWindowParent.addEventListener(\"beforeunload\", this.unloadWindow);\r\n            return popupWindow;\r\n        }\r\n        catch (e) {\r\n            this.logger.error(\"error opening popup \" + e.message);\r\n            this.browserStorage.setInteractionInProgress(false);\r\n            throw createBrowserAuthError(popupWindowError);\r\n        }\r\n    }\r\n    /**\r\n     * Helper function to set popup window dimensions and position\r\n     * @param urlNavigate\r\n     * @param popupName\r\n     * @param popupWindowAttributes\r\n     * @returns\r\n     */\r\n    openSizedPopup(urlNavigate, { popupName, popupWindowAttributes, popupWindowParent }) {\r\n        /**\r\n         * adding winLeft and winTop to account for dual monitor\r\n         * using screenLeft and screenTop for IE8 and earlier\r\n         */\r\n        const winLeft = popupWindowParent.screenLeft\r\n            ? popupWindowParent.screenLeft\r\n            : popupWindowParent.screenX;\r\n        const winTop = popupWindowParent.screenTop\r\n            ? popupWindowParent.screenTop\r\n            : popupWindowParent.screenY;\r\n        /**\r\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\r\n         * using document.documentElement.clientWidth for IE8 and earlier\r\n         */\r\n        const winWidth = popupWindowParent.innerWidth ||\r\n            document.documentElement.clientWidth ||\r\n            document.body.clientWidth;\r\n        const winHeight = popupWindowParent.innerHeight ||\r\n            document.documentElement.clientHeight ||\r\n            document.body.clientHeight;\r\n        let width = popupWindowAttributes.popupSize?.width;\r\n        let height = popupWindowAttributes.popupSize?.height;\r\n        let top = popupWindowAttributes.popupPosition?.top;\r\n        let left = popupWindowAttributes.popupPosition?.left;\r\n        if (!width || width < 0 || width > winWidth) {\r\n            this.logger.verbose(\"Default popup window width used. Window width not configured or invalid.\");\r\n            width = BrowserConstants.POPUP_WIDTH;\r\n        }\r\n        if (!height || height < 0 || height > winHeight) {\r\n            this.logger.verbose(\"Default popup window height used. Window height not configured or invalid.\");\r\n            height = BrowserConstants.POPUP_HEIGHT;\r\n        }\r\n        if (!top || top < 0 || top > winHeight) {\r\n            this.logger.verbose(\"Default popup window top position used. Window top not configured or invalid.\");\r\n            top = Math.max(0, winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop);\r\n        }\r\n        if (!left || left < 0 || left > winWidth) {\r\n            this.logger.verbose(\"Default popup window left position used. Window left not configured or invalid.\");\r\n            left = Math.max(0, winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft);\r\n        }\r\n        return popupWindowParent.open(urlNavigate, popupName, `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`);\r\n    }\r\n    /**\r\n     * Event callback to unload main window.\r\n     */\r\n    unloadWindow(e) {\r\n        this.browserStorage.cleanRequestByInteractionType(InteractionType.Popup);\r\n        if (this.currentWindow) {\r\n            this.currentWindow.close();\r\n        }\r\n        // Guarantees browser unload will happen, so no other errors will be thrown.\r\n        e.preventDefault();\r\n    }\r\n    /**\r\n     * Closes popup, removes any state vars created during popup calls.\r\n     * @param popupWindow\r\n     */\r\n    cleanPopup(popupWindow, popupWindowParent) {\r\n        // Close window.\r\n        popupWindow.close();\r\n        // Remove window unload function\r\n        popupWindowParent.removeEventListener(\"beforeunload\", this.unloadWindow);\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n    }\r\n    /**\r\n     * Generates the name for the popup based on the client id and request\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generatePopupName(scopes, authority) {\r\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\r\n    }\r\n    /**\r\n     * Generates the name for the popup based on the client id and request for logouts\r\n     * @param clientId\r\n     * @param request\r\n     */\r\n    generateLogoutPopupName(request) {\r\n        const homeAccountId = request.account && request.account.homeAccountId;\r\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\r\n    }\r\n}\r\n\r\nexport { PopupClient };\r\n//# sourceMappingURL=PopupClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createClientAuthError, ClientAuthErrorCodes, ServerError, invokeAsync, PerformanceEvents } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { TemporaryCacheKeys, ApiId } from '../utils/BrowserConstants.mjs';\r\nimport { emptyNavigateUri, userCancelled } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass RedirectHandler {\r\n    constructor(authCodeModule, storageImpl, authCodeRequest, logger, performanceClient) {\r\n        this.authModule = authCodeModule;\r\n        this.browserStorage = storageImpl;\r\n        this.authCodeRequest = authCodeRequest;\r\n        this.logger = logger;\r\n        this.performanceClient = performanceClient;\r\n    }\r\n    /**\r\n     * Redirects window to given URL.\r\n     * @param urlNavigate\r\n     */\r\n    async initiateAuthRequest(requestUrl, params) {\r\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\r\n        // Navigate if valid URL\r\n        if (requestUrl) {\r\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\r\n            if (params.redirectStartPage) {\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\");\r\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, params.redirectStartPage, true);\r\n            }\r\n            // Set interaction status in the library.\r\n            this.browserStorage.setTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, this.authCodeRequest.correlationId, true);\r\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\r\n            this.logger.infoPii(`RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`);\r\n            const navigationOptions = {\r\n                apiId: ApiId.acquireTokenRedirect,\r\n                timeout: params.redirectTimeout,\r\n                noHistory: false,\r\n            };\r\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\r\n            if (typeof params.onRedirectNavigate === \"function\") {\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\");\r\n                const navigate = params.onRedirectNavigate(requestUrl);\r\n                // Returning false from onRedirectNavigate will stop navigation\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\");\r\n                    await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                    return;\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\");\r\n                    return;\r\n                }\r\n            }\r\n            else {\r\n                // Navigate window to request URL\r\n                this.logger.verbose(\"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\");\r\n                await params.navigationClient.navigateExternal(requestUrl, navigationOptions);\r\n                return;\r\n            }\r\n        }\r\n        else {\r\n            // Throw error if request URL is empty.\r\n            this.logger.info(\"RedirectHandler.initiateAuthRequest: Navigate url is empty\");\r\n            throw createBrowserAuthError(emptyNavigateUri);\r\n        }\r\n    }\r\n    /**\r\n     * Handle authorization code response in the window.\r\n     * @param hash\r\n     */\r\n    async handleCodeResponse(response, state) {\r\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\r\n        // Interaction is completed - remove interaction status.\r\n        this.browserStorage.setInteractionInProgress(false);\r\n        // Handle code response.\r\n        const stateKey = this.browserStorage.generateStateKey(state);\r\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\r\n        if (!requestState) {\r\n            throw createClientAuthError(ClientAuthErrorCodes.stateNotFound, \"Cached State\");\r\n        }\r\n        let authCodeResponse;\r\n        try {\r\n            authCodeResponse = this.authModule.handleFragmentResponse(response, requestState);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof ServerError &&\r\n                e.subError === userCancelled) {\r\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\r\n                throw createBrowserAuthError(userCancelled);\r\n            }\r\n            else {\r\n                throw e;\r\n            }\r\n        }\r\n        // Get cached items\r\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\r\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\r\n        // Assign code to request\r\n        this.authCodeRequest.code = authCodeResponse.code;\r\n        // Check for new cloud instance\r\n        if (authCodeResponse.cloud_instance_host_name) {\r\n            await invokeAsync(this.authModule.updateAuthority.bind(this.authModule), PerformanceEvents.UpdateTokenEndpointAuthority, this.logger, this.performanceClient, this.authCodeRequest.correlationId)(authCodeResponse.cloud_instance_host_name, this.authCodeRequest.correlationId);\r\n        }\r\n        authCodeResponse.nonce = cachedNonce || undefined;\r\n        authCodeResponse.state = requestState;\r\n        // Add CCS parameters if available\r\n        if (authCodeResponse.client_info) {\r\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\r\n        }\r\n        else {\r\n            const cachedCcsCred = this.checkCcsCredentials();\r\n            if (cachedCcsCred) {\r\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\r\n            }\r\n        }\r\n        // Acquire token with retrieved code.\r\n        const tokenResponse = (await this.authModule.acquireToken(this.authCodeRequest, authCodeResponse));\r\n        this.browserStorage.cleanRequestByState(state);\r\n        return tokenResponse;\r\n    }\r\n    /**\r\n     * Looks up ccs creds in the cache\r\n     */\r\n    checkCcsCredentials() {\r\n        // Look up ccs credential in temp cache\r\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CCS_CREDENTIAL, true);\r\n        if (cachedCcsCred) {\r\n            try {\r\n                return JSON.parse(cachedCcsCred);\r\n            }\r\n            catch (e) {\r\n                this.authModule.logger.error(\"Cache credential could not be parsed\");\r\n                this.authModule.logger.errorPii(`Cache credential could not be parsed: ${cachedCcsCred}`);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\nexport { RedirectHandler };\r\n//# sourceMappingURL=RedirectHandler.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { invokeAsync, PerformanceEvents, AuthError, Constants, UrlString, UrlUtils, ProtocolUtils, ThrottlingUtils, ProtocolMode, ServerResponseType } from '@azure/msal-common/browser';\r\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\r\nimport { InteractionType, ApiId, TemporaryCacheKeys } from '../utils/BrowserConstants.mjs';\r\nimport { RedirectHandler } from '../interaction_handler/RedirectHandler.mjs';\r\nimport { replaceHash, isInIframe, getHomepage, clearHash, getCurrentUri } from '../utils/BrowserUtils.mjs';\r\nimport { EventType } from '../event/EventType.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\r\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\r\nimport { validateInteractionType } from '../response/ResponseHandler.mjs';\r\nimport { noStateInHash, nativeConnectionNotEstablished, noCachedAuthorityError } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getNavigationType() {\r\n    if (typeof window === \"undefined\" ||\r\n        typeof window.performance === \"undefined\" ||\r\n        typeof window.performance.getEntriesByType !== \"function\") {\r\n        return undefined;\r\n    }\r\n    const navigationEntries = window.performance.getEntriesByType(\"navigation\");\r\n    const navigation = navigationEntries.length\r\n        ? navigationEntries[0]\r\n        : undefined;\r\n    return navigation?.type;\r\n}\r\nclass RedirectClient extends StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Redirects the page to the /authorize endpoint of the IDP\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        const validRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, this.correlationId)(request, InteractionType.Redirect);\r\n        this.browserStorage.updateCacheEntries(validRequest.state, validRequest.nonce, validRequest.authority, validRequest.loginHint || \"\", validRequest.account || null);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenRedirect);\r\n        const handleBackButton = (event) => {\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            if (event.persisted) {\r\n                this.logger.verbose(\"Page was restored from back/forward cache. Clearing temporary cache.\");\r\n                this.browserStorage.cleanRequestByState(validRequest.state);\r\n                this.eventHandler.emitEvent(EventType.RESTORE_FROM_BFCACHE, InteractionType.Redirect);\r\n            }\r\n        };\r\n        try {\r\n            // Create auth code request and generate PKCE params\r\n            const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, this.correlationId)(validRequest);\r\n            // Initialize the client\r\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: validRequest.authority,\r\n                requestAzureCloudOptions: validRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: validRequest.extraQueryParameters,\r\n                account: validRequest.account,\r\n            });\r\n            // Create redirect interaction handler.\r\n            const interactionHandler = new RedirectHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Create acquire token url.\r\n            const navigateUrl = await authClient.getAuthCodeUrl({\r\n                ...validRequest,\r\n                platformBroker: NativeMessageHandler.isPlatformBrokerAvailable(this.config, this.logger, this.nativeMessageHandler, request.authenticationScheme),\r\n            });\r\n            const redirectStartPage = this.getRedirectStartPage(request.redirectStartPage);\r\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\r\n            // Clear temporary cache if the back button is clicked during the redirect flow.\r\n            window.addEventListener(\"pageshow\", handleBackButton);\r\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\r\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\r\n                navigationClient: this.navigationClient,\r\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\r\n                redirectStartPage: redirectStartPage,\r\n                onRedirectNavigate: request.onRedirectNavigate ||\r\n                    this.config.auth.onRedirectNavigate,\r\n            });\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            window.removeEventListener(\"pageshow\", handleBackButton);\r\n            this.browserStorage.cleanRequestByState(validRequest.state);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Checks if navigateToLoginRequestUrl is set, and:\r\n     * - if true, performs logic to cache and navigate\r\n     * - if false, handles hash string and parses response\r\n     * @param hash {string} url hash\r\n     * @param parentMeasurement {InProgressPerformanceEvent} parent measurement\r\n     */\r\n    async handleRedirectPromise(hash = \"\", parentMeasurement) {\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.handleRedirectPromise);\r\n        try {\r\n            if (!this.browserStorage.isInteractionInProgress(true)) {\r\n                this.logger.info(\"handleRedirectPromise called but there is no interaction in progress, returning null.\");\r\n                return null;\r\n            }\r\n            const [serverParams, responseString] = this.getRedirectResponse(hash || \"\");\r\n            if (!serverParams) {\r\n                // Not a recognized server response hash or hash not associated with a redirect request\r\n                this.logger.info(\"handleRedirectPromise did not detect a response as a result of a redirect. Cleaning temporary cache.\");\r\n                this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\r\n                // Do not instrument \"no_server_response\" if user clicked back button\r\n                if (getNavigationType() !== \"back_forward\") {\r\n                    parentMeasurement.event.errorCode = \"no_server_response\";\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Back navigation event detected. Muting no_server_response error\");\r\n                }\r\n                return null;\r\n            }\r\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\r\n            const loginRequestUrl = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, true) || Constants.EMPTY_STRING;\r\n            const loginRequestUrlNormalized = UrlString.removeHashFromUrl(loginRequestUrl);\r\n            const currentUrlNormalized = UrlString.removeHashFromUrl(window.location.href);\r\n            if (loginRequestUrlNormalized === currentUrlNormalized &&\r\n                this.config.auth.navigateToLoginRequestUrl) {\r\n                // We are on the page we need to navigate to - handle hash\r\n                this.logger.verbose(\"Current page is loginRequestUrl, handling response\");\r\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\r\n                    // Replace current hash with non-msal hash, if present\r\n                    replaceHash(loginRequestUrl);\r\n                }\r\n                const handleHashResult = await this.handleResponse(serverParams, serverTelemetryManager);\r\n                return handleHashResult;\r\n            }\r\n            else if (!this.config.auth.navigateToLoginRequestUrl) {\r\n                this.logger.verbose(\"NavigateToLoginRequestUrl set to false, handling response\");\r\n                return await this.handleResponse(serverParams, serverTelemetryManager);\r\n            }\r\n            else if (!isInIframe() ||\r\n                this.config.system.allowRedirectInIframe) {\r\n                /*\r\n                 * Returned from authority using redirect - need to perform navigation before processing response\r\n                 * Cache the hash to be retrieved after the next redirect\r\n                 */\r\n                this.browserStorage.setTemporaryCache(TemporaryCacheKeys.URL_HASH, responseString, true);\r\n                const navigationOptions = {\r\n                    apiId: ApiId.handleRedirectPromise,\r\n                    timeout: this.config.system.redirectNavigationTimeout,\r\n                    noHistory: true,\r\n                };\r\n                /**\r\n                 * Default behavior is to redirect to the start page and not process the hash now.\r\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\r\n                 */\r\n                let processHashOnRedirect = true;\r\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\r\n                    // Redirect to home page if login request url is null (real null or the string null)\r\n                    const homepage = getHomepage();\r\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\r\n                    this.browserStorage.setTemporaryCache(TemporaryCacheKeys.ORIGIN_URI, homepage, true);\r\n                    this.logger.warning(\"Unable to get valid login request url from cache, redirecting to home page\");\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(homepage, navigationOptions);\r\n                }\r\n                else {\r\n                    // Navigate to page that initiated the redirect request\r\n                    this.logger.verbose(`Navigating to loginRequestUrl: ${loginRequestUrl}`);\r\n                    processHashOnRedirect =\r\n                        await this.navigationClient.navigateInternal(loginRequestUrl, navigationOptions);\r\n                }\r\n                // If navigateInternal implementation returns false, handle the hash now\r\n                if (!processHashOnRedirect) {\r\n                    return await this.handleResponse(serverParams, serverTelemetryManager);\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.browserStorage.cleanRequestByInteractionType(InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Gets the response hash for a redirect request\r\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\r\n     * @param hash\r\n     */\r\n    getRedirectResponse(userProvidedResponse) {\r\n        this.logger.verbose(\"getRedirectResponseHash called\");\r\n        // Get current location hash from window or cache.\r\n        let responseString = userProvidedResponse;\r\n        if (!responseString) {\r\n            if (this.config.auth.OIDCOptions.serverResponseType ===\r\n                ServerResponseType.QUERY) {\r\n                responseString = window.location.search;\r\n            }\r\n            else {\r\n                responseString = window.location.hash;\r\n            }\r\n        }\r\n        let response = UrlUtils.getDeserializedResponse(responseString);\r\n        if (response) {\r\n            try {\r\n                validateInteractionType(response, this.browserCrypto, InteractionType.Redirect);\r\n            }\r\n            catch (e) {\r\n                if (e instanceof AuthError) {\r\n                    this.logger.error(`Interaction type validation failed due to ${e.errorCode}: ${e.errorMessage}`);\r\n                }\r\n                return [null, \"\"];\r\n            }\r\n            clearHash(window);\r\n            this.logger.verbose(\"Hash contains known properties, returning response hash\");\r\n            return [response, responseString];\r\n        }\r\n        const cachedHash = this.browserStorage.getTemporaryCache(TemporaryCacheKeys.URL_HASH, true);\r\n        this.browserStorage.removeItem(this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH));\r\n        if (cachedHash) {\r\n            response = UrlUtils.getDeserializedResponse(cachedHash);\r\n            if (response) {\r\n                this.logger.verbose(\"Hash does not contain known properties, returning cached hash\");\r\n                return [response, cachedHash];\r\n            }\r\n        }\r\n        return [null, \"\"];\r\n    }\r\n    /**\r\n     * Checks if hash exists and handles in window.\r\n     * @param hash\r\n     * @param state\r\n     */\r\n    async handleResponse(serverParams, serverTelemetryManager) {\r\n        const state = serverParams.state;\r\n        if (!state) {\r\n            throw createBrowserAuthError(noStateInHash);\r\n        }\r\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\r\n        this.logger.verbose(\"handleResponse called, retrieved cached request\");\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n            if (!this.nativeMessageHandler) {\r\n                throw createBrowserAuthError(nativeConnectionNotEstablished);\r\n            }\r\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenPopup, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.nativeStorage, cachedRequest.correlationId);\r\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, state);\r\n            return nativeInteractionClient\r\n                .acquireToken({\r\n                ...cachedRequest,\r\n                state: userRequestState,\r\n                prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\r\n            })\r\n                .finally(() => {\r\n                this.browserStorage.cleanRequestByState(state);\r\n            });\r\n        }\r\n        // Hash contains known properties - handle and return in callback\r\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\r\n        if (!currentAuthority) {\r\n            throw createBrowserAuthError(noCachedAuthorityError);\r\n        }\r\n        const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({ serverTelemetryManager, requestAuthority: currentAuthority });\r\n        ThrottlingUtils.removeThrottle(this.browserStorage, this.config.auth.clientId, cachedRequest);\r\n        const interactionHandler = new RedirectHandler(authClient, this.browserStorage, cachedRequest, this.logger, this.performanceClient);\r\n        return interactionHandler.handleCodeResponse(serverParams, state);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logout(logoutRequest) {\r\n        this.logger.verbose(\"logoutRedirect called\");\r\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.logout);\r\n        try {\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_START, InteractionType.Redirect, logoutRequest);\r\n            // Clear cache on logout\r\n            await this.clearCacheOnLogout(validLogoutRequest.account);\r\n            const navigationOptions = {\r\n                apiId: ApiId.logout,\r\n                timeout: this.config.system.redirectNavigationTimeout,\r\n                noHistory: false,\r\n            };\r\n            const authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, this.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: logoutRequest && logoutRequest.authority,\r\n                requestExtraQueryParameters: logoutRequest?.extraQueryParameters,\r\n                account: (logoutRequest && logoutRequest.account) || undefined,\r\n            });\r\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\r\n                try {\r\n                    authClient.authority.endSessionEndpoint;\r\n                }\r\n                catch {\r\n                    if (validLogoutRequest.account?.homeAccountId) {\r\n                        void this.browserStorage.removeAccount(validLogoutRequest.account?.homeAccountId);\r\n                        this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            // Create logout string and navigate user window to logout.\r\n            const logoutUri = authClient.getLogoutUri(validLogoutRequest);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_SUCCESS, InteractionType.Redirect, validLogoutRequest);\r\n            // Check if onRedirectNavigate is implemented, and invoke it if so\r\n            if (logoutRequest &&\r\n                typeof logoutRequest.onRedirectNavigate === \"function\") {\r\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\r\n                if (navigate !== false) {\r\n                    this.logger.verbose(\"Logout onRedirectNavigate did not return false, navigating\");\r\n                    // Ensure interaction is in progress\r\n                    if (!this.browserStorage.getInteractionInProgress()) {\r\n                        this.browserStorage.setInteractionInProgress(true);\r\n                    }\r\n                    await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                    return;\r\n                }\r\n                else {\r\n                    // Ensure interaction is not in progress\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    this.logger.verbose(\"Logout onRedirectNavigate returned false, stopping navigation\");\r\n                }\r\n            }\r\n            else {\r\n                // Ensure interaction is in progress\r\n                if (!this.browserStorage.getInteractionInProgress()) {\r\n                    this.browserStorage.setInteractionInProgress(true);\r\n                }\r\n                await this.navigationClient.navigateExternal(logoutUri, navigationOptions);\r\n                return;\r\n            }\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_FAILURE, InteractionType.Redirect, null, e);\r\n            this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\r\n            throw e;\r\n        }\r\n        this.eventHandler.emitEvent(EventType.LOGOUT_END, InteractionType.Redirect);\r\n    }\r\n    /**\r\n     * Use to get the redirectStartPage either from request or use current window\r\n     * @param requestStartPage\r\n     */\r\n    getRedirectStartPage(requestStartPage) {\r\n        const redirectStartPage = requestStartPage || window.location.href;\r\n        return UrlString.getAbsoluteUrl(redirectStartPage, getCurrentUri());\r\n    }\r\n}\r\n\r\nexport { RedirectClient };\r\n//# sourceMappingURL=RedirectClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, invokeAsync, invoke, ServerResponseType } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { DEFAULT_IFRAME_TIMEOUT_MS } from '../config/Configuration.mjs';\r\nimport { emptyNavigateUri, monitorWindowTimeout } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Creates a hidden iframe to given URL using user-requested scopes as an id.\r\n * @param urlNavigate\r\n * @param userRequestScopes\r\n */\r\nasync function initiateAuthRequest(requestUrl, performanceClient, logger, correlationId, navigateFrameWait) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerInitiateAuthRequest, correlationId);\r\n    if (!requestUrl) {\r\n        // Throw error if request URL is empty.\r\n        logger.info(\"Navigate url is empty\");\r\n        throw createBrowserAuthError(emptyNavigateUri);\r\n    }\r\n    if (navigateFrameWait) {\r\n        return invokeAsync(loadFrame, PerformanceEvents.SilentHandlerLoadFrame, logger, performanceClient, correlationId)(requestUrl, navigateFrameWait, performanceClient, correlationId);\r\n    }\r\n    return invoke(loadFrameSync, PerformanceEvents.SilentHandlerLoadFrameSync, logger, performanceClient, correlationId)(requestUrl);\r\n}\r\n/**\r\n * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\r\n * @param iframe\r\n * @param timeout\r\n */\r\nasync function monitorIframeForHash(iframe, timeout, pollIntervalMilliseconds, performanceClient, logger, correlationId, responseType) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerMonitorIframeForHash, correlationId);\r\n    return new Promise((resolve, reject) => {\r\n        if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\r\n            logger.warning(`system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`);\r\n        }\r\n        /*\r\n         * Polling for iframes can be purely timing based,\r\n         * since we don't need to account for interaction.\r\n         */\r\n        const timeoutId = window.setTimeout(() => {\r\n            window.clearInterval(intervalId);\r\n            reject(createBrowserAuthError(monitorWindowTimeout));\r\n        }, timeout);\r\n        const intervalId = window.setInterval(() => {\r\n            let href = \"\";\r\n            const contentWindow = iframe.contentWindow;\r\n            try {\r\n                /*\r\n                 * Will throw if cross origin,\r\n                 * which should be caught and ignored\r\n                 * since we need the interval to keep running while on STS UI.\r\n                 */\r\n                href = contentWindow ? contentWindow.location.href : \"\";\r\n            }\r\n            catch (e) { }\r\n            if (!href || href === \"about:blank\") {\r\n                return;\r\n            }\r\n            let responseString = \"\";\r\n            if (contentWindow) {\r\n                if (responseType === ServerResponseType.QUERY) {\r\n                    responseString = contentWindow.location.search;\r\n                }\r\n                else {\r\n                    responseString = contentWindow.location.hash;\r\n                }\r\n            }\r\n            window.clearTimeout(timeoutId);\r\n            window.clearInterval(intervalId);\r\n            resolve(responseString);\r\n        }, pollIntervalMilliseconds);\r\n    }).finally(() => {\r\n        invoke(removeHiddenIframe, PerformanceEvents.RemoveHiddenIframe, logger, performanceClient, correlationId)(iframe);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads iframe with authorization endpoint URL\r\n * @ignore\r\n * @deprecated\r\n */\r\nfunction loadFrame(urlNavigate, navigateFrameWait, performanceClient, correlationId) {\r\n    performanceClient.addQueueMeasurement(PerformanceEvents.SilentHandlerLoadFrame, correlationId);\r\n    /*\r\n     * This trick overcomes iframe navigation in IE\r\n     * IE does not load the page consistently in iframe\r\n     */\r\n    return new Promise((resolve, reject) => {\r\n        const frameHandle = createHiddenIframe();\r\n        window.setTimeout(() => {\r\n            if (!frameHandle) {\r\n                reject(\"Unable to load iframe\");\r\n                return;\r\n            }\r\n            frameHandle.src = urlNavigate;\r\n            resolve(frameHandle);\r\n        }, navigateFrameWait);\r\n    });\r\n}\r\n/**\r\n * @hidden\r\n * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\r\n * @param urlNavigate\r\n * @param frameName\r\n * @param logger\r\n */\r\nfunction loadFrameSync(urlNavigate) {\r\n    const frameHandle = createHiddenIframe();\r\n    frameHandle.src = urlNavigate;\r\n    return frameHandle;\r\n}\r\n/**\r\n * @hidden\r\n * Creates a new hidden iframe or gets an existing one for silent token renewal.\r\n * @ignore\r\n */\r\nfunction createHiddenIframe() {\r\n    const authFrame = document.createElement(\"iframe\");\r\n    authFrame.className = \"msalSilentIframe\";\r\n    authFrame.style.visibility = \"hidden\";\r\n    authFrame.style.position = \"absolute\";\r\n    authFrame.style.width = authFrame.style.height = \"0\";\r\n    authFrame.style.border = \"0\";\r\n    authFrame.setAttribute(\"sandbox\", \"allow-scripts allow-same-origin allow-forms\");\r\n    document.body.appendChild(authFrame);\r\n    return authFrame;\r\n}\r\n/**\r\n * @hidden\r\n * Removes a hidden iframe from the page.\r\n * @ignore\r\n */\r\nfunction removeHiddenIframe(iframe) {\r\n    if (document.body === iframe.parentNode) {\r\n        document.body.removeChild(iframe);\r\n    }\r\n}\r\n\r\nexport { initiateAuthRequest, monitorIframeForHash };\r\n//# sourceMappingURL=SilentHandler.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { PerformanceEvents, PromptValue, invokeAsync, AuthError, invoke, ProtocolUtils } from '@azure/msal-common/browser';\r\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { InteractionType, BrowserConstants } from '../utils/BrowserConstants.mjs';\r\nimport { initiateAuthRequest, monitorIframeForHash } from '../interaction_handler/SilentHandler.mjs';\r\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\r\nimport { NativeInteractionClient } from './NativeInteractionClient.mjs';\r\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\r\nimport { preconnect } from '../utils/BrowserUtils.mjs';\r\nimport { deserializeResponse } from '../response/ResponseHandler.mjs';\r\nimport { silentLogoutUnsupported, nativeConnectionNotEstablished } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentIframeClient extends StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeStorageImpl, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.apiId = apiId;\r\n        this.nativeStorage = nativeStorageImpl;\r\n    }\r\n    /**\r\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientAcquireToken, request.correlationId);\r\n        // Check that we have some SSO data\r\n        if (!request.loginHint &&\r\n            !request.sid &&\r\n            (!request.account || !request.account.username)) {\r\n            this.logger.warning(\"No user hint provided. The authorization server may need more information to complete this request.\");\r\n        }\r\n        // Check the prompt value\r\n        const inputRequest = { ...request };\r\n        if (inputRequest.prompt) {\r\n            if (inputRequest.prompt !== PromptValue.NONE &&\r\n                inputRequest.prompt !== PromptValue.NO_SESSION) {\r\n                this.logger.warning(`SilentIframeClient. Replacing invalid prompt ${inputRequest.prompt} with ${PromptValue.NONE}`);\r\n                inputRequest.prompt = PromptValue.NONE;\r\n            }\r\n        }\r\n        else {\r\n            inputRequest.prompt = PromptValue.NONE;\r\n        }\r\n        // Create silent request\r\n        const silentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(inputRequest, InteractionType.Silent);\r\n        preconnect(silentRequest.authority);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        let authClient;\r\n        try {\r\n            // Initialize the client\r\n            authClient = await invokeAsync(this.createAuthCodeClient.bind(this), PerformanceEvents.StandardInteractionClientCreateAuthCodeClient, this.logger, this.performanceClient, request.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            return await invokeAsync(this.silentTokenHelper.bind(this), PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, request.correlationId)(authClient, silentRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            if (!authClient ||\r\n                !(e instanceof AuthError) ||\r\n                e.errorCode !== BrowserConstants.INVALID_GRANT_ERROR) {\r\n                throw e;\r\n            }\r\n            this.performanceClient.addFields({\r\n                retryError: e.errorCode,\r\n            }, this.correlationId);\r\n            const retrySilentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(inputRequest, InteractionType.Silent);\r\n            return await invokeAsync(this.silentTokenHelper.bind(this), PerformanceEvents.SilentIframeClientTokenHelper, this.logger, this.performanceClient, this.correlationId)(authClient, retrySilentRequest);\r\n        }\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\r\n    }\r\n    /**\r\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\r\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\r\n     * @param navigateUrl\r\n     * @param userRequestScopes\r\n     */\r\n    async silentTokenHelper(authClient, silentRequest) {\r\n        const correlationId = silentRequest.correlationId;\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentIframeClientTokenHelper, correlationId);\r\n        // Create auth code request and generate PKCE params\r\n        const authCodeRequest = await invokeAsync(this.initializeAuthorizationCodeRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest, this.logger, this.performanceClient, correlationId)(silentRequest);\r\n        // Create authorize request url\r\n        const navigateUrl = await invokeAsync(authClient.getAuthCodeUrl.bind(authClient), PerformanceEvents.GetAuthCodeUrl, this.logger, this.performanceClient, correlationId)({\r\n            ...silentRequest,\r\n            platformBroker: NativeMessageHandler.isPlatformBrokerAvailable(this.config, this.logger, this.nativeMessageHandler, silentRequest.authenticationScheme),\r\n        });\r\n        // Create silent handler\r\n        const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n        // Get the frame handle for the silent request\r\n        const msalFrame = await invokeAsync(initiateAuthRequest, PerformanceEvents.SilentHandlerInitiateAuthRequest, this.logger, this.performanceClient, correlationId)(navigateUrl, this.performanceClient, this.logger, correlationId, this.config.system.navigateFrameWait);\r\n        const responseType = this.config.auth.OIDCOptions.serverResponseType;\r\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\r\n        const responseString = await invokeAsync(monitorIframeForHash, PerformanceEvents.SilentHandlerMonitorIframeForHash, this.logger, this.performanceClient, correlationId)(msalFrame, this.config.system.iframeHashTimeout, this.config.system.pollIntervalMilliseconds, this.performanceClient, this.logger, correlationId, responseType);\r\n        const serverParams = invoke(deserializeResponse, PerformanceEvents.DeserializeResponse, this.logger, this.performanceClient, this.correlationId)(responseString, responseType, this.logger);\r\n        if (serverParams.accountId) {\r\n            this.logger.verbose(\"Account id found in hash, calling WAM for token\");\r\n            if (!this.nativeMessageHandler) {\r\n                throw createBrowserAuthError(nativeConnectionNotEstablished);\r\n            }\r\n            const nativeInteractionClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.apiId, this.performanceClient, this.nativeMessageHandler, serverParams.accountId, this.browserStorage, correlationId);\r\n            const { userRequestState } = ProtocolUtils.parseRequestState(this.browserCrypto, silentRequest.state);\r\n            return invokeAsync(nativeInteractionClient.acquireToken.bind(nativeInteractionClient), PerformanceEvents.NativeInteractionClientAcquireToken, this.logger, this.performanceClient, correlationId)({\r\n                ...silentRequest,\r\n                state: userRequestState,\r\n                prompt: silentRequest.prompt || PromptValue.NONE,\r\n            });\r\n        }\r\n        // Handle response from hash string\r\n        return invokeAsync(interactionHandler.handleCodeResponse.bind(interactionHandler), PerformanceEvents.HandleCodeResponse, this.logger, this.performanceClient, correlationId)(serverParams, silentRequest);\r\n    }\r\n}\r\n\r\nexport { SilentIframeClient };\r\n//# sourceMappingURL=SilentIframeClient.mjs.map\r\n","/*! @azure/msal-common v15.2.1 2025-03-11 */\r\n'use strict';\r\nimport { isOidcProtocolMode } from '../config/ClientConfiguration.mjs';\r\nimport { BaseClient } from './BaseClient.mjs';\r\nimport { RequestParameterBuilder } from '../request/RequestParameterBuilder.mjs';\r\nimport { GrantType, AuthenticationScheme, HeaderNames, Errors } from '../utils/Constants.mjs';\r\nimport { CLIENT_ID } from '../constants/AADServerParamKeys.mjs';\r\nimport { ResponseHandler } from '../response/ResponseHandler.mjs';\r\nimport { PopTokenGenerator } from '../crypto/PopTokenGenerator.mjs';\r\nimport { StringUtils } from '../utils/StringUtils.mjs';\r\nimport { createClientConfigurationError } from '../error/ClientConfigurationError.mjs';\r\nimport { createClientAuthError } from '../error/ClientAuthError.mjs';\r\nimport { ServerError } from '../error/ServerError.mjs';\r\nimport { nowSeconds, isTokenExpired } from '../utils/TimeUtils.mjs';\r\nimport { UrlString } from '../url/UrlString.mjs';\r\nimport { CcsCredentialType } from '../account/CcsCredential.mjs';\r\nimport { buildClientInfoFromHomeAccountId } from '../account/ClientInfo.mjs';\r\nimport { createInteractionRequiredAuthError, InteractionRequiredAuthError } from '../error/InteractionRequiredAuthError.mjs';\r\nimport { PerformanceEvents } from '../telemetry/performance/PerformanceEvent.mjs';\r\nimport { invokeAsync, invoke } from '../utils/FunctionWrappers.mjs';\r\nimport { generateCredentialKey } from '../cache/utils/CacheHelpers.mjs';\r\nimport { getClientAssertion } from '../utils/ClientAssertionUtils.mjs';\r\nimport { getRequestThumbprint } from '../network/RequestThumbprint.mjs';\r\nimport { tokenRequestEmpty, missingSshJwk } from '../error/ClientConfigurationErrorCodes.mjs';\r\nimport { noAccountInSilentRequest } from '../error/ClientAuthErrorCodes.mjs';\r\nimport { noTokensFound, refreshTokenExpired, badToken } from '../error/InteractionRequiredAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nconst DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS = 300; // 5 Minutes\r\n/**\r\n * OAuth2.0 refresh token client\r\n * @internal\r\n */\r\nclass RefreshTokenClient extends BaseClient {\r\n    constructor(configuration, performanceClient) {\r\n        super(configuration, performanceClient);\r\n    }\r\n    async acquireToken(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireToken, request.correlationId);\r\n        const reqTimestamp = nowSeconds();\r\n        const response = await invokeAsync(this.executeTokenRequest.bind(this), PerformanceEvents.RefreshTokenClientExecuteTokenRequest, this.logger, this.performanceClient, request.correlationId)(request, this.authority);\r\n        // Retrieve requestId from response headers\r\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\r\n        const responseHandler = new ResponseHandler(this.config.authOptions.clientId, this.cacheManager, this.cryptoUtils, this.logger, this.config.serializableCache, this.config.persistencePlugin);\r\n        responseHandler.validateTokenResponse(response.body);\r\n        return invokeAsync(responseHandler.handleServerTokenResponse.bind(responseHandler), PerformanceEvents.HandleServerTokenResponse, this.logger, this.performanceClient, request.correlationId)(response.body, this.authority, reqTimestamp, request, undefined, undefined, true, request.forceCache, requestId);\r\n    }\r\n    /**\r\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\r\n     * @param request\r\n     */\r\n    async acquireTokenByRefreshToken(request) {\r\n        // Cannot renew token if no request object is given.\r\n        if (!request) {\r\n            throw createClientConfigurationError(tokenRequestEmpty);\r\n        }\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, request.correlationId);\r\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\r\n        if (!request.account) {\r\n            throw createClientAuthError(noAccountInSilentRequest);\r\n        }\r\n        // try checking if FOCI is enabled for the given application\r\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(request.account.environment);\r\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\r\n        if (isFOCI) {\r\n            try {\r\n                return await invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, true);\r\n            }\r\n            catch (e) {\r\n                const noFamilyRTInCache = e instanceof InteractionRequiredAuthError &&\r\n                    e.errorCode ===\r\n                        noTokensFound;\r\n                const clientMismatchErrorWithFamilyRT = e instanceof ServerError &&\r\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\r\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\r\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\r\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\r\n                    return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n                    // throw in all other cases\r\n                }\r\n                else {\r\n                    throw e;\r\n                }\r\n            }\r\n        }\r\n        // fall back to application refresh token acquisition\r\n        return invokeAsync(this.acquireTokenWithCachedRefreshToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, this.logger, this.performanceClient, request.correlationId)(request, false);\r\n    }\r\n    /**\r\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\r\n     * @param request\r\n     */\r\n    async acquireTokenWithCachedRefreshToken(request, foci) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken, request.correlationId);\r\n        // fetches family RT or application RT based on FOCI value\r\n        const refreshToken = invoke(this.cacheManager.getRefreshToken.bind(this.cacheManager), PerformanceEvents.CacheManagerGetRefreshToken, this.logger, this.performanceClient, request.correlationId)(request.account, foci, undefined, this.performanceClient, request.correlationId);\r\n        if (!refreshToken) {\r\n            throw createInteractionRequiredAuthError(noTokensFound);\r\n        }\r\n        if (refreshToken.expiresOn &&\r\n            isTokenExpired(refreshToken.expiresOn, request.refreshTokenExpirationOffsetSeconds ||\r\n                DEFAULT_REFRESH_TOKEN_EXPIRATION_OFFSET_SECONDS)) {\r\n            this.performanceClient?.addFields({ rtExpiresOnMs: Number(refreshToken.expiresOn) }, request.correlationId);\r\n            throw createInteractionRequiredAuthError(refreshTokenExpired);\r\n        }\r\n        // attach cached RT size to the current measurement\r\n        const refreshTokenRequest = {\r\n            ...request,\r\n            refreshToken: refreshToken.secret,\r\n            authenticationScheme: request.authenticationScheme || AuthenticationScheme.BEARER,\r\n            ccsCredential: {\r\n                credential: request.account.homeAccountId,\r\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\r\n            },\r\n        };\r\n        try {\r\n            return await invokeAsync(this.acquireToken.bind(this), PerformanceEvents.RefreshTokenClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(refreshTokenRequest);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof InteractionRequiredAuthError) {\r\n                this.performanceClient?.addFields({ rtExpiresOnMs: Number(refreshToken.expiresOn) }, request.correlationId);\r\n                if (e.subError === badToken) {\r\n                    // Remove bad refresh token from cache\r\n                    this.logger.verbose(\"acquireTokenWithRefreshToken: bad refresh token, removing from cache\");\r\n                    const badRefreshTokenKey = generateCredentialKey(refreshToken);\r\n                    this.cacheManager.removeRefreshToken(badRefreshTokenKey);\r\n                }\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Constructs the network message and makes a NW call to the underlying secure token service\r\n     * @param request\r\n     * @param authority\r\n     */\r\n    async executeTokenRequest(request, authority) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientExecuteTokenRequest, request.correlationId);\r\n        const queryParametersString = this.createTokenQueryParameters(request);\r\n        const endpoint = UrlString.appendQueryString(authority.tokenEndpoint, queryParametersString);\r\n        const requestBody = await invokeAsync(this.createTokenRequestBody.bind(this), PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, this.logger, this.performanceClient, request.correlationId)(request);\r\n        const headers = this.createTokenRequestHeaders(request.ccsCredential);\r\n        const thumbprint = getRequestThumbprint(this.config.authOptions.clientId, request);\r\n        return invokeAsync(this.executePostToTokenEndpoint.bind(this), PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint, this.logger, this.performanceClient, request.correlationId)(endpoint, requestBody, headers, thumbprint, request.correlationId, PerformanceEvents.RefreshTokenClientExecutePostToTokenEndpoint);\r\n    }\r\n    /**\r\n     * Helper function to create the token request body\r\n     * @param request\r\n     */\r\n    async createTokenRequestBody(request) {\r\n        this.performanceClient?.addQueueMeasurement(PerformanceEvents.RefreshTokenClientCreateTokenRequestBody, request.correlationId);\r\n        const correlationId = request.correlationId;\r\n        const parameterBuilder = new RequestParameterBuilder(correlationId, this.performanceClient);\r\n        parameterBuilder.addClientId(request.embeddedClientId ||\r\n            request.tokenBodyParameters?.[CLIENT_ID] ||\r\n            this.config.authOptions.clientId);\r\n        if (request.redirectUri) {\r\n            parameterBuilder.addRedirectUri(request.redirectUri);\r\n        }\r\n        parameterBuilder.addScopes(request.scopes, true, this.config.authOptions.authority.options.OIDCOptions?.defaultScopes);\r\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\r\n        parameterBuilder.addClientInfo();\r\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\r\n        parameterBuilder.addApplicationTelemetry(this.config.telemetry.application);\r\n        parameterBuilder.addThrottling();\r\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\r\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\r\n        }\r\n        parameterBuilder.addRefreshToken(request.refreshToken);\r\n        if (this.config.clientCredentials.clientSecret) {\r\n            parameterBuilder.addClientSecret(this.config.clientCredentials.clientSecret);\r\n        }\r\n        if (this.config.clientCredentials.clientAssertion) {\r\n            const clientAssertion = this.config.clientCredentials.clientAssertion;\r\n            parameterBuilder.addClientAssertion(await getClientAssertion(clientAssertion.assertion, this.config.authOptions.clientId, request.resourceRequestUri));\r\n            parameterBuilder.addClientAssertionType(clientAssertion.assertionType);\r\n        }\r\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\r\n            const popTokenGenerator = new PopTokenGenerator(this.cryptoUtils, this.performanceClient);\r\n            let reqCnfData;\r\n            if (!request.popKid) {\r\n                const generatedReqCnfData = await invokeAsync(popTokenGenerator.generateCnf.bind(popTokenGenerator), PerformanceEvents.PopTokenGenerateCnf, this.logger, this.performanceClient, request.correlationId)(request, this.logger);\r\n                reqCnfData = generatedReqCnfData.reqCnfString;\r\n            }\r\n            else {\r\n                reqCnfData = this.cryptoUtils.encodeKid(request.popKid);\r\n            }\r\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\r\n            parameterBuilder.addPopToken(reqCnfData);\r\n        }\r\n        else if (request.authenticationScheme === AuthenticationScheme.SSH) {\r\n            if (request.sshJwk) {\r\n                parameterBuilder.addSshJwk(request.sshJwk);\r\n            }\r\n            else {\r\n                throw createClientConfigurationError(missingSshJwk);\r\n            }\r\n        }\r\n        if (!StringUtils.isEmptyObj(request.claims) ||\r\n            (this.config.authOptions.clientCapabilities &&\r\n                this.config.authOptions.clientCapabilities.length > 0)) {\r\n            parameterBuilder.addClaims(request.claims, this.config.authOptions.clientCapabilities);\r\n        }\r\n        if (this.config.systemOptions.preventCorsPreflight &&\r\n            request.ccsCredential) {\r\n            switch (request.ccsCredential.type) {\r\n                case CcsCredentialType.HOME_ACCOUNT_ID:\r\n                    try {\r\n                        const clientInfo = buildClientInfoFromHomeAccountId(request.ccsCredential.credential);\r\n                        parameterBuilder.addCcsOid(clientInfo);\r\n                    }\r\n                    catch (e) {\r\n                        this.logger.verbose(\"Could not parse home account ID for CCS Header: \" +\r\n                            e);\r\n                    }\r\n                    break;\r\n                case CcsCredentialType.UPN:\r\n                    parameterBuilder.addCcsUpn(request.ccsCredential.credential);\r\n                    break;\r\n            }\r\n        }\r\n        if (request.embeddedClientId) {\r\n            parameterBuilder.addBrokerParameters({\r\n                brokerClientId: this.config.authOptions.clientId,\r\n                brokerRedirectUri: this.config.authOptions.redirectUri,\r\n            });\r\n        }\r\n        if (request.tokenBodyParameters) {\r\n            parameterBuilder.addExtraQueryParameters(request.tokenBodyParameters);\r\n        }\r\n        return parameterBuilder.createQueryString();\r\n    }\r\n}\r\n\r\nexport { RefreshTokenClient };\r\n//# sourceMappingURL=RefreshTokenClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\r\nimport { PerformanceEvents, invokeAsync, RefreshTokenClient } from '@azure/msal-common/browser';\r\nimport { ApiId } from '../utils/BrowserConstants.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { initializeBaseRequest } from '../request/RequestHelpers.mjs';\r\nimport { silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentRefreshClient extends StandardInteractionClient {\r\n    /**\r\n     * Exchanges the refresh token for new tokens\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.SilentRefreshClientAcquireToken, request.correlationId);\r\n        const baseRequest = await invokeAsync(initializeBaseRequest, PerformanceEvents.InitializeBaseRequest, this.logger, this.performanceClient, request.correlationId)(request, this.config, this.performanceClient, this.logger);\r\n        const silentRequest = {\r\n            ...request,\r\n            ...baseRequest,\r\n        };\r\n        if (request.redirectUri) {\r\n            // Make sure any passed redirectUri is converted to an absolute URL - redirectUri is not a required parameter for refresh token redemption so only include if explicitly provided\r\n            silentRequest.redirectUri = this.getRedirectUri(request.redirectUri);\r\n        }\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(ApiId.acquireTokenSilent_silentFlow);\r\n        const refreshTokenClient = await this.createRefreshTokenClient({\r\n            serverTelemetryManager,\r\n            authorityUrl: silentRequest.authority,\r\n            azureCloudOptions: silentRequest.azureCloudOptions,\r\n            account: silentRequest.account,\r\n        });\r\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\r\n        return invokeAsync(refreshTokenClient.acquireTokenByRefreshToken.bind(refreshTokenClient), PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken, this.logger, this.performanceClient, request.correlationId)(silentRequest).catch((e) => {\r\n            e.setCorrelationId(this.correlationId);\r\n            serverTelemetryManager.cacheFailedRequest(e);\r\n            throw e;\r\n        });\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\r\n    }\r\n    /**\r\n     * Creates a Refresh Client with the given authority, or the default authority.\r\n     * @param params {\r\n     *         serverTelemetryManager: ServerTelemetryManager;\r\n     *         authorityUrl?: string;\r\n     *         azureCloudOptions?: AzureCloudOptions;\r\n     *         extraQueryParams?: StringDict;\r\n     *         account?: AccountInfo;\r\n     *        }\r\n     */\r\n    async createRefreshTokenClient(params) {\r\n        // Create auth module.\r\n        const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, this.correlationId)({\r\n            serverTelemetryManager: params.serverTelemetryManager,\r\n            requestAuthority: params.authorityUrl,\r\n            requestAzureCloudOptions: params.azureCloudOptions,\r\n            requestExtraQueryParameters: params.extraQueryParameters,\r\n            account: params.account,\r\n        });\r\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\r\n    }\r\n}\r\n\r\nexport { SilentRefreshClient };\r\n//# sourceMappingURL=SilentRefreshClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { AuthToken, Authority, AccountEntity, buildAccountToCache, CacheHelpers, ScopeSet, TimeUtils } from '@azure/msal-common/browser';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { base64Decode } from '../encode/Base64Decode.mjs';\r\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\r\nimport { nonBrowserEnvironment, unableToLoadToken } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Token cache manager\r\n */\r\nclass TokenCache {\r\n    constructor(configuration, storage, logger, cryptoObj) {\r\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\r\n        this.config = configuration;\r\n        this.storage = storage;\r\n        this.logger = logger;\r\n        this.cryptoObj = cryptoObj;\r\n    }\r\n    // Move getAllAccounts here and cache utility APIs\r\n    /**\r\n     * API to load tokens to msal-browser cache.\r\n     * @param request\r\n     * @param response\r\n     * @param options\r\n     * @returns `AuthenticationResult` for the response that was loaded.\r\n     */\r\n    async loadExternalTokens(request, response, options) {\r\n        if (!this.isBrowserEnvironment) {\r\n            throw createBrowserAuthError(nonBrowserEnvironment);\r\n        }\r\n        const correlationId = request.correlationId || createNewGuid();\r\n        const idTokenClaims = response.id_token\r\n            ? AuthToken.extractTokenClaims(response.id_token, base64Decode)\r\n            : undefined;\r\n        const authorityOptions = {\r\n            protocolMode: this.config.auth.protocolMode,\r\n            knownAuthorities: this.config.auth.knownAuthorities,\r\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\r\n            authorityMetadata: this.config.auth.authorityMetadata,\r\n            skipAuthorityMetadataCache: this.config.auth.skipAuthorityMetadataCache,\r\n        };\r\n        const authority = request.authority\r\n            ? new Authority(Authority.generateAuthority(request.authority, request.azureCloudOptions), this.config.system.networkClient, this.storage, authorityOptions, this.logger, request.correlationId || createNewGuid())\r\n            : undefined;\r\n        const cacheRecordAccount = await this.loadAccount(request, options.clientInfo || response.client_info || \"\", correlationId, idTokenClaims, authority);\r\n        const idToken = await this.loadIdToken(response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, cacheRecordAccount.realm, correlationId);\r\n        const accessToken = await this.loadAccessToken(request, response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, cacheRecordAccount.realm, options, correlationId);\r\n        const refreshToken = await this.loadRefreshToken(response, cacheRecordAccount.homeAccountId, cacheRecordAccount.environment, correlationId);\r\n        return this.generateAuthenticationResult(request, {\r\n            account: cacheRecordAccount,\r\n            idToken,\r\n            accessToken,\r\n            refreshToken,\r\n        }, idTokenClaims, authority);\r\n    }\r\n    /**\r\n     * Helper function to load account to msal-browser cache\r\n     * @param idToken\r\n     * @param environment\r\n     * @param clientInfo\r\n     * @param authorityType\r\n     * @param requestHomeAccountId\r\n     * @returns `AccountEntity`\r\n     */\r\n    async loadAccount(request, clientInfo, correlationId, idTokenClaims, authority) {\r\n        this.logger.verbose(\"TokenCache - loading account\");\r\n        if (request.account) {\r\n            const accountEntity = AccountEntity.createFromAccountInfo(request.account);\r\n            await this.storage.setAccount(accountEntity, correlationId);\r\n            return accountEntity;\r\n        }\r\n        else if (!authority || (!clientInfo && !idTokenClaims)) {\r\n            this.logger.error(\"TokenCache - if an account is not provided on the request, authority and either clientInfo or idToken must be provided instead.\");\r\n            throw createBrowserAuthError(unableToLoadToken);\r\n        }\r\n        const homeAccountId = AccountEntity.generateHomeAccountId(clientInfo, authority.authorityType, this.logger, this.cryptoObj, idTokenClaims);\r\n        const claimsTenantId = idTokenClaims?.tid;\r\n        const cachedAccount = buildAccountToCache(this.storage, authority, homeAccountId, base64Decode, idTokenClaims, clientInfo, authority.hostnameAndPort, claimsTenantId, undefined, // authCodePayload\r\n        undefined, // nativeAccountId\r\n        this.logger);\r\n        await this.storage.setAccount(cachedAccount, correlationId);\r\n        return cachedAccount;\r\n    }\r\n    /**\r\n     * Helper function to load id tokens to msal-browser cache\r\n     * @param idToken\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `IdTokenEntity`\r\n     */\r\n    async loadIdToken(response, homeAccountId, environment, tenantId, correlationId) {\r\n        if (!response.id_token) {\r\n            this.logger.verbose(\"TokenCache - no id token found in response\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading id token\");\r\n        const idTokenEntity = CacheHelpers.createIdTokenEntity(homeAccountId, environment, response.id_token, this.config.auth.clientId, tenantId);\r\n        await this.storage.setIdTokenCredential(idTokenEntity, correlationId);\r\n        return idTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to load access tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @param tenantId\r\n     * @returns `AccessTokenEntity`\r\n     */\r\n    async loadAccessToken(request, response, homeAccountId, environment, tenantId, options, correlationId) {\r\n        if (!response.access_token) {\r\n            this.logger.verbose(\"TokenCache - no access token found in response\");\r\n            return null;\r\n        }\r\n        else if (!response.expires_in) {\r\n            this.logger.error(\"TokenCache - no expiration set on the access token. Cannot add it to the cache.\");\r\n            return null;\r\n        }\r\n        else if (!response.scope &&\r\n            (!request.scopes || !request.scopes.length)) {\r\n            this.logger.error(\"TokenCache - scopes not specified in the request or response. Cannot add token to the cache.\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading access token\");\r\n        const scopes = response.scope\r\n            ? ScopeSet.fromString(response.scope)\r\n            : new ScopeSet(request.scopes);\r\n        const expiresOn = options.expiresOn || response.expires_in + TimeUtils.nowSeconds();\r\n        const extendedExpiresOn = options.extendedExpiresOn ||\r\n            (response.ext_expires_in || response.expires_in) +\r\n                TimeUtils.nowSeconds();\r\n        const accessTokenEntity = CacheHelpers.createAccessTokenEntity(homeAccountId, environment, response.access_token, this.config.auth.clientId, tenantId, scopes.printScopes(), expiresOn, extendedExpiresOn, base64Decode);\r\n        await this.storage.setAccessTokenCredential(accessTokenEntity, correlationId);\r\n        return accessTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to load refresh tokens to msal-browser cache\r\n     * @param request\r\n     * @param response\r\n     * @param homeAccountId\r\n     * @param environment\r\n     * @returns `RefreshTokenEntity`\r\n     */\r\n    async loadRefreshToken(response, homeAccountId, environment, correlationId) {\r\n        if (!response.refresh_token) {\r\n            this.logger.verbose(\"TokenCache - no refresh token found in response\");\r\n            return null;\r\n        }\r\n        this.logger.verbose(\"TokenCache - loading refresh token\");\r\n        const refreshTokenEntity = CacheHelpers.createRefreshTokenEntity(homeAccountId, environment, response.refresh_token, this.config.auth.clientId, response.foci, undefined, // userAssertionHash\r\n        response.refresh_token_expires_in);\r\n        await this.storage.setRefreshTokenCredential(refreshTokenEntity, correlationId);\r\n        return refreshTokenEntity;\r\n    }\r\n    /**\r\n     * Helper function to generate an `AuthenticationResult` for the result.\r\n     * @param request\r\n     * @param idTokenObj\r\n     * @param cacheRecord\r\n     * @param authority\r\n     * @returns `AuthenticationResult`\r\n     */\r\n    generateAuthenticationResult(request, cacheRecord, idTokenClaims, authority) {\r\n        let accessToken = \"\";\r\n        let responseScopes = [];\r\n        let expiresOn = null;\r\n        let extExpiresOn;\r\n        if (cacheRecord?.accessToken) {\r\n            accessToken = cacheRecord.accessToken.secret;\r\n            responseScopes = ScopeSet.fromString(cacheRecord.accessToken.target).asArray();\r\n            // Access token expiresOn stored in seconds, converting to Date for AuthenticationResult\r\n            expiresOn = TimeUtils.toDateFromSeconds(cacheRecord.accessToken.expiresOn);\r\n            extExpiresOn = TimeUtils.toDateFromSeconds(cacheRecord.accessToken.extendedExpiresOn);\r\n        }\r\n        const accountEntity = cacheRecord.account;\r\n        return {\r\n            authority: authority ? authority.canonicalAuthority : \"\",\r\n            uniqueId: cacheRecord.account.localAccountId,\r\n            tenantId: cacheRecord.account.realm,\r\n            scopes: responseScopes,\r\n            account: accountEntity.getAccountInfo(),\r\n            idToken: cacheRecord.idToken?.secret || \"\",\r\n            idTokenClaims: idTokenClaims || {},\r\n            accessToken: accessToken,\r\n            fromCache: true,\r\n            expiresOn: expiresOn,\r\n            correlationId: request.correlationId || \"\",\r\n            requestId: \"\",\r\n            extExpiresOn: extExpiresOn,\r\n            familyId: cacheRecord.refreshToken?.familyId || \"\",\r\n            tokenType: cacheRecord?.accessToken?.tokenType || \"\",\r\n            state: request.state || \"\",\r\n            cloudGraphHostName: accountEntity.cloudGraphHostName || \"\",\r\n            msGraphHost: accountEntity.msGraphHost || \"\",\r\n            fromNativeBroker: false,\r\n        };\r\n    }\r\n}\r\n\r\nexport { TokenCache };\r\n//# sourceMappingURL=TokenCache.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { AuthorizationCodeClient } from '@azure/msal-common/browser';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass HybridSpaAuthorizationCodeClient extends AuthorizationCodeClient {\r\n    constructor(config) {\r\n        super(config);\r\n        this.includeRedirectUri = false;\r\n    }\r\n}\r\n\r\nexport { HybridSpaAuthorizationCodeClient };\r\n//# sourceMappingURL=HybridSpaAuthorizationCodeClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { invokeAsync, PerformanceEvents, AuthError } from '@azure/msal-common/browser';\r\nimport { StandardInteractionClient } from './StandardInteractionClient.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { InteractionType } from '../utils/BrowserConstants.mjs';\r\nimport { HybridSpaAuthorizationCodeClient } from './HybridSpaAuthorizationCodeClient.mjs';\r\nimport { InteractionHandler } from '../interaction_handler/InteractionHandler.mjs';\r\nimport { authCodeRequired, silentLogoutUnsupported } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nclass SilentAuthCodeClient extends StandardInteractionClient {\r\n    constructor(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, apiId, performanceClient, nativeMessageHandler, correlationId) {\r\n        super(config, storageImpl, browserCrypto, logger, eventHandler, navigationClient, performanceClient, nativeMessageHandler, correlationId);\r\n        this.apiId = apiId;\r\n    }\r\n    /**\r\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\r\n     * @param request\r\n     */\r\n    async acquireToken(request) {\r\n        // Auth code payload is required\r\n        if (!request.code) {\r\n            throw createBrowserAuthError(authCodeRequired);\r\n        }\r\n        // Create silent request\r\n        const silentRequest = await invokeAsync(this.initializeAuthorizationRequest.bind(this), PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest, this.logger, this.performanceClient, request.correlationId)(request, InteractionType.Silent);\r\n        const serverTelemetryManager = this.initializeServerTelemetryManager(this.apiId);\r\n        try {\r\n            // Create auth code request (PKCE not needed)\r\n            const authCodeRequest = {\r\n                ...silentRequest,\r\n                code: request.code,\r\n            };\r\n            // Initialize the client\r\n            const clientConfig = await invokeAsync(this.getClientConfiguration.bind(this), PerformanceEvents.StandardInteractionClientGetClientConfiguration, this.logger, this.performanceClient, request.correlationId)({\r\n                serverTelemetryManager,\r\n                requestAuthority: silentRequest.authority,\r\n                requestAzureCloudOptions: silentRequest.azureCloudOptions,\r\n                requestExtraQueryParameters: silentRequest.extraQueryParameters,\r\n                account: silentRequest.account,\r\n            });\r\n            const authClient = new HybridSpaAuthorizationCodeClient(clientConfig);\r\n            this.logger.verbose(\"Auth code client created\");\r\n            // Create silent handler\r\n            const interactionHandler = new InteractionHandler(authClient, this.browserStorage, authCodeRequest, this.logger, this.performanceClient);\r\n            // Handle auth code parameters from request\r\n            return await invokeAsync(interactionHandler.handleCodeResponseFromServer.bind(interactionHandler), PerformanceEvents.HandleCodeResponseFromServer, this.logger, this.performanceClient, request.correlationId)({\r\n                code: request.code,\r\n                msgraph_host: request.msGraphHost,\r\n                cloud_graph_host_name: request.cloudGraphHostName,\r\n                cloud_instance_host_name: request.cloudInstanceHostName,\r\n            }, silentRequest, false);\r\n        }\r\n        catch (e) {\r\n            if (e instanceof AuthError) {\r\n                e.setCorrelationId(this.correlationId);\r\n                serverTelemetryManager.cacheFailedRequest(e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Currently Unsupported\r\n     */\r\n    logout() {\r\n        // Synchronous so we must reject\r\n        return Promise.reject(createBrowserAuthError(silentLogoutUnsupported));\r\n    }\r\n}\r\n\r\nexport { SilentAuthCodeClient };\r\n//# sourceMappingURL=SilentAuthCodeClient.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { CryptoOps } from '../crypto/CryptoOps.mjs';\r\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, buildStaticAuthorityOptions, PerformanceEvents, invokeAsync, InteractionRequiredAuthError, createClientAuthError, ClientAuthErrorCodes, AccountEntity, PromptValue, Constants, AuthError, getRequestThumbprint, InteractionRequiredAuthErrorCodes } from '@azure/msal-common/browser';\r\nimport { BrowserCacheManager, DEFAULT_BROWSER_CACHE_MANAGER } from '../cache/BrowserCacheManager.mjs';\r\nimport { getAllAccounts, getAccount, getAccountByUsername, getAccountByHomeId, getAccountByLocalId, setActiveAccount, getActiveAccount } from '../cache/AccountManager.mjs';\r\nimport { TemporaryCacheKeys, InteractionType, ApiId, CacheLookupPolicy, BrowserCacheLocation, DEFAULT_REQUEST, iFrameRenewalPolicies, BrowserConstants } from '../utils/BrowserConstants.mjs';\r\nimport { blockAPICallsBeforeInitialize, redirectPreflightCheck, preflightCheck as preflightCheck$1, blockNonBrowserEnvironment } from '../utils/BrowserUtils.mjs';\r\nimport { EventType } from '../event/EventType.mjs';\r\nimport { EventHandler } from '../event/EventHandler.mjs';\r\nimport { PopupClient } from '../interaction_client/PopupClient.mjs';\r\nimport { RedirectClient } from '../interaction_client/RedirectClient.mjs';\r\nimport { SilentIframeClient } from '../interaction_client/SilentIframeClient.mjs';\r\nimport { SilentRefreshClient } from '../interaction_client/SilentRefreshClient.mjs';\r\nimport { TokenCache } from '../cache/TokenCache.mjs';\r\nimport { NativeInteractionClient } from '../interaction_client/NativeInteractionClient.mjs';\r\nimport { NativeMessageHandler } from '../broker/nativeBroker/NativeMessageHandler.mjs';\r\nimport { NativeAuthError, isFatalNativeAuthError } from '../error/NativeAuthError.mjs';\r\nimport { SilentCacheClient } from '../interaction_client/SilentCacheClient.mjs';\r\nimport { SilentAuthCodeClient } from '../interaction_client/SilentAuthCodeClient.mjs';\r\nimport { createBrowserAuthError } from '../error/BrowserAuthError.mjs';\r\nimport { createNewGuid } from '../crypto/BrowserCrypto.mjs';\r\nimport { initializeSilentRequest } from '../request/RequestHelpers.mjs';\r\nimport { generatePkceCodes } from '../crypto/PkceGenerator.mjs';\r\nimport { spaCodeAndNativeAccountIdPresent, unableToAcquireTokenFromNativePlatform, authCodeOrNativeAccountIdRequired, nativeConnectionNotEstablished, noAccountError } from '../error/BrowserAuthErrorCodes.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nfunction getAccountType(account) {\r\n    const idTokenClaims = account?.idTokenClaims;\r\n    if (idTokenClaims?.tfp || idTokenClaims?.acr) {\r\n        return \"B2C\";\r\n    }\r\n    if (!idTokenClaims?.tid) {\r\n        return undefined;\r\n    }\r\n    else if (idTokenClaims?.tid === \"9188040d-6c67-4c5b-b112-36a304b66dad\") {\r\n        return \"MSA\";\r\n    }\r\n    return \"AAD\";\r\n}\r\nfunction preflightCheck(initialized, performanceEvent) {\r\n    try {\r\n        preflightCheck$1(initialized);\r\n    }\r\n    catch (e) {\r\n        performanceEvent.end({ success: false }, e);\r\n        throw e;\r\n    }\r\n}\r\nclass StandardController {\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     */\r\n    constructor(operatingContext) {\r\n        this.operatingContext = operatingContext;\r\n        this.isBrowserEnvironment =\r\n            this.operatingContext.isBrowserEnvironment();\r\n        // Set the configuration.\r\n        this.config = operatingContext.getConfig();\r\n        this.initialized = false;\r\n        // Initialize logger\r\n        this.logger = this.operatingContext.getLogger();\r\n        // Initialize the network module class.\r\n        this.networkClient = this.config.system.networkClient;\r\n        // Initialize the navigation client class.\r\n        this.navigationClient = this.config.system.navigationClient;\r\n        // Initialize redirectResponse Map\r\n        this.redirectResponse = new Map();\r\n        // Initial hybrid spa map\r\n        this.hybridAuthCodeResponses = new Map();\r\n        // Initialize performance client\r\n        this.performanceClient = this.config.telemetry.client;\r\n        // Initialize the crypto class.\r\n        this.browserCrypto = this.isBrowserEnvironment\r\n            ? new CryptoOps(this.logger, this.performanceClient)\r\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\r\n        this.eventHandler = new EventHandler(this.logger);\r\n        // Initialize the browser storage class.\r\n        this.browserStorage = this.isBrowserEnvironment\r\n            ? new BrowserCacheManager(this.config.auth.clientId, this.config.cache, this.browserCrypto, this.logger, this.performanceClient, this.eventHandler, buildStaticAuthorityOptions(this.config.auth))\r\n            : DEFAULT_BROWSER_CACHE_MANAGER(this.config.auth.clientId, this.logger, this.performanceClient, this.eventHandler);\r\n        // initialize in memory storage for native flows\r\n        const nativeCacheOptions = {\r\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\r\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\r\n            storeAuthStateInCookie: false,\r\n            secureCookies: false,\r\n            cacheMigrationEnabled: false,\r\n            claimsBasedCachingEnabled: false,\r\n        };\r\n        this.nativeInternalStorage = new BrowserCacheManager(this.config.auth.clientId, nativeCacheOptions, this.browserCrypto, this.logger, this.performanceClient, this.eventHandler);\r\n        // Initialize the token cache\r\n        this.tokenCache = new TokenCache(this.config, this.browserStorage, this.logger, this.browserCrypto);\r\n        this.activeSilentTokenRequests = new Map();\r\n        // Register listener functions\r\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\r\n        // Register listener functions\r\n        this.trackPageVisibilityWithMeasurement =\r\n            this.trackPageVisibilityWithMeasurement.bind(this);\r\n    }\r\n    static async createController(operatingContext, request) {\r\n        const controller = new StandardController(operatingContext);\r\n        await controller.initialize(request);\r\n        return controller;\r\n    }\r\n    trackPageVisibility(correlationId) {\r\n        if (!correlationId) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected\");\r\n        this.performanceClient.incrementFields({ visibilityChangeCount: 1 }, correlationId);\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest} correlation id\r\n     */\r\n    async initialize(request) {\r\n        this.logger.trace(\"initialize called\");\r\n        if (this.initialized) {\r\n            this.logger.info(\"initialize has already been called, exiting early.\");\r\n            return;\r\n        }\r\n        if (!this.isBrowserEnvironment) {\r\n            this.logger.info(\"in non-browser environment, exiting early.\");\r\n            this.initialized = true;\r\n            this.eventHandler.emitEvent(EventType.INITIALIZE_END);\r\n            return;\r\n        }\r\n        const initCorrelationId = request?.correlationId || this.getRequestCorrelationId();\r\n        const allowPlatformBroker = this.config.system.allowPlatformBroker;\r\n        const initMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.InitializeClientApplication, initCorrelationId);\r\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\r\n        await invokeAsync(this.browserStorage.initialize.bind(this.browserStorage), PerformanceEvents.InitializeCache, this.logger, this.performanceClient, initCorrelationId)(initCorrelationId);\r\n        if (allowPlatformBroker) {\r\n            try {\r\n                this.nativeExtensionProvider =\r\n                    await NativeMessageHandler.createProvider(this.logger, this.config.system.nativeBrokerHandshakeTimeout, this.performanceClient);\r\n            }\r\n            catch (e) {\r\n                this.logger.verbose(e);\r\n            }\r\n        }\r\n        if (!this.config.cache.claimsBasedCachingEnabled) {\r\n            this.logger.verbose(\"Claims-based caching is disabled. Clearing the previous cache with claims\");\r\n            await invokeAsync(this.browserStorage.clearTokensAndKeysWithClaims.bind(this.browserStorage), PerformanceEvents.ClearTokensAndKeysWithClaims, this.logger, this.performanceClient, initCorrelationId)(this.performanceClient, initCorrelationId);\r\n        }\r\n        this.config.system.asyncPopups &&\r\n            (await this.preGeneratePkceCodes(initCorrelationId));\r\n        this.initialized = true;\r\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\r\n        initMeasurement.end({\r\n            allowPlatformBroker: allowPlatformBroker,\r\n            success: true,\r\n        });\r\n    }\r\n    // #region Redirect Flow\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    async handleRedirectPromise(hash) {\r\n        this.logger.verbose(\"handleRedirectPromise called\");\r\n        // Block token acquisition before initialize has been called\r\n        blockAPICallsBeforeInitialize(this.initialized);\r\n        if (this.isBrowserEnvironment) {\r\n            /**\r\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\r\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\r\n             * several times concurrently.\r\n             */\r\n            const redirectResponseKey = hash || \"\";\r\n            let response = this.redirectResponse.get(redirectResponseKey);\r\n            if (typeof response === \"undefined\") {\r\n                response = this.handleRedirectPromiseInternal(hash);\r\n                this.redirectResponse.set(redirectResponseKey, response);\r\n                this.logger.verbose(\"handleRedirectPromise has been called for the first time, storing the promise\");\r\n            }\r\n            else {\r\n                this.logger.verbose(\"handleRedirectPromise has been called previously, returning the result from the first call\");\r\n            }\r\n            return response;\r\n        }\r\n        this.logger.verbose(\"handleRedirectPromise returns null, not browser environment\");\r\n        return null;\r\n    }\r\n    /**\r\n     * The internal details of handleRedirectPromise. This is separated out to a helper to allow handleRedirectPromise to memoize requests\r\n     * @param hash\r\n     * @returns\r\n     */\r\n    async handleRedirectPromiseInternal(hash) {\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        const request = this.browserStorage.getCachedNativeRequest();\r\n        const useNative = request &&\r\n            NativeMessageHandler.isPlatformBrokerAvailable(this.config, this.logger, this.nativeExtensionProvider) &&\r\n            this.nativeExtensionProvider &&\r\n            !hash;\r\n        const correlationId = useNative\r\n            ? request?.correlationId\r\n            : this.browserStorage.getTemporaryCache(TemporaryCacheKeys.CORRELATION_ID, true) || \"\";\r\n        const rootMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenRedirect, correlationId);\r\n        this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_START, InteractionType.Redirect);\r\n        let redirectResponse;\r\n        if (useNative && this.nativeExtensionProvider) {\r\n            this.logger.trace(\"handleRedirectPromise - acquiring token from native platform\");\r\n            const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.handleRedirectPromise, this.performanceClient, this.nativeExtensionProvider, request.accountId, this.nativeInternalStorage, request.correlationId);\r\n            redirectResponse = invokeAsync(nativeClient.handleRedirectPromise.bind(nativeClient), PerformanceEvents.HandleNativeRedirectPromiseMeasurement, this.logger, this.performanceClient, rootMeasurement.event.correlationId)(this.performanceClient, rootMeasurement.event.correlationId);\r\n        }\r\n        else {\r\n            this.logger.trace(\"handleRedirectPromise - acquiring token from web flow\");\r\n            const redirectClient = this.createRedirectClient(correlationId);\r\n            redirectResponse = invokeAsync(redirectClient.handleRedirectPromise.bind(redirectClient), PerformanceEvents.HandleRedirectPromiseMeasurement, this.logger, this.performanceClient, rootMeasurement.event.correlationId)(hash, rootMeasurement);\r\n        }\r\n        return redirectResponse\r\n            .then((result) => {\r\n            if (result) {\r\n                // Emit login event if number of accounts change\r\n                const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n                if (isLoggingIn) {\r\n                    this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Redirect, result);\r\n                    this.logger.verbose(\"handleRedirectResponse returned result, login success\");\r\n                }\r\n                else {\r\n                    this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Redirect, result);\r\n                    this.logger.verbose(\"handleRedirectResponse returned result, acquire token success\");\r\n                }\r\n                rootMeasurement.end({\r\n                    success: true,\r\n                    accountType: getAccountType(result.account),\r\n                });\r\n            }\r\n            else {\r\n                /*\r\n                 * Instrument an event only if an error code is set. Otherwise, discard it when the redirect response\r\n                 * is empty and the error code is missing.\r\n                 */\r\n                if (rootMeasurement.event.errorCode) {\r\n                    rootMeasurement.end({ success: false });\r\n                }\r\n                else {\r\n                    rootMeasurement.discard();\r\n                }\r\n            }\r\n            this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\r\n            return result;\r\n        })\r\n            .catch((e) => {\r\n            const eventError = e;\r\n            // Emit login event if there is an account\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, eventError);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, eventError);\r\n            }\r\n            this.eventHandler.emitEvent(EventType.HANDLE_REDIRECT_END, InteractionType.Redirect);\r\n            rootMeasurement.end({\r\n                success: false,\r\n            }, eventError);\r\n            throw e;\r\n        });\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async acquireTokenRedirect(request) {\r\n        // Preflight request\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\r\n        const atrMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPreRedirect, correlationId);\r\n        atrMeasurement.add({\r\n            accountType: getAccountType(request.account),\r\n            scenarioId: request.scenarioId,\r\n        });\r\n        // Override on request only if set, as onRedirectNavigate field is deprecated\r\n        const onRedirectNavigateCb = request.onRedirectNavigate;\r\n        if (onRedirectNavigateCb) {\r\n            request.onRedirectNavigate = (url) => {\r\n                const navigate = typeof onRedirectNavigateCb === \"function\"\r\n                    ? onRedirectNavigateCb(url)\r\n                    : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                }\r\n                else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n        else {\r\n            const configOnRedirectNavigateCb = this.config.auth.onRedirectNavigate;\r\n            this.config.auth.onRedirectNavigate = (url) => {\r\n                const navigate = typeof configOnRedirectNavigateCb === \"function\"\r\n                    ? configOnRedirectNavigateCb(url)\r\n                    : undefined;\r\n                if (navigate !== false) {\r\n                    atrMeasurement.end({ success: true });\r\n                }\r\n                else {\r\n                    atrMeasurement.discard();\r\n                }\r\n                return navigate;\r\n            };\r\n        }\r\n        // If logged in, emit acquire token events\r\n        const isLoggedIn = this.getAllAccounts().length > 0;\r\n        try {\r\n            redirectPreflightCheck(this.initialized, this.config);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Redirect, request);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Redirect, request);\r\n            }\r\n            let result;\r\n            if (this.nativeExtensionProvider &&\r\n                this.canUsePlatformBroker(request)) {\r\n                const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenRedirect, this.performanceClient, this.nativeExtensionProvider, this.getNativeAccountId(request), this.nativeInternalStorage, correlationId);\r\n                result = nativeClient\r\n                    .acquireTokenRedirect(request, atrMeasurement)\r\n                    .catch((e) => {\r\n                    if (e instanceof NativeAuthError &&\r\n                        isFatalNativeAuthError(e)) {\r\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        const redirectClient = this.createRedirectClient(correlationId);\r\n                        return redirectClient.acquireToken(request);\r\n                    }\r\n                    else if (e instanceof InteractionRequiredAuthError) {\r\n                        this.logger.verbose(\"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\");\r\n                        const redirectClient = this.createRedirectClient(correlationId);\r\n                        return redirectClient.acquireToken(request);\r\n                    }\r\n                    this.browserStorage.setInteractionInProgress(false);\r\n                    throw e;\r\n                });\r\n            }\r\n            else {\r\n                const redirectClient = this.createRedirectClient(correlationId);\r\n                result = redirectClient.acquireToken(request);\r\n            }\r\n            return await result;\r\n        }\r\n        catch (e) {\r\n            atrMeasurement.end({ success: false }, e);\r\n            if (isLoggedIn) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Redirect, null, e);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Redirect, null, e);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n    // #endregion\r\n    // #region Popup Flow\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenPopup(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atPopupMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenPopup, correlationId);\r\n        atPopupMeasurement.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        try {\r\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\r\n            preflightCheck(this.initialized, atPopupMeasurement);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n        }\r\n        catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n        // If logged in, emit acquire token events\r\n        const loggedInAccounts = this.getAllAccounts();\r\n        if (loggedInAccounts.length > 0) {\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Popup, request);\r\n        }\r\n        else {\r\n            this.eventHandler.emitEvent(EventType.LOGIN_START, InteractionType.Popup, request);\r\n        }\r\n        let result;\r\n        const pkce = this.getPreGeneratedPkceCodes(correlationId);\r\n        if (this.canUsePlatformBroker(request)) {\r\n            result = this.acquireTokenNative({\r\n                ...request,\r\n                correlationId,\r\n            }, ApiId.acquireTokenPopup)\r\n                .then((response) => {\r\n                this.browserStorage.setInteractionInProgress(false);\r\n                atPopupMeasurement.end({\r\n                    success: true,\r\n                    isNativeBroker: true,\r\n                    accountType: getAccountType(response.account),\r\n                });\r\n                return response;\r\n            })\r\n                .catch((e) => {\r\n                if (e instanceof NativeAuthError &&\r\n                    isFatalNativeAuthError(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const popupClient = this.createPopupClient(correlationId);\r\n                    return popupClient.acquireToken(request, pkce);\r\n                }\r\n                else if (e instanceof InteractionRequiredAuthError) {\r\n                    this.logger.verbose(\"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\");\r\n                    const popupClient = this.createPopupClient(correlationId);\r\n                    return popupClient.acquireToken(request, pkce);\r\n                }\r\n                this.browserStorage.setInteractionInProgress(false);\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            result = popupClient.acquireToken(request, pkce);\r\n        }\r\n        return result\r\n            .then((result) => {\r\n            /*\r\n             *  If logged in, emit acquire token events\r\n             */\r\n            const isLoggingIn = loggedInAccounts.length < this.getAllAccounts().length;\r\n            if (isLoggingIn) {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_SUCCESS, InteractionType.Popup, result);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Popup, result);\r\n            }\r\n            atPopupMeasurement.end({\r\n                success: true,\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n                accountType: getAccountType(result.account),\r\n            });\r\n            return result;\r\n        })\r\n            .catch((e) => {\r\n            if (loggedInAccounts.length > 0) {\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Popup, null, e);\r\n            }\r\n            else {\r\n                this.eventHandler.emitEvent(EventType.LOGIN_FAILURE, InteractionType.Popup, null, e);\r\n            }\r\n            atPopupMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        })\r\n            .finally(() => this.config.system.asyncPopups &&\r\n            this.preGeneratePkceCodes(correlationId));\r\n    }\r\n    trackPageVisibilityWithMeasurement() {\r\n        const measurement = this.ssoSilentMeasurement ||\r\n            this.acquireTokenByCodeAsyncMeasurement;\r\n        if (!measurement) {\r\n            return;\r\n        }\r\n        this.logger.info(\"Perf: Visibility change detected in \", measurement.event.name);\r\n        measurement.increment({\r\n            visibilityChangeCount: 1,\r\n        });\r\n    }\r\n    // #endregion\r\n    // #region Silent Flow\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async ssoSilent(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const validRequest = {\r\n            ...request,\r\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\r\n            prompt: request.prompt,\r\n            correlationId: correlationId,\r\n        };\r\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.SsoSilent, correlationId);\r\n        this.ssoSilentMeasurement?.add({\r\n            scenarioId: request.scenarioId,\r\n            accountType: getAccountType(request.account),\r\n        });\r\n        preflightCheck(this.initialized, this.ssoSilentMeasurement);\r\n        this.ssoSilentMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        this.logger.verbose(\"ssoSilent called\", correlationId);\r\n        this.eventHandler.emitEvent(EventType.SSO_SILENT_START, InteractionType.Silent, validRequest);\r\n        let result;\r\n        if (this.canUsePlatformBroker(validRequest)) {\r\n            result = this.acquireTokenNative(validRequest, ApiId.ssoSilent).catch((e) => {\r\n                // If native token acquisition fails for availability reasons fallback to standard flow\r\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\r\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                    const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\r\n                    return silentIframeClient.acquireToken(validRequest);\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            const silentIframeClient = this.createSilentIframeClient(validRequest.correlationId);\r\n            result = silentIframeClient.acquireToken(validRequest);\r\n        }\r\n        return result\r\n            .then((response) => {\r\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_SUCCESS, InteractionType.Silent, response);\r\n            this.ssoSilentMeasurement?.end({\r\n                success: true,\r\n                isNativeBroker: response.fromNativeBroker,\r\n                accessTokenSize: response.accessToken.length,\r\n                idTokenSize: response.idToken.length,\r\n                accountType: getAccountType(response.account),\r\n            });\r\n            return response;\r\n        })\r\n            .catch((e) => {\r\n            this.eventHandler.emitEvent(EventType.SSO_SILENT_FAILURE, InteractionType.Silent, null, e);\r\n            this.ssoSilentMeasurement?.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        });\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenByCode(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\r\n        const atbcMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCode, correlationId);\r\n        preflightCheck(this.initialized, atbcMeasurement);\r\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_START, InteractionType.Silent, request);\r\n        atbcMeasurement.add({ scenarioId: request.scenarioId });\r\n        try {\r\n            if (request.code && request.nativeAccountId) {\r\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\r\n                throw createBrowserAuthError(spaCodeAndNativeAccountIdPresent);\r\n            }\r\n            else if (request.code) {\r\n                const hybridAuthCode = request.code;\r\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\r\n                if (!response) {\r\n                    this.logger.verbose(\"Initiating new acquireTokenByCode request\", correlationId);\r\n                    response = this.acquireTokenByCodeAsync({\r\n                        ...request,\r\n                        correlationId,\r\n                    })\r\n                        .then((result) => {\r\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS, InteractionType.Silent, result);\r\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                        atbcMeasurement.end({\r\n                            success: true,\r\n                            isNativeBroker: result.fromNativeBroker,\r\n                            accessTokenSize: result.accessToken.length,\r\n                            idTokenSize: result.idToken.length,\r\n                            accountType: getAccountType(result.account),\r\n                        });\r\n                        return result;\r\n                    })\r\n                        .catch((error) => {\r\n                        this.hybridAuthCodeResponses.delete(hybridAuthCode);\r\n                        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, error);\r\n                        atbcMeasurement.end({\r\n                            success: false,\r\n                        }, error);\r\n                        throw error;\r\n                    });\r\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\r\n                }\r\n                else {\r\n                    this.logger.verbose(\"Existing acquireTokenByCode request found\", correlationId);\r\n                    atbcMeasurement.discard();\r\n                }\r\n                return await response;\r\n            }\r\n            else if (request.nativeAccountId) {\r\n                if (this.canUsePlatformBroker(request, request.nativeAccountId)) {\r\n                    const result = await this.acquireTokenNative({\r\n                        ...request,\r\n                        correlationId,\r\n                    }, ApiId.acquireTokenByCode, request.nativeAccountId).catch((e) => {\r\n                        // If native token acquisition fails for availability reasons fallback to standard flow\r\n                        if (e instanceof NativeAuthError &&\r\n                            isFatalNativeAuthError(e)) {\r\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\r\n                        }\r\n                        throw e;\r\n                    });\r\n                    atbcMeasurement.end({\r\n                        accountType: getAccountType(result.account),\r\n                        success: true,\r\n                    });\r\n                    return result;\r\n                }\r\n                else {\r\n                    throw createBrowserAuthError(unableToAcquireTokenFromNativePlatform);\r\n                }\r\n            }\r\n            else {\r\n                throw createBrowserAuthError(authCodeOrNativeAccountIdRequired);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE, InteractionType.Silent, null, e);\r\n            atbcMeasurement.end({\r\n                success: false,\r\n            }, e);\r\n            throw e;\r\n        }\r\n    }\r\n    /**\r\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\r\n     * @param request\r\n     * @returns Result of the operation to redeem the authorization code\r\n     */\r\n    async acquireTokenByCodeAsync(request) {\r\n        this.logger.trace(\"acquireTokenByCodeAsync called\", request.correlationId);\r\n        this.acquireTokenByCodeAsyncMeasurement =\r\n            this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenByCodeAsync, request.correlationId);\r\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\r\n            visibilityChangeCount: 0,\r\n        });\r\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(request.correlationId);\r\n        const silentTokenResult = await silentAuthCodeClient\r\n            .acquireToken(request)\r\n            .then((response) => {\r\n            this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                success: true,\r\n                fromCache: response.fromCache,\r\n                isNativeBroker: response.fromNativeBroker,\r\n            });\r\n            return response;\r\n        })\r\n            .catch((tokenRenewalError) => {\r\n            this.acquireTokenByCodeAsyncMeasurement?.end({\r\n                success: false,\r\n            }, tokenRenewalError);\r\n            throw tokenRenewalError;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", this.trackPageVisibilityWithMeasurement);\r\n        });\r\n        return silentTokenResult;\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token from the cache\r\n     * @param silentCacheClient SilentCacheClient\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param silentRequest SilentRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenFromCache(commonRequest, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenFromCache, commonRequest.correlationId);\r\n        switch (cacheLookupPolicy) {\r\n            case CacheLookupPolicy.Default:\r\n            case CacheLookupPolicy.AccessToken:\r\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n                const silentCacheClient = this.createSilentCacheClient(commonRequest.correlationId);\r\n                return invokeAsync(silentCacheClient.acquireToken.bind(silentCacheClient), PerformanceEvents.SilentCacheClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\r\n            default:\r\n                throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token via a refresh token\r\n     * @param commonRequest CommonSilentFlowRequest\r\n     * @param cacheLookupPolicy CacheLookupPolicy\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenByRefreshToken(commonRequest, cacheLookupPolicy) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenByRefreshToken, commonRequest.correlationId);\r\n        switch (cacheLookupPolicy) {\r\n            case CacheLookupPolicy.Default:\r\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\r\n            case CacheLookupPolicy.RefreshToken:\r\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\r\n                const silentRefreshClient = this.createSilentRefreshClient(commonRequest.correlationId);\r\n                return invokeAsync(silentRefreshClient.acquireToken.bind(silentRefreshClient), PerformanceEvents.SilentRefreshClientAcquireToken, this.logger, this.performanceClient, commonRequest.correlationId)(commonRequest);\r\n            default:\r\n                throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\r\n        }\r\n    }\r\n    /**\r\n     * Attempt to acquire an access token via an iframe\r\n     * @param request CommonSilentFlowRequest\r\n     * @returns A promise that, when resolved, returns the access token\r\n     */\r\n    async acquireTokenBySilentIframe(request) {\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenBySilentIframe, request.correlationId);\r\n        const silentIframeClient = this.createSilentIframeClient(request.correlationId);\r\n        return invokeAsync(silentIframeClient.acquireToken.bind(silentIframeClient), PerformanceEvents.SilentIframeClientAcquireToken, this.logger, this.performanceClient, request.correlationId)(request);\r\n    }\r\n    // #endregion\r\n    // #region Logout\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    async logout(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        this.logger.warning(\"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\", correlationId);\r\n        return this.logoutRedirect({\r\n            correlationId,\r\n            ...logoutRequest,\r\n        });\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    async logoutRedirect(logoutRequest) {\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        redirectPreflightCheck(this.initialized, this.config);\r\n        this.browserStorage.setInteractionInProgress(true);\r\n        const redirectClient = this.createRedirectClient(correlationId);\r\n        return redirectClient.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        try {\r\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n            preflightCheck$1(this.initialized);\r\n            this.browserStorage.setInteractionInProgress(true);\r\n            const popupClient = this.createPopupClient(correlationId);\r\n            return popupClient.logout(logoutRequest);\r\n        }\r\n        catch (e) {\r\n            // Since this function is syncronous we need to reject\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n    /**\r\n     * Creates a cache interaction client to clear broswer cache.\r\n     * @param logoutRequest\r\n     */\r\n    async clearCache(logoutRequest) {\r\n        if (!this.isBrowserEnvironment) {\r\n            this.logger.info(\"in non-browser environment, returning early.\");\r\n            return;\r\n        }\r\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\r\n        const cacheClient = this.createSilentCacheClient(correlationId);\r\n        return cacheClient.logout(logoutRequest);\r\n    }\r\n    // #endregion\r\n    // #region Account APIs\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return getAllAccounts(this.logger, this.browserStorage, this.isBrowserEnvironment, accountFilter);\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return getAccount(accountFilter, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param username\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByUsername(username) {\r\n        return getAccountByUsername(username, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return getAccountByHomeId(homeAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     */\r\n    getAccountByLocalId(localAccountId) {\r\n        return getAccountByLocalId(localAccountId, this.logger, this.browserStorage);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        setActiveAccount(account, this.browserStorage);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return getActiveAccount(this.browserStorage);\r\n    }\r\n    // #endregion\r\n    /**\r\n     * Hydrates the cache with the tokens from an AuthenticationResult\r\n     * @param result\r\n     * @param request\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        this.logger.verbose(\"hydrateCache called\");\r\n        // Account gets saved to browser storage regardless of native or not\r\n        const accountEntity = AccountEntity.createFromAccountInfo(result.account, result.cloudGraphHostName, result.msGraphHost);\r\n        await this.browserStorage.setAccount(accountEntity, result.correlationId);\r\n        if (result.fromNativeBroker) {\r\n            this.logger.verbose(\"Response was from native broker, storing in-memory\");\r\n            // Tokens from native broker are stored in-memory\r\n            return this.nativeInternalStorage.hydrateCache(result, request);\r\n        }\r\n        else {\r\n            return this.browserStorage.hydrateCache(result, request);\r\n        }\r\n    }\r\n    // #region Helpers\r\n    /**\r\n     * Acquire a token from native device (e.g. WAM)\r\n     * @param request\r\n     */\r\n    async acquireTokenNative(request, apiId, accountId, cacheLookupPolicy) {\r\n        this.logger.trace(\"acquireTokenNative called\");\r\n        if (!this.nativeExtensionProvider) {\r\n            throw createBrowserAuthError(nativeConnectionNotEstablished);\r\n        }\r\n        const nativeClient = new NativeInteractionClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, apiId, this.performanceClient, this.nativeExtensionProvider, accountId || this.getNativeAccountId(request), this.nativeInternalStorage, request.correlationId);\r\n        return nativeClient.acquireToken(request, cacheLookupPolicy);\r\n    }\r\n    /**\r\n     * Returns boolean indicating if this request can use the platform broker\r\n     * @param request\r\n     */\r\n    canUsePlatformBroker(request, accountId) {\r\n        this.logger.trace(\"canUsePlatformBroker called\");\r\n        if (!NativeMessageHandler.isPlatformBrokerAvailable(this.config, this.logger, this.nativeExtensionProvider, request.authenticationScheme)) {\r\n            this.logger.trace(\"canUsePlatformBroker: isPlatformBrokerAvailable returned false, returning false\");\r\n            return false;\r\n        }\r\n        if (request.prompt) {\r\n            switch (request.prompt) {\r\n                case PromptValue.NONE:\r\n                case PromptValue.CONSENT:\r\n                case PromptValue.LOGIN:\r\n                    this.logger.trace(\"canUsePlatformBroker: prompt is compatible with platform broker flow\");\r\n                    break;\r\n                default:\r\n                    this.logger.trace(`canUsePlatformBroker: prompt = ${request.prompt} is not compatible with platform broker flow, returning false`);\r\n                    return false;\r\n            }\r\n        }\r\n        if (!accountId && !this.getNativeAccountId(request)) {\r\n            this.logger.trace(\"canUsePlatformBroker: nativeAccountId is not available, returning false\");\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * Get the native accountId from the account\r\n     * @param request\r\n     * @returns\r\n     */\r\n    getNativeAccountId(request) {\r\n        const account = request.account ||\r\n            this.getAccount({\r\n                loginHint: request.loginHint,\r\n                sid: request.sid,\r\n            }) ||\r\n            this.getActiveAccount();\r\n        return (account && account.nativeAccountId) || \"\";\r\n    }\r\n    /**\r\n     * Returns new instance of the Popup Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createPopupClient(correlationId) {\r\n        return new PopupClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Redirect Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createRedirectClient(correlationId) {\r\n        return new RedirectClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Iframe Interaction Client\r\n     * @param correlationId\r\n     */\r\n    createSilentIframeClient(correlationId) {\r\n        return new SilentIframeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.ssoSilent, this.performanceClient, this.nativeInternalStorage, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Cache Interaction Client\r\n     */\r\n    createSilentCacheClient(correlationId) {\r\n        return new SilentCacheClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent Refresh Interaction Client\r\n     */\r\n    createSilentRefreshClient(correlationId) {\r\n        return new SilentRefreshClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Returns new instance of the Silent AuthCode Interaction Client\r\n     */\r\n    createSilentAuthCodeClient(correlationId) {\r\n        return new SilentAuthCodeClient(this.config, this.browserStorage, this.browserCrypto, this.logger, this.eventHandler, this.navigationClient, ApiId.acquireTokenByCode, this.performanceClient, this.nativeExtensionProvider, correlationId);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     */\r\n    addEventCallback(callback, eventTypes) {\r\n        return this.eventHandler.addEventCallback(callback, eventTypes);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        this.eventHandler.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        blockNonBrowserEnvironment();\r\n        return this.performanceClient.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.performanceClient.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     * @deprecated These events will be raised by default and this method will be removed in a future major version.\r\n     */\r\n    enableAccountStorageEvents() {\r\n        if (this.config.cache.cacheLocation !==\r\n            BrowserCacheLocation.LocalStorage) {\r\n            this.logger.info(\"Account storage events are only available when cacheLocation is set to localStorage\");\r\n            return;\r\n        }\r\n        this.eventHandler.subscribeCrossTab();\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     * @deprecated These events will be raised by default and this method will be removed in a future major version.\r\n     */\r\n    disableAccountStorageEvents() {\r\n        if (this.config.cache.cacheLocation !==\r\n            BrowserCacheLocation.LocalStorage) {\r\n            this.logger.info(\"Account storage events are only available when cacheLocation is set to localStorage\");\r\n            return;\r\n        }\r\n        this.eventHandler.unsubscribeCrossTab();\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.tokenCache;\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.logger;\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.logger = logger;\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        // Validate the SKU passed in is one we expect\r\n        this.browserStorage.setWrapperMetadata(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.navigationClient = navigationClient;\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     */\r\n    getConfiguration() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * Returns the performance client\r\n     */\r\n    getPerformanceClient() {\r\n        return this.performanceClient;\r\n    }\r\n    /**\r\n     * Returns the browser env indicator\r\n     */\r\n    isBrowserEnv() {\r\n        return this.isBrowserEnvironment;\r\n    }\r\n    /**\r\n     * Generates a correlation id for a request if none is provided.\r\n     *\r\n     * @protected\r\n     * @param {?Partial<BaseAuthRequest>} [request]\r\n     * @returns {string}\r\n     */\r\n    getRequestCorrelationId(request) {\r\n        if (request?.correlationId) {\r\n            return request.correlationId;\r\n        }\r\n        if (this.isBrowserEnvironment) {\r\n            return createNewGuid();\r\n        }\r\n        /*\r\n         * Included for fallback for non-browser environments,\r\n         * and to ensure this method always returns a string.\r\n         */\r\n        return Constants.EMPTY_STRING;\r\n    }\r\n    // #endregion\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    async loginRedirect(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginRedirect called\", correlationId);\r\n        return this.acquireTokenRedirect({\r\n            correlationId,\r\n            ...(request || DEFAULT_REQUEST),\r\n        });\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        this.logger.verbose(\"loginPopup called\", correlationId);\r\n        return this.acquireTokenPopup({\r\n            correlationId,\r\n            ...(request || DEFAULT_REQUEST),\r\n        });\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\r\n     */\r\n    async acquireTokenSilent(request) {\r\n        const correlationId = this.getRequestCorrelationId(request);\r\n        const atsMeasurement = this.performanceClient.startMeasurement(PerformanceEvents.AcquireTokenSilent, correlationId);\r\n        atsMeasurement.add({\r\n            cacheLookupPolicy: request.cacheLookupPolicy,\r\n            scenarioId: request.scenarioId,\r\n        });\r\n        preflightCheck(this.initialized, atsMeasurement);\r\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\r\n        const account = request.account || this.getActiveAccount();\r\n        if (!account) {\r\n            throw createBrowserAuthError(noAccountError);\r\n        }\r\n        atsMeasurement.add({ accountType: getAccountType(account) });\r\n        return this.acquireTokenSilentDeduped(request, account, correlationId)\r\n            .then((result) => {\r\n            atsMeasurement.end({\r\n                success: true,\r\n                fromCache: result.fromCache,\r\n                isNativeBroker: result.fromNativeBroker,\r\n                accessTokenSize: result.accessToken.length,\r\n                idTokenSize: result.idToken.length,\r\n            });\r\n            return {\r\n                ...result,\r\n                state: request.state,\r\n                correlationId: correlationId, // Ensures PWB scenarios can correctly match request to response\r\n            };\r\n        })\r\n            .catch((error) => {\r\n            if (error instanceof AuthError) {\r\n                // Ensures PWB scenarios can correctly match request to response\r\n                error.setCorrelationId(correlationId);\r\n            }\r\n            atsMeasurement.end({\r\n                success: false,\r\n            }, error);\r\n            throw error;\r\n        });\r\n    }\r\n    /**\r\n     * Checks if identical request is already in flight and returns reference to the existing promise or fires off a new one if this is the first\r\n     * @param request\r\n     * @param account\r\n     * @param correlationId\r\n     * @returns\r\n     */\r\n    async acquireTokenSilentDeduped(request, account, correlationId) {\r\n        const thumbprint = getRequestThumbprint(this.config.auth.clientId, {\r\n            ...request,\r\n            authority: request.authority || this.config.auth.authority,\r\n            correlationId: correlationId,\r\n        }, account.homeAccountId);\r\n        const silentRequestKey = JSON.stringify(thumbprint);\r\n        const inProgressRequest = this.activeSilentTokenRequests.get(silentRequestKey);\r\n        if (typeof inProgressRequest === \"undefined\") {\r\n            this.logger.verbose(\"acquireTokenSilent called for the first time, storing active request\", correlationId);\r\n            this.performanceClient.addFields({ deduped: false }, correlationId);\r\n            const activeRequest = invokeAsync(this.acquireTokenSilentAsync.bind(this), PerformanceEvents.AcquireTokenSilentAsync, this.logger, this.performanceClient, correlationId)({\r\n                ...request,\r\n                correlationId,\r\n            }, account);\r\n            this.activeSilentTokenRequests.set(silentRequestKey, activeRequest);\r\n            return activeRequest.finally(() => {\r\n                this.activeSilentTokenRequests.delete(silentRequestKey);\r\n            });\r\n        }\r\n        else {\r\n            this.logger.verbose(\"acquireTokenSilent has been called previously, returning the result from the first call\", correlationId);\r\n            this.performanceClient.addFields({ deduped: true }, correlationId);\r\n            return inProgressRequest;\r\n        }\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\r\n     * @param {@link (SilentRequest:type)}\r\n     * @param {@link (AccountInfo:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\r\n     */\r\n    async acquireTokenSilentAsync(request, account) {\r\n        const trackPageVisibility = () => this.trackPageVisibility(request.correlationId);\r\n        this.performanceClient.addQueueMeasurement(PerformanceEvents.AcquireTokenSilentAsync, request.correlationId);\r\n        this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_START, InteractionType.Silent, request);\r\n        if (request.correlationId) {\r\n            this.performanceClient.incrementFields({ visibilityChangeCount: 0 }, request.correlationId);\r\n        }\r\n        document.addEventListener(\"visibilitychange\", trackPageVisibility);\r\n        const silentRequest = await invokeAsync(initializeSilentRequest, PerformanceEvents.InitializeSilentRequest, this.logger, this.performanceClient, request.correlationId)(request, account, this.config, this.performanceClient, this.logger);\r\n        const cacheLookupPolicy = request.cacheLookupPolicy || CacheLookupPolicy.Default;\r\n        const result = this.acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy).catch(async (refreshTokenError) => {\r\n            const shouldTryToResolveSilently = checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, cacheLookupPolicy);\r\n            if (shouldTryToResolveSilently) {\r\n                if (!this.activeIframeRequest) {\r\n                    let _resolve;\r\n                    // Always set the active request tracker immediately after checking it to prevent races\r\n                    this.activeIframeRequest = [\r\n                        new Promise((resolve) => {\r\n                            _resolve = resolve;\r\n                        }),\r\n                        silentRequest.correlationId,\r\n                    ];\r\n                    this.logger.verbose(\"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\", silentRequest.correlationId);\r\n                    return invokeAsync(this.acquireTokenBySilentIframe.bind(this), PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest)\r\n                        .then((iframeResult) => {\r\n                        _resolve(true);\r\n                        return iframeResult;\r\n                    })\r\n                        .catch((e) => {\r\n                        _resolve(false);\r\n                        throw e;\r\n                    })\r\n                        .finally(() => {\r\n                        this.activeIframeRequest = undefined;\r\n                    });\r\n                }\r\n                else if (cacheLookupPolicy !== CacheLookupPolicy.Skip) {\r\n                    const [activePromise, activeCorrelationId] = this.activeIframeRequest;\r\n                    this.logger.verbose(`Iframe request is already in progress, awaiting resolution for request with correlationId: ${activeCorrelationId}`, silentRequest.correlationId);\r\n                    const awaitConcurrentIframeMeasure = this.performanceClient.startMeasurement(PerformanceEvents.AwaitConcurrentIframe, silentRequest.correlationId);\r\n                    awaitConcurrentIframeMeasure.add({\r\n                        awaitIframeCorrelationId: activeCorrelationId,\r\n                    });\r\n                    const activePromiseResult = await activePromise;\r\n                    awaitConcurrentIframeMeasure.end({\r\n                        success: activePromiseResult,\r\n                    });\r\n                    if (activePromiseResult) {\r\n                        this.logger.verbose(`Parallel iframe request with correlationId: ${activeCorrelationId} succeeded. Retrying cache and/or RT redemption`, silentRequest.correlationId);\r\n                        // Retry cache lookup and/or RT exchange after iframe completes\r\n                        return this.acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy);\r\n                    }\r\n                    else {\r\n                        this.logger.info(`Iframe request with correlationId: ${activeCorrelationId} failed. Interaction is required.`);\r\n                        // If previous iframe request failed, it's unlikely to succeed this time. Throw original error.\r\n                        throw refreshTokenError;\r\n                    }\r\n                }\r\n                else {\r\n                    // Cache policy set to skip and another iframe request is already in progress\r\n                    this.logger.warning(\"Another iframe request is currently in progress and CacheLookupPolicy is set to Skip. This may result in degraded performance and/or reliability for both calls. Please consider changing the CacheLookupPolicy to take advantage of request queuing and token cache.\", silentRequest.correlationId);\r\n                    return invokeAsync(this.acquireTokenBySilentIframe.bind(this), PerformanceEvents.AcquireTokenBySilentIframe, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest);\r\n                }\r\n            }\r\n            else {\r\n                // Error cannot be silently resolved or iframe renewal is not allowed, interaction required\r\n                throw refreshTokenError;\r\n            }\r\n        });\r\n        return result\r\n            .then((response) => {\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_SUCCESS, InteractionType.Silent, response);\r\n            if (request.correlationId) {\r\n                this.performanceClient.addFields({\r\n                    fromCache: response.fromCache,\r\n                    isNativeBroker: response.fromNativeBroker,\r\n                }, request.correlationId);\r\n            }\r\n            return response;\r\n        })\r\n            .catch((tokenRenewalError) => {\r\n            this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_FAILURE, InteractionType.Silent, null, tokenRenewalError);\r\n            throw tokenRenewalError;\r\n        })\r\n            .finally(() => {\r\n            document.removeEventListener(\"visibilitychange\", trackPageVisibility);\r\n        });\r\n    }\r\n    /**\r\n     * AcquireTokenSilent without the iframe fallback. This is used to enable the correct fallbacks in cases where there's a potential for multiple silent requests to be made in parallel and prevent those requests from making concurrent iframe requests.\r\n     * @param silentRequest\r\n     * @param cacheLookupPolicy\r\n     * @returns\r\n     */\r\n    async acquireTokenSilentNoIframe(silentRequest, cacheLookupPolicy) {\r\n        // if the cache policy is set to access_token only, we should not be hitting the native layer yet\r\n        if (NativeMessageHandler.isPlatformBrokerAvailable(this.config, this.logger, this.nativeExtensionProvider, silentRequest.authenticationScheme) &&\r\n            silentRequest.account.nativeAccountId) {\r\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from native platform\");\r\n            return this.acquireTokenNative(silentRequest, ApiId.acquireTokenSilent_silentFlow, silentRequest.account.nativeAccountId, cacheLookupPolicy).catch(async (e) => {\r\n                // If native token acquisition fails for availability reasons fallback to web flow\r\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\r\n                    this.logger.verbose(\"acquireTokenSilent - native platform unavailable, falling back to web flow\");\r\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\r\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\r\n                    throw createClientAuthError(ClientAuthErrorCodes.tokenRefreshRequired);\r\n                }\r\n                throw e;\r\n            });\r\n        }\r\n        else {\r\n            this.logger.verbose(\"acquireTokenSilent - attempting to acquire token from web flow\");\r\n            // add logs to identify embedded cache retrieval\r\n            if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\r\n                this.logger.verbose(\"acquireTokenSilent - cache lookup policy set to AccessToken, attempting to acquire token from local cache\");\r\n            }\r\n            return invokeAsync(this.acquireTokenFromCache.bind(this), PerformanceEvents.AcquireTokenFromCache, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy).catch((cacheError) => {\r\n                if (cacheLookupPolicy === CacheLookupPolicy.AccessToken) {\r\n                    throw cacheError;\r\n                }\r\n                this.eventHandler.emitEvent(EventType.ACQUIRE_TOKEN_NETWORK_START, InteractionType.Silent, silentRequest);\r\n                return invokeAsync(this.acquireTokenByRefreshToken.bind(this), PerformanceEvents.AcquireTokenByRefreshToken, this.logger, this.performanceClient, silentRequest.correlationId)(silentRequest, cacheLookupPolicy);\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * Pre-generates PKCE codes and stores it in local variable\r\n     * @param correlationId\r\n     */\r\n    async preGeneratePkceCodes(correlationId) {\r\n        this.logger.verbose(\"Generating new PKCE codes\");\r\n        this.pkceCode = await invokeAsync(generatePkceCodes, PerformanceEvents.GeneratePkceCodes, this.logger, this.performanceClient, correlationId)(this.performanceClient, this.logger, correlationId);\r\n        return Promise.resolve();\r\n    }\r\n    /**\r\n     * Provides pre-generated PKCE codes, if any\r\n     * @param correlationId\r\n     */\r\n    getPreGeneratedPkceCodes(correlationId) {\r\n        this.logger.verbose(\"Attempting to pick up pre-generated PKCE codes\");\r\n        const res = this.pkceCode ? { ...this.pkceCode } : undefined;\r\n        this.pkceCode = undefined;\r\n        this.logger.verbose(`${res ? \"Found\" : \"Did not find\"} pre-generated PKCE codes`);\r\n        this.performanceClient.addFields({ usePreGeneratedPkce: !!res }, correlationId);\r\n        return res;\r\n    }\r\n}\r\n/**\r\n * Determines whether an error thrown by the refresh token endpoint can be resolved without interaction\r\n * @param refreshTokenError\r\n * @param silentRequest\r\n * @param cacheLookupPolicy\r\n * @returns\r\n */\r\nfunction checkIfRefreshTokenErrorCanBeResolvedSilently(refreshTokenError, cacheLookupPolicy) {\r\n    const noInteractionRequired = !(refreshTokenError instanceof InteractionRequiredAuthError &&\r\n        // For refresh token errors, bad_token does not always require interaction (silently resolvable)\r\n        refreshTokenError.subError !==\r\n            InteractionRequiredAuthErrorCodes.badToken);\r\n    // Errors that result when the refresh token needs to be replaced\r\n    const refreshTokenRefreshRequired = refreshTokenError.errorCode === BrowserConstants.INVALID_GRANT_ERROR ||\r\n        refreshTokenError.errorCode ===\r\n            ClientAuthErrorCodes.tokenRefreshRequired;\r\n    // Errors that may be resolved before falling back to interaction (through iframe renewal)\r\n    const isSilentlyResolvable = (noInteractionRequired && refreshTokenRefreshRequired) ||\r\n        refreshTokenError.errorCode ===\r\n            InteractionRequiredAuthErrorCodes.noTokensFound ||\r\n        refreshTokenError.errorCode ===\r\n            InteractionRequiredAuthErrorCodes.refreshTokenExpired;\r\n    // Only these policies allow for an iframe renewal attempt\r\n    const tryIframeRenewal = iFrameRenewalPolicies.includes(cacheLookupPolicy);\r\n    return isSilentlyResolvable && tryIframeRenewal;\r\n}\r\n\r\nexport { StandardController };\r\n//# sourceMappingURL=StandardController.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n * @returns Array of AccountInfo objects in cache\r\n */\r\nfunction getAllAccounts(logger, browserStorage, isInBrowser, accountFilter) {\r\n    logger.verbose(\"getAllAccounts called\");\r\n    return isInBrowser ? browserStorage.getAllAccounts(accountFilter) : [];\r\n}\r\n/**\r\n * Returns the first account found in the cache that matches the account filter passed in.\r\n * @param accountFilter\r\n * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n */\r\nfunction getAccount(accountFilter, logger, browserStorage) {\r\n    logger.trace(\"getAccount called\");\r\n    if (Object.keys(accountFilter).length === 0) {\r\n        logger.warning(\"getAccount: No accountFilter provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy(accountFilter);\r\n    if (account) {\r\n        logger.verbose(\"getAccount: Account matching provided filter found, returning\");\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccount: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching username.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found.\r\n * This API is provided for convenience but getAccountById should be used for best reliability\r\n * @param username\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByUsername(username, logger, browserStorage) {\r\n    logger.trace(\"getAccountByUsername called\");\r\n    if (!username) {\r\n        logger.warning(\"getAccountByUsername: No username provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        username,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByUsername: Account matching username found, returning\");\r\n        logger.verbosePii(`getAccountByUsername: Returning signed-in accounts matching username: ${username}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByUsername: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching homeAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param homeAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByHomeId(homeAccountId, logger, browserStorage) {\r\n    logger.trace(\"getAccountByHomeId called\");\r\n    if (!homeAccountId) {\r\n        logger.warning(\"getAccountByHomeId: No homeAccountId provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        homeAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByHomeId: Account matching homeAccountId found, returning\");\r\n        logger.verbosePii(`getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByHomeId: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Returns the signed in account matching localAccountId.\r\n * (the account object is created at the time of successful login)\r\n * or null when no matching account is found\r\n * @param localAccountId\r\n * @returns The account object stored in MSAL\r\n */\r\nfunction getAccountByLocalId(localAccountId, logger, browserStorage) {\r\n    logger.trace(\"getAccountByLocalId called\");\r\n    if (!localAccountId) {\r\n        logger.warning(\"getAccountByLocalId: No localAccountId provided\");\r\n        return null;\r\n    }\r\n    const account = browserStorage.getAccountInfoFilteredBy({\r\n        localAccountId,\r\n    });\r\n    if (account) {\r\n        logger.verbose(\"getAccountByLocalId: Account matching localAccountId found, returning\");\r\n        logger.verbosePii(`getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`);\r\n        return account;\r\n    }\r\n    else {\r\n        logger.verbose(\"getAccountByLocalId: No matching account found, returning null\");\r\n        return null;\r\n    }\r\n}\r\n/**\r\n * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n * @param account\r\n */\r\nfunction setActiveAccount(account, browserStorage) {\r\n    browserStorage.setActiveAccount(account);\r\n}\r\n/**\r\n * Gets the currently active account\r\n */\r\nfunction getActiveAccount(browserStorage) {\r\n    return browserStorage.getActiveAccount();\r\n}\r\n\r\nexport { getAccount, getAccountByHomeId, getAccountByLocalId, getAccountByUsername, getActiveAccount, getAllAccounts, setActiveAccount };\r\n//# sourceMappingURL=AccountManager.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { createV3Controller } from '../controllers/ControllerFactory.mjs';\r\nimport { StandardController } from '../controllers/StandardController.mjs';\r\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\r\nimport { NestedAppAuthController } from '../controllers/NestedAppAuthController.mjs';\r\nimport { NestedAppOperatingContext } from '../operatingcontext/NestedAppOperatingContext.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n/**\r\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\r\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\r\n */\r\nclass PublicClientApplication {\r\n    /**\r\n     * Creates StandardController and passes it to the PublicClientApplication\r\n     *\r\n     * @param configuration {Configuration}\r\n     */\r\n    static async createPublicClientApplication(configuration) {\r\n        const controller = await createV3Controller(configuration);\r\n        const pca = new PublicClientApplication(configuration, controller);\r\n        return pca;\r\n    }\r\n    /**\r\n     * @constructor\r\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\r\n     *\r\n     * Important attributes in the Configuration object for auth are:\r\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\r\n     * - authority: the authority URL for your application.\r\n     * - redirect_uri: the uri of your application registered in the portal.\r\n     *\r\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\r\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\r\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\r\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\r\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\r\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\r\n     *\r\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\r\n     * Full B2C functionality will be available in this library in future versions.\r\n     *\r\n     * @param configuration Object for the MSAL PublicClientApplication instance\r\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\r\n     */\r\n    constructor(configuration, controller) {\r\n        this.controller =\r\n            controller ||\r\n                new StandardController(new StandardOperatingContext(configuration));\r\n    }\r\n    /**\r\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\r\n     * @param request {?InitializeApplicationRequest}\r\n     */\r\n    async initialize(request) {\r\n        return this.controller.initialize(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    async acquireTokenPopup(request) {\r\n        return this.controller.acquireTokenPopup(request);\r\n    }\r\n    /**\r\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\r\n     * the page, so any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    acquireTokenRedirect(request) {\r\n        return this.controller.acquireTokenRedirect(request);\r\n    }\r\n    /**\r\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\r\n     *\r\n     * @param {@link (SilentRequest:type)}\r\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\r\n     */\r\n    acquireTokenSilent(silentRequest) {\r\n        return this.controller.acquireTokenSilent(silentRequest);\r\n    }\r\n    /**\r\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\r\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\r\n     * This API is not indended for normal authorization code acquisition and redemption.\r\n     *\r\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\r\n     *\r\n     * @param request {@link AuthorizationCodeRequest}\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    acquireTokenByCode(request) {\r\n        return this.controller.acquireTokenByCode(request);\r\n    }\r\n    /**\r\n     * Adds event callbacks to array\r\n     * @param callback\r\n     * @param eventTypes\r\n     */\r\n    addEventCallback(callback, eventTypes) {\r\n        return this.controller.addEventCallback(callback, eventTypes);\r\n    }\r\n    /**\r\n     * Removes callback with provided id from callback array\r\n     * @param callbackId\r\n     */\r\n    removeEventCallback(callbackId) {\r\n        return this.controller.removeEventCallback(callbackId);\r\n    }\r\n    /**\r\n     * Registers a callback to receive performance events.\r\n     *\r\n     * @param {PerformanceCallbackFunction} callback\r\n     * @returns {string}\r\n     */\r\n    addPerformanceCallback(callback) {\r\n        return this.controller.addPerformanceCallback(callback);\r\n    }\r\n    /**\r\n     * Removes a callback registered with addPerformanceCallback.\r\n     *\r\n     * @param {string} callbackId\r\n     * @returns {boolean}\r\n     */\r\n    removePerformanceCallback(callbackId) {\r\n        return this.controller.removePerformanceCallback(callbackId);\r\n    }\r\n    /**\r\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    enableAccountStorageEvents() {\r\n        this.controller.enableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\r\n     */\r\n    disableAccountStorageEvents() {\r\n        this.controller.disableAccountStorageEvents();\r\n    }\r\n    /**\r\n     * Returns the first account found in the cache that matches the account filter passed in.\r\n     * @param accountFilter\r\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\r\n     */\r\n    getAccount(accountFilter) {\r\n        return this.controller.getAccount(accountFilter);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching homeAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param homeAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByHomeId(homeAccountId) {\r\n        return this.controller.getAccountByHomeId(homeAccountId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching localAccountId.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found\r\n     * @param localAccountId\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByLocalId(localId) {\r\n        return this.controller.getAccountByLocalId(localId);\r\n    }\r\n    /**\r\n     * Returns the signed in account matching username.\r\n     * (the account object is created at the time of successful login)\r\n     * or null when no matching account is found.\r\n     * This API is provided for convenience but getAccountById should be used for best reliability\r\n     * @param userName\r\n     * @returns The account object stored in MSAL\r\n     * @deprecated - Use getAccount instead\r\n     */\r\n    getAccountByUsername(userName) {\r\n        return this.controller.getAccountByUsername(userName);\r\n    }\r\n    /**\r\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\r\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\r\n     * @returns Array of AccountInfo objects in cache\r\n     */\r\n    getAllAccounts(accountFilter) {\r\n        return this.controller.getAllAccounts(accountFilter);\r\n    }\r\n    /**\r\n     * Event handler function which allows users to fire events after the PublicClientApplication object\r\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\r\n     * auth flows.\r\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\r\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\r\n     */\r\n    handleRedirectPromise(hash) {\r\n        return this.controller.handleRedirectPromise(hash);\r\n    }\r\n    /**\r\n     * Use when initiating the login process via opening a popup window in the user's browser\r\n     *\r\n     * @param request\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    loginPopup(request) {\r\n        return this.controller.loginPopup(request);\r\n    }\r\n    /**\r\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\r\n     * any code that follows this function will not execute.\r\n     *\r\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\r\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\r\n     *\r\n     * @param request\r\n     */\r\n    loginRedirect(request) {\r\n        return this.controller.loginRedirect(request);\r\n    }\r\n    /**\r\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\r\n     * @param logoutRequest\r\n     * @deprecated\r\n     */\r\n    logout(logoutRequest) {\r\n        return this.controller.logout(logoutRequest);\r\n    }\r\n    /**\r\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\r\n     * Default behaviour is to redirect the user to `window.location.href`.\r\n     * @param logoutRequest\r\n     */\r\n    logoutRedirect(logoutRequest) {\r\n        return this.controller.logoutRedirect(logoutRequest);\r\n    }\r\n    /**\r\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\r\n     * @param logoutRequest\r\n     */\r\n    logoutPopup(logoutRequest) {\r\n        return this.controller.logoutPopup(logoutRequest);\r\n    }\r\n    /**\r\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\r\n     * - Any browser using a form of Intelligent Tracking Prevention\r\n     * - If there is not an established session with the service\r\n     *\r\n     * In these cases, the request must be done inside a popup or full frame redirect.\r\n     *\r\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\r\n     *\r\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\r\n     * you session on the server still exists.\r\n     * @param request {@link SsoSilentRequest}\r\n     *\r\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\r\n     */\r\n    ssoSilent(request) {\r\n        return this.controller.ssoSilent(request);\r\n    }\r\n    /**\r\n     * Gets the token cache for the application.\r\n     */\r\n    getTokenCache() {\r\n        return this.controller.getTokenCache();\r\n    }\r\n    /**\r\n     * Returns the logger instance\r\n     */\r\n    getLogger() {\r\n        return this.controller.getLogger();\r\n    }\r\n    /**\r\n     * Replaces the default logger set in configurations with new Logger with new configurations\r\n     * @param logger Logger instance\r\n     */\r\n    setLogger(logger) {\r\n        this.controller.setLogger(logger);\r\n    }\r\n    /**\r\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\r\n     * @param account\r\n     */\r\n    setActiveAccount(account) {\r\n        this.controller.setActiveAccount(account);\r\n    }\r\n    /**\r\n     * Gets the currently active account\r\n     */\r\n    getActiveAccount() {\r\n        return this.controller.getActiveAccount();\r\n    }\r\n    /**\r\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\r\n     * @param sku\r\n     * @param version\r\n     */\r\n    initializeWrapperLibrary(sku, version) {\r\n        return this.controller.initializeWrapperLibrary(sku, version);\r\n    }\r\n    /**\r\n     * Sets navigation client\r\n     * @param navigationClient\r\n     */\r\n    setNavigationClient(navigationClient) {\r\n        this.controller.setNavigationClient(navigationClient);\r\n    }\r\n    /**\r\n     * Returns the configuration object\r\n     * @internal\r\n     */\r\n    getConfiguration() {\r\n        return this.controller.getConfiguration();\r\n    }\r\n    /**\r\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\r\n     * @param result\r\n     * @param request - The request object that was used to obtain the AuthenticationResult\r\n     * @returns\r\n     */\r\n    async hydrateCache(result, request) {\r\n        return this.controller.hydrateCache(result, request);\r\n    }\r\n    /**\r\n     * Clears tokens and account from the browser cache.\r\n     * @param logoutRequest\r\n     */\r\n    clearCache(logoutRequest) {\r\n        return this.controller.clearCache(logoutRequest);\r\n    }\r\n}\r\n/**\r\n * creates NestedAppAuthController and passes it to the PublicClientApplication,\r\n * falls back to StandardController if NestedAppAuthController is not available\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nasync function createNestablePublicClientApplication(configuration) {\r\n    const nestedAppAuth = new NestedAppOperatingContext(configuration);\r\n    await nestedAppAuth.initialize();\r\n    if (nestedAppAuth.isAvailable()) {\r\n        const controller = new NestedAppAuthController(nestedAppAuth);\r\n        const nestablePCA = new PublicClientApplication(configuration, controller);\r\n        await nestablePCA.initialize();\r\n        return nestablePCA;\r\n    }\r\n    return createStandardPublicClientApplication(configuration);\r\n}\r\n/**\r\n * creates PublicClientApplication using StandardController\r\n *\r\n * @param configuration\r\n * @returns IPublicClientApplication\r\n *\r\n */\r\nasync function createStandardPublicClientApplication(configuration) {\r\n    const pca = new PublicClientApplication(configuration);\r\n    await pca.initialize();\r\n    return pca;\r\n}\r\n\r\nexport { PublicClientApplication, createNestablePublicClientApplication, createStandardPublicClientApplication };\r\n//# sourceMappingURL=PublicClientApplication.mjs.map\r\n","/*! @azure/msal-browser v4.7.0 2025-03-11 */\r\n'use strict';\r\nimport { NestedAppOperatingContext } from '../operatingcontext/NestedAppOperatingContext.mjs';\r\nimport { StandardOperatingContext } from '../operatingcontext/StandardOperatingContext.mjs';\r\nimport { StandardController } from './StandardController.mjs';\r\nimport { NestedAppAuthController } from './NestedAppAuthController.mjs';\r\n\r\n/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\nasync function createV3Controller(config, request) {\r\n    const standard = new StandardOperatingContext(config);\r\n    await standard.initialize();\r\n    return StandardController.createController(standard, request);\r\n}\r\nasync function createController(config) {\r\n    const standard = new StandardOperatingContext(config);\r\n    const nestedApp = new NestedAppOperatingContext(config);\r\n    const operatingContexts = [standard.initialize(), nestedApp.initialize()];\r\n    await Promise.all(operatingContexts);\r\n    if (nestedApp.isAvailable() && config.auth.supportsNestedAppAuth) {\r\n        return NestedAppAuthController.createController(nestedApp);\r\n    }\r\n    else if (standard.isAvailable()) {\r\n        return StandardController.createController(standard);\r\n    }\r\n    else {\r\n        // Since neither of the actual operating contexts are available keep the UnknownOperatingContextController\r\n        return null;\r\n    }\r\n}\r\n\r\nexport { createController, createV3Controller };\r\n//# sourceMappingURL=ControllerFactory.mjs.map\r\n","export class InvalidTokenError extends Error {\r\n}\r\nInvalidTokenError.prototype.name = \"InvalidTokenError\";\r\nfunction b64DecodeUnicode(str) {\r\n    return decodeURIComponent(atob(str).replace(/(.)/g, (m, p) => {\r\n        let code = p.charCodeAt(0).toString(16).toUpperCase();\r\n        if (code.length < 2) {\r\n            code = \"0\" + code;\r\n        }\r\n        return \"%\" + code;\r\n    }));\r\n}\r\nfunction base64UrlDecode(str) {\r\n    let output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\r\n    switch (output.length % 4) {\r\n        case 0:\r\n            break;\r\n        case 2:\r\n            output += \"==\";\r\n            break;\r\n        case 3:\r\n            output += \"=\";\r\n            break;\r\n        default:\r\n            throw new Error(\"base64 string is not of the correct length\");\r\n    }\r\n    try {\r\n        return b64DecodeUnicode(output);\r\n    }\r\n    catch (err) {\r\n        return atob(output);\r\n    }\r\n}\r\nexport function jwtDecode(token, options) {\r\n    if (typeof token !== \"string\") {\r\n        throw new InvalidTokenError(\"Invalid token specified: must be a string\");\r\n    }\r\n    options || (options = {});\r\n    const pos = options.header === true ? 0 : 1;\r\n    const part = token.split(\".\")[pos];\r\n    if (typeof part !== \"string\") {\r\n        throw new InvalidTokenError(`Invalid token specified: missing part #${pos + 1}`);\r\n    }\r\n    let decoded;\r\n    try {\r\n        decoded = base64UrlDecode(part);\r\n    }\r\n    catch (e) {\r\n        throw new InvalidTokenError(`Invalid token specified: invalid base64 for part #${pos + 1} (${e.message})`);\r\n    }\r\n    try {\r\n        return JSON.parse(decoded);\r\n    }\r\n    catch (e) {\r\n        throw new InvalidTokenError(`Invalid token specified: invalid json for part #${pos + 1} (${e.message})`);\r\n    }\r\n}\r\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./HomeScreen.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./HomeScreen.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect } from \"react\";\r\nimport { PublicClientApplication, Configuration } from \"@azure/msal-browser\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\nimport \"./HomeScreen.scss\";\r\nimport logo from \"../assets/images/logoword.png\";\r\nimport logError from \"../assets/images/LogError.png\";\r\nimport dismiss from \"../assets/images/Dismiss.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst CLIENT_ID = \"ab1349c6-78b8-4824-800b-066ea1c49997\";\r\nconst AUTHORITY = \"https://login.microsoftonline.com/common\";\r\n\r\nconst msalConfig = {\r\n  auth: {\r\n    clientId: CLIENT_ID,\r\n    authority: AUTHORITY,\r\n    redirectUri: \"https://localhost:3000/taskpane.html\",\r\n  },\r\n};\r\n\r\nconst msalInstance = new PublicClientApplication(msalConfig);\r\n\r\nconst checkEmail = async (email) => {\r\n  try {\r\n    const response = await fetch(\r\n      `https://us-central1-bbca-be.cloudfunctions.net/api/check-email?email=${email}`\r\n    );\r\n    const data = await response.json();\r\n    return data.exists ?? false;\r\n  } catch (error) {\r\n    console.error(\"API call failed:\", error);\r\n    return false;\r\n  }\r\n};\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const [officeReady, setOfficeReady] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [showError, setShowError] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (!window.Office) {\r\n      setError(\"Office.js not loaded - check manifest or deployment path.\");\r\n      return;\r\n    }\r\n\r\n    Office.onReady(() => {\r\n      console.log(\"Office is ready\");\r\n      setOfficeReady(true);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const runLogin = async () => {\r\n      if (!officeReady) return;\r\n\r\n      try {\r\n        // ✅ Always await MSAL initialize before calling loginPopup\r\n        await msalInstance.initialize();\r\n\r\n        const response = await msalInstance.loginPopup({\r\n          scopes: [\"openid\", \"profile\", \"email\"],\r\n        });\r\n\r\n        const decodedToken = jwtDecode(response.idToken);\r\n        console.log(\"Decoded Token:\", decodedToken);\r\n      } catch (err) {\r\n        console.error(\"Login failed:\", err);\r\n        setError(err.message);\r\n      }\r\n    };\r\n\r\n    runLogin();\r\n  }, [officeReady]);\r\n\r\n  const handleLogin = () => {\r\n    if (!officeReady) return;\r\n\r\n    setLoading(true);\r\n\r\n    Office.context.auth.getAccessTokenAsync(\r\n      {\r\n        allowConsentPrompt: true,\r\n        allowSignInPrompt: true,\r\n        forMSGraphAccess: true,\r\n      },\r\n      async (result) => {\r\n        console.log(\"Token callback result:\", result);\r\n\r\n        if (result.status === \"succeeded\" && result.value) {\r\n          const decodedToken = jwtDecode(result.value);\r\n          const email = decodedToken.preferred_username;\r\n\r\n          console.log(\"Email:\", email);\r\n\r\n          const emailCheck = await checkEmail(email);\r\n          console.log(\"Email Check:\", emailCheck);\r\n\r\n          setLoading(false);\r\n          if (emailCheck) {\r\n            setShowError(false);\r\n            navigate(\"/exportExcel\");\r\n          } else {\r\n            setShowError(true);\r\n          }\r\n        } else {\r\n          setLoading(false);\r\n          console.error(\"Token retrieval failed:\", result.error);\r\n          setError(`Token retrieval failed: ${result.error.message}`);\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  if (error) {\r\n    return (\r\n      <div style={{ color: \"red\", padding: \"20px\" }}>\r\n        CRITICAL ERROR: {error}\r\n        <br />\r\n        <button onClick={() => window.location.reload()}>Reload Add-in</button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {loading ? (\r\n        <div className=\"loading-container\">\r\n          <div className=\"spinner\"></div>\r\n          <p className=\"loading-text\">Loading...</p>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {showError && (\r\n            <div className=\"error-container\">\r\n              <div className=\"error-content\">\r\n                <img src={logError} alt=\"error icon\" className=\"error-icon\" />\r\n                <div className=\"error-text-container\">\r\n                  <p className=\"error-title\">Log In Error</p>\r\n                  <p className=\"error-message\">\r\n                    This account is not in our system. Please contact the administrator.\r\n                  </p>\r\n                </div>\r\n                <button className=\"dismiss-button\" onClick={() => setShowError(false)}>\r\n                  <img src={dismiss} alt=\"dismiss icon\" />\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className=\"content\">\r\n            <img src={logo} alt=\"logo\" className=\"logo\" />\r\n            <button className=\"login-button\" onClick={handleLogin}>\r\n              Sign In With Microsoft\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","\n      import API from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../node_modules/css-loader/dist/cjs.js!./App.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../node_modules/css-loader/dist/cjs.js!./App.css\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./ExcelImport.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./ExcelImport.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./MultiSelectDropdown.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./MultiSelectDropdown.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./MultiSelectDropdown.scss\";\r\nimport RadioBase from \"../assets/images/RadioBase.png\";\r\nimport RadioColor from \"../assets/images/radioColor.png\";\r\nimport BottomIcon from \"../assets/images/bottomicon.png\";\r\nimport NeedHelp from \"../assets/images/needHelp.png\";\r\n\r\nconst options = [\r\n  { id: 1, name: \"Name 1\", info: \"Excel range size: 3 rows and 2 columns.\" },\r\n  { id: 2, name: \"Name 2\", info: \"Excel range size: 5 rows and 4 columns.\" },\r\n  { id: 3, name: \"Name 3\", info: \"Excel range size: 2 rows and 3 columns.\" },\r\n  { id: 4, name: \"Name 4\", info: \"Excel range size: 6 rows and 5 columns.\" },\r\n];\r\n\r\nconst MultiSelectDropdown = () => {\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [hoveredItem, setHoveredItem] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n  const handleSelect = (id) => {\r\n    setSelectedOptions((prevSelected) =>\r\n      prevSelected.includes(id)\r\n        ? prevSelected.filter((item) => item !== id)\r\n        : [...prevSelected, id]\r\n    );\r\n  };\r\n\r\n  const toggleTooltip = (id) => {\r\n    setHoveredItem(hoveredItem === id ? null : id);\r\n  };\r\n\r\n  // Close dropdown and tooltip when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setHoveredItem(null);\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dropdown-container\" ref={dropdownRef}>\r\n      <div className=\"dropdown-header\" onClick={toggleDropdown}>\r\n        <span>Sheet 1</span>\r\n        <img src={BottomIcon} alt=\"Dropdown Icon\" />\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <div className=\"dropdown-list z-index_rt\">\r\n          <p className=\"dropdown-action\">Action</p>\r\n          {options.map((option) => (\r\n            <div key={option.id} className=\"dropdown-item\">\r\n              <img\r\n                src={selectedOptions.includes(option.id) ? RadioColor : RadioBase}\r\n                alt=\"Radio\"\r\n                onClick={() => handleSelect(option.id)}\r\n              />\r\n              <span onClick={() => handleSelect(option.id)}>{option.name}</span>\r\n\r\n              <img\r\n                src={NeedHelp}\r\n                alt=\"Info\"\r\n                className=\"help-icon\"\r\n                onClick={() => toggleTooltip(option.id)}\r\n              />\r\n\r\n              {hoveredItem === option.id && (\r\n                <div className=\"tooltip\">\r\n                  <div className=\"tooltip-arrow\"></div>\r\n                  <div className=\"tooltip-content\">\r\n                    <p><strong>Table:</strong> {option.name}</p>\r\n                    <p><strong>Type:</strong> Table (Word-formatted)</p>\r\n                    <p>{option.info}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiSelectDropdown;\r\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./CustomTabs.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./CustomTabs.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./CustomTabs.scss\";\r\nimport SearchIcon from \"../assets/images/searchIcon.png\"; // Update path accordingly\r\nimport RadioBase from \"../assets/images/RadioBase.png\";\r\nimport RadioColor from \"../assets/images/radioColor.png\";\r\nimport BottomIcon from \"../assets/images/bottomicon.png\";\r\nimport NeedHelp from \"../assets/images/needHelp.png\";\r\nconst tabs = [\"All\", \"Tables\", \"Text\", \"Images\"];\r\nconst options = [\r\n    { id: 1, name: \"Name 1\", info: \"Excel range size: 3 rows and 2 columns.\" },\r\n    { id: 2, name: \"Name 2\", info: \"Excel range size: 5 rows and 4 columns.\" },\r\n    { id: 3, name: \"Name 3\", info: \"Excel range size: 2 rows and 3 columns.\" },\r\n    { id: 4, name: \"Name 4\", info: \"Excel range size: 6 rows and 5 columns.\" },\r\n  ];\r\n  \r\n  \r\nconst tabData = {\r\n  All: \"This is the All tab. It shows everything.\",\r\n  Tables: \"Tables data: Table 1, Table 2, Table 3...\",\r\n  Text: \"Text data: This is some sample text content.\",\r\n  Images: \"Images: Image1.png, Image2.png, Image3.png...\",\r\n};\r\n\r\nconst CustomTabs = (files) => {\r\n  console.log(files , \"files\")\r\n  const [activeTab, setActiveTab] = useState(\"All\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\nconst [hoveredItem, setHoveredItem] = useState(null);\r\n  const dropdownRef = useRef(null);\r\n\r\n  const toggleDropdown = () => setIsOpen(!isOpen);\r\n\r\n  const handleSelect = (id) => {\r\n    setSelectedOptions((prevSelected) =>\r\n      prevSelected.includes(id)\r\n        ? prevSelected.filter((item) => item !== id)\r\n        : [...prevSelected, id]\r\n    );\r\n  };\r\n\r\n  const toggleTooltip = (id) => {\r\n    setHoveredItem(hoveredItem === id ? null : id);\r\n  };\r\n\r\n  // Close dropdown and tooltip when clicking outside\r\n  useEffect(() => {\r\n    const handleClickOutside = (event) => {\r\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\r\n        setHoveredItem(null);\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"custom-tabs\">\r\n      <div className=\"tabs\">\r\n        {tabs.map((tab) => (\r\n          <div\r\n            key={tab}\r\n            className={`tab ${activeTab === tab ? \"active\" : \"\"}`}\r\n            onClick={() => setActiveTab(tab)}\r\n          >\r\n            {tab}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {files.files ?\r\n      <div className=\"search-bar\">\r\n        <img src={SearchIcon} alt=\"Search\" className=\"search-icon\" />\r\n       \r\n        <input type=\"text\" placeholder=\"Search\" />\r\n        \r\n        \r\n        \r\n      </div>\r\n      :\r\n      <div className=\"mt-tr\" >\r\n      <input type=\"file\" placeholder=\"Search \" /> \r\n      </div>\r\n      }\r\n\r\n      <div className=\"tab-content\">{tabData[activeTab]}</div>\r\n      <div className=\"dropdown-container z_index\" >\r\n       <div className=\"dropdown-list bg_background_color\">\r\n                <p className=\"dropdown-action item_margin\">4 items found</p>\r\n                {options.map((option) => (\r\n                  <div key={option.id} className=\"dropdown-item\">\r\n                    <img\r\n                      src={selectedOptions.includes(option.id) ? RadioColor : RadioBase}\r\n                      alt=\"Radio\"\r\n                      onClick={() => handleSelect(option.id)}\r\n                    />\r\n                    <span onClick={() => handleSelect(option.id)}>{option.name}</span>\r\n      \r\n                    <img\r\n                      src={NeedHelp}\r\n                      alt=\"Info\"\r\n                      className=\"help-icon\"\r\n                      onClick={() => toggleTooltip(option.id)}\r\n                    />\r\n      \r\n                    {hoveredItem === option.id && (\r\n                      <div className=\"tooltip\">\r\n                        <div className=\"tooltip-arrow\"></div>\r\n                        <div className=\"tooltip-content\">\r\n                          <p><strong>Table:</strong> {option.name}</p>\r\n                          <p><strong>Type:</strong> Table (Word-formatted)</p>\r\n                          <p>{option.info}</p>\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomTabs;\r\n","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./ExpandableTable.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./ExpandableTable.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ExpandableTable.scss\";\r\nimport updateIcon from \"../assets/images/update.png\";\r\nimport documentSearchIcon from \"../assets/images/DocumentSearch.png\";\r\nimport bottomIcon from \"../assets/images/bottomicon.png\";\r\nimport tableIcon from \"../assets/images/Table.png\";\r\n\r\n\r\n\r\nconst ExpandableTable = ({ source, headingText, Rangedata, headingfirst, ClassName }) => {\r\n\r\n  const [data, setData] = useState();\r\n  useEffect(() => {\r\n    setData(Rangedata)\r\n    console.log(Rangedata)\r\n  }, [Rangedata])\r\n\r\n  const toggleExpand = (id) => {\r\n    setData((prevData) =>\r\n      prevData.map((item) =>\r\n        item.id === id ? { ...item, expanded: !item.expanded } : item\r\n      )\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <div className=\"containerlink\">\r\n        <span className=\"text\">{headingfirst}</span>\r\n        <button className=\"updateButton\">\r\n          <img src={source} alt=\"Update\" className={`icon  ${ClassName}`} />\r\n          <span className=\"updateText\">{headingText}</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"header\">\r\n        <span className=\"headerText\">Type</span>\r\n        <span className=\"headerText\">Name</span>\r\n        <span className=\"headerText\"></span>\r\n      </div>\r\n\r\n      {data?.map((item) => {\r\n        const isImageType = item.RangeName?.trim().split(/\\s+/).slice(-3).every(word => word.endsWith(\"_img\"));\r\n\r\n        return (\r\n          <div key={item.id}>\r\n            <div className=\"row\">\r\n              <span className=\"cell\">{item?.type}</span>\r\n              <span className=\"cell\">{item.RangeName}</span>\r\n              <div className=\"iconContainer\">\r\n                <button onClick={() => toggleExpand(item.id)}>\r\n                  <img src={documentSearchIcon} alt=\"Expand\" className=\"arrowIcon\" />\r\n                </button>\r\n                <button onClick={() => toggleExpand(item.id)}>\r\n                  <img\r\n                    src={bottomIcon}\r\n                    alt=\"Toggle\"\r\n                    className={`bottomIcon ${item.expanded ? \"arrowRotated\" : \"\"}`}\r\n                  />\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {item.expanded && (\r\n              <div className=\"expandedContainer\">\r\n                <img src={tableIcon} alt=\"Table\" className=\"tableIcon\" />\r\n                <p className=\"infoText\"><span>Type:</span> Text</p>\r\n                <p className=\"infoText\"><span>Range:</span> {item.Sheet}</p>\r\n                <p className=\"infoText\"><span>Name:</span> {item.RangeName}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpandableTable;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExcelImport.scss\";\r\n\r\nimport DismissIcon from \"../assets/images/Dismiss.png\";\r\nimport IconCheck from \"../assets/images/IconCheck.png\";\r\nimport UserIcon from \"../assets/images/user.png\";\r\nimport NeedHelpIcon from \"../assets/images/needHelp.png\";\r\nimport ArrowRightIcon from \"../assets/images/ArrowRight.png\";\r\nimport Arrow_white_Import from \"../assets/images/Arrow_white_Import.png\";\r\nimport UpdateIcon from \"../assets/images/update.png\";\r\nimport MultiSelectDropdown from \"../MultiSelectDropdown/MultiSelectDropdown\";\r\nimport CustomTabs from \"../Tabs/CustomTabs\";\r\nimport ExpandableTable from \"../ExpandableTable/ExpandableTable\";\r\nimport InsertIcon from \"../assets/images/InsertIcon.png\";\r\nimport Checkactive from \"../assets/images/checkactive.png\";\r\nimport Checkhover from \"../assets/images/checkhover.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ExcelImport = () => {\r\n    const [expandedRow, setExpandedRow] = useState(null);\r\n    const [checked, setChecked] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const [file, setfile] = useState('true');\r\n    const navigate = useNavigate();\r\n  const data = [\r\n    {\r\n      type: \"Table\",\r\n      name: \"Name 2\",\r\n      sheet: \"Sheet 1\",\r\n      workspace: \"file_name_1\",\r\n      lastUpdate: \"14/02/2025, 15:29:31\",\r\n    },\r\n    {\r\n      type: \"Table\",\r\n      name: \"Name 3\",\r\n      sheet: \"Sheet 2\",\r\n      workspace: \"file_name_2\",\r\n      lastUpdate: \"13/02/2025, 12:45:00\",\r\n    },\r\n  ];\r\n  \r\n  const handleChange = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      navigate(\"/exportExcel\");\r\n    }, 2000);\r\n  };\r\nconst HandleFile = () => {\r\n  setfile(!file)\r\n}\r\n  const toggleRow = (index) => {\r\n    setExpandedRow(expandedRow === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-import-container\">\r\n      {loading ? (\r\n        <div className=\"main-loading-container\" >\r\n        <div className=\"loading-container\">\r\n          <div className=\"spinner\"></div>\r\n          <p className=\"loading-text\">Loading...</p>\r\n        </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n      <div className=\"success-message\">\r\n        <img src={IconCheck} alt=\"Success\" />\r\n        <span className=\"LoggedSuccessfully\" >Logged in successfully</span>\r\n        <img src={DismissIcon} alt=\"Dismiss\" className=\"dismiss-icon\" />\r\n      </div>\r\n\r\n      {/* User Info */}\r\n      <div className=\"user-info\">\r\n        <img src={UserIcon} alt=\"User\" className=\"user-icon\" />\r\n        <div className=\"user-details\">\r\n          <p className=\"user-name m-minus-t\">Arlene McCoy</p>\r\n          <p className=\"user-role\">Manage Account</p>\r\n        </div>\r\n        <img src={NeedHelpIcon} alt=\"Help\" className=\"help-icon\" />\r\n      </div>\r\n\r\n      {/* Import Excel Content */}\r\n      <div className=\"import-section\">\r\n        <h2>Get Excel Content</h2>\r\n        <p>First submit content on Excel in order to successfully import it to Word</p>\r\n        <button className=\"import-btn\" onClick={handleChange} >\r\n          <img src={Arrow_white_Import} alt=\"Import\" />\r\n          Import Excel Content\r\n        </button>\r\n        <button className=\"update-btn\">\r\n          <img src={UpdateIcon} alt=\"Update\" />\r\n          Update\r\n        </button>\r\n        <p className=\"last-update\">Last update: 14/02/2025, 15:29:31</p>\r\n      </div>\r\n\r\n      <div className=\"imported-items\">\r\n        <h2>Select Imported Items</h2>\r\n        <p>Insert new items or update already inserted</p>\r\n      </div>\r\n      <MultiSelectDropdown />\r\n      <CustomTabs  files={file} />\r\n      <div className=\"button-container\">\r\n      <label className=\"checkbox-container\">\r\n        <input \r\n          type=\"checkbox\" \r\n          checked={checked} \r\n          onChange={() => setChecked(!checked)} \r\n        />\r\n        <img \r\n          src={checked ? Checkactive : Checkhover} \r\n          alt=\"checkbox\" \r\n          className=\"checkbox-icon\"\r\n        />\r\n        Use destination formatting\r\n      </label>\r\n\r\n      <button className=\"insert-button\" onClick={HandleFile} >\r\n        <img src={InsertIcon} alt=\"Insert Icon\" />\r\n        Insert\r\n      </button>\r\n    </div>\r\n      <ExpandableTable source={UpdateIcon} headingText='Update All' headingfirst='Linked fields table' className=\"\" />\r\n      </>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelImport;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ExcelImport.scss\";\r\nimport DismissIcon from \"../assets/images/Dismiss.png\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nimport IconCheck from \"../assets/images/IconCheck.png\";\r\nimport UserIcon from \"../assets/images/user.png\";\r\nimport NeedHelpIcon from \"../assets/images/needHelp.png\";\r\nimport Arrow_white_Import from \"../assets/images/Arrow_white_Import.png\";\r\nimport UpdateIcon from \"../assets/images/update.png\";\r\nimport TableSearch from \"../assets/images/TableSearch.png\";\r\nimport MultiSelectDropdown from \"../MultiSelectDropdown/MultiSelectDropdown\";\r\nimport CustomTabs from \"../Tabs/CustomTabs\";\r\nimport ExpandableTable from \"../ExpandableTable/ExpandableTable\";\r\nimport InsertIcon from \"../assets/images/InsertIcon.png\";\r\nimport ArrowExport from \"../assets/images/ArrowExport.png\";\r\nimport Checkactive from \"../assets/images/checkactive.png\";\r\nimport Checkhover from \"../assets/images/checkhover.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst ExportExcel = () => {\r\n  const [expandedRow, setExpandedRow] = useState(null);\r\n  const [checked, setChecked] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const [Rangedata, SetRangedata] = useState([]);\r\n  const [showpopup, SetShowpopup] = useState(false);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = () => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      setLoading(false);\r\n      navigate(\"/SignOutUser\");\r\n    }, 2000);\r\n  };\r\n\r\n  // Updated function to extract any named range as HTML\r\n  const extractNamedRangeAsHtml = async (rangeName, context) => {\r\n    try {\r\n      const namedRange = context.workbook.names.getItem(rangeName).getRange();\r\n      namedRange.load([\"text\", \"rowCount\", \"columnCount\", \"values\"]);\r\n      await context.sync();\r\n\r\n      const rowCount = namedRange.rowCount;\r\n      const columnCount = namedRange.columnCount;\r\n      const textValues = namedRange.text;\r\n      const values = namedRange.values;\r\n\r\n      let html = `<table style=\"border-collapse: collapse;\">`;\r\n\r\n      for (let i = 0; i < rowCount; i++) {\r\n        html += \"<tr>\";\r\n        for (let j = 0; j < columnCount; j++) {\r\n          const cell = namedRange.getCell(i, j);\r\n          cell.format.load([\"fill/color\", \"font/color\", \"font/bold\", \"font/size\", \"font/name\"]);\r\n          await context.sync();\r\n\r\n          const value = textValues[i][j];\r\n          const bgColor = cell.format.fill.color || \"#ffffff\";\r\n          const fontColor = cell.format.font.color || \"#000000\";\r\n          const fontSize = cell.format.font.size || 12;\r\n          const fontName = cell.format.font.name || \"Arial\";\r\n          const bold = cell.format.font.bold ? \"bold\" : \"normal\";\r\n\r\n          html += `<td style=\"\r\n            border: 1px solid #000;\r\n            padding: 6px;\r\n            background-color: ${bgColor};\r\n            color: ${fontColor};\r\n            font-size: ${fontSize}px;\r\n            font-family: ${fontName};\r\n            font-weight: ${bold};\r\n          \">${value}</td>`;\r\n        }\r\n        html += \"</tr>\";\r\n      }\r\n\r\n      html += \"</table>\";\r\n\r\n      // Return both HTML and table values\r\n      return {\r\n        html: html,\r\n        value: values.flat().join(\", \"),\r\n        rowCount: rowCount,\r\n        columnCount: columnCount\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error(`Error extracting HTML for range ${rangeName}:`, error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetectRange()\r\n  }, []);\r\n\r\n  const getRanges = async () => {\r\n    try {\r\n      Office.context.auth.getAccessTokenAsync(\r\n        {\r\n          allowConsentPrompt: true,\r\n          allowSignInPrompt: true,\r\n          forMSGraphAccess: true,\r\n        },\r\n        async (result) => {\r\n          console.log(\"Token callback result:\", result);\r\n\r\n          if (result.status === \"succeeded\" && result.value) {\r\n            const decodedToken = jwtDecode(result.value);\r\n            const email = decodedToken.preferred_username;\r\n            console.log(\"Email:\", email);\r\n\r\n            await Excel.run(async (context) => {\r\n              const workbook = context.workbook;\r\n              workbook.load(\"name\");\r\n              await context.sync();\r\n\r\n              const fileName = workbook.name;\r\n\r\n              const names = workbook.names;\r\n              names.load(\"items/name,items/value\");\r\n              await context.sync();\r\n\r\n              for (const namedItem of names.items) {\r\n                let payload = {};\r\n\r\n                if (namedItem.name.endsWith(\"_img\")) {\r\n                  // Handle image ranges\r\n                  const range = workbook.names.getItem(namedItem.name).getRange();\r\n                  await context.sync();\r\n                  const image = range.getImage();\r\n                  await context.sync();\r\n\r\n                  payload = {\r\n                    user: email,\r\n                    rangeName: namedItem.name,\r\n                    value: image.value,\r\n                    type: \"image\",\r\n                    fileName,\r\n                  };\r\n                } else {\r\n                  // Handle text/table ranges\r\n                  const range = workbook.worksheets\r\n                    .getActiveWorksheet()\r\n                    .getRange(namedItem.value);\r\n                  range.load([\"values\", \"rowCount\", \"columnCount\"]);\r\n                  await context.sync();\r\n\r\n                  const isTable = range.rowCount > 1 || range.columnCount > 1;\r\n\r\n                  if (isTable) {\r\n                    // For tables, extract HTML with formatting and values\r\n                    const htmlData = await extractNamedRangeAsHtml(namedItem.name, context);\r\n\r\n                    if (htmlData) {\r\n                      payload = {\r\n                        user: email,\r\n                        rangeName: namedItem.name,\r\n                        value: htmlData.value, // Table values as comma-separated string\r\n                        html: htmlData.html,   // HTML with formatting\r\n                        type: \"table\",\r\n                        fileName,\r\n                        rowCount: htmlData.rowCount,\r\n                        columnCount: htmlData.columnCount,\r\n                      };\r\n                    } else {\r\n                      // Fallback if HTML extraction fails\r\n                      const value = range.values.flat().join(\", \");\r\n                      payload = {\r\n                        user: email,\r\n                        rangeName: namedItem.name,\r\n                        value: value,\r\n                        type: \"table\",\r\n                        fileName,\r\n                        rowCount: range.rowCount,\r\n                        columnCount: range.columnCount,\r\n                      };\r\n                    }\r\n                  } else {\r\n                    // For single cells/text\r\n                    const value = range.values.flat().join(\", \");\r\n                    payload = {\r\n                      user: email,\r\n                      rangeName: namedItem.name,\r\n                      value: value,\r\n                      type: \"text\",\r\n                      fileName,\r\n                      rowCount: range.rowCount,\r\n                      columnCount: range.columnCount,\r\n                    };\r\n                  }\r\n                }\r\n\r\n                await uploadData(payload);\r\n                console.log(`Processed range: ${namedItem.name}, Type: ${payload.type}`);\r\n              }\r\n\r\n              // Handle shapes/images\r\n              const sheet = context.workbook.worksheets.getActiveWorksheet();\r\n              const shapes = sheet.shapes;\r\n              shapes.load(\"items/name,type\");\r\n              await context.sync();\r\n\r\n              const imageShapes = shapes.items.filter(shape => shape.type === \"Image\");\r\n\r\n              for (const shape of imageShapes) {\r\n                try {\r\n                  const image = shape.getAsImage(Excel.PictureFormat.png);\r\n                  await context.sync();\r\n\r\n                  const imagePayload = {\r\n                    user: email,\r\n                    rangeName: shape.name,\r\n                    value: image.value,\r\n                    type: \"image\",\r\n                    fileName,\r\n                  };\r\n\r\n                  await uploadData(imagePayload);\r\n                } catch (error) {\r\n                  console.error(`❌ Error extracting image '${shape.name}':`, error);\r\n                }\r\n              }\r\n\r\n              console.log(\"All ranges processed successfully!\");\r\n            });\r\n          }\r\n        }\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Error during Get Ranges:\", error);\r\n    }\r\n  };\r\n\r\n  const uploadData = async (payload) => {\r\n    try {\r\n      const existingData = JSON.parse(localStorage.getItem(\"ExcelData\")) || [];\r\n\r\n      const updatedData = existingData.map((item) => {\r\n        if (item.rangeName === payload.rangeName && item.fileName === payload.fileName) {\r\n          return { ...item, ...payload };\r\n        }\r\n        return item;\r\n      });\r\n\r\n      const isNew = !existingData.some(\r\n        (item) => item.rangeName === payload.rangeName && item.fileName === payload.fileName\r\n      );\r\n\r\n      if (isNew) {\r\n        updatedData.push(payload);\r\n      }\r\n\r\n      localStorage.setItem(\"ExcelData\", JSON.stringify(updatedData));\r\n      console.log(`Payload stored/updated in localStorage: ${payload.rangeName}`);\r\n    } catch (error) {\r\n      console.error(\"Failed to store/update payload in localStorage:\", error);\r\n    }\r\n  };\r\n\r\n  const getDetectRange = async () => {\r\n    try {\r\n      await Excel.run(async (context) => {\r\n        const workbook = context.workbook;\r\n        workbook.load(\"name\");\r\n        await context.sync();\r\n\r\n        const fileName = workbook.name;\r\n\r\n        const names = workbook.names;\r\n        names.load(\"items/name,items/value\");\r\n        await context.sync();\r\n\r\n        const payload = [];\r\n\r\n        for (const namedItem of names.items) {\r\n          const range = workbook.worksheets\r\n            .getActiveWorksheet()\r\n            .getRange(namedItem.value);\r\n          range.load([\"values\", \"rowCount\", \"columnCount\"]);\r\n          await context.sync();\r\n\r\n          const value = range.values.flat().join(\", \");\r\n          payload.push({\r\n            id: namedItem.name,\r\n            Sheet: namedItem.value,\r\n            RangeName: namedItem.name,\r\n            value: value,\r\n            filename: fileName,\r\n            type: namedItem.name.endsWith(\"_img\")\r\n              ? \"Image\"\r\n              : range.rowCount > 1 || range.columnCount > 1\r\n                ? \"Table\"\r\n                : \"Text\",\r\n          });\r\n        }\r\n\r\n        const sheet = context.workbook.worksheets.getActiveWorksheet();\r\n        sheet.load(\"name\");\r\n        const shapes = sheet.shapes;\r\n        shapes.load(\"items\");\r\n        await context.sync();\r\n\r\n        const imageShapes = shapes.items.filter((shape) => shape.type === \"Image\");\r\n\r\n        for (const shape of imageShapes) {\r\n          try {\r\n            shape.load(\"name\");\r\n            const image = shape.getAsImage(Excel.PictureFormat.png);\r\n            await context.sync();\r\n\r\n            payload.push({\r\n              id: shape.name,\r\n              Sheet: sheet.name,\r\n              RangeName: shape.name,\r\n              value: image.value,\r\n              filename: fileName,\r\n              type: \"Image\",\r\n            });\r\n          } catch (error) {\r\n            console.error(`❌ Error extracting image '${shape.name}':`, error);\r\n          }\r\n        }\r\n\r\n        SetRangedata(payload);\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error in getDetectRange:\", error);\r\n    }\r\n  };\r\n\r\n  const toggleRow = (index) => {\r\n    setExpandedRow(expandedRow === index ? null : index);\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-import-container\">\r\n      {loading ? (\r\n        <div className=\"main-loading-container\">\r\n          <div className=\"loading-container\">\r\n            <div className=\"spinner\"></div>\r\n            <p className=\"loading-text\">Loading...</p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          {/* User Info */}\r\n          {showpopup && (\r\n            <div className=\"success-message\">\r\n              <img src={IconCheck} alt=\"Success\" />\r\n              <span className=\"LoggedSuccessfully\">Export Data successfully</span>\r\n              <img\r\n                src={DismissIcon}\r\n                alt=\"Dismiss\"\r\n                className=\"dismiss-icon\"\r\n                onClick={() => SetShowpopup(false)}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Import Excel Content */}\r\n          <div className=\"import-section\">\r\n            <h2>Choose content to export</h2>\r\n            <p>Choose export sources</p>\r\n\r\n            <button className=\"update-btn\" onClick={getDetectRange}>\r\n              <img src={TableSearch} alt=\"Update\" />\r\n              Detect Ranges\r\n            </button>\r\n            <p className=\"last-update\">Last update: 14/02/2025, 15:29:31</p>\r\n          </div>\r\n\r\n          {Rangedata.length > 0 && (\r\n            <ExpandableTable\r\n              className=\"disabled_image\"\r\n              Rangedata={Rangedata}\r\n              source=\"\"\r\n              headingfirst=\"Export list\"\r\n            />\r\n          )}\r\n\r\n          <button className=\"insert-button\" onClick={getRanges}>\r\n            <img src={ArrowExport} alt=\"Insert Icon\" />\r\n            Export\r\n          </button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExportExcel;","\n      import API from \"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../../../../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../../../../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../../../../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../../../../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../../../../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./index.scss\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\noptions.insert = insertFn.bind(null, \"head\");\noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./index.scss\";\n       export default content && content.locals ? content.locals : undefined;\n","import React, { useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport ArrowLeft from \"../assets/images/ArrowLeft.png\";\r\nimport UserIcon from \"../assets/images/user.png\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SignOutIcon from \"../assets/images/SignOut.png\";\r\n\r\nconst SignOutUser = () => {\r\nconst [loading, setLoading] = useState(false);\r\nconst navigate = useNavigate();\r\n    const handleSignOut = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n          navigate(\"/\");\r\n        }, 2000);\r\n    }\r\n    const handleSignBack = () => {\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n          setLoading(false);\r\n          navigate(\"/exportExcel\");\r\n        }, 2000);\r\n    }\r\n  return (\r\n    <div className=\"profile-container\">\r\n    {loading ? (\r\n        <div className=\"main-loading-container\" >\r\n        <div className=\"loading-container\">\r\n          <div className=\"spinner\"></div>\r\n          <p className=\"loading-text\">Loading...</p>\r\n        </div>\r\n        </div>\r\n      ) : (\r\n        <>\r\n      <div className=\"back-button\" onClick={handleSignBack}>\r\n        <img src={ArrowLeft} alt=\"Back\" />\r\n        <span>Back</span>\r\n      </div>\r\n\r\n      <div className=\"profile-info\">\r\n        <img src={UserIcon} alt=\"User\" className=\"profile-avatar\" />\r\n        <h2>Arlene McCoy</h2>\r\n        <p>arlenemccoy123@gmail.com</p>\r\n      </div>\r\n\r\n      <div className=\"profile-details\">\r\n        <div className=\"detail-row\">\r\n          <span className=\"label\">Imported from Excel</span>\r\n          <span className=\"label_line\" >12 times</span>\r\n        </div>\r\n        <div className=\"detail-row\">\r\n          <span className=\"label\">Account creation date</span>\r\n          <span className=\"label_line\"  >2025-02-14</span>\r\n        </div>\r\n        <div className=\"detail-row\">\r\n          <span className=\"label\">Previous Session</span>\r\n          <span className=\"label_line\"  >2025-02-16</span>\r\n        </div>\r\n      </div>\r\n\r\n      <button className=\"signout-button\" onClick={handleSignOut} >\r\n        <img src={SignOutIcon} alt=\"Sign Out\" />\r\n        Sign Out\r\n      </button>\r\n      </>\r\n    )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignOutUser;\r\n","import React, { useEffect } from \"react\";\r\nimport { MemoryRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport HomeScreen from \"./Home/HomeScreen\";\r\nimport \"./App.css\";\r\nimport ExcelImport from \"./Export/Export\";\r\nimport ExportExcel from \"./Export/ExportExcel\";\r\nimport SignOutUser from \"./SignOut/SignOutUser\";\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/\" element={<HomeScreen />} />\r\n        <Route path=\"/export\" element={<ExcelImport />} />\r\n        <Route path=\"/exportExcel\" element={<ExportExcel />} />\r\n        <Route path=\"/SignOutUser\" element={<SignOutUser />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/**\r\n * @internal\r\n * Internal reference for the render function\r\n */ export const SLOT_RENDER_FUNCTION_SYMBOL = Symbol.for('fui.slotRenderFunction');\r\n/**\r\n * @internal\r\n * Internal reference for the render function\r\n */ export const SLOT_ELEMENT_TYPE_SYMBOL = Symbol.for('fui.slotElementType');\r\n","import { SLOT_ELEMENT_TYPE_SYMBOL } from './constants';\r\n/**\r\n * Guard method to ensure a given element is a slot.\r\n * This is mainly used internally to ensure a slot is being used as a component.\r\n */ export function isSlot(element) {\r\n    return Boolean(element === null || element === void 0 ? void 0 : element.hasOwnProperty(SLOT_ELEMENT_TYPE_SYMBOL));\r\n}\r\n","import { isSlot } from '@fluentui/react-utilities';\r\nimport * as React from 'react';\r\nimport { createCompatSlotComponent } from '../utils/createCompatSlotComponent';\r\nimport { warnIfElementTypeIsInvalid } from '../utils/warnIfElementTypeIsInvalid';\r\nexport function createJSX(runtime, slotRuntime) {\r\n    return function jsx(type, overrideProps, key, source, self) {\r\n        // TODO:\r\n        // this is for backwards compatibility with getSlotsNext\r\n        // it should be removed once getSlotsNext is obsolete\r\n        if (isSlot(overrideProps)) {\r\n            return slotRuntime(createCompatSlotComponent(type, overrideProps), null, key, source, self);\r\n        }\r\n        if (isSlot(type)) {\r\n            return slotRuntime(type, overrideProps, key, source, self);\r\n        }\r\n        warnIfElementTypeIsInvalid(type);\r\n        return runtime(type, overrideProps, key, source, self);\r\n    };\r\n}\r\n","import * as React from 'react';\r\nimport { SLOT_ELEMENT_TYPE_SYMBOL } from '@fluentui/react-utilities';\r\n// TODO:\r\n// this is for backwards compatibility with getSlotsNext\r\n// it should be removed once getSlotsNext is obsolete\r\nexport function createCompatSlotComponent(type, props) {\r\n    return {\r\n        ...props,\r\n        [SLOT_ELEMENT_TYPE_SYMBOL]: type\r\n    };\r\n}\r\n","import { SLOT_ELEMENT_TYPE_SYMBOL, SLOT_RENDER_FUNCTION_SYMBOL } from '@fluentui/react-utilities';\r\n/**\r\n * @internal\r\n */ export function getMetadataFromSlotComponent(type) {\r\n    const { as, [SLOT_ELEMENT_TYPE_SYMBOL]: baseElementType, [SLOT_RENDER_FUNCTION_SYMBOL]: renderFunction, ...propsWithoutMetadata } = type;\r\n    const props = propsWithoutMetadata;\r\n    const elementType = typeof baseElementType === 'string' ? as !== null && as !== void 0 ? as : baseElementType : baseElementType;\r\n    if (typeof elementType !== 'string' && as) {\r\n        props.as = as;\r\n    }\r\n    return {\r\n        elementType,\r\n        props,\r\n        renderFunction\r\n    };\r\n}\r\n","import * as ReactRuntime from 'react/jsx-runtime';\r\nexport const Runtime = ReactRuntime;\r\n","import { createJSX } from './jsx/createJSX';\r\nimport { jsxSlot } from './jsx/jsxSlot';\r\nimport { jsxsSlot } from './jsx/jsxsSlot';\r\nimport { Runtime } from './utils/Runtime';\r\nexport { Fragment } from 'react';\r\nexport const jsx = createJSX(Runtime.jsx, jsxSlot);\r\nexport const jsxs = createJSX(Runtime.jsxs, jsxsSlot);\r\n","import * as React from 'react';\r\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\r\nimport { Runtime } from '../utils/Runtime';\r\nexport const jsxSlot = (type, overrideProps, key)=>{\r\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\r\n    const props = {\r\n        ...slotProps,\r\n        ...overrideProps\r\n    };\r\n    if (renderFunction) {\r\n        return Runtime.jsx(React.Fragment, {\r\n            children: renderFunction(elementType, props)\r\n        }, key);\r\n    }\r\n    return Runtime.jsx(elementType, props, key);\r\n};\r\n","import * as React from 'react';\r\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\r\nimport { Runtime } from '../utils/Runtime';\r\nexport const jsxsSlot = (type, overrideProps, key)=>{\r\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\r\n    const props = {\r\n        ...slotProps,\r\n        ...overrideProps\r\n    };\r\n    if (renderFunction) {\r\n        /**\r\n     * In static runtime then children is an array and this array won't be keyed.\r\n     * We should wrap children by a static fragment\r\n     * as there's no way to know if renderFunction will render statically or dynamically\r\n     */ return Runtime.jsx(React.Fragment, {\r\n            children: renderFunction(elementType, {\r\n                ...props,\r\n                children: Runtime.jsxs(React.Fragment, {\r\n                    children: props.children\r\n                }, undefined)\r\n            })\r\n        }, key);\r\n    }\r\n    return Runtime.jsxs(elementType, props, key);\r\n};\r\n","/**\r\n * Verifies if an application can use DOM.\r\n */ export function canUseDOM() {\r\n    return /* eslint-disable @nx/workspace-no-restricted-globals -- expected ignore ( SSR friendly acquisition of globals )*/ typeof window !== 'undefined' && !!(window.document && // eslint-disable-next-line @typescript-eslint/no-deprecated\r\n    window.document.createElement);\r\n}\r\n","import * as React from 'react';\r\n\r\n/**\r\n * @private\r\n */\r\nconst TextDirectionContext = /*#__PURE__*/React.createContext('ltr');\r\n/**\r\n * @public\r\n */\r\nconst TextDirectionProvider = ({\r\n  children,\r\n  dir\r\n}) => {\r\n  return /*#__PURE__*/React.createElement(TextDirectionContext.Provider, {\r\n    value: dir\r\n  }, children);\r\n};\r\n/**\r\n * Returns current directionality of the element's text.\r\n *\r\n * @private\r\n */\r\nfunction useTextDirection() {\r\n  return React.useContext(TextDirectionContext);\r\n}\r\n\r\nexport { TextDirectionProvider, useTextDirection };\r\n//# sourceMappingURL=TextDirectionContext.esm.js.map\r\n","import * as React from 'react';\r\n/**\r\n * @internal\r\n */ const ProviderContext = React.createContext(undefined);\r\nconst providerContextDefaultValue = {\r\n    // eslint-disable-next-line @nx/workspace-no-restricted-globals -- expected ignore ( SSR friendly acquisition of globals )\r\n    targetDocument: typeof document === 'object' ? document : undefined,\r\n    dir: 'ltr'\r\n};\r\n/**\r\n * @internal\r\n */ export const Provider = ProviderContext.Provider;\r\nexport function useFluent() {\r\n    var _React_useContext;\r\n    return (_React_useContext = React.useContext(ProviderContext)) !== null && _React_useContext !== void 0 ? _React_useContext : providerContextDefaultValue;\r\n}\r\n","import * as React from 'react';\r\n/**\r\n * @internal\r\n */ export const ThemeContext = React.createContext(undefined);\r\n/**\r\n * @internal\r\n */ export const ThemeProvider = ThemeContext.Provider;\r\n","import * as React from 'react';\r\n/**\r\n * @internal\r\n * Used to provide a CSS class that applies theme css variables\r\n *\r\n * Useful for elements in the React tree (can read context) but not in the DOM Tree. E.g. Portals\r\n */ const ThemeClassNameContext = React.createContext(undefined);\r\nconst themeClassNameContextDefaultVaue = '';\r\nexport const ThemeClassNameProvider = ThemeClassNameContext.Provider;\r\n/**\r\n * @returns CSS class that applies css variables\r\n */ export function useThemeClassName() {\r\n    var _React_useContext;\r\n    return (_React_useContext = React.useContext(ThemeClassNameContext)) !== null && _React_useContext !== void 0 ? _React_useContext : themeClassNameContextDefaultVaue;\r\n}\r\n","/* eslint-disable */ import * as React from 'react';\r\n/**\r\n * @internal\r\n */ export const CustomStyleHooksContext = React.createContext(undefined);\r\nconst noop = ()=>{};\r\n/**\r\n * @internal\r\n */ export const CustomStyleHooksProvider = CustomStyleHooksContext.Provider;\r\n/**\r\n * Gets a custom style hook\r\n * @param hook - One of the hook properties in CustomStyleHooksContextValue\r\n * @returns The corresponding hook when defined, otherwise a no-op function.\r\n */ export const useCustomStyleHook = (hook)=>{\r\n    var _React_useContext;\r\n    var _React_useContext_hook;\r\n    return (_React_useContext_hook = (_React_useContext = React.useContext(CustomStyleHooksContext)) === null || _React_useContext === void 0 ? void 0 : _React_useContext[hook]) !== null && _React_useContext_hook !== void 0 ? _React_useContext_hook : noop;\r\n};\r\n","import * as React from 'react';\r\n/**\r\n * @internal\r\n * Context shared by all of the tooltips in the app\r\n */ const TooltipVisibilityContext = React.createContext(undefined);\r\nconst tooltipVisibilityContextDefaultValue = {};\r\n/**\r\n * @internal\r\n */ export const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\r\nexport function useTooltipVisibility() {\r\n    var _React_useContext;\r\n    return (_React_useContext = React.useContext(TooltipVisibilityContext)) !== null && _React_useContext !== void 0 ? _React_useContext : tooltipVisibilityContextDefaultValue;\r\n}\r\n","import * as React from 'react';\r\n/**\r\n * @internal\r\n */ export const OverridesContext = React.createContext(undefined);\r\n/**\r\n * @internal\r\n */ export const OverridesProvider = OverridesContext.Provider;\r\nexport function useOverrides() {\r\n    var _React_useContext;\r\n    return (_React_useContext = React.useContext(OverridesContext)) !== null && _React_useContext !== void 0 ? _React_useContext : {};\r\n}\r\n","import * as React from 'react';\r\nconst IconDirectionContext = React.createContext(undefined);\r\nconst IconDirectionContextDefaultValue = {};\r\nexport const IconDirectionContextProvider = IconDirectionContext.Provider;\r\nexport const useIconContext = () => React.useContext(IconDirectionContext) ? React.useContext(IconDirectionContext) : IconDirectionContextDefaultValue;","// ----\r\n// Heads up!\r\n// These constants are global and will be shared between Griffel instances.\r\n// Any change in them should happen only in a MAJOR version. If it happens,\r\n// please change \"__NAMESPACE_PREFIX__\" to include a version.\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst __GLOBAL__ = typeof window === 'undefined' ? global : window;\r\nconst __NAMESPACE_PREFIX__ = '@griffel/';\r\nfunction getGlobalVar(name, defaultValue) {\r\n  if (!__GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__ + name)]) {\r\n    __GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__ + name)] = defaultValue;\r\n  }\r\n  return __GLOBAL__[Symbol.for(__NAMESPACE_PREFIX__ + name)];\r\n}\r\n/** @internal */\r\nconst DEBUG_RESET_CLASSES = /*#__PURE__*/getGlobalVar('DEBUG_RESET_CLASSES', {});\r\n/** @internal */\r\nconst DEFINITION_LOOKUP_TABLE = /*#__PURE__*/getGlobalVar('DEFINITION_LOOKUP_TABLE', {});\r\n// ----\r\n/** @internal */\r\nconst DATA_BUCKET_ATTR = 'data-make-styles-bucket';\r\n/** @internal */\r\nconst DATA_PRIORITY_ATTR = 'data-priority';\r\n/** @internal */\r\nconst HASH_PREFIX = 'f';\r\n/** @internal */\r\nconst RESET_HASH_PREFIX = 'r';\r\n/** @internal */\r\nconst SEQUENCE_HASH_LENGTH = 7;\r\n/** @internal */\r\nconst SEQUENCE_PREFIX = '___';\r\n/** @internal */\r\nconst DEBUG_SEQUENCE_SEPARATOR = '_';\r\n/** @internal */\r\nconst SEQUENCE_SIZE = process.env.NODE_ENV === 'production' ? SEQUENCE_PREFIX.length + SEQUENCE_HASH_LENGTH : SEQUENCE_PREFIX.length + SEQUENCE_HASH_LENGTH + DEBUG_SEQUENCE_SEPARATOR.length + SEQUENCE_HASH_LENGTH;\r\n// indexes for values in LookupItem tuple\r\n/** @internal */\r\nconst LOOKUP_DEFINITIONS_INDEX = 0;\r\n/** @internal */\r\nconst LOOKUP_DIR_INDEX = 1;\r\n// This collection is a map simply for faster access when checking if a CSS property is unsupported\r\n/** @internal */\r\nconst UNSUPPORTED_CSS_PROPERTIES = {\r\n  all: 1,\r\n  borderColor: 1,\r\n  borderStyle: 1,\r\n  borderWidth: 1,\r\n  borderBlock: 1,\r\n  borderBlockEnd: 1,\r\n  borderBlockStart: 1,\r\n  borderInline: 1,\r\n  borderInlineEnd: 1,\r\n  borderInlineStart: 1\r\n};\r\n/**\r\n * Removes a CSS property from the style object.\r\n *\r\n * @link https://griffel.js.org/react/api/make-styles\r\n *\r\n * Do not use the value directly, use `RESET` constant instead.\r\n */\r\nconst RESET = 'DO_NOT_USE_DIRECTLY: @griffel/reset-value';\r\n\r\nexport { DATA_BUCKET_ATTR, DATA_PRIORITY_ATTR, DEBUG_RESET_CLASSES, DEBUG_SEQUENCE_SEPARATOR, DEFINITION_LOOKUP_TABLE, HASH_PREFIX, LOOKUP_DEFINITIONS_INDEX, LOOKUP_DIR_INDEX, RESET, RESET_HASH_PREFIX, SEQUENCE_HASH_LENGTH, SEQUENCE_PREFIX, SEQUENCE_SIZE, UNSUPPORTED_CSS_PROPERTIES };\r\n//# sourceMappingURL=constants.esm.js.map\r\n","import { DATA_BUCKET_ATTR, DATA_PRIORITY_ATTR } from '../constants.esm.js';\r\nimport { createIsomorphicStyleSheet } from './createIsomorphicStyleSheet.esm.js';\r\n\r\n/**\r\n * Ordered style buckets using their short pseudo name.\r\n *\r\n * @internal\r\n */\r\nconst styleBucketOrdering = [\r\n// reset styles\r\n'r',\r\n// catch-all\r\n'd',\r\n// link\r\n'l',\r\n// visited\r\n'v',\r\n// focus-within\r\n'w',\r\n// focus\r\n'f',\r\n// focus-visible\r\n'i',\r\n// hover\r\n'h',\r\n// active\r\n'a',\r\n// at rules for reset styles\r\n's',\r\n// keyframes\r\n'k',\r\n// at-rules\r\n't',\r\n// @media rules\r\n'm',\r\n// @container rules\r\n'c'];\r\n// avoid repeatedly calling `indexOf` to determine order during new insertions\r\nconst styleBucketOrderingMap = /*#__PURE__*/styleBucketOrdering.reduce((acc, cur, j) => {\r\n  acc[cur] = j;\r\n  return acc;\r\n}, {});\r\nfunction getStyleSheetKey(bucketName, media, priority) {\r\n  return (bucketName === 'm' ? bucketName + media : bucketName) + priority;\r\n}\r\nfunction getStyleSheetKeyFromElement(styleEl) {\r\n  var _a;\r\n  const bucketName = styleEl.getAttribute(DATA_BUCKET_ATTR);\r\n  const priority = (_a = styleEl.getAttribute(DATA_PRIORITY_ATTR)) !== null && _a !== void 0 ? _a : '0';\r\n  return getStyleSheetKey(bucketName, styleEl.media, priority);\r\n}\r\n/**\r\n * Lazily adds a `<style>` bucket to the `<head>`. This will ensure that the style buckets are ordered.\r\n */\r\nfunction getStyleSheetForBucket(bucketName, targetDocument, insertionPoint, renderer, metadata = {}) {\r\n  var _a, _b;\r\n  const isMediaBucket = bucketName === 'm';\r\n  const media = (_a = metadata['m']) !== null && _a !== void 0 ? _a : '0';\r\n  const priority = (_b = metadata['p']) !== null && _b !== void 0 ? _b : 0;\r\n  const stylesheetKey = getStyleSheetKey(bucketName, media, priority);\r\n  if (!renderer.stylesheets[stylesheetKey]) {\r\n    const tag = targetDocument && targetDocument.createElement('style');\r\n    const stylesheet = createIsomorphicStyleSheet(tag, bucketName, priority, Object.assign({}, renderer.styleElementAttributes, isMediaBucket && {\r\n      media\r\n    }));\r\n    renderer.stylesheets[stylesheetKey] = stylesheet;\r\n    if (targetDocument && tag) {\r\n      targetDocument.head.insertBefore(tag, findInsertionPoint(targetDocument, insertionPoint, bucketName, renderer, metadata));\r\n    }\r\n  }\r\n  return renderer.stylesheets[stylesheetKey];\r\n}\r\nfunction isSameInsertionKey(element, bucketName, metadata) {\r\n  var _a, _b;\r\n  const targetKey = bucketName + ((_a = metadata['m']) !== null && _a !== void 0 ? _a : '');\r\n  const elementKey = element.getAttribute(DATA_BUCKET_ATTR) + ((_b = element.media) !== null && _b !== void 0 ? _b : '');\r\n  return targetKey === elementKey;\r\n}\r\n/**\r\n * Finds an element before which the new bucket style element should be inserted following the bucket sort order.\r\n *\r\n * @param targetDocument - A document\r\n * @param insertionPoint - An element that will be used as an initial insertion point\r\n * @param targetBucket - The bucket that should be inserted to DOM\r\n * @param renderer - Griffel renderer\r\n * @param metadata - metadata for CSS rule\r\n * @returns - Smallest style element with greater sort order than the current bucket\r\n */\r\nfunction findInsertionPoint(targetDocument, insertionPoint, targetBucket, renderer, metadata = {}) {\r\n  var _a, _b;\r\n  const targetOrder = styleBucketOrderingMap[targetBucket];\r\n  const media = (_a = metadata['m']) !== null && _a !== void 0 ? _a : '';\r\n  const priority = (_b = metadata['p']) !== null && _b !== void 0 ? _b : 0;\r\n  // Similar to javascript sort comparators where\r\n  // a positive value is increasing sort order\r\n  // a negative value is decreasing sort order\r\n  let comparer = el => targetOrder - styleBucketOrderingMap[el.getAttribute(DATA_BUCKET_ATTR)];\r\n  let styleElements = targetDocument.head.querySelectorAll(`[${DATA_BUCKET_ATTR}]`);\r\n  if (targetBucket === 'm') {\r\n    const mediaElements = targetDocument.head.querySelectorAll(`[${DATA_BUCKET_ATTR}=\"${targetBucket}\"]`);\r\n    // only reduce the scope of the search and change comparer\r\n    // if there are other media buckets already on the page\r\n    if (mediaElements.length) {\r\n      styleElements = mediaElements;\r\n      comparer = el => renderer.compareMediaQueries(media, el.media);\r\n    }\r\n  }\r\n  const comparerWithPriority = el => {\r\n    if (isSameInsertionKey(el, targetBucket, metadata)) {\r\n      return priority - Number(el.getAttribute('data-priority'));\r\n    }\r\n    return comparer(el);\r\n  };\r\n  const length = styleElements.length;\r\n  let index = length - 1;\r\n  while (index >= 0) {\r\n    const styleElement = styleElements.item(index);\r\n    if (comparerWithPriority(styleElement) > 0) {\r\n      return styleElement.nextSibling;\r\n    }\r\n    index--;\r\n  }\r\n  if (length > 0) {\r\n    return styleElements.item(0);\r\n  }\r\n  return insertionPoint ? insertionPoint.nextSibling : null;\r\n}\r\n\r\nexport { getStyleSheetForBucket, getStyleSheetKey, getStyleSheetKeyFromElement, styleBucketOrdering };\r\n//# sourceMappingURL=getStyleSheetForBucket.esm.js.map\r\n","import { DATA_PRIORITY_ATTR, DATA_BUCKET_ATTR } from '../constants.esm.js';\r\n\r\nfunction createIsomorphicStyleSheet(styleElement, bucketName, priority, elementAttributes) {\r\n  // no CSSStyleSheet in SSR, just append rules here for server render\r\n  const __cssRulesForSSR = [];\r\n  elementAttributes[DATA_BUCKET_ATTR] = bucketName;\r\n  elementAttributes[DATA_PRIORITY_ATTR] = String(priority);\r\n  if (styleElement) {\r\n    for (const attrName in elementAttributes) {\r\n      styleElement.setAttribute(attrName, elementAttributes[attrName]);\r\n    }\r\n  }\r\n  function insertRule(rule) {\r\n    if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {\r\n      return styleElement.sheet.insertRule(rule, styleElement.sheet.cssRules.length);\r\n    }\r\n    return __cssRulesForSSR.push(rule);\r\n  }\r\n  return {\r\n    elementAttributes,\r\n    insertRule,\r\n    element: styleElement,\r\n    bucketName,\r\n    cssRules() {\r\n      if (styleElement === null || styleElement === void 0 ? void 0 : styleElement.sheet) {\r\n        return Array.from(styleElement.sheet.cssRules).map(cssRule => cssRule.cssText);\r\n      }\r\n      return __cssRulesForSSR;\r\n    }\r\n  };\r\n}\r\nfunction createIsomorphicStyleSheetFromElement(element) {\r\n  const elementAttributes = Array.from(element.attributes).reduce((acc, attr) => {\r\n    acc[attr.name] = attr.value;\r\n    return acc;\r\n  }, {});\r\n  const stylesheet = createIsomorphicStyleSheet(element, elementAttributes[DATA_BUCKET_ATTR], Number(elementAttributes[DATA_PRIORITY_ATTR]), elementAttributes);\r\n  return stylesheet;\r\n}\r\n\r\nexport { createIsomorphicStyleSheet, createIsomorphicStyleSheetFromElement };\r\n//# sourceMappingURL=createIsomorphicStyleSheet.esm.js.map\r\n","/**\r\n * Suffixes to be ignored in case of error\r\n */\r\nconst ignoreSuffixes = /*#__PURE__*/['-moz-placeholder', '-moz-focus-inner', '-moz-focusring', '-ms-input-placeholder', '-moz-read-write', '-moz-read-only'].join('|');\r\nconst ignoreSuffixesRegex = /*#__PURE__*/new RegExp(`:(${ignoreSuffixes})`);\r\n/**\r\n * @internal\r\n *\r\n * Calls `sheet.insertRule` and catches errors related to browser prefixes.\r\n */\r\nfunction safeInsertRule(sheet, ruleCSS) {\r\n  try {\r\n    sheet.insertRule(ruleCSS);\r\n  } catch (e) {\r\n    // We've disabled these warnings due to false-positive errors with browser prefixes\r\n    if (process.env.NODE_ENV !== 'production' && !ignoreSuffixesRegex.test(ruleCSS)) {\r\n      // eslint-disable-next-line no-console\r\n      console.error(`There was a problem inserting the following rule: \"${ruleCSS}\"`, e);\r\n    }\r\n  }\r\n}\r\n\r\nexport { safeInsertRule };\r\n//# sourceMappingURL=safeInsertRule.esm.js.map\r\n","import { injectDevTools } from '../devtools/injectDevTools.esm.js';\r\nimport { isDevToolsEnabled } from '../devtools/isDevToolsEnabled.esm.js';\r\nimport { debugData } from '../devtools/store.esm.js';\r\nimport { normalizeCSSBucketEntry } from '../runtime/utils/normalizeCSSBucketEntry.esm.js';\r\nimport { getStyleSheetForBucket } from './getStyleSheetForBucket.esm.js';\r\nimport { safeInsertRule } from './safeInsertRule.esm.js';\r\n\r\nlet lastIndex = 0;\r\n/** @internal */\r\nconst defaultCompareMediaQueries = (a, b) => a < b ? -1 : a > b ? 1 : 0;\r\n/**\r\n * Creates a new instances of a renderer.\r\n *\r\n * @public\r\n */\r\nfunction createDOMRenderer(targetDocument = typeof document === 'undefined' ? undefined : document, options = {}) {\r\n  const {\r\n    classNameHashSalt,\r\n    unstable_filterCSSRule,\r\n    insertionPoint,\r\n    styleElementAttributes,\r\n    compareMediaQueries = defaultCompareMediaQueries\r\n  } = options;\r\n  const renderer = {\r\n    classNameHashSalt,\r\n    insertionCache: {},\r\n    stylesheets: {},\r\n    styleElementAttributes: Object.freeze(styleElementAttributes),\r\n    compareMediaQueries,\r\n    id: `d${lastIndex++}`,\r\n    insertCSSRules(cssRules) {\r\n      // eslint-disable-next-line guard-for-in\r\n      for (const styleBucketName in cssRules) {\r\n        const cssRulesForBucket = cssRules[styleBucketName];\r\n        // This is a hot path in rendering styles: \".length\" is cached in \"l\" var to avoid accesses the property\r\n        for (let i = 0, l = cssRulesForBucket.length; i < l; i++) {\r\n          const [ruleCSS, metadata] = normalizeCSSBucketEntry(cssRulesForBucket[i]);\r\n          const sheet = getStyleSheetForBucket(styleBucketName, targetDocument, insertionPoint || null, renderer, metadata);\r\n          if (renderer.insertionCache[ruleCSS]) {\r\n            continue;\r\n          }\r\n          renderer.insertionCache[ruleCSS] = styleBucketName;\r\n          if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n            debugData.addCSSRule(ruleCSS);\r\n          }\r\n          if (unstable_filterCSSRule) {\r\n            if (unstable_filterCSSRule(ruleCSS)) {\r\n              safeInsertRule(sheet, ruleCSS);\r\n            }\r\n          } else {\r\n            safeInsertRule(sheet, ruleCSS);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  if (targetDocument && process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n    injectDevTools(targetDocument);\r\n  }\r\n  return renderer;\r\n}\r\n\r\nexport { createDOMRenderer, defaultCompareMediaQueries };\r\n//# sourceMappingURL=createDOMRenderer.esm.js.map\r\n","/**\r\n * @internal\r\n *\r\n * @param entry - CSS bucket entry that can be either a string or an array\r\n * @returns An array where the first element is the CSS rule\r\n */\r\nfunction normalizeCSSBucketEntry(entry) {\r\n  if (!Array.isArray(entry)) {\r\n    return [entry];\r\n  }\r\n  if (process.env.NODE_ENV !== 'production' && entry.length > 2) {\r\n    throw new Error('CSS Bucket contains an entry with greater than 2 items, please report this to https://github.com/microsoft/griffel/issues');\r\n  }\r\n  return entry;\r\n}\r\n\r\nexport { normalizeCSSBucketEntry };\r\n//# sourceMappingURL=normalizeCSSBucketEntry.esm.js.map\r\n","import { rehydrateRendererCache, createDOMRenderer } from '@griffel/core';\r\nimport * as React from 'react';\r\nimport { canUseDOM } from './utils/canUseDOM.esm.js';\r\n\r\n/**\r\n * @private\r\n */\r\nconst RendererContext = /*#__PURE__*/React.createContext( /*#__PURE__*/createDOMRenderer());\r\n/**\r\n * @public\r\n */\r\nconst RendererProvider = ({\r\n  children,\r\n  renderer,\r\n  targetDocument\r\n}) => {\r\n  React.useMemo(() => {\r\n    if (canUseDOM()) {\r\n      // \"rehydrateCache()\" can't be called in effects as it needs to be called before any component will be rendered to\r\n      // avoid double insertion of classes\r\n      rehydrateRendererCache(renderer, targetDocument);\r\n    }\r\n  }, [renderer, targetDocument]);\r\n  return /*#__PURE__*/React.createElement(RendererContext.Provider, {\r\n    value: renderer\r\n  }, children);\r\n};\r\n/**\r\n * Returns an instance of current makeStyles() renderer.\r\n *\r\n * @private Exported as \"useRenderer_unstable\" use it on own risk. Can be changed or removed without a notice.\r\n */\r\nfunction useRenderer() {\r\n  return React.useContext(RendererContext);\r\n}\r\n\r\nexport { RendererProvider, useRenderer };\r\n//# sourceMappingURL=RendererContext.esm.js.map\r\n","/**\r\n * Verifies if a given node is an HTMLElement,\r\n * this method works seamlessly with frames and elements from different documents\r\n *\r\n * This is preferred over simply using `instanceof`.\r\n * Since `instanceof` might be problematic while operating with [multiple realms](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms)\r\n *\r\n * @example\r\n * ```ts\r\n * isHTMLElement(event.target) && event.target.focus()\r\n * isHTMLElement(event.target, {constructorName: 'HTMLInputElement'}) && event.target.value // some value\r\n * ```\r\n *\r\n */ export function isHTMLElement(element, options) {\r\n    var _typedElement_ownerDocument;\r\n    const typedElement = element;\r\n    var _options_constructorName;\r\n    return Boolean((typedElement === null || typedElement === void 0 ? void 0 : (_typedElement_ownerDocument = typedElement.ownerDocument) === null || _typedElement_ownerDocument === void 0 ? void 0 : _typedElement_ownerDocument.defaultView) && typedElement instanceof typedElement.ownerDocument.defaultView[(_options_constructorName = options === null || options === void 0 ? void 0 : options.constructorName) !== null && _options_constructorName !== void 0 ? _options_constructorName : 'HTMLElement']);\r\n}\r\n","// src/WeakRefInstance.ts\r\nvar _canUseWeakRef = typeof WeakRef !== \"undefined\";\r\nvar WeakRefInstance = class {\r\n  constructor(instance) {\r\n    if (_canUseWeakRef && typeof instance === \"object\") {\r\n      this._weakRef = new WeakRef(instance);\r\n    } else {\r\n      this._instance = instance;\r\n    }\r\n  }\r\n  /**\r\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakRef/deref}\r\n   */\r\n  deref() {\r\n    var _a, _b;\r\n    let instance;\r\n    if (this._weakRef) {\r\n      instance = (_a = this._weakRef) == null ? void 0 : _a.deref();\r\n      if (!instance) {\r\n        delete this._weakRef;\r\n      }\r\n    } else {\r\n      instance = this._instance;\r\n      if ((_b = instance == null ? void 0 : instance.isDisposed) == null ? void 0 : _b.call(instance)) {\r\n        delete this._instance;\r\n      }\r\n    }\r\n    return instance;\r\n  }\r\n};\r\n\r\n// src/FocusEvent.ts\r\nvar KEYBORG_FOCUSIN = \"keyborg:focusin\";\r\nvar KEYBORG_FOCUSOUT = \"keyborg:focusout\";\r\nfunction canOverrideNativeFocus(win) {\r\n  const HTMLElement = win.HTMLElement;\r\n  const origFocus = HTMLElement.prototype.focus;\r\n  let isCustomFocusCalled = false;\r\n  HTMLElement.prototype.focus = function focus() {\r\n    isCustomFocusCalled = true;\r\n  };\r\n  const btn = win.document.createElement(\"button\");\r\n  btn.focus();\r\n  HTMLElement.prototype.focus = origFocus;\r\n  return isCustomFocusCalled;\r\n}\r\nvar _canOverrideNativeFocus = false;\r\nfunction nativeFocus(element) {\r\n  const focus = element.focus;\r\n  if (focus.__keyborgNativeFocus) {\r\n    focus.__keyborgNativeFocus.call(element);\r\n  } else {\r\n    element.focus();\r\n  }\r\n}\r\nfunction setupFocusEvent(win) {\r\n  const kwin = win;\r\n  if (!_canOverrideNativeFocus) {\r\n    _canOverrideNativeFocus = canOverrideNativeFocus(kwin);\r\n  }\r\n  const origFocus = kwin.HTMLElement.prototype.focus;\r\n  if (origFocus.__keyborgNativeFocus) {\r\n    return;\r\n  }\r\n  kwin.HTMLElement.prototype.focus = focus;\r\n  const shadowTargets = /* @__PURE__ */ new Set();\r\n  const focusOutHandler = (e) => {\r\n    const target = e.target;\r\n    if (!target) {\r\n      return;\r\n    }\r\n    const event = new CustomEvent(KEYBORG_FOCUSOUT, {\r\n      cancelable: true,\r\n      bubbles: true,\r\n      // Allows the event to bubble past an open shadow root\r\n      composed: true,\r\n      detail: {\r\n        originalEvent: e\r\n      }\r\n    });\r\n    target.dispatchEvent(event);\r\n  };\r\n  const focusInHandler = (e) => {\r\n    const target = e.target;\r\n    if (!target) {\r\n      return;\r\n    }\r\n    let node = e.composedPath()[0];\r\n    const currentShadows = /* @__PURE__ */ new Set();\r\n    while (node) {\r\n      if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\r\n        currentShadows.add(node);\r\n        node = node.host;\r\n      } else {\r\n        node = node.parentNode;\r\n      }\r\n    }\r\n    for (const shadowRootWeakRef of shadowTargets) {\r\n      const shadowRoot = shadowRootWeakRef.deref();\r\n      if (!shadowRoot || !currentShadows.has(shadowRoot)) {\r\n        shadowTargets.delete(shadowRootWeakRef);\r\n        if (shadowRoot) {\r\n          shadowRoot.removeEventListener(\"focusin\", focusInHandler, true);\r\n          shadowRoot.removeEventListener(\"focusout\", focusOutHandler, true);\r\n        }\r\n      }\r\n    }\r\n    onFocusIn(target, e.relatedTarget || void 0);\r\n  };\r\n  const onFocusIn = (target, relatedTarget, originalEvent) => {\r\n    var _a;\r\n    const shadowRoot = target.shadowRoot;\r\n    if (shadowRoot) {\r\n      for (const shadowRootWeakRef of shadowTargets) {\r\n        if (shadowRootWeakRef.deref() === shadowRoot) {\r\n          return;\r\n        }\r\n      }\r\n      shadowRoot.addEventListener(\"focusin\", focusInHandler, true);\r\n      shadowRoot.addEventListener(\"focusout\", focusOutHandler, true);\r\n      shadowTargets.add(new WeakRefInstance(shadowRoot));\r\n      return;\r\n    }\r\n    const details = {\r\n      relatedTarget,\r\n      originalEvent\r\n    };\r\n    const event = new CustomEvent(KEYBORG_FOCUSIN, {\r\n      cancelable: true,\r\n      bubbles: true,\r\n      // Allows the event to bubble past an open shadow root\r\n      composed: true,\r\n      detail: details\r\n    });\r\n    event.details = details;\r\n    if (_canOverrideNativeFocus || data.lastFocusedProgrammatically) {\r\n      details.isFocusedProgrammatically = target === ((_a = data.lastFocusedProgrammatically) == null ? void 0 : _a.deref());\r\n      data.lastFocusedProgrammatically = void 0;\r\n    }\r\n    target.dispatchEvent(event);\r\n  };\r\n  const data = kwin.__keyborgData = {\r\n    focusInHandler,\r\n    focusOutHandler,\r\n    shadowTargets\r\n  };\r\n  kwin.document.addEventListener(\r\n    \"focusin\",\r\n    kwin.__keyborgData.focusInHandler,\r\n    true\r\n  );\r\n  kwin.document.addEventListener(\r\n    \"focusout\",\r\n    kwin.__keyborgData.focusOutHandler,\r\n    true\r\n  );\r\n  function focus() {\r\n    const keyborgNativeFocusEvent = kwin.__keyborgData;\r\n    if (keyborgNativeFocusEvent) {\r\n      keyborgNativeFocusEvent.lastFocusedProgrammatically = new WeakRefInstance(\r\n        this\r\n      );\r\n    }\r\n    return origFocus.apply(this, arguments);\r\n  }\r\n  let activeElement = kwin.document.activeElement;\r\n  while (activeElement && activeElement.shadowRoot) {\r\n    onFocusIn(activeElement);\r\n    activeElement = activeElement.shadowRoot.activeElement;\r\n  }\r\n  focus.__keyborgNativeFocus = origFocus;\r\n}\r\nfunction disposeFocusEvent(win) {\r\n  const kwin = win;\r\n  const proto = kwin.HTMLElement.prototype;\r\n  const origFocus = proto.focus.__keyborgNativeFocus;\r\n  const keyborgNativeFocusEvent = kwin.__keyborgData;\r\n  if (keyborgNativeFocusEvent) {\r\n    kwin.document.removeEventListener(\r\n      \"focusin\",\r\n      keyborgNativeFocusEvent.focusInHandler,\r\n      true\r\n    );\r\n    kwin.document.removeEventListener(\r\n      \"focusout\",\r\n      keyborgNativeFocusEvent.focusOutHandler,\r\n      true\r\n    );\r\n    for (const shadowRootWeakRef of keyborgNativeFocusEvent.shadowTargets) {\r\n      const shadowRoot = shadowRootWeakRef.deref();\r\n      if (shadowRoot) {\r\n        shadowRoot.removeEventListener(\r\n          \"focusin\",\r\n          keyborgNativeFocusEvent.focusInHandler,\r\n          true\r\n        );\r\n        shadowRoot.removeEventListener(\r\n          \"focusout\",\r\n          keyborgNativeFocusEvent.focusOutHandler,\r\n          true\r\n        );\r\n      }\r\n    }\r\n    keyborgNativeFocusEvent.shadowTargets.clear();\r\n    delete kwin.__keyborgData;\r\n  }\r\n  if (origFocus) {\r\n    proto.focus = origFocus;\r\n  }\r\n}\r\nfunction getLastFocusedProgrammatically(win) {\r\n  var _a;\r\n  const keyborgNativeFocusEvent = win.__keyborgData;\r\n  return keyborgNativeFocusEvent ? ((_a = keyborgNativeFocusEvent.lastFocusedProgrammatically) == null ? void 0 : _a.deref()) || null : void 0;\r\n}\r\n\r\n// src/Keyborg.ts\r\nvar _dismissTimeout = 500;\r\nvar _lastId = 0;\r\nvar KeyborgCore = class {\r\n  constructor(win, props) {\r\n    this._isNavigatingWithKeyboard_DO_NOT_USE = false;\r\n    this._onFocusIn = (e) => {\r\n      if (this._isMouseOrTouchUsedTimer) {\r\n        return;\r\n      }\r\n      if (this.isNavigatingWithKeyboard) {\r\n        return;\r\n      }\r\n      const details = e.detail;\r\n      if (!details.relatedTarget) {\r\n        return;\r\n      }\r\n      if (details.isFocusedProgrammatically || details.isFocusedProgrammatically === void 0) {\r\n        return;\r\n      }\r\n      this.isNavigatingWithKeyboard = true;\r\n    };\r\n    this._onMouseDown = (e) => {\r\n      if (e.buttons === 0 || e.clientX === 0 && e.clientY === 0 && e.screenX === 0 && e.screenY === 0) {\r\n        return;\r\n      }\r\n      this._onMouseOrTouch();\r\n    };\r\n    this._onMouseOrTouch = () => {\r\n      const win = this._win;\r\n      if (win) {\r\n        if (this._isMouseOrTouchUsedTimer) {\r\n          win.clearTimeout(this._isMouseOrTouchUsedTimer);\r\n        }\r\n        this._isMouseOrTouchUsedTimer = win.setTimeout(() => {\r\n          delete this._isMouseOrTouchUsedTimer;\r\n        }, 1e3);\r\n      }\r\n      this.isNavigatingWithKeyboard = false;\r\n    };\r\n    this._onKeyDown = (e) => {\r\n      const isNavigatingWithKeyboard = this.isNavigatingWithKeyboard;\r\n      if (isNavigatingWithKeyboard) {\r\n        if (this._shouldDismissKeyboardNavigation(e)) {\r\n          this._scheduleDismiss();\r\n        }\r\n      } else {\r\n        if (this._shouldTriggerKeyboardNavigation(e)) {\r\n          this.isNavigatingWithKeyboard = true;\r\n        }\r\n      }\r\n    };\r\n    this.id = \"c\" + ++_lastId;\r\n    this._win = win;\r\n    const doc = win.document;\r\n    if (props) {\r\n      const triggerKeys = props.triggerKeys;\r\n      const dismissKeys = props.dismissKeys;\r\n      if (triggerKeys == null ? void 0 : triggerKeys.length) {\r\n        this._triggerKeys = new Set(triggerKeys);\r\n      }\r\n      if (dismissKeys == null ? void 0 : dismissKeys.length) {\r\n        this._dismissKeys = new Set(dismissKeys);\r\n      }\r\n    }\r\n    doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\r\n    doc.addEventListener(\"mousedown\", this._onMouseDown, true);\r\n    win.addEventListener(\"keydown\", this._onKeyDown, true);\r\n    doc.addEventListener(\"touchstart\", this._onMouseOrTouch, true);\r\n    doc.addEventListener(\"touchend\", this._onMouseOrTouch, true);\r\n    doc.addEventListener(\"touchcancel\", this._onMouseOrTouch, true);\r\n    setupFocusEvent(win);\r\n  }\r\n  get isNavigatingWithKeyboard() {\r\n    return this._isNavigatingWithKeyboard_DO_NOT_USE;\r\n  }\r\n  set isNavigatingWithKeyboard(val) {\r\n    if (this._isNavigatingWithKeyboard_DO_NOT_USE !== val) {\r\n      this._isNavigatingWithKeyboard_DO_NOT_USE = val;\r\n      this.update();\r\n    }\r\n  }\r\n  dispose() {\r\n    const win = this._win;\r\n    if (win) {\r\n      if (this._isMouseOrTouchUsedTimer) {\r\n        win.clearTimeout(this._isMouseOrTouchUsedTimer);\r\n        this._isMouseOrTouchUsedTimer = void 0;\r\n      }\r\n      if (this._dismissTimer) {\r\n        win.clearTimeout(this._dismissTimer);\r\n        this._dismissTimer = void 0;\r\n      }\r\n      disposeFocusEvent(win);\r\n      const doc = win.document;\r\n      doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\r\n      doc.removeEventListener(\"mousedown\", this._onMouseDown, true);\r\n      win.removeEventListener(\"keydown\", this._onKeyDown, true);\r\n      doc.removeEventListener(\"touchstart\", this._onMouseOrTouch, true);\r\n      doc.removeEventListener(\"touchend\", this._onMouseOrTouch, true);\r\n      doc.removeEventListener(\"touchcancel\", this._onMouseOrTouch, true);\r\n      delete this._win;\r\n    }\r\n  }\r\n  isDisposed() {\r\n    return !!this._win;\r\n  }\r\n  /**\r\n   * Updates all keyborg instances with the keyboard navigation state\r\n   */\r\n  update() {\r\n    var _a, _b;\r\n    const keyborgs = (_b = (_a = this._win) == null ? void 0 : _a.__keyborg) == null ? void 0 : _b.refs;\r\n    if (keyborgs) {\r\n      for (const id of Object.keys(keyborgs)) {\r\n        Keyborg.update(keyborgs[id], this.isNavigatingWithKeyboard);\r\n      }\r\n    }\r\n  }\r\n  /**\r\n   * @returns whether the keyboard event should trigger keyboard navigation mode\r\n   */\r\n  _shouldTriggerKeyboardNavigation(e) {\r\n    var _a;\r\n    if (e.key === \"Tab\") {\r\n      return true;\r\n    }\r\n    const activeElement = (_a = this._win) == null ? void 0 : _a.document.activeElement;\r\n    const isTriggerKey = !this._triggerKeys || this._triggerKeys.has(e.keyCode);\r\n    const isEditable = activeElement && (activeElement.tagName === \"INPUT\" || activeElement.tagName === \"TEXTAREA\" || activeElement.isContentEditable);\r\n    return isTriggerKey && !isEditable;\r\n  }\r\n  /**\r\n   * @returns whether the keyboard event should dismiss keyboard navigation mode\r\n   */\r\n  _shouldDismissKeyboardNavigation(e) {\r\n    var _a;\r\n    return (_a = this._dismissKeys) == null ? void 0 : _a.has(e.keyCode);\r\n  }\r\n  _scheduleDismiss() {\r\n    const win = this._win;\r\n    if (win) {\r\n      if (this._dismissTimer) {\r\n        win.clearTimeout(this._dismissTimer);\r\n        this._dismissTimer = void 0;\r\n      }\r\n      const was = win.document.activeElement;\r\n      this._dismissTimer = win.setTimeout(() => {\r\n        this._dismissTimer = void 0;\r\n        const cur = win.document.activeElement;\r\n        if (was && cur && was === cur) {\r\n          this.isNavigatingWithKeyboard = false;\r\n        }\r\n      }, _dismissTimeout);\r\n    }\r\n  }\r\n};\r\nvar Keyborg = class _Keyborg {\r\n  constructor(win, props) {\r\n    this._cb = [];\r\n    this._id = \"k\" + ++_lastId;\r\n    this._win = win;\r\n    const current = win.__keyborg;\r\n    if (current) {\r\n      this._core = current.core;\r\n      current.refs[this._id] = this;\r\n    } else {\r\n      this._core = new KeyborgCore(win, props);\r\n      win.__keyborg = {\r\n        core: this._core,\r\n        refs: { [this._id]: this }\r\n      };\r\n    }\r\n  }\r\n  static create(win, props) {\r\n    return new _Keyborg(win, props);\r\n  }\r\n  static dispose(instance) {\r\n    instance.dispose();\r\n  }\r\n  /**\r\n   * Updates all subscribed callbacks with the keyboard navigation state\r\n   */\r\n  static update(instance, isNavigatingWithKeyboard) {\r\n    instance._cb.forEach((callback) => callback(isNavigatingWithKeyboard));\r\n  }\r\n  dispose() {\r\n    var _a;\r\n    const current = (_a = this._win) == null ? void 0 : _a.__keyborg;\r\n    if (current == null ? void 0 : current.refs[this._id]) {\r\n      delete current.refs[this._id];\r\n      if (Object.keys(current.refs).length === 0) {\r\n        current.core.dispose();\r\n        delete this._win.__keyborg;\r\n      }\r\n    } else if (process.env.NODE_ENV !== \"production\") {\r\n      console.error(\r\n        `Keyborg instance ${this._id} is being disposed incorrectly.`\r\n      );\r\n    }\r\n    this._cb = [];\r\n    delete this._core;\r\n    delete this._win;\r\n  }\r\n  /**\r\n   * @returns Whether the user is navigating with keyboard\r\n   */\r\n  isNavigatingWithKeyboard() {\r\n    var _a;\r\n    return !!((_a = this._core) == null ? void 0 : _a.isNavigatingWithKeyboard);\r\n  }\r\n  /**\r\n   * @param callback - Called when the keyboard navigation state changes\r\n   */\r\n  subscribe(callback) {\r\n    this._cb.push(callback);\r\n  }\r\n  /**\r\n   * @param callback - Registered with subscribe\r\n   */\r\n  unsubscribe(callback) {\r\n    const index = this._cb.indexOf(callback);\r\n    if (index >= 0) {\r\n      this._cb.splice(index, 1);\r\n    }\r\n  }\r\n  /**\r\n   * Manually set the keyboard navigtion state\r\n   */\r\n  setVal(isNavigatingWithKeyboard) {\r\n    if (this._core) {\r\n      this._core.isNavigatingWithKeyboard = isNavigatingWithKeyboard;\r\n    }\r\n  }\r\n};\r\nfunction createKeyborg(win, props) {\r\n  return Keyborg.create(win, props);\r\n}\r\nfunction disposeKeyborg(instance) {\r\n  Keyborg.dispose(instance);\r\n}\r\n\r\n// src/index.ts\r\nvar version = \"2.6.0\";\r\nexport {\r\n  KEYBORG_FOCUSIN,\r\n  KEYBORG_FOCUSOUT,\r\n  createKeyborg,\r\n  disposeKeyborg,\r\n  getLastFocusedProgrammatically,\r\n  nativeFocus,\r\n  version\r\n};\r\n/*!\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License.\r\n */\r\n//# sourceMappingURL=index.js.map","export const KEYBOARD_NAV_ATTRIBUTE = 'data-keyboard-nav';\r\nexport const KEYBOARD_NAV_SELECTOR = `:global([${KEYBOARD_NAV_ATTRIBUTE}])`;\r\n/**\r\n * @internal\r\n */ export const FOCUS_VISIBLE_ATTR = 'data-fui-focus-visible';\r\n/**\r\n * @internal\r\n */ export const FOCUS_WITHIN_ATTR = 'data-fui-focus-within';\r\nexport const defaultOptions = {\r\n    style: {},\r\n    selector: 'focus',\r\n    customizeSelector: (selector)=>selector\r\n};\r\n","import { isHTMLElement } from '@fluentui/react-utilities';\r\nimport { KEYBORG_FOCUSIN, createKeyborg, disposeKeyborg } from 'keyborg';\r\nimport { FOCUS_VISIBLE_ATTR } from './constants';\r\n/**\r\n * @internal\r\n * @param scope - Applies the ponyfill to all DOM children\r\n * @param targetWindow - window\r\n */ export function applyFocusVisiblePolyfill(scope, targetWindow) {\r\n    if (alreadyInScope(scope)) {\r\n        // Focus visible polyfill already applied at this scope\r\n        return ()=>undefined;\r\n    }\r\n    const state = {\r\n        current: undefined\r\n    };\r\n    const keyborg = createKeyborg(targetWindow);\r\n    function registerElementIfNavigating(el) {\r\n        if (keyborg.isNavigatingWithKeyboard() && isHTMLElement(el)) {\r\n            state.current = el;\r\n            el.setAttribute(FOCUS_VISIBLE_ATTR, '');\r\n        }\r\n    }\r\n    function disposeCurrentElement() {\r\n        if (state.current) {\r\n            state.current.removeAttribute(FOCUS_VISIBLE_ATTR);\r\n            state.current = undefined;\r\n        }\r\n    }\r\n    // When navigation mode changes remove the focus-visible selector\r\n    keyborg.subscribe((isNavigatingWithKeyboard)=>{\r\n        if (!isNavigatingWithKeyboard) {\r\n            disposeCurrentElement();\r\n        }\r\n    });\r\n    // Keyborg's focusin event is delegated so it's only registered once on the window\r\n    // and contains metadata about the focus event\r\n    const keyborgListener = (e)=>{\r\n        disposeCurrentElement();\r\n        const target = e.composedPath()[0];\r\n        registerElementIfNavigating(target);\r\n    };\r\n    // Make sure that when focus leaves the scope, the focus visible class is removed\r\n    const blurListener = (e)=>{\r\n        if (!e.relatedTarget || isHTMLElement(e.relatedTarget) && !scope.contains(e.relatedTarget)) {\r\n            disposeCurrentElement();\r\n        }\r\n    };\r\n    scope.addEventListener(KEYBORG_FOCUSIN, keyborgListener);\r\n    scope.addEventListener('focusout', blurListener);\r\n    scope.focusVisible = true;\r\n    if (scope.contains(targetWindow.document.activeElement)) {\r\n        registerElementIfNavigating(targetWindow.document.activeElement);\r\n    }\r\n    // Return disposer\r\n    return ()=>{\r\n        disposeCurrentElement();\r\n        scope.removeEventListener(KEYBORG_FOCUSIN, keyborgListener);\r\n        scope.removeEventListener('focusout', blurListener);\r\n        delete scope.focusVisible;\r\n        disposeKeyborg(keyborg);\r\n    };\r\n}\r\nfunction alreadyInScope(el) {\r\n    if (!el) {\r\n        return false;\r\n    }\r\n    if (el.focusVisible) {\r\n        return true;\r\n    }\r\n    return alreadyInScope(el === null || el === void 0 ? void 0 : el.parentElement);\r\n}\r\n","import * as React from 'react';\r\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\r\nimport { applyFocusVisiblePolyfill } from '../focus/focusVisiblePolyfill';\r\nexport function useFocusVisible(options = {}) {\r\n    const contextValue = useFluent();\r\n    const scopeRef = React.useRef(null);\r\n    var _options_targetDocument;\r\n    const targetDocument = (_options_targetDocument = options.targetDocument) !== null && _options_targetDocument !== void 0 ? _options_targetDocument : contextValue.targetDocument;\r\n    React.useEffect(()=>{\r\n        if ((targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.defaultView) && scopeRef.current) {\r\n            return applyFocusVisiblePolyfill(scopeRef.current, targetDocument.defaultView);\r\n        }\r\n    }, [\r\n        scopeRef,\r\n        targetDocument\r\n    ]);\r\n    return scopeRef;\r\n}\r\n","import * as React from 'react';\r\nimport { SLOT_ELEMENT_TYPE_SYMBOL, SLOT_RENDER_FUNCTION_SYMBOL } from './constants';\r\n/**\r\n * Creates a slot from a slot shorthand or properties (`props.SLOT_NAME` or `props` itself)\r\n * @param value - the value of the slot, it can be a slot shorthand, a slot component or a slot properties\r\n * @param options - values you can pass to alter the signature of a slot, those values are:\r\n *\r\n * * `elementType` - the base element type of a slot, defaults to `'div'`\r\n * * `defaultProps` - similar to a React component declaration, you can provide a slot default properties to be merged with the shorthand/properties provided.\r\n */ export function always(value, options) {\r\n    const { defaultProps, elementType } = options;\r\n    const props = resolveShorthand(value);\r\n    /**\r\n   * Casting is required here as SlotComponentType is a function, not an object.\r\n   * Although SlotComponentType has a function signature, it is still just an object.\r\n   * This is required to make a slot callable (JSX compatible), this is the exact same approach\r\n   * that is used on `@types/react` components\r\n   */ const propsWithMetadata = {\r\n        ...defaultProps,\r\n        ...props,\r\n        [SLOT_ELEMENT_TYPE_SYMBOL]: elementType\r\n    };\r\n    if (props && typeof props.children === 'function') {\r\n        propsWithMetadata[SLOT_RENDER_FUNCTION_SYMBOL] = props.children;\r\n        propsWithMetadata.children = defaultProps === null || defaultProps === void 0 ? void 0 : defaultProps.children;\r\n    }\r\n    return propsWithMetadata;\r\n}\r\n/**\r\n * Creates a slot from a slot shorthand or properties (`props.SLOT_NAME` or `props` itself)\r\n * @param value - the value of the slot, it can be a slot shorthand, a slot component or a slot properties\r\n * @param options - values you can pass to alter the signature of a slot, those values are:\r\n *\r\n * * `elementType` - the base element type of a slot, defaults to `'div'`\r\n * * `defaultProps` - similar to a React component declaration, you can provide a slot default properties to be merged with the shorthand/properties provided\r\n * * `renderByDefault` - a boolean that indicates if a slot will be rendered even if it's base value is `undefined`.\r\n * By default if `props.SLOT_NAME` is `undefined` then `state.SLOT_NAME` becomes `undefined`\r\n * and nothing will be rendered, but if `renderByDefault = true` then `state.SLOT_NAME` becomes an object\r\n * with the values provided by `options.defaultProps` (or `{}`). This is useful for cases such as providing a default content\r\n * in case no shorthand is provided, like the case of the `expandIcon` slot for the `AccordionHeader`\r\n */ export function optional(value, options) {\r\n    if (value === null || value === undefined && !options.renderByDefault) {\r\n        return undefined;\r\n    }\r\n    return always(value, options);\r\n}\r\n/**\r\n * Helper function that converts a slot shorthand or properties to a slot properties object\r\n * The main difference between this function and `slot` is that this function does not return the metadata required for a slot to be considered a properly renderable slot, it only converts the value to a slot properties object\r\n * @param value - the value of the slot, it can be a slot shorthand or a slot properties object\r\n */ export function resolveShorthand(value) {\r\n    if (typeof value === 'string' || typeof value === 'number' || Array.isArray(value) || // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    React.isValidElement(value)) {\r\n        return {\r\n            children: value\r\n        };\r\n    }\r\n    if (value && typeof value !== 'object' && process.env.NODE_ENV !== 'production') {\r\n        // TODO: would be nice to have a link to slot documentation in this error message\r\n        // eslint-disable-next-line no-console\r\n        console.error(`@fluentui/react-utilities [slot.${resolveShorthand.name}]:\r\nA slot got an invalid value \"${value}\" (${typeof value}).\r\nA valid value for a slot is a slot shorthand or slot properties object.\r\nSlot shorthands can be strings, numbers, arrays or JSX elements`);\r\n    }\r\n    return value;\r\n}\r\n","const toObjectMap = (...items)=>{\r\n    const result = {};\r\n    for (const item of items){\r\n        const keys = Array.isArray(item) ? item : Object.keys(item);\r\n        for (const key of keys){\r\n            result[key] = 1;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n/**\r\n * An array of events that are allowed on every html element type.\r\n *\r\n * @public\r\n */ export const baseElementEvents = toObjectMap([\r\n    'onAuxClick',\r\n    'onAnimationEnd',\r\n    'onAnimationStart',\r\n    'onCopy',\r\n    'onCut',\r\n    'onPaste',\r\n    'onCompositionEnd',\r\n    'onCompositionStart',\r\n    'onCompositionUpdate',\r\n    'onFocus',\r\n    'onFocusCapture',\r\n    'onBlur',\r\n    'onBlurCapture',\r\n    'onChange',\r\n    'onInput',\r\n    'onSubmit',\r\n    'onLoad',\r\n    'onError',\r\n    'onKeyDown',\r\n    'onKeyDownCapture',\r\n    'onKeyPress',\r\n    'onKeyUp',\r\n    'onAbort',\r\n    'onCanPlay',\r\n    'onCanPlayThrough',\r\n    'onDurationChange',\r\n    'onEmptied',\r\n    'onEncrypted',\r\n    'onEnded',\r\n    'onLoadedData',\r\n    'onLoadedMetadata',\r\n    'onLoadStart',\r\n    'onPause',\r\n    'onPlay',\r\n    'onPlaying',\r\n    'onProgress',\r\n    'onRateChange',\r\n    'onSeeked',\r\n    'onSeeking',\r\n    'onStalled',\r\n    'onSuspend',\r\n    'onTimeUpdate',\r\n    'onVolumeChange',\r\n    'onWaiting',\r\n    'onClick',\r\n    'onClickCapture',\r\n    'onContextMenu',\r\n    'onDoubleClick',\r\n    'onDrag',\r\n    'onDragEnd',\r\n    'onDragEnter',\r\n    'onDragExit',\r\n    'onDragLeave',\r\n    'onDragOver',\r\n    'onDragStart',\r\n    'onDrop',\r\n    'onMouseDown',\r\n    'onMouseDownCapture',\r\n    'onMouseEnter',\r\n    'onMouseLeave',\r\n    'onMouseMove',\r\n    'onMouseOut',\r\n    'onMouseOver',\r\n    'onMouseUp',\r\n    'onMouseUpCapture',\r\n    'onSelect',\r\n    'onTouchCancel',\r\n    'onTouchEnd',\r\n    'onTouchMove',\r\n    'onTouchStart',\r\n    'onScroll',\r\n    'onWheel',\r\n    'onPointerCancel',\r\n    'onPointerDown',\r\n    'onPointerEnter',\r\n    'onPointerLeave',\r\n    'onPointerMove',\r\n    'onPointerOut',\r\n    'onPointerOver',\r\n    'onPointerUp',\r\n    'onGotPointerCapture',\r\n    'onLostPointerCapture'\r\n]);\r\n/**\r\n * An array of element attributes which are allowed on every html element type.\r\n *\r\n * @public\r\n */ export const baseElementProperties = toObjectMap([\r\n    'accessKey',\r\n    'children',\r\n    'className',\r\n    'contentEditable',\r\n    'dir',\r\n    'draggable',\r\n    'hidden',\r\n    'htmlFor',\r\n    'id',\r\n    'lang',\r\n    'ref',\r\n    'role',\r\n    'style',\r\n    'tabIndex',\r\n    'title',\r\n    'translate',\r\n    'spellCheck',\r\n    'name'\r\n]);\r\n/**\r\n * An array of microdata attributes that are allowed on every html element type.\r\n *\r\n * @public\r\n */ export const microdataProperties = toObjectMap([\r\n    'itemID',\r\n    'itemProp',\r\n    'itemRef',\r\n    'itemScope',\r\n    'itemType'\r\n]);\r\n/**\r\n * An array of HTML element properties and events.\r\n *\r\n * @public\r\n */ export const htmlElementProperties = toObjectMap(baseElementProperties, baseElementEvents, microdataProperties);\r\n/**\r\n * An array of LABEL tag properties and events.\r\n *\r\n * @public\r\n */ export const labelProperties = toObjectMap(htmlElementProperties, [\r\n    'form'\r\n]);\r\n/**\r\n * An array of AUDIO tag properties and events.\r\n\r\n * @public\r\n */ export const audioProperties = toObjectMap(htmlElementProperties, [\r\n    'height',\r\n    'loop',\r\n    'muted',\r\n    'preload',\r\n    'src',\r\n    'width'\r\n]);\r\n/**\r\n * An array of VIDEO tag properties and events.\r\n *\r\n * @public\r\n */ export const videoProperties = toObjectMap(audioProperties, [\r\n    'poster'\r\n]);\r\n/**\r\n * An array of OL tag properties and events.\r\n *\r\n * @public\r\n */ export const olProperties = toObjectMap(htmlElementProperties, [\r\n    'start'\r\n]);\r\n/**\r\n * An array of LI tag properties and events.\r\n *\r\n * @public\r\n */ export const liProperties = toObjectMap(htmlElementProperties, [\r\n    'value'\r\n]);\r\n/**\r\n * An array of A tag properties and events.\r\n *\r\n * @public\r\n */ export const anchorProperties = toObjectMap(htmlElementProperties, [\r\n    'download',\r\n    'href',\r\n    'hrefLang',\r\n    'media',\r\n    'rel',\r\n    'target',\r\n    'type'\r\n]);\r\n/**\r\n * An array of TIME tag properties and events.\r\n *\r\n * @public\r\n */ export const timeProperties = toObjectMap(htmlElementProperties, [\r\n    'dateTime'\r\n]);\r\n/**\r\n * An array of BUTTON tag properties and events.\r\n *\r\n * @public\r\n */ export const buttonProperties = toObjectMap(htmlElementProperties, [\r\n    'autoFocus',\r\n    'disabled',\r\n    'form',\r\n    'formAction',\r\n    'formEncType',\r\n    'formMethod',\r\n    'formNoValidate',\r\n    'formTarget',\r\n    'type',\r\n    'value'\r\n]);\r\n/**\r\n * An array of INPUT tag properties and events.\r\n *\r\n * @public\r\n */ export const inputProperties = toObjectMap(buttonProperties, [\r\n    'accept',\r\n    'alt',\r\n    'autoCorrect',\r\n    'autoCapitalize',\r\n    'autoComplete',\r\n    'checked',\r\n    'dirname',\r\n    'form',\r\n    'height',\r\n    'inputMode',\r\n    'list',\r\n    'max',\r\n    'maxLength',\r\n    'min',\r\n    'minLength',\r\n    'multiple',\r\n    'pattern',\r\n    'placeholder',\r\n    'readOnly',\r\n    'required',\r\n    'src',\r\n    'step',\r\n    'size',\r\n    'type',\r\n    'value',\r\n    'width'\r\n]);\r\n/**\r\n * An array of TEXTAREA tag properties and events.\r\n *\r\n * @public\r\n */ export const textAreaProperties = toObjectMap(buttonProperties, [\r\n    'autoCapitalize',\r\n    'cols',\r\n    'dirname',\r\n    'form',\r\n    'maxLength',\r\n    'placeholder',\r\n    'readOnly',\r\n    'required',\r\n    'rows',\r\n    'wrap'\r\n]);\r\n/**\r\n * An array of SELECT tag properties and events.\r\n *\r\n * @public\r\n */ export const selectProperties = toObjectMap(buttonProperties, [\r\n    'form',\r\n    'multiple',\r\n    'required'\r\n]);\r\nexport const optionProperties = toObjectMap(htmlElementProperties, [\r\n    'selected',\r\n    'value'\r\n]);\r\n/**\r\n * An array of TABLE tag properties and events.\r\n *\r\n * @public\r\n */ export const tableProperties = toObjectMap(htmlElementProperties, [\r\n    'cellPadding',\r\n    'cellSpacing'\r\n]);\r\n/**\r\n * An array of TR tag properties and events.\r\n *\r\n * @public\r\n */ export const trProperties = htmlElementProperties;\r\n/**\r\n * An array of TH tag properties and events.\r\n *\r\n * @public\r\n */ export const thProperties = toObjectMap(htmlElementProperties, [\r\n    'colSpan',\r\n    'rowSpan',\r\n    'scope'\r\n]);\r\n/**\r\n * An array of TD tag properties and events.\r\n *\r\n * @public\r\n */ export const tdProperties = toObjectMap(htmlElementProperties, [\r\n    'colSpan',\r\n    'headers',\r\n    'rowSpan',\r\n    'scope'\r\n]);\r\nexport const colGroupProperties = toObjectMap(htmlElementProperties, [\r\n    'span'\r\n]);\r\nexport const colProperties = toObjectMap(htmlElementProperties, [\r\n    'span'\r\n]);\r\n/**\r\n * An array of FIELDSET tag properties and events.\r\n *\r\n * @public\r\n */ export const fieldsetProperties = toObjectMap(htmlElementProperties, [\r\n    'disabled',\r\n    'form'\r\n]);\r\n/**\r\n * An array of FORM tag properties and events.\r\n *\r\n * @public\r\n */ export const formProperties = toObjectMap(htmlElementProperties, [\r\n    'acceptCharset',\r\n    'action',\r\n    'encType',\r\n    'encType',\r\n    'method',\r\n    'noValidate',\r\n    'target'\r\n]);\r\n/**\r\n * An array of IFRAME tag properties and events.\r\n *\r\n * @public\r\n */ export const iframeProperties = toObjectMap(htmlElementProperties, [\r\n    'allow',\r\n    'allowFullScreen',\r\n    'allowPaymentRequest',\r\n    'allowTransparency',\r\n    'csp',\r\n    'height',\r\n    'importance',\r\n    'referrerPolicy',\r\n    'sandbox',\r\n    'src',\r\n    'srcDoc',\r\n    'width'\r\n]);\r\n/**\r\n * An array of IMAGE tag properties and events.\r\n *\r\n * @public\r\n */ export const imgProperties = toObjectMap(htmlElementProperties, [\r\n    'alt',\r\n    'crossOrigin',\r\n    'height',\r\n    'src',\r\n    'srcSet',\r\n    'useMap',\r\n    'width'\r\n]);\r\n/**\r\n * An array of DIALOG tag properties and events.\r\n *\r\n * @public\r\n */ export const dialogProperties = toObjectMap(htmlElementProperties, [\r\n    'open',\r\n    'onCancel',\r\n    'onClose'\r\n]);\r\n/**\r\n * An array of DIV tag properties and events.\r\n *\r\n * @public\r\n */ export const divProperties = htmlElementProperties;\r\n/**\r\n * Gets native supported props for an html element provided the allowance set. Use one of the property\r\n * sets defined (divProperties, buttonPropertes, etc) to filter out supported properties from a given\r\n * props set. Note that all data- and aria- prefixed attributes will be allowed.\r\n * NOTE: getNativeProps should always be applied first when adding props to a react component. The\r\n * non-native props should be applied second. This will prevent getNativeProps from overriding your custom props.\r\n * For example, if props passed to getNativeProps has an onClick function and getNativeProps is added to\r\n * the component after an onClick function is added, then the getNativeProps onClick will override it.\r\n *\r\n * @public\r\n * @param props - The unfiltered input props\r\n * @param allowedPropNames - The array or record of allowed prop names.\r\n * @param excludedPropNames\r\n * @returns The filtered props\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function getNativeProps(// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nprops, allowedPropNames, excludedPropNames) {\r\n    // It'd be great to properly type this while allowing 'aria-` and 'data-' attributes like TypeScript does for\r\n    // JSX attributes, but that ability is hardcoded into the TS compiler with no analog in TypeScript typings.\r\n    // Then we'd be able to enforce props extends native props (including aria- and data- attributes), and then\r\n    // return native props.\r\n    // We should be able to do this once this PR is merged: https://github.com/microsoft/TypeScript/pull/26797\r\n    const isArray = Array.isArray(allowedPropNames);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    const result = {};\r\n    const keys = Object.keys(props);\r\n    for (const key of keys){\r\n        const isNativeProp = !isArray && allowedPropNames[key] || isArray && allowedPropNames.indexOf(key) >= 0 || key.indexOf('data-') === 0 || key.indexOf('aria-') === 0;\r\n        if (isNativeProp && (!excludedPropNames || (excludedPropNames === null || excludedPropNames === void 0 ? void 0 : excludedPropNames.indexOf(key)) === -1)) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            result[key] = props[key];\r\n        }\r\n    }\r\n    return result;\r\n}\r\n","import * as React from 'react';\r\nimport { labelProperties, audioProperties, videoProperties, olProperties, liProperties, anchorProperties, buttonProperties, inputProperties, textAreaProperties, selectProperties, optionProperties, tableProperties, trProperties, thProperties, tdProperties, colGroupProperties, colProperties, fieldsetProperties, formProperties, iframeProperties, imgProperties, htmlElementProperties, getNativeProps, timeProperties, dialogProperties } from './properties';\r\nconst nativeElementMap = {\r\n    label: labelProperties,\r\n    audio: audioProperties,\r\n    video: videoProperties,\r\n    ol: olProperties,\r\n    li: liProperties,\r\n    a: anchorProperties,\r\n    button: buttonProperties,\r\n    input: inputProperties,\r\n    textarea: textAreaProperties,\r\n    select: selectProperties,\r\n    option: optionProperties,\r\n    table: tableProperties,\r\n    tr: trProperties,\r\n    th: thProperties,\r\n    td: tdProperties,\r\n    colGroup: colGroupProperties,\r\n    col: colProperties,\r\n    fieldset: fieldsetProperties,\r\n    form: formProperties,\r\n    iframe: iframeProperties,\r\n    img: imgProperties,\r\n    time: timeProperties,\r\n    dialog: dialogProperties\r\n};\r\n/**\r\n * Given an element tagname and user props, filters the props to only allowed props for the given\r\n * element type.\r\n * @param tagName - Tag name (e.g. \"div\")\r\n * @param props - Props object\r\n * @param excludedPropNames - List of props to disallow\r\n *\r\n * @deprecated use getIntrinsicElementProps instead, it is a type-safe version of this method\r\n */ // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nexport function getNativeElementProps(tagName, props, excludedPropNames) {\r\n    const allowedPropNames = tagName && nativeElementMap[tagName] || htmlElementProperties;\r\n    allowedPropNames.as = 1;\r\n    return getNativeProps(props, allowedPropNames, excludedPropNames);\r\n}\r\n/**\r\n * Splits the native props into ones that go to the `root` slot, and ones that go to the primary slot.\r\n *\r\n * This function is only for use with components that have a primary slot other than `root`.\r\n * Most components should use {@link getNativeElementProps} for their root slot if it is the primary slot.\r\n *\r\n * @returns An object containing the native props for the `root` and primary slots.\r\n */ export const getPartitionedNativeProps = ({ primarySlotTagName, props, excludedPropNames })=>{\r\n    return {\r\n        root: {\r\n            style: props.style,\r\n            className: props.className\r\n        },\r\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\r\n        primary: getNativeElementProps(primarySlotTagName, props, [\r\n            ...excludedPropNames || [],\r\n            'style',\r\n            'className'\r\n        ])\r\n    };\r\n};\r\n","import * as React from 'react';\r\nimport { getNativeElementProps } from '../utils/getNativeElementProps';\r\n/**\r\n * Given an element tagname and user props, filters the props to only allowed props for the given\r\n * element type.\r\n *\r\n * Equivalent to {@link getNativeElementProps}, but more type-safe.\r\n */ export const getIntrinsicElementProps = (/** The slot's default element type (e.g. 'div') */ tagName, /** The component's props object */ props, /** List of native props to exclude from the returned value */ excludedPropNames)=>{\r\n    var _props_as;\r\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\r\n    return getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : tagName, props, excludedPropNames);\r\n};\r\n","import * as React from 'react';\r\n/**\r\n * React hook to merge multiple React refs (either MutableRefObjects or ref callbacks) into a single ref callback that\r\n * updates all provided refs\r\n * @param refs - Refs to collectively update with one ref value.\r\n * @returns A function with an attached \"current\" prop, so that it can be treated like a RefObject.\r\n */ export function useMergedRefs(...refs) {\r\n    'use no memo';\r\n    const mergedCallback = React.useCallback((value)=>{\r\n        // Update the \"current\" prop hanging on the function.\r\n        mergedCallback.current = value;\r\n        for (const ref of refs){\r\n            if (typeof ref === 'function') {\r\n                ref(value);\r\n            } else if (ref) {\r\n                // work around the immutability of the React.Ref type\r\n                ref.current = value;\r\n            }\r\n        }\r\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps -- already exhaustive\r\n    [\r\n        ...refs\r\n    ]);\r\n    return mergedCallback;\r\n}\r\n","import * as React from 'react';\r\nimport { canUseDOM } from '../ssr/index';\r\n/**\r\n * React currently throws a warning when using useLayoutEffect on the server. To get around it, we can conditionally\r\n * useEffect on the server (no-op) and useLayoutEffect in the browser. We occasionally need useLayoutEffect to\r\n * ensure we don't get a render flash for certain operations, but we may also need affected components to render on\r\n * the server.\r\n *\r\n * https://gist.github.com/gaearon/e7d97cdf38a2907924ea12e4ebdf3c85\r\n * https://github.com/reduxjs/react-redux/blob/master/src/utils/useIsomorphicLayoutEffect.js\r\n */ // eslint-disable-next-line no-restricted-properties\r\nexport const useIsomorphicLayoutEffect = canUseDOM() ? React.useLayoutEffect : React.useEffect;\r\n","import * as React from 'react';\r\nimport { canUseDOM } from './canUseDOM';\r\n/**\r\n * Default context value to use in case there is no SSRProvider. This is fine for client-only apps.\r\n *\r\n * @internal\r\n */ export const defaultSSRContextValue = {\r\n    current: 0\r\n};\r\nexport const SSRContext = /*#__PURE__*/ React.createContext(undefined);\r\n/**\r\n * @internal\r\n */ export function useSSRContext() {\r\n    var _React_useContext;\r\n    return (_React_useContext = React.useContext(SSRContext)) !== null && _React_useContext !== void 0 ? _React_useContext : defaultSSRContextValue;\r\n}\r\n/**\r\n * When using SSR with Fluent UI, applications must be wrapped in an SSRProvider. This ensures that auto generated ids\r\n * are consistent between the client and server.\r\n *\r\n * @public\r\n */ export const SSRProvider = (props)=>{\r\n    const [value] = React.useState(()=>({\r\n            current: 0\r\n        }));\r\n    return /*#__PURE__*/ React.createElement(SSRContext.Provider, {\r\n        value: value\r\n    }, props.children);\r\n};\r\n/**\r\n * Returns whether the component is currently being server side rendered or hydrated on the client. Can be used to delay\r\n * browser-specific rendering until after hydration. May cause re-renders on a client when is used within SSRProvider.\r\n */ export function useIsSSR() {\r\n    const isInSSRContext = useSSRContext() !== defaultSSRContextValue;\r\n    const [isSSR, setIsSSR] = React.useState(isInSSRContext);\r\n    // If we are rendering in a non-DOM environment, and there's no SSRProvider, provide a warning to hint to the\r\n    // developer to add one.\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!isInSSRContext && !canUseDOM()) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`@fluentui/react-components [${useIsSSR.name}]:\r\nWhen server rendering, you must wrap your application in an <SSRProvider> to ensure consistent ids are generated between the client and server.\r\n\r\n\r\nCheck documentation at https://aka.ms/fluentui-ssr.`);\r\n        }\r\n    }\r\n    // If on the client, and the component was initially server rendered, then schedule a layout effect to update the\r\n    // component after hydration.\r\n    if (canUseDOM() && isInSSRContext) {\r\n        // This if statement technically breaks the rules of hooks, but is safe because the condition never changes after\r\n        // mounting.\r\n        // eslint-disable-next-line\r\n        React.useLayoutEffect(()=>{\r\n            setIsSSR(false);\r\n        }, []);\r\n    }\r\n    return isSSR;\r\n}\r\n","import * as React from 'react';\r\nimport { defaultSSRContextValue, useSSRContext } from '../ssr/index';\r\nconst IdPrefixContext = React.createContext(undefined);\r\n/**\r\n * Allows to define a prefix that will be used for all IDs generated by useId() hook. It's useful to avoid collisions\r\n * between different bundles.\r\n */ export const IdPrefixProvider = IdPrefixContext.Provider;\r\nfunction useIdPrefix() {\r\n    return React.useContext(IdPrefixContext) || '';\r\n}\r\n/**\r\n * Resets generated IDs, should be used only in tests.\r\n */ export function resetIdsForTests() {\r\n    defaultSSRContextValue.current = 0;\r\n}\r\n/**\r\n * Hook to generate a unique ID.\r\n *\r\n * @param prefix - Optional prefix for the ID. Defaults to 'fui-'.\r\n * @param providedId - Optional id provided by a parent component. Defaults to the provided value if present,\r\n *  without conditioning the hook call\r\n * @returns The ID\r\n */ export function useId(prefix = 'fui-', providedId) {\r\n    'use no memo';\r\n    const contextValue = useSSRContext();\r\n    const idPrefix = useIdPrefix();\r\n    // Checking if useId is available on React, if it is, we use it to generate the id. String concatenation is used to\r\n    // prevent bundlers from complaining with older versions of React.\r\n    const _useId = React['use' + 'Id'];\r\n    if (_useId) {\r\n        const generatedId = _useId();\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        const escapedId = React.useMemo(()=>generatedId.replace(/:/g, ''), [\r\n            generatedId\r\n        ]);\r\n        return providedId || `${idPrefix}${prefix}${escapedId}`;\r\n    }\r\n    // Hooks appear to be running conditionally, but they will always run in the same order since it's based on\r\n    // the version of React being used. This is safe to ignore.\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    return React.useMemo(()=>{\r\n        if (providedId) {\r\n            return providedId;\r\n        }\r\n        return `${idPrefix}${prefix}${++contextValue.current}`;\r\n    }, [\r\n        idPrefix,\r\n        prefix,\r\n        providedId,\r\n        contextValue\r\n    ]);\r\n}\r\n","/**\r\n * Default implementation of insertion factory. Inserts styles only once per renderer and performs\r\n * insertion immediately after styles computation.\r\n *\r\n * @internal\r\n */\r\nconst insertionFactory = () => {\r\n  const insertionCache = {};\r\n  return function insertStyles(renderer, cssRules) {\r\n    if (insertionCache[renderer.id] === undefined) {\r\n      renderer.insertCSSRules(cssRules);\r\n      insertionCache[renderer.id] = true;\r\n    }\r\n  };\r\n};\r\n\r\nexport { insertionFactory };\r\n//# sourceMappingURL=insertionFactory.esm.js.map\r\n","import hashString from '@emotion/hash';\r\nimport { SEQUENCE_PREFIX, DEBUG_SEQUENCE_SEPARATOR, SEQUENCE_HASH_LENGTH } from '../../constants.esm.js';\r\n\r\nfunction padEndHash(value) {\r\n  const hashLength = value.length;\r\n  if (hashLength === SEQUENCE_HASH_LENGTH) {\r\n    return value;\r\n  }\r\n  for (let i = hashLength; i < SEQUENCE_HASH_LENGTH; i++) {\r\n    value += '0';\r\n  }\r\n  return value;\r\n}\r\nfunction hashSequence(classes, dir, sequenceIds = []) {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return SEQUENCE_PREFIX + padEndHash(hashString(classes + dir));\r\n  }\r\n  return SEQUENCE_PREFIX + padEndHash(hashString(classes + dir)) + DEBUG_SEQUENCE_SEPARATOR + padEndHash(hashString(sequenceIds.join('')));\r\n}\r\n\r\nexport { hashSequence };\r\n//# sourceMappingURL=hashSequence.esm.js.map\r\n","/* eslint-disable */\r\n// Inspired by https://github.com/garycourt/murmurhash-js\r\n// Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86\r\nfunction murmur2(str) {\r\n  // 'm' and 'r' are mixing constants generated offline.\r\n  // They're not really 'magic', they just happen to work well.\r\n  // const m = 0x5bd1e995;\r\n  // const r = 24;\r\n  // Initialize the hash\r\n  var h = 0; // Mix 4 bytes at a time into the hash\r\n\r\n  var k,\r\n      i = 0,\r\n      len = str.length;\r\n\r\n  for (; len >= 4; ++i, len -= 4) {\r\n    k = str.charCodeAt(i) & 0xff | (str.charCodeAt(++i) & 0xff) << 8 | (str.charCodeAt(++i) & 0xff) << 16 | (str.charCodeAt(++i) & 0xff) << 24;\r\n    k =\r\n    /* Math.imul(k, m): */\r\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16);\r\n    k ^=\r\n    /* k >>> r: */\r\n    k >>> 24;\r\n    h =\r\n    /* Math.imul(k, m): */\r\n    (k & 0xffff) * 0x5bd1e995 + ((k >>> 16) * 0xe995 << 16) ^\r\n    /* Math.imul(h, m): */\r\n    (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\r\n  } // Handle the last few bytes of the input array\r\n\r\n\r\n  switch (len) {\r\n    case 3:\r\n      h ^= (str.charCodeAt(i + 2) & 0xff) << 16;\r\n\r\n    case 2:\r\n      h ^= (str.charCodeAt(i + 1) & 0xff) << 8;\r\n\r\n    case 1:\r\n      h ^= str.charCodeAt(i) & 0xff;\r\n      h =\r\n      /* Math.imul(h, m): */\r\n      (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\r\n  } // Do a few final mixes of the hash to ensure the last few\r\n  // bytes are well-incorporated.\r\n\r\n\r\n  h ^= h >>> 13;\r\n  h =\r\n  /* Math.imul(h, m): */\r\n  (h & 0xffff) * 0x5bd1e995 + ((h >>> 16) * 0xe995 << 16);\r\n  return ((h ^ h >>> 15) >>> 0).toString(36);\r\n}\r\n\r\nexport { murmur2 as default };\r\n","import { DEFINITION_LOOKUP_TABLE } from '../constants.esm.js';\r\nimport { hashSequence } from './utils/hashSequence.esm.js';\r\n\r\n/**\r\n * Reduces a classname map for slot to a classname string. Uses classnames according to text directions.\r\n *\r\n * @private\r\n */\r\nfunction reduceToClassName(classMap, dir) {\r\n  // - `classString` is a string of classnames separated by a space, used to output classes\r\n  // - `hashString` is a string of classnames separated by a space, used to generate a hash\r\n  //\r\n  // `hashString` is needed to handle `null` values in a class map as they don't produce any classes.\r\n  let classString = '';\r\n  let hashString = '';\r\n  // eslint-disable-next-line guard-for-in\r\n  for (const propertyHash in classMap) {\r\n    const classNameMapping = classMap[propertyHash];\r\n    if (classNameMapping === 0) {\r\n      hashString += propertyHash + ' ';\r\n      continue;\r\n    }\r\n    const hasRTLClassName = Array.isArray(classNameMapping);\r\n    const className = dir === 'rtl' ? (hasRTLClassName ? classNameMapping[1] : classNameMapping) + ' ' : (hasRTLClassName ? classNameMapping[0] : classNameMapping) + ' ';\r\n    classString += className;\r\n    hashString += className;\r\n  }\r\n  return [classString.slice(0, -1), hashString.slice(0, -1)];\r\n}\r\n/**\r\n * Reduces classname maps for slots to classname strings. Registers them in a definition cache to be used by\r\n * `mergeClasses()`.\r\n *\r\n * @internal\r\n */\r\nfunction reduceToClassNameForSlots(classesMapBySlot, dir) {\r\n  const classNamesForSlots = {};\r\n  // eslint-disable-next-line guard-for-in\r\n  for (const slotName in classesMapBySlot) {\r\n    const [slotClasses, slotClassesHash] = reduceToClassName(classesMapBySlot[slotName], dir);\r\n    // Handles a case when there are no classes in a set i.e. \"makeStyles({ root: {} })\"\r\n    if (slotClassesHash === '') {\r\n      classNamesForSlots[slotName] = '';\r\n      continue;\r\n    }\r\n    const sequenceHash = hashSequence(slotClassesHash, dir);\r\n    const resultSlotClasses = sequenceHash + (slotClasses === '' ? '' : ' ' + slotClasses);\r\n    DEFINITION_LOOKUP_TABLE[sequenceHash] = [classesMapBySlot[slotName], dir];\r\n    classNamesForSlots[slotName] = resultSlotClasses;\r\n  }\r\n  return classNamesForSlots;\r\n}\r\n\r\nexport { reduceToClassName, reduceToClassNameForSlots };\r\n//# sourceMappingURL=reduceToClassNameForSlots.esm.js.map\r\n","import './constants.esm.js';\r\nimport { debugData } from './devtools/store.esm.js';\r\nimport { isDevToolsEnabled } from './devtools/isDevToolsEnabled.esm.js';\r\nimport { getSourceURLfromError } from './devtools/getSourceURLfromError.esm.js';\r\nimport { insertionFactory } from './insertionFactory.esm.js';\r\nimport { reduceToClassNameForSlots } from './runtime/reduceToClassNameForSlots.esm.js';\r\n\r\n/**\r\n * A version of makeStyles() that accepts build output as an input and skips all runtime transforms.\r\n *\r\n * @internal\r\n */\r\nfunction __styles(classesMapBySlot, cssRules, factory = insertionFactory) {\r\n  const insertStyles = factory();\r\n  let ltrClassNamesForSlots = null;\r\n  let rtlClassNamesForSlots = null;\r\n  let sourceURL;\r\n  if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n    sourceURL = getSourceURLfromError();\r\n  }\r\n  function computeClasses(options) {\r\n    const {\r\n      dir,\r\n      renderer\r\n    } = options;\r\n    const isLTR = dir === 'ltr';\r\n    if (isLTR) {\r\n      if (ltrClassNamesForSlots === null) {\r\n        ltrClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\r\n      }\r\n    } else {\r\n      if (rtlClassNamesForSlots === null) {\r\n        rtlClassNamesForSlots = reduceToClassNameForSlots(classesMapBySlot, dir);\r\n      }\r\n    }\r\n    insertStyles(renderer, cssRules);\r\n    const classNamesForSlots = isLTR ? ltrClassNamesForSlots : rtlClassNamesForSlots;\r\n    if (process.env.NODE_ENV !== 'production' && isDevToolsEnabled) {\r\n      debugData.addSequenceDetails(classNamesForSlots, sourceURL);\r\n    }\r\n    return classNamesForSlots;\r\n  }\r\n  return computeClasses;\r\n}\r\n\r\nexport { __styles };\r\n//# sourceMappingURL=__styles.esm.js.map\r\n","import { SEQUENCE_PREFIX, RESET_HASH_PREFIX, DEBUG_RESET_CLASSES, SEQUENCE_SIZE, DEFINITION_LOOKUP_TABLE, LOOKUP_DEFINITIONS_INDEX, LOOKUP_DIR_INDEX } from './constants.esm.js';\r\nimport { hashSequence } from './runtime/utils/hashSequence.esm.js';\r\nimport { reduceToClassName } from './runtime/reduceToClassNameForSlots.esm.js';\r\n\r\n// Contains a mapping of previously resolved sequences of atomic classnames\r\nconst mergeClassesCachedResults = {};\r\nfunction mergeClasses() {\r\n  // arguments are parsed manually to avoid double loops as TS & Babel transforms rest via an additional loop\r\n  // @see https://babeljs.io/docs/en/babel-plugin-transform-parameters\r\n  /* eslint-disable prefer-rest-params */\r\n  let dir = null;\r\n  let resultClassName = '';\r\n  // Is used as a cache key to avoid object merging\r\n  let sequenceMatch = '';\r\n  const sequencesIds = new Array(arguments.length);\r\n  let containsResetClassName = '';\r\n  for (let i = 0; i < arguments.length; i++) {\r\n    const className = arguments[i];\r\n    if (typeof className === 'string' && className !== '') {\r\n      // All classes generated by `makeStyles()` are prefixed by a sequence hash, this allows to identify class sets\r\n      // without parsing each className in a string\r\n      const sequenceIndex = className.indexOf(SEQUENCE_PREFIX);\r\n      if (sequenceIndex === -1) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          className.split(' ').forEach(entry => {\r\n            if (entry.startsWith(RESET_HASH_PREFIX) && DEBUG_RESET_CLASSES[entry]) {\r\n              if (containsResetClassName) {\r\n                // eslint-disable-next-line no-console\r\n                console.error('mergeClasses(): a passed string contains multiple classes produced by makeResetStyles (' + `${className} & ${resultClassName}, this will lead to non-deterministic behavior. Learn more:` + 'https://griffel.js.org/react/api/make-reset-styles#limitations' + '\\n' + `Source string: ${className}`);\r\n              } else {\r\n                containsResetClassName = entry;\r\n              }\r\n            }\r\n          });\r\n        }\r\n        resultClassName += className + ' ';\r\n      } else {\r\n        const sequenceId = className.substr(sequenceIndex, SEQUENCE_SIZE);\r\n        // Handles a case with mixed classnames, i.e. \"ui-button ATOMIC_CLASSES\"\r\n        if (sequenceIndex > 0) {\r\n          resultClassName += className.slice(0, sequenceIndex);\r\n        }\r\n        sequenceMatch += sequenceId;\r\n        sequencesIds[i] = sequenceId;\r\n      }\r\n      if (process.env.NODE_ENV !== 'production') {\r\n        if (className.indexOf(SEQUENCE_PREFIX, sequenceIndex + 1) !== -1) {\r\n          // eslint-disable-next-line no-console\r\n          console.error('mergeClasses(): a passed string contains multiple identifiers of atomic classes (classes that start ' + `with \"${SEQUENCE_PREFIX}\"), it's possible that passed classes were concatenated in a wrong way. ` + `Source string: ${className}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // .slice() there allows to avoid trailing space for non-atomic classes\r\n  // \"ui-button ui-flex \" => \"ui-button ui-flex\"\r\n  if (sequenceMatch === '') {\r\n    return resultClassName.slice(0, -1);\r\n  }\r\n  // It's safe to reuse results to avoid continuous merging as results are stable\r\n  // \"__seq1 ... __seq2 ...\" => \"__seq12 ...\"\r\n  const mergeClassesResult = mergeClassesCachedResults[sequenceMatch];\r\n  if (mergeClassesResult !== undefined) {\r\n    return resultClassName + mergeClassesResult;\r\n  }\r\n  const sequenceMappings = [];\r\n  for (let i = 0; i < arguments.length; i++) {\r\n    const sequenceId = sequencesIds[i];\r\n    if (sequenceId) {\r\n      const sequenceMapping = DEFINITION_LOOKUP_TABLE[sequenceId];\r\n      if (sequenceMapping) {\r\n        sequenceMappings.push(sequenceMapping[LOOKUP_DEFINITIONS_INDEX]);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          if (dir !== null && dir !== sequenceMapping[LOOKUP_DIR_INDEX]) {\r\n            // eslint-disable-next-line no-console\r\n            console.error(`mergeClasses(): a passed string contains an identifier (${sequenceId}) that has different direction ` + `(dir=\"${sequenceMapping[1] ? 'rtl' : 'ltr'}\") setting than other classes. This is not supported. ` + `Source string: ${arguments[i]}`);\r\n          }\r\n        }\r\n        dir = sequenceMapping[LOOKUP_DIR_INDEX];\r\n      } else {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          // eslint-disable-next-line no-console\r\n          console.error(`mergeClasses(): a passed string contains an identifier (${sequenceId}) that does not match any entry ` + `in cache. Source string: ${arguments[i]}`);\r\n        }\r\n      }\r\n    }\r\n  }\r\n  // eslint-disable-next-line prefer-spread\r\n  const resultClassesMap = Object.assign.apply(Object,\r\n  // .assign() mutates the first object, we can't mutate mappings as it will produce invalid results later\r\n  [{}].concat(sequenceMappings));\r\n  const [atomicClasses, classesMapHash] = reduceToClassName(resultClassesMap, dir);\r\n  // Each merge of classes generates a new sequence of atomic classes that needs to be registered\r\n  const newSequenceHash = hashSequence(classesMapHash, dir, sequencesIds);\r\n  const newClassName = newSequenceHash + ' ' + atomicClasses;\r\n  mergeClassesCachedResults[sequenceMatch] = newClassName;\r\n  DEFINITION_LOOKUP_TABLE[newSequenceHash] = [resultClassesMap, dir];\r\n  return resultClassName + newClassName;\r\n}\r\n\r\nexport { mergeClasses, mergeClassesCachedResults };\r\n//# sourceMappingURL=mergeClasses.esm.js.map\r\n","import { __styles, mergeClasses } from '@griffel/core';\r\nimport { useRenderer_unstable } from '@griffel/react';\r\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\r\nexport const fluentProviderClassNames = {\r\n  root: 'fui-FluentProvider'\r\n};\r\nconst useStyles = /*#__PURE__*/__styles({\r\n  root: {\r\n    sj55zd: \"f19n0e5\",\r\n    De3pzq: \"fxugw4r\",\r\n    fsow6f: [\"f1o700av\", \"fes3tcz\"],\r\n    Bahqtrf: \"fk6fouc\",\r\n    Be2twd7: \"fkhj508\",\r\n    Bhrd7zp: \"figsok6\",\r\n    Bg96gwp: \"f1i3iumi\"\r\n  }\r\n}, {\r\n  d: [\".f19n0e5{color:var(--colorNeutralForeground1);}\", \".fxugw4r{background-color:var(--colorNeutralBackground1);}\", \".f1o700av{text-align:left;}\", \".fes3tcz{text-align:right;}\", \".fk6fouc{font-family:var(--fontFamilyBase);}\", \".fkhj508{font-size:var(--fontSizeBase300);}\", \".figsok6{font-weight:var(--fontWeightRegular);}\", \".f1i3iumi{line-height:var(--lineHeightBase300);}\"]\r\n});\r\n/** Applies style classnames to slots */\r\nexport const useFluentProviderStyles_unstable = state => {\r\n  'use no memo';\r\n\r\n  const renderer = useRenderer_unstable();\r\n  const styles = useStyles({\r\n    dir: state.dir,\r\n    renderer\r\n  });\r\n  state.root.className = mergeClasses(fluentProviderClassNames.root, state.themeClassName, styles.root, state.root.className);\r\n  return state;\r\n};","import { useId, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\r\nimport * as React from 'react';\r\nimport { createCSSRuleFromTheme } from './createCSSRuleFromTheme';\r\nimport { fluentProviderClassNames } from './useFluentProviderStyles.styles';\r\n// String concatenation is used to prevent bundlers to complain with older versions of React\r\nconst useInsertionEffect = React['useInsertion' + 'Effect'] ? React['useInsertion' + 'Effect'] : useIsomorphicLayoutEffect;\r\nconst createStyleTag = (target, elementAttributes)=>{\r\n    if (!target) {\r\n        return undefined;\r\n    }\r\n    const tag = target.createElement('style');\r\n    Object.keys(elementAttributes).forEach((attrName)=>{\r\n        tag.setAttribute(attrName, elementAttributes[attrName]);\r\n    });\r\n    target.head.appendChild(tag);\r\n    return tag;\r\n};\r\nconst insertSheet = (tag, rule)=>{\r\n    const sheet = tag.sheet;\r\n    if (sheet) {\r\n        if (sheet.cssRules.length > 0) {\r\n            sheet.deleteRule(0);\r\n        }\r\n        sheet.insertRule(rule, 0);\r\n    } else if (process.env.NODE_ENV !== 'production') {\r\n        // eslint-disable-next-line no-console\r\n        console.error('FluentProvider: No sheet available on styleTag, styles will not be inserted into DOM.');\r\n    }\r\n};\r\n/**\r\n * Writes a theme as css variables in a style tag on the provided targetDocument as a rule applied to a CSS class\r\n * @internal\r\n * @returns CSS class to apply the rule\r\n */ export const useFluentProviderThemeStyleTag = (options)=>{\r\n    'use no memo';\r\n    const { targetDocument, theme, rendererAttributes } = options;\r\n    const styleTag = React.useRef();\r\n    const styleTagId = useId(fluentProviderClassNames.root);\r\n    const styleElementAttributes = rendererAttributes;\r\n    const rule = React.useMemo(()=>createCSSRuleFromTheme(`.${styleTagId}`, theme), [\r\n        theme,\r\n        styleTagId\r\n    ]);\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        React.useMemo(()=>{\r\n            // Heads up!\r\n            // .useMemo() is used because it is called during render and DOM for _current_ component is not mounted yet. Also,\r\n            // this allows to do checks with strict mode enabled as .useEffect() will be called with incremented IDs because\r\n            // of double render.\r\n            if (targetDocument) {\r\n                const providerSelector = `.${fluentProviderClassNames.root}.${styleTagId}`;\r\n                const providerElements = targetDocument.querySelectorAll(providerSelector);\r\n                // In SSR, we will have DOM upfront. To avoid false positives the check on nested style tag is performed\r\n                const isSSR = targetDocument.querySelector(`${providerSelector} > style[id=\"${styleTagId}\"]`) !== null;\r\n                const elementsCount = isSSR ? 1 : 0;\r\n                if (providerElements.length > elementsCount) {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error([\r\n                        '@fluentui/react-provider: There are conflicting ids in your DOM.',\r\n                        'Please make sure that you configured your application properly.',\r\n                        '\\n',\r\n                        '\\n',\r\n                        'Configuration guide: https://aka.ms/fluentui-conflicting-ids'\r\n                    ].join(' '));\r\n                }\r\n            }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []);\r\n    }\r\n    useHandleSSRStyleElements(targetDocument, styleTagId);\r\n    useInsertionEffect(()=>{\r\n        // The style element could already have been created during SSR - no need to recreate it\r\n        const ssrStyleElement = targetDocument === null || targetDocument === void 0 ? void 0 : targetDocument.getElementById(styleTagId);\r\n        if (ssrStyleElement) {\r\n            styleTag.current = ssrStyleElement;\r\n        } else {\r\n            styleTag.current = createStyleTag(targetDocument, {\r\n                ...styleElementAttributes,\r\n                id: styleTagId\r\n            });\r\n            if (styleTag.current) {\r\n                insertSheet(styleTag.current, rule);\r\n            }\r\n        }\r\n        return ()=>{\r\n            var _styleTag_current;\r\n            (_styleTag_current = styleTag.current) === null || _styleTag_current === void 0 ? void 0 : _styleTag_current.remove();\r\n        };\r\n    }, [\r\n        styleTagId,\r\n        targetDocument,\r\n        rule,\r\n        styleElementAttributes\r\n    ]);\r\n    return {\r\n        styleTagId,\r\n        rule\r\n    };\r\n};\r\nfunction useHandleSSRStyleElements(targetDocument, styleTagId) {\r\n    // Using a state factory so that this logic only runs once per render\r\n    // Each FluentProvider can create its own style element during SSR as a slot\r\n    // Moves all theme style elements to document head during render to avoid hydration errors.\r\n    // Should be strict mode safe since the logic is idempotent.\r\n    React.useState(()=>{\r\n        if (!targetDocument) {\r\n            return;\r\n        }\r\n        const themeStyleElement = targetDocument.getElementById(styleTagId);\r\n        if (themeStyleElement) {\r\n            targetDocument.head.append(themeStyleElement);\r\n        }\r\n    });\r\n}\r\n","import { useRenderer_unstable } from '@griffel/react';\r\nimport { useFocusVisible } from '@fluentui/react-tabster';\r\nimport { ThemeContext_unstable as ThemeContext, useFluent_unstable as useFluent, useOverrides_unstable as useOverrides, CustomStyleHooksContext_unstable as CustomStyleHooksContext } from '@fluentui/react-shared-contexts';\r\nimport { getIntrinsicElementProps, useMergedRefs, slot } from '@fluentui/react-utilities';\r\nimport * as React from 'react';\r\nimport { useFluentProviderThemeStyleTag } from './useFluentProviderThemeStyleTag';\r\n// Meomizing empty objects to avoid unnecessary rerenders.\r\nconst DEFAULT_STYLE_HOOKS = {};\r\nconst DEFAULT_RENDERER_ATTRIBUTES = {};\r\n/**\r\n * Create the state required to render FluentProvider.\r\n *\r\n * The returned state can be modified with hooks such as useFluentProviderStyles_unstable,\r\n * before being passed to renderFluentProvider_unstable.\r\n *\r\n * @param props - props from this instance of FluentProvider\r\n * @param ref - reference to root HTMLElement of FluentProvider\r\n */ export const useFluentProvider_unstable = (props, ref)=>{\r\n    'use no memo';\r\n    const parentContext = useFluent();\r\n    const parentTheme = useTheme();\r\n    const parentOverrides = useOverrides();\r\n    const parentCustomStyleHooks = React.useContext(CustomStyleHooksContext) || DEFAULT_STYLE_HOOKS;\r\n    /**\r\n   * TODO: add merge functions to \"dir\" merge,\r\n   * nesting providers with the same \"dir\" should not add additional attributes to DOM\r\n   * see https://github.com/microsoft/fluentui/blob/0dc74a19f3aa5a058224c20505016fbdb84db172/packages/fluentui/react-northstar/src/utils/mergeProviderContexts.ts#L89-L93\r\n   */ const { applyStylesToPortals = true, // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    customStyleHooks_unstable, dir = parentContext.dir, targetDocument = parentContext.targetDocument, theme, overrides_unstable: overrides = {} } = props;\r\n    const mergedTheme = shallowMerge(parentTheme, theme);\r\n    const mergedOverrides = shallowMerge(parentOverrides, overrides);\r\n    const mergedCustomStyleHooks = shallowMerge(parentCustomStyleHooks, customStyleHooks_unstable);\r\n    const renderer = useRenderer_unstable();\r\n    var _renderer_styleElementAttributes;\r\n    const { styleTagId, rule } = useFluentProviderThemeStyleTag({\r\n        theme: mergedTheme,\r\n        targetDocument,\r\n        rendererAttributes: (_renderer_styleElementAttributes = renderer.styleElementAttributes) !== null && _renderer_styleElementAttributes !== void 0 ? _renderer_styleElementAttributes : DEFAULT_RENDERER_ATTRIBUTES\r\n    });\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        // eslint-disable-next-line react-hooks/rules-of-hooks\r\n        React.useEffect(()=>{\r\n            if (mergedTheme === undefined) {\r\n                // eslint-disable-next-line no-console\r\n                console.warn([\r\n                    '@fluentui/react-provider: FluentProvider does not have your \"theme\" defined.',\r\n                    \"Make sure that your top-level FluentProvider has set a `theme` prop or you're setting the theme in your child FluentProvider.\"\r\n                ].join(' '));\r\n            }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n        }, []);\r\n    }\r\n    return {\r\n        applyStylesToPortals,\r\n        // eslint-disable-next-line @typescript-eslint/naming-convention\r\n        customStyleHooks_unstable: mergedCustomStyleHooks,\r\n        dir,\r\n        targetDocument,\r\n        theme: mergedTheme,\r\n        // eslint-disable-next-line @typescript-eslint/naming-convention\r\n        overrides_unstable: mergedOverrides,\r\n        themeClassName: styleTagId,\r\n        components: {\r\n            root: 'div'\r\n        },\r\n        root: slot.always(getIntrinsicElementProps('div', {\r\n            ...props,\r\n            dir,\r\n            // FIXME:\r\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\r\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\r\n            ref: useMergedRefs(ref, useFocusVisible({\r\n                targetDocument\r\n            }))\r\n        }), {\r\n            elementType: 'div'\r\n        }),\r\n        serverStyleProps: {\r\n            cssRule: rule,\r\n            attributes: {\r\n                ...renderer.styleElementAttributes,\r\n                id: styleTagId\r\n            }\r\n        }\r\n    };\r\n};\r\nfunction shallowMerge(a, b) {\r\n    // Merge impacts perf: we should like to avoid it if it's possible\r\n    if (a && b) {\r\n        return {\r\n            ...a,\r\n            ...b\r\n        };\r\n    }\r\n    if (a) {\r\n        return a;\r\n    }\r\n    return b;\r\n}\r\nfunction useTheme() {\r\n    return React.useContext(ThemeContext);\r\n}\r\n","/**\r\n * Creates a CSS rule from a theme object.\r\n *\r\n * Useful for scenarios when you want to apply theming statically to a top level elements like `body`.\r\n */ export function createCSSRuleFromTheme(selector, theme) {\r\n    if (theme) {\r\n        const cssVarsAsString = Object.keys(theme).reduce((cssVarRule, cssVar)=>{\r\n            return `${cssVarRule}--${cssVar}: ${theme[cssVar]}; `;\r\n        }, '');\r\n        return `${selector} { ${cssVarsAsString} }`;\r\n    }\r\n    return `${selector} {}`;\r\n}\r\n","import * as React from 'react';\r\nimport { renderFluentProvider_unstable } from './renderFluentProvider';\r\nimport { useFluentProvider_unstable } from './useFluentProvider';\r\nimport { useFluentProviderStyles_unstable } from './useFluentProviderStyles.styles';\r\nimport { useFluentProviderContextValues_unstable } from './useFluentProviderContextValues';\r\nexport const FluentProvider = /*#__PURE__*/ React.forwardRef((props, ref)=>{\r\n    const state = useFluentProvider_unstable(props, ref);\r\n    useFluentProviderStyles_unstable(state);\r\n    const contextValues = useFluentProviderContextValues_unstable(state);\r\n    return renderFluentProvider_unstable(state, contextValues);\r\n});\r\nFluentProvider.displayName = 'FluentProvider';\r\n","import * as React from 'react';\r\nexport function useFluentProviderContextValues_unstable(state) {\r\n    const { applyStylesToPortals, // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    customStyleHooks_unstable, dir, root, targetDocument, theme, themeClassName, // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    overrides_unstable } = state;\r\n    const provider = React.useMemo(()=>({\r\n            dir,\r\n            targetDocument\r\n        }), [\r\n        dir,\r\n        targetDocument\r\n    ]);\r\n    // \"Tooltip\" component mutates an object in this context, instance should be stable\r\n    const [tooltip] = React.useState(()=>({}));\r\n    const iconDirection = React.useMemo(()=>({\r\n            textDirection: dir\r\n        }), [\r\n        dir\r\n    ]);\r\n    return {\r\n        // eslint-disable-next-line @typescript-eslint/naming-convention\r\n        customStyleHooks_unstable,\r\n        // eslint-disable-next-line @typescript-eslint/naming-convention\r\n        overrides_unstable,\r\n        provider,\r\n        textDirection: dir,\r\n        iconDirection,\r\n        tooltip,\r\n        theme,\r\n        themeClassName: applyStylesToPortals ? root.className : themeClassName\r\n    };\r\n}\r\n","  import { jsx as _jsx, jsxs as _jsxs } from \"@fluentui/react-jsx-runtime/jsx-runtime\";\r\nimport { canUseDOM, assertSlots } from '@fluentui/react-utilities';\r\nimport { TextDirectionProvider } from '@griffel/react';\r\nimport { OverridesProvider_unstable as OverridesProvider, Provider_unstable as Provider, TooltipVisibilityProvider_unstable as TooltipVisibilityProvider, ThemeProvider_unstable as ThemeProvider, ThemeClassNameProvider_unstable as ThemeClassNameProvider, CustomStyleHooksProvider_unstable as CustomStyleHooksProvider } from '@fluentui/react-shared-contexts';\r\nimport { IconDirectionContextProvider } from '@fluentui/react-icons/lib/providers';\r\n/**\r\n * Render the final JSX of FluentProvider\r\n */ export const renderFluentProvider_unstable = (state, contextValues)=>{\r\n    assertSlots(state);\r\n    // Typescript (vscode) incorrectly references the FluentProviderProps.customStyleHooks_unstable\r\n    // instead of FluentProviderContextValues.customStyleHooks_unstable and thinks it is\r\n    // Partial<CustomStyleHooksContextValue>, so it needs to be cast to Required<CustomStyleHooksContextValue>\r\n    return /*#__PURE__*/ _jsx(Provider, {\r\n        value: contextValues.provider,\r\n        children: /*#__PURE__*/ _jsx(ThemeProvider, {\r\n            value: contextValues.theme,\r\n            children: /*#__PURE__*/ _jsx(ThemeClassNameProvider, {\r\n                value: contextValues.themeClassName,\r\n                children: /*#__PURE__*/ _jsx(CustomStyleHooksProvider, {\r\n                    value: contextValues.customStyleHooks_unstable,\r\n                    children: /*#__PURE__*/ _jsx(TooltipVisibilityProvider, {\r\n                        value: contextValues.tooltip,\r\n                        children: /*#__PURE__*/ _jsx(TextDirectionProvider, {\r\n                            dir: contextValues.textDirection,\r\n                            children: /*#__PURE__*/ _jsx(IconDirectionContextProvider, {\r\n                                value: contextValues.iconDirection,\r\n                                children: /*#__PURE__*/ _jsx(OverridesProvider, {\r\n                                    value: contextValues.overrides_unstable,\r\n                                    children: /*#__PURE__*/ _jsxs(state.root, {\r\n                                        children: [\r\n                                            canUseDOM() ? null : /*#__PURE__*/ _jsx(\"style\", {\r\n                                                // Using dangerous HTML because react can escape characters\r\n                                                // which can lead to invalid CSS.\r\n                                                // eslint-disable-next-line react/no-danger\r\n                                                dangerouslySetInnerHTML: {\r\n                                                    __html: state.serverStyleProps.cssRule\r\n                                                },\r\n                                                ...state.serverStyleProps.attributes\r\n                                            }),\r\n                                            state.root.children\r\n                                        ]\r\n                                    })\r\n                                })\r\n                            })\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        })\r\n    });\r\n};\r\n","/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ export const grey = {\r\n    '2': '#050505',\r\n    '4': '#0a0a0a',\r\n    '6': '#0f0f0f',\r\n    '8': '#141414',\r\n    '10': '#1a1a1a',\r\n    '12': '#1f1f1f',\r\n    '14': '#242424',\r\n    '16': '#292929',\r\n    '18': '#2e2e2e',\r\n    '20': '#333333',\r\n    '22': '#383838',\r\n    '24': '#3d3d3d',\r\n    '26': '#424242',\r\n    '28': '#474747',\r\n    '30': '#4d4d4d',\r\n    '32': '#525252',\r\n    '34': '#575757',\r\n    '36': '#5c5c5c',\r\n    '38': '#616161',\r\n    '40': '#666666',\r\n    '42': '#6b6b6b',\r\n    '44': '#707070',\r\n    '46': '#757575',\r\n    '48': '#7a7a7a',\r\n    '50': '#808080',\r\n    '52': '#858585',\r\n    '54': '#8a8a8a',\r\n    '56': '#8f8f8f',\r\n    '58': '#949494',\r\n    '60': '#999999',\r\n    '62': '#9e9e9e',\r\n    '64': '#a3a3a3',\r\n    '66': '#a8a8a8',\r\n    '68': '#adadad',\r\n    '70': '#b3b3b3',\r\n    '72': '#b8b8b8',\r\n    '74': '#bdbdbd',\r\n    '76': '#c2c2c2',\r\n    '78': '#c7c7c7',\r\n    '80': '#cccccc',\r\n    '82': '#d1d1d1',\r\n    '84': '#d6d6d6',\r\n    '86': '#dbdbdb',\r\n    '88': '#e0e0e0',\r\n    '90': '#e6e6e6',\r\n    '92': '#ebebeb',\r\n    '94': '#f0f0f0',\r\n    '96': '#f5f5f5',\r\n    '98': '#fafafa'\r\n};\r\nexport const whiteAlpha = {\r\n    '5': 'rgba(255, 255, 255, 0.05)',\r\n    '10': 'rgba(255, 255, 255, 0.1)',\r\n    '20': 'rgba(255, 255, 255, 0.2)',\r\n    '30': 'rgba(255, 255, 255, 0.3)',\r\n    '40': 'rgba(255, 255, 255, 0.4)',\r\n    '50': 'rgba(255, 255, 255, 0.5)',\r\n    '60': 'rgba(255, 255, 255, 0.6)',\r\n    '70': 'rgba(255, 255, 255, 0.7)',\r\n    '80': 'rgba(255, 255, 255, 0.8)',\r\n    '90': 'rgba(255, 255, 255, 0.9)'\r\n};\r\nexport const blackAlpha = {\r\n    '5': 'rgba(0, 0, 0, 0.05)',\r\n    '10': 'rgba(0, 0, 0, 0.1)',\r\n    '20': 'rgba(0, 0, 0, 0.2)',\r\n    '30': 'rgba(0, 0, 0, 0.3)',\r\n    '40': 'rgba(0, 0, 0, 0.4)',\r\n    '50': 'rgba(0, 0, 0, 0.5)',\r\n    '60': 'rgba(0, 0, 0, 0.6)',\r\n    '70': 'rgba(0, 0, 0, 0.7)',\r\n    '80': 'rgba(0, 0, 0, 0.8)',\r\n    '90': 'rgba(0, 0, 0, 0.9)'\r\n};\r\nexport const grey10Alpha = {\r\n    '5': 'rgba(26, 26, 26, 0.05)',\r\n    '10': 'rgba(26, 26, 26, 0.1)',\r\n    '20': 'rgba(26, 26, 26, 0.2)',\r\n    '30': 'rgba(26, 26, 26, 0.3)',\r\n    '40': 'rgba(26, 26, 26, 0.4)',\r\n    '50': 'rgba(26, 26, 26, 0.5)',\r\n    '60': 'rgba(26, 26, 26, 0.6)',\r\n    '70': 'rgba(26, 26, 26, 0.7)',\r\n    '80': 'rgba(26, 26, 26, 0.8)',\r\n    '90': 'rgba(26, 26, 26, 0.9)'\r\n};\r\nexport const grey12Alpha = {\r\n    '5': 'rgba(31, 31, 31, 0.05)',\r\n    '10': 'rgba(31, 31, 31, 0.1)',\r\n    '20': 'rgba(31, 31, 31, 0.2)',\r\n    '30': 'rgba(31, 31, 31, 0.3)',\r\n    '40': 'rgba(31, 31, 31, 0.4)',\r\n    '50': 'rgba(31, 31, 31, 0.5)',\r\n    '60': 'rgba(31, 31, 31, 0.6)',\r\n    '70': 'rgba(31, 31, 31, 0.7)',\r\n    '80': 'rgba(31, 31, 31, 0.8)',\r\n    '90': 'rgba(31, 31, 31, 0.9)'\r\n};\r\nexport const grey14Alpha = {\r\n    '5': 'rgba(36, 36, 36, 0.05)',\r\n    '10': 'rgba(36, 36, 36, 0.1)',\r\n    '20': 'rgba(36, 36, 36, 0.2)',\r\n    '30': 'rgba(36, 36, 36, 0.3)',\r\n    '40': 'rgba(36, 36, 36, 0.4)',\r\n    '50': 'rgba(36, 36, 36, 0.5)',\r\n    '60': 'rgba(36, 36, 36, 0.6)',\r\n    '70': 'rgba(36, 36, 36, 0.7)',\r\n    '80': 'rgba(36, 36, 36, 0.8)',\r\n    '90': 'rgba(36, 36, 36, 0.9)'\r\n};\r\nexport const white = '#ffffff';\r\nexport const black = '#000000';\r\nexport const hcHyperlink = '#ffff00';\r\nexport const hcHighlight = '#1aebff';\r\nexport const hcDisabled = '#3ff23f';\r\nexport const hcCanvas = '#000000';\r\nexport const hcCanvasText = '#ffffff';\r\nexport const hcHighlightText = '#000000';\r\nexport const hcButtonText = '#000000';\r\nexport const hcButtonFace = '#ffffff';\r\nexport const darkRed = {\r\n    shade50: '#130204',\r\n    shade40: '#230308',\r\n    shade30: '#420610',\r\n    shade20: '#590815',\r\n    shade10: '#690a19',\r\n    primary: '#750b1c',\r\n    tint10: '#861b2c',\r\n    tint20: '#962f3f',\r\n    tint30: '#ac4f5e',\r\n    tint40: '#d69ca5',\r\n    tint50: '#e9c7cd',\r\n    tint60: '#f9f0f2'\r\n};\r\nexport const burgundy = {\r\n    shade50: '#1a0607',\r\n    shade40: '#310b0d',\r\n    shade30: '#5c1519',\r\n    shade20: '#7d1d21',\r\n    shade10: '#942228',\r\n    primary: '#a4262c',\r\n    tint10: '#af393e',\r\n    tint20: '#ba4d52',\r\n    tint30: '#c86c70',\r\n    tint40: '#e4afb2',\r\n    tint50: '#f0d3d4',\r\n    tint60: '#fbf4f4'\r\n};\r\nexport const cranberry = {\r\n    shade50: '#200205',\r\n    shade40: '#3b0509',\r\n    shade30: '#6e0811',\r\n    shade20: '#960b18',\r\n    shade10: '#b10e1c',\r\n    primary: '#c50f1f',\r\n    tint10: '#cc2635',\r\n    tint20: '#d33f4c',\r\n    tint30: '#dc626d',\r\n    tint40: '#eeacb2',\r\n    tint50: '#f6d1d5',\r\n    tint60: '#fdf3f4'\r\n};\r\nexport const red = {\r\n    shade50: '#210809',\r\n    shade40: '#3f1011',\r\n    shade30: '#751d1f',\r\n    shade20: '#9f282b',\r\n    shade10: '#bc2f32',\r\n    primary: '#d13438',\r\n    tint10: '#d7494c',\r\n    tint20: '#dc5e62',\r\n    tint30: '#e37d80',\r\n    tint40: '#f1bbbc',\r\n    tint50: '#f8dadb',\r\n    tint60: '#fdf6f6'\r\n};\r\nexport const darkOrange = {\r\n    shade50: '#230900',\r\n    shade40: '#411200',\r\n    shade30: '#7a2101',\r\n    shade20: '#a62d01',\r\n    shade10: '#c43501',\r\n    primary: '#da3b01',\r\n    tint10: '#de501c',\r\n    tint20: '#e36537',\r\n    tint30: '#e9835e',\r\n    tint40: '#f4bfab',\r\n    tint50: '#f9dcd1',\r\n    tint60: '#fdf6f3'\r\n};\r\nexport const bronze = {\r\n    shade50: '#1b0a01',\r\n    shade40: '#321303',\r\n    shade30: '#5e2405',\r\n    shade20: '#7f3107',\r\n    shade10: '#963a08',\r\n    primary: '#a74109',\r\n    tint10: '#b2521e',\r\n    tint20: '#bc6535',\r\n    tint30: '#ca8057',\r\n    tint40: '#e5bba4',\r\n    tint50: '#f1d9cc',\r\n    tint60: '#fbf5f2'\r\n};\r\nexport const pumpkin = {\r\n    shade50: '#200d03',\r\n    shade40: '#3d1805',\r\n    shade30: '#712d09',\r\n    shade20: '#9a3d0c',\r\n    shade10: '#b6480e',\r\n    primary: '#ca5010',\r\n    tint10: '#d06228',\r\n    tint20: '#d77440',\r\n    tint30: '#df8e64',\r\n    tint40: '#efc4ad',\r\n    tint50: '#f7dfd2',\r\n    tint60: '#fdf7f4'\r\n};\r\nexport const orange = {\r\n    shade50: '#271002',\r\n    shade40: '#4a1e04',\r\n    shade30: '#8a3707',\r\n    shade20: '#bc4b09',\r\n    shade10: '#de590b',\r\n    primary: '#f7630c',\r\n    tint10: '#f87528',\r\n    tint20: '#f98845',\r\n    tint30: '#faa06b',\r\n    tint40: '#fdcfb4',\r\n    tint50: '#fee5d7',\r\n    tint60: '#fff9f5'\r\n};\r\nexport const peach = {\r\n    shade50: '#291600',\r\n    shade40: '#4d2a00',\r\n    shade30: '#8f4e00',\r\n    shade20: '#c26a00',\r\n    shade10: '#e67e00',\r\n    primary: '#ff8c00',\r\n    tint10: '#ff9a1f',\r\n    tint20: '#ffa83d',\r\n    tint30: '#ffba66',\r\n    tint40: '#ffddb3',\r\n    tint50: '#ffedd6',\r\n    tint60: '#fffaf5'\r\n};\r\nexport const marigold = {\r\n    shade50: '#251a00',\r\n    shade40: '#463100',\r\n    shade30: '#835b00',\r\n    shade20: '#b27c00',\r\n    shade10: '#d39300',\r\n    primary: '#eaa300',\r\n    tint10: '#edad1c',\r\n    tint20: '#efb839',\r\n    tint30: '#f2c661',\r\n    tint40: '#f9e2ae',\r\n    tint50: '#fcefd3',\r\n    tint60: '#fefbf4'\r\n};\r\nexport const yellow = {\r\n    shade50: '#282400',\r\n    shade40: '#4c4400',\r\n    shade30: '#817400',\r\n    shade20: '#c0ad00',\r\n    shade10: '#e4cc00',\r\n    primary: '#fde300',\r\n    tint10: '#fde61e',\r\n    tint20: '#fdea3d',\r\n    tint30: '#feee66',\r\n    tint40: '#fef7b2',\r\n    tint50: '#fffad6',\r\n    tint60: '#fffef5'\r\n};\r\nexport const gold = {\r\n    shade50: '#1f1900',\r\n    shade40: '#3a2f00',\r\n    shade30: '#6c5700',\r\n    shade20: '#937700',\r\n    shade10: '#ae8c00',\r\n    primary: '#c19c00',\r\n    tint10: '#c8a718',\r\n    tint20: '#d0b232',\r\n    tint30: '#dac157',\r\n    tint40: '#ecdfa5',\r\n    tint50: '#f5eece',\r\n    tint60: '#fdfbf2'\r\n};\r\nexport const brass = {\r\n    shade50: '#181202',\r\n    shade40: '#2e2103',\r\n    shade30: '#553e06',\r\n    shade20: '#745408',\r\n    shade10: '#89640a',\r\n    primary: '#986f0b',\r\n    tint10: '#a47d1e',\r\n    tint20: '#b18c34',\r\n    tint30: '#c1a256',\r\n    tint40: '#e0cea2',\r\n    tint50: '#efe4cb',\r\n    tint60: '#fbf8f2'\r\n};\r\nexport const brown = {\r\n    shade50: '#170e07',\r\n    shade40: '#2b1a0e',\r\n    shade30: '#50301a',\r\n    shade20: '#6c4123',\r\n    shade10: '#804d29',\r\n    primary: '#8e562e',\r\n    tint10: '#9c663f',\r\n    tint20: '#a97652',\r\n    tint30: '#bb8f6f',\r\n    tint40: '#ddc3b0',\r\n    tint50: '#edded3',\r\n    tint60: '#faf7f4'\r\n};\r\nexport const darkBrown = {\r\n    shade50: '#0c0704',\r\n    shade40: '#170c08',\r\n    shade30: '#2b1710',\r\n    shade20: '#3a1f15',\r\n    shade10: '#452519',\r\n    primary: '#4d291c',\r\n    tint10: '#623a2b',\r\n    tint20: '#784d3e',\r\n    tint30: '#946b5c',\r\n    tint40: '#caada3',\r\n    tint50: '#e3d2cb',\r\n    tint60: '#f8f3f2'\r\n};\r\nexport const lime = {\r\n    shade50: '#121b06',\r\n    shade40: '#23330b',\r\n    shade30: '#405f14',\r\n    shade20: '#57811b',\r\n    shade10: '#689920',\r\n    primary: '#73aa24',\r\n    tint10: '#81b437',\r\n    tint20: '#90be4c',\r\n    tint30: '#a4cc6c',\r\n    tint40: '#cfe5af',\r\n    tint50: '#e5f1d3',\r\n    tint60: '#f8fcf4'\r\n};\r\nexport const forest = {\r\n    shade50: '#0c1501',\r\n    shade40: '#162702',\r\n    shade30: '#294903',\r\n    shade20: '#376304',\r\n    shade10: '#427505',\r\n    primary: '#498205',\r\n    tint10: '#599116',\r\n    tint20: '#6ba02b',\r\n    tint30: '#85b44c',\r\n    tint40: '#bdd99b',\r\n    tint50: '#dbebc7',\r\n    tint60: '#f6faf0'\r\n};\r\nexport const seafoam = {\r\n    shade50: '#002111',\r\n    shade40: '#003d20',\r\n    shade30: '#00723b',\r\n    shade20: '#009b51',\r\n    shade10: '#00b85f',\r\n    primary: '#00cc6a',\r\n    tint10: '#19d279',\r\n    tint20: '#34d889',\r\n    tint30: '#5ae0a0',\r\n    tint40: '#a8f0cd',\r\n    tint50: '#cff7e4',\r\n    tint60: '#f3fdf8'\r\n};\r\nexport const lightGreen = {\r\n    shade50: '#031a02',\r\n    shade40: '#063004',\r\n    shade30: '#0b5a08',\r\n    shade20: '#0e7a0b',\r\n    shade10: '#11910d',\r\n    primary: '#13a10e',\r\n    tint10: '#27ac22',\r\n    tint20: '#3db838',\r\n    tint30: '#5ec75a',\r\n    tint40: '#a7e3a5',\r\n    tint50: '#cef0cd',\r\n    tint60: '#f2fbf2'\r\n};\r\nexport const green = {\r\n    shade50: '#031403',\r\n    shade40: '#052505',\r\n    shade30: '#094509',\r\n    shade20: '#0c5e0c',\r\n    shade10: '#0e700e',\r\n    primary: '#107c10',\r\n    tint10: '#218c21',\r\n    tint20: '#359b35',\r\n    tint30: '#54b054',\r\n    tint40: '#9fd89f',\r\n    tint50: '#c9eac9',\r\n    tint60: '#f1faf1'\r\n};\r\nexport const darkGreen = {\r\n    shade50: '#021102',\r\n    shade40: '#032003',\r\n    shade30: '#063b06',\r\n    shade20: '#085108',\r\n    shade10: '#0a5f0a',\r\n    primary: '#0b6a0b',\r\n    tint10: '#1a7c1a',\r\n    tint20: '#2d8e2d',\r\n    tint30: '#4da64d',\r\n    tint40: '#9ad29a',\r\n    tint50: '#c6e7c6',\r\n    tint60: '#f0f9f0'\r\n};\r\nexport const lightTeal = {\r\n    shade50: '#001d1f',\r\n    shade40: '#00373a',\r\n    shade30: '#00666d',\r\n    shade20: '#008b94',\r\n    shade10: '#00a5af',\r\n    primary: '#00b7c3',\r\n    tint10: '#18bfca',\r\n    tint20: '#32c8d1',\r\n    tint30: '#58d3db',\r\n    tint40: '#a6e9ed',\r\n    tint50: '#cef3f5',\r\n    tint60: '#f2fcfd'\r\n};\r\nexport const teal = {\r\n    shade50: '#001516',\r\n    shade40: '#012728',\r\n    shade30: '#02494c',\r\n    shade20: '#026467',\r\n    shade10: '#037679',\r\n    primary: '#038387',\r\n    tint10: '#159195',\r\n    tint20: '#2aa0a4',\r\n    tint30: '#4cb4b7',\r\n    tint40: '#9bd9db',\r\n    tint50: '#c7ebec',\r\n    tint60: '#f0fafa'\r\n};\r\nexport const darkTeal = {\r\n    shade50: '#001010',\r\n    shade40: '#001f1f',\r\n    shade30: '#003939',\r\n    shade20: '#004e4e',\r\n    shade10: '#005c5c',\r\n    primary: '#006666',\r\n    tint10: '#0e7878',\r\n    tint20: '#218b8b',\r\n    tint30: '#41a3a3',\r\n    tint40: '#92d1d1',\r\n    tint50: '#c2e7e7',\r\n    tint60: '#eff9f9'\r\n};\r\nexport const cyan = {\r\n    shade50: '#00181e',\r\n    shade40: '#002e38',\r\n    shade30: '#005669',\r\n    shade20: '#00748f',\r\n    shade10: '#008aa9',\r\n    primary: '#0099bc',\r\n    tint10: '#18a4c4',\r\n    tint20: '#31afcc',\r\n    tint30: '#56bfd7',\r\n    tint40: '#a4deeb',\r\n    tint50: '#cdedf4',\r\n    tint60: '#f2fafc'\r\n};\r\nexport const steel = {\r\n    shade50: '#000f12',\r\n    shade40: '#001b22',\r\n    shade30: '#00333f',\r\n    shade20: '#004555',\r\n    shade10: '#005265',\r\n    primary: '#005b70',\r\n    tint10: '#0f6c81',\r\n    tint20: '#237d92',\r\n    tint30: '#4496a9',\r\n    tint40: '#94c8d4',\r\n    tint50: '#c3e1e8',\r\n    tint60: '#eff7f9'\r\n};\r\nexport const lightBlue = {\r\n    shade50: '#091823',\r\n    shade40: '#112d42',\r\n    shade30: '#20547c',\r\n    shade20: '#2c72a8',\r\n    shade10: '#3487c7',\r\n    primary: '#3a96dd',\r\n    tint10: '#4fa1e1',\r\n    tint20: '#65ade5',\r\n    tint30: '#83bdeb',\r\n    tint40: '#bfddf5',\r\n    tint50: '#dcedfa',\r\n    tint60: '#f6fafe'\r\n};\r\nexport const blue = {\r\n    shade50: '#001322',\r\n    shade40: '#002440',\r\n    shade30: '#004377',\r\n    shade20: '#005ba1',\r\n    shade10: '#006cbf',\r\n    primary: '#0078d4',\r\n    tint10: '#1a86d9',\r\n    tint20: '#3595de',\r\n    tint30: '#5caae5',\r\n    tint40: '#a9d3f2',\r\n    tint50: '#d0e7f8',\r\n    tint60: '#f3f9fd'\r\n};\r\nexport const royalBlue = {\r\n    shade50: '#000c16',\r\n    shade40: '#00172a',\r\n    shade30: '#002c4e',\r\n    shade20: '#003b6a',\r\n    shade10: '#00467e',\r\n    primary: '#004e8c',\r\n    tint10: '#125e9a',\r\n    tint20: '#286fa8',\r\n    tint30: '#4a89ba',\r\n    tint40: '#9abfdc',\r\n    tint50: '#c7dced',\r\n    tint60: '#f0f6fa'\r\n};\r\nexport const darkBlue = {\r\n    shade50: '#000910',\r\n    shade40: '#00111f',\r\n    shade30: '#002039',\r\n    shade20: '#002b4e',\r\n    shade10: '#00335c',\r\n    primary: '#003966',\r\n    tint10: '#0e4a78',\r\n    tint20: '#215c8b',\r\n    tint30: '#4178a3',\r\n    tint40: '#92b5d1',\r\n    tint50: '#c2d6e7',\r\n    tint60: '#eff4f9'\r\n};\r\nexport const cornflower = {\r\n    shade50: '#0d1126',\r\n    shade40: '#182047',\r\n    shade30: '#2c3c85',\r\n    shade20: '#3c51b4',\r\n    shade10: '#4760d5',\r\n    primary: '#4f6bed',\r\n    tint10: '#637cef',\r\n    tint20: '#778df1',\r\n    tint30: '#93a4f4',\r\n    tint40: '#c8d1fa',\r\n    tint50: '#e1e6fc',\r\n    tint60: '#f7f9fe'\r\n};\r\nexport const navy = {\r\n    shade50: '#00061d',\r\n    shade40: '#000c36',\r\n    shade30: '#001665',\r\n    shade20: '#001e89',\r\n    shade10: '#0023a2',\r\n    primary: '#0027b4',\r\n    tint10: '#173bbd',\r\n    tint20: '#3050c6',\r\n    tint30: '#546fd2',\r\n    tint40: '#a3b2e8',\r\n    tint50: '#ccd5f3',\r\n    tint60: '#f2f4fc'\r\n};\r\nexport const lavender = {\r\n    shade50: '#120f25',\r\n    shade40: '#221d46',\r\n    shade30: '#3f3682',\r\n    shade20: '#5649b0',\r\n    shade10: '#6656d1',\r\n    primary: '#7160e8',\r\n    tint10: '#8172eb',\r\n    tint20: '#9184ee',\r\n    tint30: '#a79cf1',\r\n    tint40: '#d2ccf8',\r\n    tint50: '#e7e4fb',\r\n    tint60: '#f9f8fe'\r\n};\r\nexport const purple = {\r\n    shade50: '#0f0717',\r\n    shade40: '#1c0e2b',\r\n    shade30: '#341a51',\r\n    shade20: '#46236e',\r\n    shade10: '#532982',\r\n    primary: '#5c2e91',\r\n    tint10: '#6b3f9e',\r\n    tint20: '#7c52ab',\r\n    tint30: '#9470bd',\r\n    tint40: '#c6b1de',\r\n    tint50: '#e0d3ed',\r\n    tint60: '#f7f4fb'\r\n};\r\nexport const darkPurple = {\r\n    shade50: '#0a0411',\r\n    shade40: '#130820',\r\n    shade30: '#240f3c',\r\n    shade20: '#311552',\r\n    shade10: '#3a1861',\r\n    primary: '#401b6c',\r\n    tint10: '#512b7e',\r\n    tint20: '#633e8f',\r\n    tint30: '#7e5ca7',\r\n    tint40: '#b9a3d3',\r\n    tint50: '#d8cce7',\r\n    tint60: '#f5f2f9'\r\n};\r\nexport const orchid = {\r\n    shade50: '#16101d',\r\n    shade40: '#281e37',\r\n    shade30: '#4c3867',\r\n    shade20: '#674c8c',\r\n    shade10: '#795aa6',\r\n    primary: '#8764b8',\r\n    tint10: '#9373c0',\r\n    tint20: '#a083c9',\r\n    tint30: '#b29ad4',\r\n    tint40: '#d7caea',\r\n    tint50: '#e9e2f4',\r\n    tint60: '#f9f8fc'\r\n};\r\nexport const grape = {\r\n    shade50: '#160418',\r\n    shade40: '#29072e',\r\n    shade30: '#4c0d55',\r\n    shade20: '#671174',\r\n    shade10: '#7a1589',\r\n    primary: '#881798',\r\n    tint10: '#952aa4',\r\n    tint20: '#a33fb1',\r\n    tint30: '#b55fc1',\r\n    tint40: '#d9a7e0',\r\n    tint50: '#eaceef',\r\n    tint60: '#faf2fb'\r\n};\r\nexport const berry = {\r\n    shade50: '#1f091d',\r\n    shade40: '#3a1136',\r\n    shade30: '#6d2064',\r\n    shade20: '#932b88',\r\n    shade10: '#af33a1',\r\n    primary: '#c239b3',\r\n    tint10: '#c94cbc',\r\n    tint20: '#d161c4',\r\n    tint30: '#da7ed0',\r\n    tint40: '#edbbe7',\r\n    tint50: '#f5daf2',\r\n    tint60: '#fdf5fc'\r\n};\r\nexport const lilac = {\r\n    shade50: '#1c0b1f',\r\n    shade40: '#35153a',\r\n    shade30: '#63276d',\r\n    shade20: '#863593',\r\n    shade10: '#9f3faf',\r\n    primary: '#b146c2',\r\n    tint10: '#ba58c9',\r\n    tint20: '#c36bd1',\r\n    tint30: '#cf87da',\r\n    tint40: '#e6bfed',\r\n    tint50: '#f2dcf5',\r\n    tint60: '#fcf6fd'\r\n};\r\nexport const pink = {\r\n    shade50: '#24091b',\r\n    shade40: '#441232',\r\n    shade30: '#80215d',\r\n    shade20: '#ad2d7e',\r\n    shade10: '#cd3595',\r\n    primary: '#e43ba6',\r\n    tint10: '#e750b0',\r\n    tint20: '#ea66ba',\r\n    tint30: '#ef85c8',\r\n    tint40: '#f7c0e3',\r\n    tint50: '#fbddf0',\r\n    tint60: '#fef6fb'\r\n};\r\nexport const hotPink = {\r\n    shade50: '#240016',\r\n    shade40: '#44002a',\r\n    shade30: '#7f004e',\r\n    shade20: '#ad006a',\r\n    shade10: '#cc007e',\r\n    primary: '#e3008c',\r\n    tint10: '#e61c99',\r\n    tint20: '#ea38a6',\r\n    tint30: '#ee5fb7',\r\n    tint40: '#f7adda',\r\n    tint50: '#fbd2eb',\r\n    tint60: '#fef4fa'\r\n};\r\nexport const magenta = {\r\n    shade50: '#1f0013',\r\n    shade40: '#390024',\r\n    shade30: '#6b0043',\r\n    shade20: '#91005a',\r\n    shade10: '#ac006b',\r\n    primary: '#bf0077',\r\n    tint10: '#c71885',\r\n    tint20: '#ce3293',\r\n    tint30: '#d957a8',\r\n    tint40: '#eca5d1',\r\n    tint50: '#f5cee6',\r\n    tint60: '#fcf2f9'\r\n};\r\nexport const plum = {\r\n    shade50: '#13000c',\r\n    shade40: '#240017',\r\n    shade30: '#43002b',\r\n    shade20: '#5a003b',\r\n    shade10: '#6b0045',\r\n    primary: '#77004d',\r\n    tint10: '#87105d',\r\n    tint20: '#98246f',\r\n    tint30: '#ad4589',\r\n    tint40: '#d696c0',\r\n    tint50: '#e9c4dc',\r\n    tint60: '#faf0f6'\r\n};\r\nexport const beige = {\r\n    shade50: '#141313',\r\n    shade40: '#252323',\r\n    shade30: '#444241',\r\n    shade20: '#5d5958',\r\n    shade10: '#6e6968',\r\n    primary: '#7a7574',\r\n    tint10: '#8a8584',\r\n    tint20: '#9a9594',\r\n    tint30: '#afabaa',\r\n    tint40: '#d7d4d4',\r\n    tint50: '#eae8e8',\r\n    tint60: '#faf9f9'\r\n};\r\nexport const mink = {\r\n    shade50: '#0f0e0e',\r\n    shade40: '#1c1b1a',\r\n    shade30: '#343231',\r\n    shade20: '#474443',\r\n    shade10: '#54514f',\r\n    primary: '#5d5a58',\r\n    tint10: '#706d6b',\r\n    tint20: '#84817e',\r\n    tint30: '#9e9b99',\r\n    tint40: '#cecccb',\r\n    tint50: '#e5e4e3',\r\n    tint60: '#f8f8f8'\r\n};\r\nexport const silver = {\r\n    shade50: '#151818',\r\n    shade40: '#282d2e',\r\n    shade30: '#4a5356',\r\n    shade20: '#657174',\r\n    shade10: '#78868a',\r\n    primary: '#859599',\r\n    tint10: '#92a1a5',\r\n    tint20: '#a0aeb1',\r\n    tint30: '#b3bfc2',\r\n    tint40: '#d8dfe0',\r\n    tint50: '#eaeeef',\r\n    tint60: '#fafbfb'\r\n};\r\nexport const platinum = {\r\n    shade50: '#111314',\r\n    shade40: '#1f2426',\r\n    shade30: '#3b4447',\r\n    shade20: '#505c60',\r\n    shade10: '#5f6d71',\r\n    primary: '#69797e',\r\n    tint10: '#79898d',\r\n    tint20: '#89989d',\r\n    tint30: '#a0adb2',\r\n    tint40: '#cdd6d8',\r\n    tint50: '#e4e9ea',\r\n    tint60: '#f8f9fa'\r\n};\r\nexport const anchor = {\r\n    shade50: '#090a0b',\r\n    shade40: '#111315',\r\n    shade30: '#202427',\r\n    shade20: '#2b3135',\r\n    shade10: '#333a3f',\r\n    primary: '#394146',\r\n    tint10: '#4d565c',\r\n    tint20: '#626c72',\r\n    tint30: '#808a90',\r\n    tint40: '#bcc3c7',\r\n    tint50: '#dbdfe1',\r\n    tint60: '#f6f7f8'\r\n};\r\nexport const charcoal = {\r\n    shade50: '#090909',\r\n    shade40: '#111111',\r\n    shade30: '#202020',\r\n    shade20: '#2b2b2b',\r\n    shade10: '#333333',\r\n    primary: '#393939',\r\n    tint10: '#515151',\r\n    tint20: '#686868',\r\n    tint30: '#888888',\r\n    tint40: '#c4c4c4',\r\n    tint50: '#dfdfdf',\r\n    tint60: '#f7f7f7'\r\n};\r\n","import { red, green, darkOrange, yellow, berry, lightGreen, marigold, darkRed, cranberry, pumpkin, peach, gold, brass, brown, forest, seafoam, darkGreen, lightTeal, teal, steel, blue, royalBlue, cornflower, navy, lavender, purple, grape, lilac, pink, magenta, plum, beige, mink, platinum, anchor, orange } from \"./colors.js\";\r\nexport const statusSharedColors = {\r\n    red,\r\n    green,\r\n    darkOrange,\r\n    yellow,\r\n    berry,\r\n    lightGreen,\r\n    marigold\r\n};\r\nexport const personaSharedColors = {\r\n    darkRed,\r\n    cranberry,\r\n    pumpkin,\r\n    peach,\r\n    gold,\r\n    brass,\r\n    brown,\r\n    forest,\r\n    seafoam,\r\n    darkGreen,\r\n    lightTeal,\r\n    teal,\r\n    steel,\r\n    blue,\r\n    royalBlue,\r\n    cornflower,\r\n    navy,\r\n    lavender,\r\n    purple,\r\n    grape,\r\n    lilac,\r\n    pink,\r\n    magenta,\r\n    plum,\r\n    beige,\r\n    mink,\r\n    platinum,\r\n    anchor\r\n};\r\nexport const mappedStatusColors = {\r\n    cranberry,\r\n    green,\r\n    orange\r\n};\r\n","export const statusColorMapping = {\r\n    success: 'green',\r\n    warning: 'orange',\r\n    danger: 'cranberry'\r\n};\r\n","import { statusSharedColors, personaSharedColors, mappedStatusColors } from \"../global/colorPalette.js\";\r\nimport { statusSharedColorNames, personaSharedColorNames } from \"../sharedColorNames.js\";\r\nimport { statusColorMapping } from \"../statusColorMapping.js\";\r\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor)=>{\r\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\r\n    const sharedColorTokens = {\r\n        [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].tint60,\r\n        [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].tint40,\r\n        [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,\r\n        [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].shade10,\r\n        [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].shade30,\r\n        [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].primary,\r\n        [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].primary,\r\n        [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].tint40,\r\n        [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].primary\r\n    };\r\n    return Object.assign(acc, sharedColorTokens);\r\n}, {});\r\n// one-off patch for yellow\r\nstatusColorPaletteTokens.colorPaletteYellowForeground1 = statusSharedColors.yellow.shade30;\r\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = statusSharedColors.red.tint20;\r\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = statusSharedColors.green.tint20;\r\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = statusSharedColors.yellow.tint40;\r\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor)=>{\r\n    const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\r\n    const sharedColorTokens = {\r\n        [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].tint40,\r\n        [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].shade30,\r\n        [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].primary\r\n    };\r\n    return Object.assign(acc, sharedColorTokens);\r\n}, {});\r\nexport const colorPaletteTokens = {\r\n    ...statusColorPaletteTokens,\r\n    ...personaColorPaletteTokens\r\n};\r\nexport const colorStatusTokens = Object.entries(statusColorMapping).reduce((acc, [statusColor, sharedColor])=>{\r\n    const color = statusColor.slice(0, 1).toUpperCase() + statusColor.slice(1);\r\n    // TODO: double check the mapping with design\r\n    const statusColorTokens = {\r\n        [`colorStatus${color}Background1`]: mappedStatusColors[sharedColor].tint60,\r\n        [`colorStatus${color}Background2`]: mappedStatusColors[sharedColor].tint40,\r\n        [`colorStatus${color}Background3`]: mappedStatusColors[sharedColor].primary,\r\n        [`colorStatus${color}Foreground1`]: mappedStatusColors[sharedColor].shade10,\r\n        [`colorStatus${color}Foreground2`]: mappedStatusColors[sharedColor].shade30,\r\n        [`colorStatus${color}Foreground3`]: mappedStatusColors[sharedColor].primary,\r\n        [`colorStatus${color}ForegroundInverted`]: mappedStatusColors[sharedColor].tint30,\r\n        [`colorStatus${color}BorderActive`]: mappedStatusColors[sharedColor].primary,\r\n        [`colorStatus${color}Border1`]: mappedStatusColors[sharedColor].tint40,\r\n        [`colorStatus${color}Border2`]: mappedStatusColors[sharedColor].primary\r\n    };\r\n    return Object.assign(acc, statusColorTokens);\r\n}, {});\r\n// one-off overrides for colorStatus tokens\r\ncolorStatusTokens.colorStatusDangerBackground3Hover = mappedStatusColors[statusColorMapping.danger].shade10;\r\ncolorStatusTokens.colorStatusDangerBackground3Pressed = mappedStatusColors[statusColorMapping.danger].shade20;\r\ncolorStatusTokens.colorStatusWarningForeground1 = mappedStatusColors[statusColorMapping.warning].shade20;\r\ncolorStatusTokens.colorStatusWarningForeground3 = mappedStatusColors[statusColorMapping.warning].shade20;\r\ncolorStatusTokens.colorStatusWarningBorder2 = mappedStatusColors[statusColorMapping.warning].shade20;\r\n","/* Names of colors used in shared color palette alias tokens for status. */ export const statusSharedColorNames = [\r\n    'red',\r\n    'green',\r\n    'darkOrange',\r\n    'yellow',\r\n    'berry',\r\n    'lightGreen',\r\n    'marigold'\r\n];\r\n/* Names of colors used in shared color palette alias tokens for persona. */ export const personaSharedColorNames = [\r\n    'darkRed',\r\n    'cranberry',\r\n    'pumpkin',\r\n    'peach',\r\n    'gold',\r\n    'brass',\r\n    'brown',\r\n    'forest',\r\n    'seafoam',\r\n    'darkGreen',\r\n    'lightTeal',\r\n    'teal',\r\n    'steel',\r\n    'blue',\r\n    'royalBlue',\r\n    'cornflower',\r\n    'navy',\r\n    'lavender',\r\n    'purple',\r\n    'grape',\r\n    'lilac',\r\n    'pink',\r\n    'magenta',\r\n    'plum',\r\n    'beige',\r\n    'mink',\r\n    'platinum',\r\n    'anchor'\r\n];\r\n/* List of global colors which semantic alias status tokens map to */ export const mappedStatusColorNames = [\r\n    'cranberry',\r\n    'green',\r\n    'orange'\r\n];\r\n/* Names of colors not used in alias tokens but produced by token pipeline as global color tokens. */ export const unusedSharedColorNames = [\r\n    'burgundy',\r\n    'bronze',\r\n    'orange',\r\n    'darkBrown',\r\n    'lime',\r\n    'darkTeal',\r\n    'cyan',\r\n    'lightBlue',\r\n    'darkBlue',\r\n    'darkPurple',\r\n    'orchid',\r\n    'hotPink',\r\n    'silver',\r\n    'charcoal'\r\n];\r\n","/* !!! DO NOT EDIT !!! */ /* This file has been generated by the token pipeline */ import { black, blackAlpha, grey, white, whiteAlpha } from \"../global/colors.js\";\r\nexport const generateColorTokens = (brand)=>({\r\n        colorNeutralForeground1: grey[14],\r\n        colorNeutralForeground1Hover: grey[14],\r\n        colorNeutralForeground1Pressed: grey[14],\r\n        colorNeutralForeground1Selected: grey[14],\r\n        colorNeutralForeground2: grey[26],\r\n        colorNeutralForeground2Hover: grey[14],\r\n        colorNeutralForeground2Pressed: grey[14],\r\n        colorNeutralForeground2Selected: grey[14],\r\n        colorNeutralForeground2BrandHover: brand[80],\r\n        colorNeutralForeground2BrandPressed: brand[70],\r\n        colorNeutralForeground2BrandSelected: brand[80],\r\n        colorNeutralForeground3: grey[38],\r\n        colorNeutralForeground3Hover: grey[26],\r\n        colorNeutralForeground3Pressed: grey[26],\r\n        colorNeutralForeground3Selected: grey[26],\r\n        colorNeutralForeground3BrandHover: brand[80],\r\n        colorNeutralForeground3BrandPressed: brand[70],\r\n        colorNeutralForeground3BrandSelected: brand[80],\r\n        colorNeutralForeground4: grey[44],\r\n        colorNeutralForegroundDisabled: grey[74],\r\n        colorNeutralForegroundInvertedDisabled: whiteAlpha[40],\r\n        colorBrandForegroundLink: brand[70],\r\n        colorBrandForegroundLinkHover: brand[60],\r\n        colorBrandForegroundLinkPressed: brand[40],\r\n        colorBrandForegroundLinkSelected: brand[70],\r\n        colorNeutralForeground2Link: grey[26],\r\n        colorNeutralForeground2LinkHover: grey[14],\r\n        colorNeutralForeground2LinkPressed: grey[14],\r\n        colorNeutralForeground2LinkSelected: grey[14],\r\n        colorCompoundBrandForeground1: brand[80],\r\n        colorCompoundBrandForeground1Hover: brand[70],\r\n        colorCompoundBrandForeground1Pressed: brand[60],\r\n        colorBrandForeground1: brand[80],\r\n        colorBrandForeground2: brand[70],\r\n        colorBrandForeground2Hover: brand[60],\r\n        colorBrandForeground2Pressed: brand[30],\r\n        colorNeutralForeground1Static: grey[14],\r\n        colorNeutralForegroundStaticInverted: white,\r\n        colorNeutralForegroundInverted: white,\r\n        colorNeutralForegroundInvertedHover: white,\r\n        colorNeutralForegroundInvertedPressed: white,\r\n        colorNeutralForegroundInvertedSelected: white,\r\n        colorNeutralForegroundInverted2: white,\r\n        colorNeutralForegroundOnBrand: white,\r\n        colorNeutralForegroundInvertedLink: white,\r\n        colorNeutralForegroundInvertedLinkHover: white,\r\n        colorNeutralForegroundInvertedLinkPressed: white,\r\n        colorNeutralForegroundInvertedLinkSelected: white,\r\n        colorBrandForegroundInverted: brand[100],\r\n        colorBrandForegroundInvertedHover: brand[110],\r\n        colorBrandForegroundInvertedPressed: brand[100],\r\n        colorBrandForegroundOnLight: brand[80],\r\n        colorBrandForegroundOnLightHover: brand[70],\r\n        colorBrandForegroundOnLightPressed: brand[50],\r\n        colorBrandForegroundOnLightSelected: brand[60],\r\n        colorNeutralBackground1: white,\r\n        colorNeutralBackground1Hover: grey[96],\r\n        colorNeutralBackground1Pressed: grey[88],\r\n        colorNeutralBackground1Selected: grey[92],\r\n        colorNeutralBackground2: grey[98],\r\n        colorNeutralBackground2Hover: grey[94],\r\n        colorNeutralBackground2Pressed: grey[86],\r\n        colorNeutralBackground2Selected: grey[90],\r\n        colorNeutralBackground3: grey[96],\r\n        colorNeutralBackground3Hover: grey[92],\r\n        colorNeutralBackground3Pressed: grey[84],\r\n        colorNeutralBackground3Selected: grey[88],\r\n        colorNeutralBackground4: grey[94],\r\n        colorNeutralBackground4Hover: grey[98],\r\n        colorNeutralBackground4Pressed: grey[96],\r\n        colorNeutralBackground4Selected: white,\r\n        colorNeutralBackground5: grey[92],\r\n        colorNeutralBackground5Hover: grey[96],\r\n        colorNeutralBackground5Pressed: grey[94],\r\n        colorNeutralBackground5Selected: grey[98],\r\n        colorNeutralBackground6: grey[90],\r\n        colorNeutralBackgroundInverted: grey[16],\r\n        colorNeutralBackgroundStatic: grey[20],\r\n        colorNeutralBackgroundAlpha: whiteAlpha[50],\r\n        colorNeutralBackgroundAlpha2: whiteAlpha[80],\r\n        colorSubtleBackground: 'transparent',\r\n        colorSubtleBackgroundHover: grey[96],\r\n        colorSubtleBackgroundPressed: grey[88],\r\n        colorSubtleBackgroundSelected: grey[92],\r\n        colorSubtleBackgroundLightAlphaHover: whiteAlpha[70],\r\n        colorSubtleBackgroundLightAlphaPressed: whiteAlpha[50],\r\n        colorSubtleBackgroundLightAlphaSelected: 'transparent',\r\n        colorSubtleBackgroundInverted: 'transparent',\r\n        colorSubtleBackgroundInvertedHover: blackAlpha[10],\r\n        colorSubtleBackgroundInvertedPressed: blackAlpha[30],\r\n        colorSubtleBackgroundInvertedSelected: blackAlpha[20],\r\n        colorTransparentBackground: 'transparent',\r\n        colorTransparentBackgroundHover: 'transparent',\r\n        colorTransparentBackgroundPressed: 'transparent',\r\n        colorTransparentBackgroundSelected: 'transparent',\r\n        colorNeutralBackgroundDisabled: grey[94],\r\n        colorNeutralBackgroundInvertedDisabled: whiteAlpha[10],\r\n        colorNeutralStencil1: grey[90],\r\n        colorNeutralStencil2: grey[98],\r\n        colorNeutralStencil1Alpha: blackAlpha[10],\r\n        colorNeutralStencil2Alpha: blackAlpha[5],\r\n        colorBackgroundOverlay: blackAlpha[40],\r\n        colorScrollbarOverlay: blackAlpha[50],\r\n        colorBrandBackground: brand[80],\r\n        colorBrandBackgroundHover: brand[70],\r\n        colorBrandBackgroundPressed: brand[40],\r\n        colorBrandBackgroundSelected: brand[60],\r\n        colorCompoundBrandBackground: brand[80],\r\n        colorCompoundBrandBackgroundHover: brand[70],\r\n        colorCompoundBrandBackgroundPressed: brand[60],\r\n        colorBrandBackgroundStatic: brand[80],\r\n        colorBrandBackground2: brand[160],\r\n        colorBrandBackground2Hover: brand[150],\r\n        colorBrandBackground2Pressed: brand[130],\r\n        colorBrandBackground3Static: brand[60],\r\n        colorBrandBackground4Static: brand[40],\r\n        colorBrandBackgroundInverted: white,\r\n        colorBrandBackgroundInvertedHover: brand[160],\r\n        colorBrandBackgroundInvertedPressed: brand[140],\r\n        colorBrandBackgroundInvertedSelected: brand[150],\r\n        colorNeutralCardBackground: grey[98],\r\n        colorNeutralCardBackgroundHover: white,\r\n        colorNeutralCardBackgroundPressed: grey[96],\r\n        colorNeutralCardBackgroundSelected: grey[92],\r\n        colorNeutralCardBackgroundDisabled: grey[94],\r\n        colorNeutralStrokeAccessible: grey[38],\r\n        colorNeutralStrokeAccessibleHover: grey[34],\r\n        colorNeutralStrokeAccessiblePressed: grey[30],\r\n        colorNeutralStrokeAccessibleSelected: brand[80],\r\n        colorNeutralStroke1: grey[82],\r\n        colorNeutralStroke1Hover: grey[78],\r\n        colorNeutralStroke1Pressed: grey[70],\r\n        colorNeutralStroke1Selected: grey[74],\r\n        colorNeutralStroke2: grey[88],\r\n        colorNeutralStroke3: grey[94],\r\n        colorNeutralStrokeSubtle: grey[88],\r\n        colorNeutralStrokeOnBrand: white,\r\n        colorNeutralStrokeOnBrand2: white,\r\n        colorNeutralStrokeOnBrand2Hover: white,\r\n        colorNeutralStrokeOnBrand2Pressed: white,\r\n        colorNeutralStrokeOnBrand2Selected: white,\r\n        colorBrandStroke1: brand[80],\r\n        colorBrandStroke2: brand[140],\r\n        colorBrandStroke2Hover: brand[120],\r\n        colorBrandStroke2Pressed: brand[80],\r\n        colorBrandStroke2Contrast: brand[140],\r\n        colorCompoundBrandStroke: brand[80],\r\n        colorCompoundBrandStrokeHover: brand[70],\r\n        colorCompoundBrandStrokePressed: brand[60],\r\n        colorNeutralStrokeDisabled: grey[88],\r\n        colorNeutralStrokeInvertedDisabled: whiteAlpha[40],\r\n        colorTransparentStroke: 'transparent',\r\n        colorTransparentStrokeInteractive: 'transparent',\r\n        colorTransparentStrokeDisabled: 'transparent',\r\n        colorNeutralStrokeAlpha: blackAlpha[5],\r\n        colorNeutralStrokeAlpha2: whiteAlpha[20],\r\n        colorStrokeFocus1: white,\r\n        colorStrokeFocus2: black,\r\n        colorNeutralShadowAmbient: 'rgba(0,0,0,0.12)',\r\n        colorNeutralShadowKey: 'rgba(0,0,0,0.14)',\r\n        colorNeutralShadowAmbientLighter: 'rgba(0,0,0,0.06)',\r\n        colorNeutralShadowKeyLighter: 'rgba(0,0,0,0.07)',\r\n        colorNeutralShadowAmbientDarker: 'rgba(0,0,0,0.20)',\r\n        colorNeutralShadowKeyDarker: 'rgba(0,0,0,0.24)',\r\n        colorBrandShadowAmbient: 'rgba(0,0,0,0.30)',\r\n        colorBrandShadowKey: 'rgba(0,0,0,0.25)'\r\n    });\r\n","export const borderRadius = {\r\n    borderRadiusNone: '0',\r\n    borderRadiusSmall: '2px',\r\n    borderRadiusMedium: '4px',\r\n    borderRadiusLarge: '6px',\r\n    borderRadiusXLarge: '8px',\r\n    borderRadiusCircular: '10000px'\r\n};\r\n","export const fontSizes = {\r\n    fontSizeBase100: '10px',\r\n    fontSizeBase200: '12px',\r\n    fontSizeBase300: '14px',\r\n    fontSizeBase400: '16px',\r\n    fontSizeBase500: '20px',\r\n    fontSizeBase600: '24px',\r\n    fontSizeHero700: '28px',\r\n    fontSizeHero800: '32px',\r\n    fontSizeHero900: '40px',\r\n    fontSizeHero1000: '68px'\r\n};\r\nexport const lineHeights = {\r\n    lineHeightBase100: '14px',\r\n    lineHeightBase200: '16px',\r\n    lineHeightBase300: '20px',\r\n    lineHeightBase400: '22px',\r\n    lineHeightBase500: '28px',\r\n    lineHeightBase600: '32px',\r\n    lineHeightHero700: '36px',\r\n    lineHeightHero800: '40px',\r\n    lineHeightHero900: '52px',\r\n    lineHeightHero1000: '92px'\r\n};\r\nexport const fontWeights = {\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightSemibold: 600,\r\n    fontWeightBold: 700\r\n};\r\nexport const fontFamilies = {\r\n    fontFamilyBase: \"'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif\",\r\n    fontFamilyMonospace: \"Consolas, 'Courier New', Courier, monospace\",\r\n    fontFamilyNumeric: \"Bahnschrift, 'Segoe UI', 'Segoe UI Web (West European)', -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif\"\r\n};\r\n","export const strokeWidths = {\r\n    strokeWidthThin: '1px',\r\n    strokeWidthThick: '2px',\r\n    strokeWidthThicker: '3px',\r\n    strokeWidthThickest: '4px'\r\n};\r\n","export function createShadowTokens(ambientColor, keyColor, tokenSuffix = '') {\r\n    return {\r\n        [`shadow2${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 1px 2px ${keyColor}`,\r\n        [`shadow4${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 2px 4px ${keyColor}`,\r\n        [`shadow8${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 4px 8px ${keyColor}`,\r\n        [`shadow16${tokenSuffix}`]: `0 0 2px ${ambientColor}, 0 8px 16px ${keyColor}`,\r\n        [`shadow28${tokenSuffix}`]: `0 0 8px ${ambientColor}, 0 14px 28px ${keyColor}`,\r\n        [`shadow64${tokenSuffix}`]: `0 0 8px ${ambientColor}, 0 32px 64px ${keyColor}`\r\n    };\r\n}\r\n","export const durations = {\r\n    durationUltraFast: '50ms',\r\n    durationFaster: '100ms',\r\n    durationFast: '150ms',\r\n    durationNormal: '200ms',\r\n    durationGentle: '250ms',\r\n    durationSlow: '300ms',\r\n    durationSlower: '400ms',\r\n    durationUltraSlow: '500ms'\r\n};\r\n","export const curves = {\r\n    curveAccelerateMax: 'cubic-bezier(0.9,0.1,1,0.2)',\r\n    curveAccelerateMid: 'cubic-bezier(1,0,1,1)',\r\n    curveAccelerateMin: 'cubic-bezier(0.8,0,0.78,1)',\r\n    curveDecelerateMax: 'cubic-bezier(0.1,0.9,0.2,1)',\r\n    curveDecelerateMid: 'cubic-bezier(0,0,0,1)',\r\n    curveDecelerateMin: 'cubic-bezier(0.33,0,0.1,1)',\r\n    curveEasyEaseMax: 'cubic-bezier(0.8,0,0.2,1)',\r\n    curveEasyEase: 'cubic-bezier(0.33,0,0.67,1)',\r\n    curveLinear: 'cubic-bezier(0,0,1,1)'\r\n};\r\n","// Intentionally not exported! Use horizontalSpacings and verticalSpacings instead.\r\nconst spacings = {\r\n    none: '0',\r\n    xxs: '2px',\r\n    xs: '4px',\r\n    sNudge: '6px',\r\n    s: '8px',\r\n    mNudge: '10px',\r\n    m: '12px',\r\n    l: '16px',\r\n    xl: '20px',\r\n    xxl: '24px',\r\n    xxxl: '32px'\r\n};\r\nexport const horizontalSpacings = {\r\n    spacingHorizontalNone: spacings.none,\r\n    spacingHorizontalXXS: spacings.xxs,\r\n    spacingHorizontalXS: spacings.xs,\r\n    spacingHorizontalSNudge: spacings.sNudge,\r\n    spacingHorizontalS: spacings.s,\r\n    spacingHorizontalMNudge: spacings.mNudge,\r\n    spacingHorizontalM: spacings.m,\r\n    spacingHorizontalL: spacings.l,\r\n    spacingHorizontalXL: spacings.xl,\r\n    spacingHorizontalXXL: spacings.xxl,\r\n    spacingHorizontalXXXL: spacings.xxxl\r\n};\r\nexport const verticalSpacings = {\r\n    spacingVerticalNone: spacings.none,\r\n    spacingVerticalXXS: spacings.xxs,\r\n    spacingVerticalXS: spacings.xs,\r\n    spacingVerticalSNudge: spacings.sNudge,\r\n    spacingVerticalS: spacings.s,\r\n    spacingVerticalMNudge: spacings.mNudge,\r\n    spacingVerticalM: spacings.m,\r\n    spacingVerticalL: spacings.l,\r\n    spacingVerticalXL: spacings.xl,\r\n    spacingVerticalXXL: spacings.xxl,\r\n    spacingVerticalXXXL: spacings.xxxl\r\n};\r\n","import { createLightTheme } from \"../../utils/createLightTheme.js\";\r\nimport { brandWeb } from \"../../global/brandColors.js\";\r\nexport const webLightTheme = createLightTheme(brandWeb);\r\n","import { colorPaletteTokens, colorStatusTokens } from \"../alias/lightColorPalette.js\";\r\nimport { generateColorTokens } from \"../alias/lightColor.js\";\r\nimport { borderRadius, fontSizes, lineHeights, fontFamilies, strokeWidths, fontWeights } from \"../global/index.js\";\r\nimport { createShadowTokens } from \"./shadows.js\";\r\nimport { durations } from \"../global/durations.js\";\r\nimport { curves } from \"../global/curves.js\";\r\nimport { horizontalSpacings, verticalSpacings } from \"../global/spacings.js\";\r\nexport const createLightTheme = (brand)=>{\r\n    const colorTokens = generateColorTokens(brand);\r\n    return {\r\n        ...borderRadius,\r\n        ...fontSizes,\r\n        ...lineHeights,\r\n        ...fontFamilies,\r\n        ...fontWeights,\r\n        ...strokeWidths,\r\n        ...horizontalSpacings,\r\n        ...verticalSpacings,\r\n        ...durations,\r\n        ...curves,\r\n        ...colorTokens,\r\n        ...colorPaletteTokens,\r\n        ...colorStatusTokens,\r\n        ...createShadowTokens(colorTokens.colorNeutralShadowAmbient, colorTokens.colorNeutralShadowKey),\r\n        ...createShadowTokens(colorTokens.colorBrandShadowAmbient, colorTokens.colorBrandShadowKey, 'Brand')\r\n    };\r\n};\r\n","export const brandWeb = {\r\n    10: `#061724`,\r\n    20: `#082338`,\r\n    30: `#0a2e4a`,\r\n    40: `#0c3b5e`,\r\n    50: `#0e4775`,\r\n    60: `#0f548c`,\r\n    70: `#115ea3`,\r\n    80: `#0f6cbd`,\r\n    90: `#2886de`,\r\n    100: `#479ef5`,\r\n    110: `#62abf5`,\r\n    120: `#77b7f7`,\r\n    130: `#96c6fa`,\r\n    140: `#b4d6fa`,\r\n    150: `#cfe4fa`,\r\n    160: `#ebf3fc`\r\n};\r\nexport const brandTeams = {\r\n    10: `#2b2b40`,\r\n    20: `#2f2f4a`,\r\n    30: `#333357`,\r\n    40: `#383966`,\r\n    50: `#3d3e78`,\r\n    60: `#444791`,\r\n    70: `#4f52b2`,\r\n    80: `#5b5fc7`,\r\n    90: `#7579eb`,\r\n    100: `#7f85f5`,\r\n    110: `#9299f7`,\r\n    120: `#aab1fa`,\r\n    130: `#b6bcfa`,\r\n    140: `#c5cbfa`,\r\n    150: `#dce0fa`,\r\n    160: `#e8ebfa`\r\n};\r\nexport const brandOffice = {\r\n    10: `#29130b`,\r\n    20: `#4d2415`,\r\n    30: `#792000`,\r\n    40: `#99482b`,\r\n    50: `#a52c00`,\r\n    60: `#c33400`,\r\n    70: `#e06a3f`,\r\n    80: `#d83b01`,\r\n    90: `#dd4f1b`,\r\n    100: `#fe7948`,\r\n    110: `#ff865a`,\r\n    120: `#ff9973`,\r\n    130: `#e8825d`,\r\n    140: `#ffb498`,\r\n    150: `#f4beaa`,\r\n    160: `#f9dcd1`\r\n};\r\n","import \"./office-init\"; // Add this line first\r\nimport * as React from \"react\";\r\nimport { createRoot } from \"react-dom/client\";\r\nimport App from \"./components/App\";\r\nimport { FluentProvider, webLightTheme } from \"@fluentui/react-components\";\r\n\r\n/* global document, Office, module, require */\r\n\r\nconst title = \"Contoso Task Pane Add-in\";\r\n\r\nconst rootElement = document.getElementById(\"container\");\r\nconst root = rootElement ? createRoot(rootElement) : undefined;\r\n\r\n/* Render application after Office initializes */\r\nOffice.onReady(() => {\r\n  root?.render(\r\n    <FluentProvider theme={webLightTheme}>\r\n      <App />\r\n    </FluentProvider>\r\n  );\r\n});\r\n\r\nif (module.hot) {\r\n  module.hot.accept(\"./components/App\", () => {\r\n    const NextApp = require(\"./components/App\").default;\r\n    root?.render(NextApp);\r\n  });\r\n}\r\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".container{display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;width:100%;margin:auto}.loading-container{display:flex;flex-direction:column;align-items:center}.loading-container .spinner{width:50px;height:50px;border:5px solid rgba(0,0,0,.1);border-top-color:#0078d4;border-radius:50%;animation:spin 1s linear infinite}.loading-container .loading-text{margin-top:10px;font-size:16px;font-weight:bold}@keyframes spin{from{transform:rotate(0deg)}to{transform:rotate(360deg)}}.error-container{position:absolute;top:0;display:flex;justify-content:center;margin-bottom:20px}.error-container .error-content{display:flex;background:#fdf3f4;padding:15px 10px;border-radius:8px}.error-container .error-content .error-icon{width:20px;margin-right:10px;height:20px}.error-container .error-content .error-text-container .error-title{font-weight:600;color:#242424;display:flex;font-size:12px;margin:auto}.error-container .error-content .error-text-container .error-message{color:#242424;font-weight:400;font-size:12px}.error-container .error-content .dismiss-button{background:none;border:none;cursor:pointer;display:flex}.error-container .error-content .dismiss-button .dismiss-icon{width:25px;height:25px}.main-content{text-align:center;margin:0px 16px}.main-content .logo{width:100%}.main-content .welcome-text{font-size:24px;font-weight:bold}.main-content .sub-text{font-size:18px;color:#666}.main-content .login-button{display:flex;align-items:center;background:#295cb7;color:#fff;padding:10px 20px;border:none;justify-content:center;width:100%;border-radius:5px;font-weight:600;font-size:16px;color:#fff;cursor:pointer}.main-content .login-button .microsoft-icon{width:20px;margin-right:10px}.help-container{display:flex;align-items:center;margin-top:20px;background:#f6f6f6;padding:0px 20px;border-radius:8px;width:80%;margin-bottom:12px}.help-container .help-icon{width:30px;margin-right:10px}.help-container .help-title{font-weight:400;font-size:14px;margin-bottom:-8px;color:#242424}.help-container .help-text{cursor:pointer;font-weight:400;font-size:12px;border-bottom:1px solid #e0e0e0;color:#242424}.error-container{width:80%;display:flex;justify-content:center;margin-top:20px}.main-content{text-align:center;flex-grow:1;display:flex;flex-direction:column;align-items:center;justify-content:center}.main-content .logo{width:50%}.main-content .welcome-text{font-size:28px;color:#242424;font-weight:600;line-height:0}.main-content .sub-text{font-size:18px;color:#424242;font-weight:400}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/taskpane/components/Home/HomeScreen.scss\"],\"names\":[],\"mappings\":\"AAAA,WACI,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CACA,YAAA,CACA,UAAA,CACA,WAAA,CAIF,mBACE,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,4BACE,UAAA,CACA,WAAA,CACA,+BAAA,CACA,wBAAA,CACA,iBAAA,CACA,iCAAA,CAEF,iCACE,eAAA,CACA,cAAA,CACA,gBAAA,CAIJ,gBACE,KACE,sBAAA,CAEF,GACE,wBAAA,CAAA,CAIJ,iBACE,iBAAA,CACA,KAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CACA,gCACE,YAAA,CAEI,kBAAA,CACA,iBAAA,CACA,iBAAA,CAEJ,4CACE,UAAA,CACA,iBAAA,CACA,WAAA,CAGA,mEACE,eAAA,CACA,aAAA,CACA,YAAA,CACA,cAAA,CACI,WAAA,CAEN,qEACE,aAAA,CACA,eAAA,CACA,cAAA,CAGJ,gDACE,eAAA,CACA,WAAA,CACA,cAAA,CACA,YAAA,CACA,8DACE,UAAA,CACA,WAAA,CAMR,cACE,iBAAA,CACA,eAAA,CAEA,oBACE,UAAA,CAEF,4BACE,cAAA,CACA,gBAAA,CAEF,wBACE,cAAA,CACA,UAAA,CAEF,4BACE,YAAA,CACA,kBAAA,CACA,kBAAA,CACA,UAAA,CACA,iBAAA,CACA,WAAA,CACA,sBAAA,CACA,UAAA,CACA,iBAAA,CAEA,eAAA,CACA,cAAA,CACA,UAAA,CACA,cAAA,CACA,4CACE,UAAA,CACA,iBAAA,CAKN,gBACE,YAAA,CACA,kBAAA,CACA,eAAA,CACA,kBAAA,CACA,gBAAA,CACA,iBAAA,CACA,SAAA,CACA,kBAAA,CACA,2BACE,UAAA,CACA,iBAAA,CAEF,4BACE,eAAA,CACN,cAAA,CACM,kBAAA,CACA,aAAA,CAEF,2BAEE,cAAA,CACA,eAAA,CACA,cAAA,CACA,+BAAA,CAEM,aAAA,CAMV,iBACE,SAAA,CACA,YAAA,CACA,sBAAA,CACA,eAAA,CAGF,cACE,iBAAA,CACA,WAAA,CACA,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,sBAAA,CAEA,oBACE,SAAA,CAGF,4BACE,cAAA,CACA,aAAA,CACA,eAAA,CACA,aAAA,CAGF,wBACE,cAAA,CACA,aAAA,CACA,eAAA\",\"sourcesContent\":[\".container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    height: 100vh;\\r\\n    width: 100%;\\r\\n    margin: auto;\\r\\n    // background-color: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  .loading-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    .spinner {\\r\\n      width: 50px;\\r\\n      height: 50px;\\r\\n      border: 5px solid rgba(0, 0, 0, 0.1);\\r\\n      border-top-color: #0078d4;\\r\\n      border-radius: 50%;\\r\\n      animation: spin 1s linear infinite;\\r\\n    }\\r\\n    .loading-text {\\r\\n      margin-top: 10px;\\r\\n      font-size: 16px;\\r\\n      font-weight: bold;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @keyframes spin {\\r\\n    from {\\r\\n      transform: rotate(0deg);\\r\\n    }\\r\\n    to {\\r\\n      transform: rotate(360deg);\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .error-container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-bottom: 20px;\\r\\n    .error-content {\\r\\n      display: flex\\r\\n      ;\\r\\n          background: rgb(253, 243, 244);\\r\\n          padding: 15px 10px;\\r\\n          border-radius: 8px;\\r\\n      \\r\\n      .error-icon {\\r\\n        width: 20px;\\r\\n        margin-right: 10px;\\r\\n        height: 20px;\\r\\n      }\\r\\n      .error-text-container {\\r\\n        .error-title {\\r\\n          font-weight: 600;\\r\\n          color: rgba(36, 36, 36, 1);\\r\\n          display: flex;\\r\\n          font-size: 12px;\\r\\n              margin: auto;\\r\\n        }\\r\\n        .error-message {\\r\\n          color: rgba(36, 36, 36, 1);\\r\\n          font-weight: 400;\\r\\n          font-size: 12px;\\r\\n        }\\r\\n      }\\r\\n      .dismiss-button {\\r\\n        background: none;\\r\\n        border: none;\\r\\n        cursor: pointer;\\r\\n        display: flex;\\r\\n        .dismiss-icon {\\r\\n          width: 25px;\\r\\n          height: 25px;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .main-content {\\r\\n    text-align: center;\\r\\n    margin: 0px 16px;\\r\\n    // margin-top: 5rem;\\r\\n    .logo {\\r\\n      width: 100%;\\r\\n    }\\r\\n    .welcome-text {\\r\\n      font-size: 24px;\\r\\n      font-weight: bold;\\r\\n    }\\r\\n    .sub-text {\\r\\n      font-size: 18px;\\r\\n      color: #666;\\r\\n    }\\r\\n    .login-button {\\r\\n      display: flex;\\r\\n      align-items: center;\\r\\n      background: rgba(41, 92, 183, 1);\\r\\n      color: white;\\r\\n      padding: 10px 20px;\\r\\n      border: none;\\r\\n      justify-content: center;\\r\\n      width: 100%;\\r\\n      border-radius: 5px;\\r\\n      // margin: auto;\\r\\n      font-weight: 600;\\r\\n      font-size: 16px;\\r\\n      color: rgba(255, 255, 255, 1);\\r\\n      cursor: pointer;\\r\\n      .microsoft-icon {\\r\\n        width: 20px;\\r\\n        margin-right: 10px;\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .help-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    margin-top: 20px;\\r\\n    background: rgba(246, 246, 246, 1);\\r\\n    padding: 0px 20px;\\r\\n    border-radius: 8px;\\r\\n    width: 80%;\\r\\n    margin-bottom: 12px;\\r\\n    .help-icon {\\r\\n      width: 30px;\\r\\n      margin-right: 10px;\\r\\n    }\\r\\n    .help-title {\\r\\n      font-weight: 400;\\r\\nfont-size: 14px;\\r\\n      margin-bottom:-8px;\\r\\n      color: rgba(36, 36, 36, 1);\\r\\n    }\\r\\n    .help-text {\\r\\n      // color: #0078d4;\\r\\n      cursor: pointer;\\r\\n      font-weight: 400;\\r\\n      font-size: 12px;\\r\\n      border-bottom: 1px solid rgba(224, 224, 224, 1);\\r\\n            // margin-bottom: -16px;\\r\\n            color: rgba(36, 36, 36, 1);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  \\r\\n  \\r\\n  .error-container {\\r\\n    width: 80%;\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    margin-top: 20px; // Push to the top\\r\\n  }\\r\\n  \\r\\n  .main-content {\\r\\n    text-align: center;\\r\\n    flex-grow: 1; // Push content to center\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n  \\r\\n    .logo {\\r\\n      width: 50%;\\r\\n    }\\r\\n  \\r\\n    .welcome-text {\\r\\n      font-size: 28px;\\r\\n      color: rgba(36, 36, 36, 1);\\r\\n      font-weight: 600;\\r\\n      line-height: 0;\\r\\n    }\\r\\n  \\r\\n    .sub-text {\\r\\n      font-size: 18px;\\r\\n      color: rgba(66, 66, 66, 1);\\r\\n      font-weight: 400;\\r\\n    }\\r\\n  \\r\\n   \\r\\n  }\\r\\n  \\r\\n  \"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\"use strict\";\r\n\r\nvar stylesInDOM = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n  var result = -1;\r\n  for (var i = 0; i < stylesInDOM.length; i++) {\r\n    if (stylesInDOM[i].identifier === identifier) {\r\n      result = i;\r\n      break;\r\n    }\r\n  }\r\n  return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n  var idCountMap = {};\r\n  var identifiers = [];\r\n  for (var i = 0; i < list.length; i++) {\r\n    var item = list[i];\r\n    var id = options.base ? item[0] + options.base : item[0];\r\n    var count = idCountMap[id] || 0;\r\n    var identifier = \"\".concat(id, \" \").concat(count);\r\n    idCountMap[id] = count + 1;\r\n    var indexByIdentifier = getIndexByIdentifier(identifier);\r\n    var obj = {\r\n      css: item[1],\r\n      media: item[2],\r\n      sourceMap: item[3],\r\n      supports: item[4],\r\n      layer: item[5]\r\n    };\r\n    if (indexByIdentifier !== -1) {\r\n      stylesInDOM[indexByIdentifier].references++;\r\n      stylesInDOM[indexByIdentifier].updater(obj);\r\n    } else {\r\n      var updater = addElementStyle(obj, options);\r\n      options.byIndex = i;\r\n      stylesInDOM.splice(i, 0, {\r\n        identifier: identifier,\r\n        updater: updater,\r\n        references: 1\r\n      });\r\n    }\r\n    identifiers.push(identifier);\r\n  }\r\n  return identifiers;\r\n}\r\nfunction addElementStyle(obj, options) {\r\n  var api = options.domAPI(options);\r\n  api.update(obj);\r\n  var updater = function updater(newObj) {\r\n    if (newObj) {\r\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\r\n        return;\r\n      }\r\n      api.update(obj = newObj);\r\n    } else {\r\n      api.remove();\r\n    }\r\n  };\r\n  return updater;\r\n}\r\nmodule.exports = function (list, options) {\r\n  options = options || {};\r\n  list = list || [];\r\n  var lastIdentifiers = modulesToDom(list, options);\r\n  return function update(newList) {\r\n    newList = newList || [];\r\n    for (var i = 0; i < lastIdentifiers.length; i++) {\r\n      var identifier = lastIdentifiers[i];\r\n      var index = getIndexByIdentifier(identifier);\r\n      stylesInDOM[index].references--;\r\n    }\r\n    var newLastIdentifiers = modulesToDom(newList, options);\r\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\r\n      var _identifier = lastIdentifiers[_i];\r\n      var _index = getIndexByIdentifier(_identifier);\r\n      if (stylesInDOM[_index].references === 0) {\r\n        stylesInDOM[_index].updater();\r\n        stylesInDOM.splice(_index, 1);\r\n      }\r\n    }\r\n    lastIdentifiers = newLastIdentifiers;\r\n  };\r\n};","\"use strict\";\r\n\r\n/* istanbul ignore next  */\r\nfunction apply(styleElement, options, obj) {\r\n  var css = \"\";\r\n  if (obj.supports) {\r\n    css += \"@supports (\".concat(obj.supports, \") {\");\r\n  }\r\n  if (obj.media) {\r\n    css += \"@media \".concat(obj.media, \" {\");\r\n  }\r\n  var needLayer = typeof obj.layer !== \"undefined\";\r\n  if (needLayer) {\r\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\r\n  }\r\n  css += obj.css;\r\n  if (needLayer) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.media) {\r\n    css += \"}\";\r\n  }\r\n  if (obj.supports) {\r\n    css += \"}\";\r\n  }\r\n  var sourceMap = obj.sourceMap;\r\n  if (sourceMap && typeof btoa !== \"undefined\") {\r\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\r\n  }\r\n\r\n  // For old IE\r\n  /* istanbul ignore if  */\r\n  options.styleTagTransform(css, styleElement, options.options);\r\n}\r\nfunction removeStyleElement(styleElement) {\r\n  // istanbul ignore if\r\n  if (styleElement.parentNode === null) {\r\n    return false;\r\n  }\r\n  styleElement.parentNode.removeChild(styleElement);\r\n}\r\n\r\n/* istanbul ignore next  */\r\nfunction domAPI(options) {\r\n  if (typeof document === \"undefined\") {\r\n    return {\r\n      update: function update() {},\r\n      remove: function remove() {}\r\n    };\r\n  }\r\n  var styleElement = options.insertStyleElement(options);\r\n  return {\r\n    update: function update(obj) {\r\n      apply(styleElement, options, obj);\r\n    },\r\n    remove: function remove() {\r\n      removeStyleElement(styleElement);\r\n    }\r\n  };\r\n}\r\nmodule.exports = domAPI;"],"names":["m","exports","createRoot","hydrateRoot","module","options","element","document","createElement","setAttributes","attributes","insert","Object","prototype","toString","___CSS_LOADER_EXPORT___","push","id","f","k","Symbol","for","l","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","Fragment","jsx","jsxs","x","_regeneratorRuntime","t","r","o","defineProperty","value","i","iterator","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","s","y","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","v","values","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_callee","_context","Office","onReady","console","log","arguments","apply","_next","_throw","css","styleElement","styleSheet","cssText","firstChild","removeChild","appendChild","createTextNode","nonce","setAttribute","item","content","cssMapping","btoa","base64","unescape","encodeURIComponent","JSON","stringify","data","concat","sourceMapping","join","cssWithMappingToString","list","this","map","needLayer","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","_k","memo","style","target","styleTarget","querySelector","window","HTMLIFrameElement","contentDocument","head","getTarget","createMemoryHistory","entries","initialEntries","initialIndex","v5Compat","entry","index2","createMemoryLocation","state","index","clampIndex","action","listener","Math","min","max","getCurrentLocation","to","location","pathname","search","hash","parsePath","random","substring","createLocation","warning","createHref2","createPath","createHref","createURL","URL","encodeLocation","path","nextLocation","splice","delta","replace","go","nextIndex","listen","fn","invariant","message","cond","warn","parsedPath","hashIndex","indexOf","searchIndex","matchRoutes","routes","locationArg","basename","allowPartial","stripBasename","branches","flattenRoutes","sort","score","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","decoded","decodePath","matchRouteBranch","matchRoutesImpl","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","children","computeScore","includes","exploded","explodeOptionalSegments","segments","split","first","rest","isOptional","endsWith","required","restExploded","result","subpath","WeakMap","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","test","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","assign","params","pathnameBase","normalizePathname","pattern","matcher","compiledParams","regexpSource","_","paramName","RegExp","compilePath","captureGroups","memo2","splatValue","decodeURIComponent","error","toLowerCase","startIndex","nextChar","getInvalidPathError","char","field","dest","getResolveToMatches","pathMatches","getPathContributingMatches","idx","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","isRouteErrorResponse","status","statusText","internal","validMutationMethodsArr","validRequestMethodsArr","Set","DataRouterContext","DataRouterStateContext","ViewTransitionContext","isTransitioning","Map","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","useLocation","navigateEffectWarning","useIsomorphicLayoutEffect","cb","static","useNavigate","router","hookName","ctx","getDataRouterConsoleError","useDataRouterContext","useCurrentRouteId","activeRef","navigate","fromRouteId","useNavigateStable","dataRouterContext","navigator","navigator2","routePathnamesJson","parse","relative","useNavigateUnstable","useResolvedPath","useRoutesImpl","dataRouterState","future","isStatic","parentMatches","routeMatch","parentParams","parentPathname","parentPathnameBase","parentRoute","warningOnce","locationFromContext","parsedLocationArg","parentSegments","Component","lazy","renderedMatches","errors","initialized","errorIndex","findIndex","renderFallback","fallbackIndex","HydrateFallback","hydrateFallbackElement","loaderData","errors2","needsToRunLoader","loader","reduceRight","shouldRenderHydrateFallback","errorElement","defaultErrorElement","matches2","getChildren","RenderedRoute","routeContext","ErrorBoundary","RenderErrorBoundary","revalidation","component","_renderMatches","Provider","navigationType","DefaultErrorComponent","useDataRouterState","routeId","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","codeStyles","devInfo","fontStyle","super","getDerivedStateFromError","getDerivedStateFromProps","componentDidCatch","errorInfo","render","staticContext","_deepestRenderedBoundaryId","useRouteContext","thisRoute","alreadyWarned","MemoryRouter","historyRef","history","setStateImpl","setState","newState","Router","Route","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","createRoutesFromChildren","treePath","hasErrorBoundary","shouldRevalidate","defaultMethod","defaultEncType","isHtmlElement","object","tagName","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","has","invariant2","isHtmlLinkDescriptor","href","rel","imageSrcSet","imageSizes","getNewMatchesForLinks","page","nextMatches","currentMatches","manifest","mode","isNew","matchPathChanged","manifestRoute","hasLoader","routeChoice","currentUrl","origin","currentParams","nextUrl","nextParams","defaultShouldRevalidate","getModuleLinkHrefs","includeHydrateFallback","hrefs","clientActionModule","clientLoaderModule","hydrateFallbackModule","imports","flat","useDataRouterContext2","context","useDataRouterStateContext","FrameworkContext","useFrameworkContext","composeEventHandlers","theirHandler","ourHandler","event","defaultPrevented","PrefetchPageLinks","dataLinkProps","PrefetchPageLinksImpl","useKeyedPrefetchLinks","routeModules","keyedPrefetchLinks","setKeyedPrefetchLinks","interrupted","descriptors","preloads","set","preloadsSet","deduped","descriptor","as","obj","sorted","sortKeys","add","link","dedupeLinkDescriptors","all","mod","routeModulesCache","routeModule","import","__reactRouterContext","isSpaMode","reload","loadRouteModule","links","getKeyedPrefetchLinks","linkProps","newMatchesForData","newMatchesForAssets","dataHrefs","routesParams","foundOptOutRoute","m2","hasClientLoader","size","url","reqUrl","singleFetchUrl","searchParams","moduleHrefs","href2","mergeRefs","refs","isBrowser","__reactRouterVersion","ABSOLUTE_URL_REGEX2","Link","onClick","discover","prefetch","reloadDocument","replace2","preventScrollReset","viewTransition","forwardedRef","absoluteHref","isAbsolute","isExternal","targetUrl","protocol","joinedPathname","useHref","shouldPrefetch","prefetchRef","prefetchHandlers","theirElementProps","frameworkContext","maybePrefetch","setMaybePrefetch","setShouldPrefetch","onFocus","onBlur","onMouseEnter","onMouseLeave","onTouchStart","observer","IntersectionObserver","isIntersecting","threshold","observe","disconnect","setTimeout","clearTimeout","setIntent","cancelIntent","usePrefetchBehavior","internalOnClick","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","preventDefault","useLinkClickHandler","ariaCurrentProp","className","classNameProp","styleProp","routerState","opts","vtContext","useDataRouterContext3","currentPath","currentLocation","nextPath","useViewTransitionState","nextLocationPathname","navigation","endSlashPosition","isActive","isPending","renderProps","ariaCurrent","Boolean","Form","fetcherKey","onSubmit","submit","currentRouteId","formData","body","attr","getAttribute","FormData","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","prefix","append","getFormSubmissionInfo","getUniqueFetcherId","fetch","formMethod","formEncType","flushSync","useSubmit","formAction","URLSearchParams","indexValues","getAll","delete","qs","useFormAction","submitter","nativeEvent","submitMethod","currentTarget","getDataRouterConsoleError2","fetcherId","String","TextEncoder","Constants","LIBRARY_NAME","SKU","CACHE_PREFIX","DEFAULT_AUTHORITY","DEFAULT_AUTHORITY_HOST","DEFAULT_COMMON_TENANT","ADFS","DSTS","AAD_INSTANCE_DISCOVERY_ENDPT","CIAM_AUTH_URL","AAD_TENANT_DOMAIN_SUFFIX","RESOURCE_DELIM","NO_ACCOUNT","CLAIMS","CONSUMER_UTID","OPENID_SCOPE","PROFILE_SCOPE","OFFLINE_ACCESS_SCOPE","EMAIL_SCOPE","CODE_RESPONSE_TYPE","CODE_GRANT_TYPE","RT_GRANT_TYPE","FRAGMENT_RESPONSE_MODE","S256_CODE_CHALLENGE_METHOD","URL_FORM_CONTENT_TYPE","AUTHORIZATION_PENDING","NOT_DEFINED","EMPTY_STRING","NOT_APPLICABLE","NOT_AVAILABLE","FORWARD_SLASH","IMDS_ENDPOINT","IMDS_VERSION","IMDS_TIMEOUT","AZURE_REGION_AUTO_DISCOVER_FLAG","REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX","KNOWN_PUBLIC_CLOUDS","TOKEN_RESPONSE_TYPE","ID_TOKEN_RESPONSE_TYPE","SHR_NONCE_VALIDITY","INVALID_INSTANCE","OIDC_DEFAULT_SCOPES","OIDC_SCOPES","HeaderNames","PersistentCacheKeys","AADAuthorityConstants","ClaimsRequestKeys","PromptValue","LOGIN","SELECT_ACCOUNT","CONSENT","NONE","CREATE","NO_SESSION","CodeChallengeMethodValues","PLAIN","S256","ServerResponseType","QUERY","FRAGMENT","ResponseMode","FORM_POST","CacheAccountType","Separators","CredentialType","ID_TOKEN","ACCESS_TOKEN","ACCESS_TOKEN_WITH_AUTH_SCHEME","REFRESH_TOKEN","APP_METADATA","THE_FAMILY_ID","AUTHORITY_METADATA_CONSTANTS","AuthorityMetadataSource","SERVER_TELEM_CONSTANTS","SCHEMA_VERSION","MAX_CUR_HEADER_BYTES","MAX_LAST_HEADER_BYTES","MAX_CACHED_ERRORS","CACHE_KEY","CATEGORY_SEPARATOR","VALUE_SEPARATOR","OVERFLOW_TRUE","OVERFLOW_FALSE","UNKNOWN_ERROR","AuthenticationScheme","BEARER","POP","SSH","ThrottlingConstants","LogLevel","Logger","loggerOptions","packageName","packageVersion","level","Info","setLoggerOptions","createDefaultLoggerOptions","localCallback","loggerCallback","piiLoggingEnabled","logLevel","correlationId","clone","logMessage","containsPii","Date","toUTCString","executeCallback","errorPii","Warning","warningPii","info","infoPii","verbose","Verbose","verbosePii","trace","Trace","tracePii","isPiiLoggingEnabled","ProtocolMode","AzureCloudInstance","unexpectedError","postRequestFailed","AuthErrorMessages","AuthError","errorCode","errorMessage","suberror","subError","setCorrelationId","createAuthError","code","additionalMessage","clientInfoDecodingError","clientInfoEmptyError","tokenParsingError","nullOrEmptyToken","endpointResolutionError","networkError","openIdConfigError","hashNotDeserialized","invalidState","stateMismatch","stateNotFound","nonceMismatch","authTimeNotFound","maxAgeTranspired","multipleMatchingTokens","multipleMatchingAccounts","multipleMatchingAppMetadata","requestCannotBeMade","cannotRemoveEmptyScope","cannotAppendScopeSet","emptyInputScopeSet","deviceCodePollingCancelled","deviceCodeExpired","deviceCodeUnknownError","noAccountInSilentRequest","invalidCacheRecord","invalidCacheEnvironment","noAccountFound","noCryptoObject","unexpectedCredentialType","invalidAssertion","invalidClientCredential","tokenRefreshRequired","userTimeoutReached","tokenClaimsCnfRequiredForSignedJwt","authorizationCodeMissingFromServerResponse","bindingKeyNotRemoved","endSessionEndpointNotSupported","keyIdMissing","noNetworkConnectivity","userCanceled","missingTenantIdError","methodNotImplemented","nestedAppAuthBridgeDisabled","ClientAuthErrorMessages","ClientAuthError","createClientAuthError","DEFAULT_CRYPTO_IMPLEMENTATION","createNewGuid","base64Decode","base64Encode","base64UrlEncode","encodeKid","getPublicKeyThumbprint","removeTokenBindingKey","clearKeystore","signJwt","hashString","version","extractTokenClaims","encodedToken","jswPayload","authToken","exec","getJWSPayload","base64Decoded","err","checkMaxAge","authTime","maxAge","now","nowSeconds","round","getTime","toSecondsFromDate","date","toDateFromSeconds","seconds","Number","isTokenExpired","expiresOn","offset","expirationSec","generateCredentialKey","credentialEntity","generateAccountId","generateCredentialId","generateTarget","generateClaimsHash","generateScheme","createIdTokenEntity","homeAccountId","environment","idToken","clientId","tenantId","credentialType","secret","realm","createAccessTokenEntity","accessToken","scopes","extExpiresOn","refreshOn","tokenType","userAssertionHash","keyId","requestedClaims","requestedClaimsHash","atEntity","cachedAt","extendedExpiresOn","tokenClaims","cnf","kid","createRefreshTokenEntity","refreshToken","familyId","rtEntity","isCredentialEntity","entity","clientOrFamilyId","generateAuthorityMetadataExpiresAt","updateAuthorityEndpointMetadata","authorityMetadata","updatedValues","fromNetwork","authorization_endpoint","token_endpoint","end_session_endpoint","issuer","endpointsFromNetwork","jwks_uri","updateCloudDiscoveryMetadata","aliases","preferred_cache","preferred_network","aliasesFromNetwork","isAuthorityMetadataExpired","metadata","expiresAt","redirectUriEmpty","claimsRequestParsingError","authorityUriInsecure","urlParseError","urlEmptyError","emptyInputScopesError","invalidPromptValue","invalidClaims","tokenRequestEmpty","logoutRequestEmpty","invalidCodeChallengeMethod","pkceParamsMissing","invalidCloudDiscoveryMetadata","invalidAuthorityMetadata","untrustedAuthority","missingSshJwk","missingSshKid","missingNonceAuthenticationHeader","invalidAuthenticationHeader","cannotSetOIDCOptions","cannotAllowPlatformBroker","authorityMismatch","ClientConfigurationErrorMessages","ClientConfigurationError","createClientConfigurationError","StringUtils","isEmptyObj","strObj","str","lastIndexOf","queryStringToObject","query","decode","pair","trim","trimArrayEntries","arr","removeEmptyStringsFromArray","jsonParseHelper","matchPattern","input","ScopeSet","inputScopes","scopeArr","filteredInput","scope","fromString","inputScopeString","createSearchScopes","scopeSet","containsOnlyOIDCScopes","removeScope","removeOIDCScopes","containsScope","lowerCaseScopes","printScopesLowerCase","lowerCaseScopesSet","containsScopeSet","asArray","defaultScopeCount","defaultScope","appendScope","newScope","appendScopes","newScopes","unionScopeSets","otherScopes","unionScopes","intersectingScopeSets","sizeOtherScopes","getScopeCount","sizeThisScopes","array","val","printScopes","buildClientInfo","rawClientInfo","decodedClientInfo","buildClientInfoFromHomeAccountId","clientInfoParts","uid","utid","tenantIdMatchesHomeTenant","buildTenantProfile","localAccountId","idTokenClaims","oid","sub","tid","tfp","acr","isHomeTenant","updateAccountTenantProfileData","baseAccountInfo","tenantProfile","idTokenSecret","updatedAccountInfo","tenantProfileOverride","claimsSourcedTenantProfile","getTenantIdFromIdTokenClaims","AccountEntity","generateAccountKey","generateAccountCacheKey","username","getAccountInfo","nativeAccountId","authorityType","tenantProfiles","isSingleTenant","accountInterface","homeTenantId","createAccount","accountDetails","authority","account","clientInfo","protocolMode","env","getPreferredCache","preferredUsername","preferred_username","upn","email","emails","cloudGraphHostName","msGraphHost","createFromAccountInfo","accountInfo","Array","generateHomeAccountId","serverClientInfo","authType","logger","cryptoObj","isAccountEntity","accountInfoIsEqual","accountA","accountB","compareClaims","claimsMatch","accountAClaims","accountBClaims","iat","stripLeadingHashOrQuery","responseString","getDeserializedResponse","normalizedResponse","deserializedHash","fromEntries","error_description","UrlString","urlString","_urlString","canonicalizeUri","lowerCaseUrl","validateAsUri","components","getUrlComponents","HostNameAndPort","PathSegments","Protocol","appendQueryString","queryString","removeHashFromUrl","replaceTenantPath","urlObject","pathArray","constructAuthorityUriFromObject","regEx","urlComponents","AbsolutePath","QueryString","pathSegments","getDomainFromUrl","getAbsoluteUrl","relativeUrl","baseUrl","baseComponents","hashContainsKnownProperties","response","EndpointMetadata","InstanceDiscoveryMetadata","tenant_discovery_endpoint","InstanceDiscoveryMetadataAliases","getAliasesFromMetadata","authorityHost","cloudDiscoveryMetadata","source","getCloudDiscoveryMetadataFromNetworkResponse","metadataEntry","alias","cacheQuotaExceededErrorCode","cacheUnknownErrorCode","CacheErrorMessages","CacheError","CacheManager","cryptoImpl","staticAuthorityOptions","commonLogger","getAllAccounts","accountFilter","buildTenantProfiles","getAccountsFilteredBy","getAccountInfoFilteredBy","allAccounts","getBaseAccountInfo","accountEntities","cachedAccounts","flatMap","accountEntity","getTenantProfilesFromAccountEntity","getTenantedAccountInfoByFilter","tokenKeys","tenantProfileFilter","tenantedAccountInfo","tenantProfileMatchesFilter","getIdToken","idTokenClaimsMatchTenantProfileFilter","targetTenantId","searchTenantProfiles","getTokenKeys","get","matchingTenantProfiles","matchLocalAccountIdFromTenantProfile","matchLocalAccountIdFromTokenClaims","loginHint","matchLoginHintFromTokenClaims","matchUsername","matchName","sid","matchSid","saveCacheRecord","cacheRecord","storeInCache","setAccount","setIdTokenCredential","saveAccessToken","setRefreshTokenCredential","appMetadata","setAppMetadata","credential","accessTokenFilter","currentScopes","removedAccessTokens","accessTokenKeyMatchesFilter","tokenEntity","getAccessTokenCredential","credentialMatchesFilter","removeAccessToken","setAccessTokenCredential","allAccountKeys","getAccountKeys","matchingAccounts","cacheKey","isAccountKey","getAccount","matchHomeAccountId","matchEnvironment","matchRealm","matchNativeAccountId","matchAuthorityType","isCredentialKey","lowerCaseKey","clientIdValidation","familyIdValidation","matchClientId","matchUserAssertionHash","matchCredentialType","matchFamilyId","matchTarget","matchTokenType","matchKeyId","getAppMetadataFilteredBy","allCacheKeys","getKeys","matchingAppMetadata","isAppMetadata","getAppMetadata","getAuthorityMetadataByAlias","host","getAuthorityMetadataKeys","matchedEntity","isAuthorityMetadata","getAuthorityMetadata","removeAllAccounts","removedAccounts","removeAccount","accountKey","removeAccountContext","removeItem","allTokenKeys","accountId","removedCredentials","removeIdToken","removeRefreshToken","removeAppMetadata","readAccountFromCache","targetRealm","performanceClient","idTokenFilter","idTokenMap","getIdTokensByFilter","numIdTokens","tokensToBeRemoved","homeIdTokenMap","numHomeIdTokens","addFields","multiMatchedID","idTokenKeys","idTokens","idTokenKeyMatchesFilter","getIdTokenCredential","inputKey","getAccessToken","request","authScheme","authenticationScheme","sshKid","accessTokenKeys","accessTokens","numAccessTokens","multiMatchedAT","keyMustContainAllScopes","getAccessTokensByFilter","getRefreshToken","familyRT","refreshTokenFilter","refreshTokenKeys","refreshTokens","refreshTokenKeyMatchesFilter","getRefreshTokenCredential","numRefreshTokens","multiMatchedRT","readAppMetadataFromCache","appMetadataFilter","appMetadataEntries","numAppMetadata","isAppMetadataFOCI","claims","cachedUsername","filterUsername","staticAliases","canonicalAuthority","knownAuthorities","getAliasesFromStaticSources","cloudMetadata","login_hint","generateAuthorityMetadataCacheKey","toObject","json","propertyName","DefaultStorageClass","setServerTelemetry","getServerTelemetry","setAuthorityMetadata","setThrottlingCache","getThrottlingCache","DEFAULT_SYSTEM_OPTIONS","tokenRenewalOffsetSeconds","preventCorsPreflight","DEFAULT_LOGGER_IMPLEMENTATION","DEFAULT_CACHE_OPTIONS","claimsBasedCachingEnabled","DEFAULT_NETWORK_IMPLEMENTATION","sendGetRequestAsync","sendPostRequestAsync","DEFAULT_LIBRARY_INFO","sku","cpu","os","DEFAULT_CLIENT_CREDENTIALS","clientSecret","clientAssertion","DEFAULT_AZURE_CLOUD_OPTIONS","azureCloudInstance","tenant","DEFAULT_TELEMETRY_OPTIONS","application","appName","appVersion","isOidcProtocolMode","config","authOptions","StubbedNetworkModule","reject","PerformanceEvents","PerformanceEventStatus","StubPerformanceMeasurement","startMeasurement","endMeasurement","flushMeasurement","StubPerformanceClient","generateId","measureName","discard","increment","eventId","libraryName","libraryVersion","startTimeMs","measurement","startPerformanceMeasurement","calculateQueuedTime","addQueueMeasurement","setPreQueueTime","discardMeasurements","removePerformanceCallback","addPerformanceCallback","emitEvents","incrementFields","cacheEventByCorrelationId","BrowserConstants","NativeConstants","NativeExtensionMethod","BrowserCacheLocation","TemporaryCacheKeys","StaticCacheKeys","InMemoryCacheKeys","ApiId","InteractionType","DEFAULT_REQUEST","DB_NAME","DB_TABLE_NAME","iFrameRenewalPolicies","NavigationClient","navigateInternal","defaultNavigateWindow","navigateExternal","noHistory","timeout","NetworkError","httpStatus","responseHeaders","createNetworkError","pkceNotCreated","cryptoNonExistent","emptyNavigateUri","hashEmptyError","noStateInHash","hashDoesNotContainKnownProperties","unableToParseState","stateInteractionTypeMismatch","interactionInProgress","popupWindowError","emptyWindowError","userCancelled","monitorPopupTimeout","monitorWindowTimeout","redirectInIframe","blockIframeReload","blockNestedPopups","iframeClosedPrematurely","silentLogoutUnsupported","noAccountError","silentPromptValueError","noTokenRequestCacheError","unableToParseTokenRequestCacheError","noCachedAuthorityError","authRequestNotSetError","invalidCacheType","nonBrowserEnvironment","databaseNotOpen","getRequestFailed","failedToParseResponse","unableToLoadToken","cryptoKeyNotFound","authCodeRequired","authCodeOrNativeAccountIdRequired","spaCodeAndNativeAccountIdPresent","databaseUnavailable","unableToAcquireTokenFromNativePlatform","nativeHandshakeTimeout","nativeExtensionNotInstalled","nativeConnectionNotEstablished","uninitializedPublicClientApplication","nativePromptNotSupported","invalidBase64String","invalidPopTokenRequest","failedToBuildHeaders","failedToParseHeaders","ErrorLink","BrowserAuthErrorMessages","BrowserAuthError","createBrowserAuthError","FetchClient","responseStatus","reqHeaders","getFetchHeaders","headers","onLine","getHeaderDict","reqBody","Headers","optionsHeaders","headerDict","urlEncode","urlEncodeArr","inputArr","base64EncArr","encode","aBytes","binString","fromCodePoint","TextDecoder","base64DecToArr","base64String","encodedString","atob","Uint8Array","codePointAt","AES_GCM","HKDF","S256_HASH_ALG","PUBLIC_EXPONENT","UUID_CHARS","UINT32_ARR","Uint32Array","ENCRYPT","DECRYPT","keygenAlgorithmOptions","modulusLength","publicExponent","sha256Digest","dataString","crypto","subtle","digest","getRandomValues","dataBuffer","getRandomUint32","currentTimestamp","baseRand","bytes","randA","trunc","randBHi","randBLo","text","exportJwk","exportKey","generateBaseKey","generateKey","generateHKDF","baseKey","importKey","deriveKey","salt","encrypt","rawData","encodedData","derivedKey","encryptedData","iv","decrypt","decryptedData","plainText","hashBuffer","storageNotSupported","stubbedPublicClientApplicationCalled","inMemRedirectUnavailable","BrowserConfigurationAuthErrorMessages","BrowserConfigurationAuthError","createBrowserConfigurationAuthError","isInIframe","parent","getCurrentUri","blockNonBrowserEnvironment","blockAPICallsBeforeInitialize","preflightCheck","blockReloadInHiddenIframes","opener","blockAcquireTokenInPopups","redirectPreflightCheck","allowRedirectInIframe","blockRedirectInIframe","system","cache","cacheLocation","storeAuthStateInCookie","preconnect","crossOrigin","BaseOperatingContext","debug","sessionStorage","browserEnvironment","auth","userInputAuth","userInputCache","userInputSystem","telemetry","userInputTelemetry","isBrowserEnvironment","DEFAULT_AUTH_OPTIONS","redirectUri","postLogoutRedirectUri","navigateToLoginRequestUrl","clientCapabilities","OIDCOptions","serverResponseType","defaultScopes","azureCloudOptions","skipAuthorityMetadataCache","supportsNestedAppAuth","instanceAware","temporaryCacheLocation","secureCookies","cacheMigrationEnabled","DEFAULT_LOGGER_OPTIONS","providedSystemOptions","networkClient","navigationClient","loadFrameTimeout","windowHashTimeout","iframeHashTimeout","navigateFrameWait","redirectNavigationTimeout","asyncPopups","allowPlatformBroker","nativeBrokerHandshakeTimeout","pollIntervalMilliseconds","client","buildConfiguration","logLevelKey","getItem","piiLoggingKey","available","getConfig","getLogger","isAvailable","getModuleName","MODULE_NAME","getId","ID","initialize","missingKidError","missingAlgError","JoseHeaderErrorMessages","JoseHeaderError","createJoseHeaderError","JoseHeader","typ","alg","getShrHeaderString","shrHeaderOptions","shrHeader","DatabaseStorage","dbName","tableName","dbOpen","open","openDB","indexedDB","addEventListener","createObjectStore","db","closeConnection","close","validateDbIsOpen","dbGet","transaction","objectStore","setItem","payload","dbPut","put","dbDelete","dbGetKeys","getAllKeys","containsKey","dbContainsKey","count","deleteDatabase","deleteDbRequest","MemoryStorage","getUserData","setUserData","cacheKeys","clear","AsyncMemoryStorage","inMemoryCache","indexedDBCache","handleDatabaseAccessError","clearInMemory","clearPersistent","dbDeleted","CryptoOps","skipValidateSubtleCrypto","validateCryptoAvailable","inputKid","publicKeyThumbMeasurement","keyPair","extractable","usages","generateKeyPair","EXTRACTABLE","POP_KEY_USAGES","publicKeyJwk","publicKey","publicJwkString","getSortedObjectString","kty","publicJwkHash","privateKeyJwk","privateKey","unextractablePrivateKey","importJwk","requestMethod","resourceRequestMethod","requestUri","resourceRequestUri","success","shrOptions","signJwtMeasurement","cachedKeyPair","publicKeyJwkString","encodedKeyIdThumbprint","encodedShrHeader","header","jwk","tokenString","tokenBuffer","signatureBuffer","sign","signedJwt","callback","eventName","telemetryClient","args","inProgressEvent","eventCount","invokeAsync","RegionDiscovery","networkInterface","detectRegion","environmentRegion","regionDiscoveryMetadata","autodetectedRegionName","region_source","IMDS_OPTIONS","localIMDSVersionResponse","getRegionFromIMDS","bind","currentIMDSVersion","getCurrentVersion","currentIMDSVersionResponse","Metadata","Authority","cacheManager","authorityOptions","managedIdentity","_canonicalAuthority","region_used","region_outcome","regionDiscovery","getAuthorityType","authorityUri","canonicalAuthorityUrlComponents","_canonicalAuthorityUrlComponents","hostnameAndPort","authorizationEndpoint","discoveryComplete","replacePath","tokenEndpoint","deviceCodeEndpoint","endSessionEndpoint","selfSignedJwtAudience","jwksUri","canReplaceTenant","reservedTenantDomains","replaceTenant","endpoint","cachedAuthorityUrlComponents","canonical_authority","cachedAuthorityParts","currentPart","cachedPart","defaultOpenIdConfigurationEndpoint","canonicalAuthorityHost","isAliasOfKnownMicrosoftAuthority","resolveEndpointsAsync","metadataEntity","getCurrentMetadataEntity","cloudDiscoverySource","endpointSource","updateEndpointMetadata","updateCachedMetadata","authorityEndpointSource","endpointMetadataResult","localMetadata","updateEndpointMetadataFromLocalSources","azureRegionConfiguration","azureRegion","updateMetadataWithRegionalInformation","getEndpointMetadataFromNetwork","configMetadata","getEndpointMetadataFromConfig","hardcodedMetadata","getEndpointMetadataFromHardcodedValues","metadataEntityExpired","isAuthoritySameType","openIdConfigurationEndpoint","isValidResponse","isOpenIdConfigResponse","userConfiguredAzureRegion","replaceWithRegionalInformation","localMetadataSource","updateCloudDiscoveryMetadataFromLocalSources","getCloudDiscoveryMetadataFromNetwork","getCloudDiscoveryMetadataFromConfig","createCloudDiscoveryMetadataFromHost","isInKnownAuthorities","instanceDiscoveryEndpoint","typedResponseBody","isCloudInstanceDiscoveryResponse","isCloudInstanceDiscoveryErrorResponse","typedError","generateAuthority","authorityString","authorityAzureCloudInstance","isAlias","isPublicCloudAuthority","buildRegionalAuthorityString","region","authorityUrlInstance","authorityUrlParts","hostNameAndPort","regionalMetadata","transformCIAMAuthority","ciamAuthority","authorityUrlComponents","formatAuthorityUri","noTokensFound","nativeAccountUnavailable","refreshTokenExpired","badToken","InteractionRequiredServerErrorMessage","InteractionRequiredAuthSubErrorMessage","InteractionRequiredAuthErrorMessages","InteractionRequiredAuthError","timestamp","traceId","errorNo","isInteractionRequiredError","errorString","isInteractionRequiredErrorCode","isInteractionRequiredSubError","isInteractionRequiredErrorDesc","irErrorCode","createInteractionRequiredAuthError","getRequestThumbprint","homeAccountIdentifier","shrClaims","embeddedClientId","tokenBodyParameters","ProtocolUtils","setRequestState","userState","libraryState","generateLibraryState","stateObj","stateString","parseRequestState","splitState","libraryStateString","libraryStateObj","userRequestState","CcsCredentialType","SameSiteOptions","CookieStorage","cookieList","cookie","cookieLifeDays","secure","sameSite","cookieStr","expireTime","today","getCookieExpirationTime","cookieParts","storage","accountKeys","ENCRYPTION_KEY","LocalStorage","localStorage","memoryStorage","broadcast","BroadcastChannel","cookies","cookieString","parsedCookie","encryptionCookie","importExistingCache","keyStr","cookieData","updateCache","getContext","postMessage","importArray","getItemFromEncryptedCache","rawCache","encObj","encryptedCacheExpiredCount","unencryptedCacheCount","importedArr","promiseArr","promise","perfMeasurement","isBackground","SessionStorage","extractBrowserRequestState","browserCrypto","EventType","BrowserCacheManager","cacheConfig","eventHandler","internalStorage","browserStorage","getStorageImplementation","temporaryCacheStorage","cookieStorage","validateAndParseJson","jsonValue","parsedJson","serializedAccount","removeAccountKeyFromMap","parsedAccount","wasAdded","addAccountKeyToMap","emitEvent","removalIndex","removeTokenKey","addTokenKey","idRemoval","accessRemoval","refreshRemoval","idTokenKey","parsedIdToken","accessTokenKey","parsedAccessToken","refreshTokenKey","parsedRefreshToken","appMetadataKey","parsedMetadata","serverTelemetryKey","parsedEntity","validateKey","validateEntity","serverTelemetry","setWrapperMetadata","wrapperSKU","wrapperVersion","getWrapperMetadata","getActiveAccount","activeAccountKeyFilters","generateCacheKey","activeAccountValueFilters","activeAccountValueObj","setActiveAccount","activeAccountKey","activeAccountValue","throttlingCacheKey","parsedThrottlingCache","throttlingCache","getTemporaryCache","itemCookie","setTemporaryCache","removeTemporaryItem","clearTokensAndKeysWithClaims","generateAuthorityKey","stateId","generateNonceKey","generateStateKey","getCachedAuthority","cachedState","stateCacheKey","authorityCacheKey","updateCacheEntries","authorityInstance","nonceCacheKey","ccsCredential","resetRequestCache","setInteractionInProgress","cleanRequestByState","stateKey","cleanRequestByInteractionType","interactionType","stateValue","parsedState","cacheCodeRequest","authCodeRequest","encodedValue","getCachedRequest","encodedTokenRequest","parsedRequest","cachedAuthority","getCachedNativeRequest","cachedRequest","isInteractionInProgress","getInteractionInProgress","inProgress","hydrateCache","idTokenEntity","claimsHash","cacheRtCount","cacheIdCount","cacheAtCount","EventHandler","eventCallbacks","broadcastChannel","invokeCrossTabCallbacks","addEventCallback","eventTypes","callbackId","removeEventCallback","eventType","invokeCallbacks","subscribeCrossTab","unsubscribeCrossTab","removeEventListener","ServerError","ThrottlingUtils","generateThrottlingStorageKey","thumbprint","preProcess","throttleTime","errorCodes","postProcess","checkResponseStatus","checkResponseForRetryAfter","thumbprintValue","calculateThrottleTime","parseInt","error_codes","time","currentSeconds","floor","removeThrottle","CLIENT_ID","REDIRECT_URI","RESPONSE_TYPE","TOKEN_TYPE","REQ_CNF","RETURN_SPA_CODE","X_CLIENT_EXTRA_SKU","BROKER_CLIENT_ID","BROKER_REDIRECT_URI","RequestValidator","validateRedirectUri","validatePrompt","prompt","promptValues","validateClaims","validateCodeChallengeParams","codeChallenge","codeChallengeMethod","validateCodeChallengeMethod","RequestParameterBuilder","parameters","addResponseTypeCode","addResponseTypeForTokenAndIdToken","addResponseMode","responseMode","addNativeBroker","addScopes","addOidcScopes","requestScopes","addClientId","addRedirectUri","addPostLogoutRedirectUri","addIdTokenHint","idTokenHint","addDomainHint","domainHint","addLoginHint","addCcsUpn","addCcsOid","addSid","addClaims","mergedClaims","addClientCapabilitiesToClaims","addCorrelationId","addLibraryInfo","libraryInfo","addApplicationTelemetry","appTelemetry","addPrompt","addState","addNonce","addCodeChallengeParams","addAuthorizationCode","addDeviceCode","addRefreshToken","addCodeVerifier","codeVerifier","addClientSecret","addClientAssertion","addClientAssertionType","clientAssertionType","addOboAssertion","oboAssertion","addRequestTokenUse","tokenUse","addGrantType","grantType","addClientInfo","addExtraQueryParameters","eQParams","addUsername","addPassword","password","addPopToken","cnfString","addSshJwk","sshJwkString","addServerTelemetry","serverTelemetryManager","generateCurrentRequestHeaderValue","generateLastRequestHeaderValue","addThrottling","addLogoutHint","logoutHint","addBrokerParameters","brokerParams","brokerClientId","brokerRedirectUri","createQueryString","queryParameterArray","embeddedRedirectUri","instrumentBrokerParams","createDiscoveredInstance","authorityUriFinal","acquireTokenAuthority","BaseClient","configuration","userAuthOptions","systemOptions","userSystemOptions","userLoggerOption","cacheOptions","userCacheOptions","storageInterface","storageImplementation","networkImplementation","cryptoInterface","cryptoImplementation","clientCredentials","persistencePlugin","serializableCache","buildClientConfiguration","cryptoUtils","createTokenRequestHeaders","ccsCred","executePostToTokenEndpoint","queuedEvent","sendPostRequest","clearTelemetryCache","refreshTokenSize","refresh_token","httpVerToken","requestId","contentTypeHeader","contentLengthHeader","updateAuthority","cloudInstanceHostname","cloudInstanceAuthorityUri","cloudInstanceAuthority","createTokenQueryParameters","parameterBuilder","tokenQueryParameters","PopTokenGenerator","generateCnf","reqCnf","generateKid","reqCnfString","xms_ksl","signPopToken","signPayload","shrNonce","resourceUrlString","resourceUrlComponents","at","ts","toUpperCase","client_claims","TokenCacheContext","tokenCache","hasChanged","cacheHasChanged","ResponseHandler","cacheStorage","validateServerAuthorizationCodeResponse","serverResponse","requestState","decodedServerResponseState","decodedRequestState","serverErrorNo","errorCodePrefixIndex","error_uri","errorCodePrefix","parseServerErrorNo","trace_id","correlation_id","validateTokenResponse","refreshAccessToken","errString","serverError","handleServerTokenResponse","serverTokenResponse","reqTimestamp","authCodePayload","handlingRefreshTokenResponse","forceCacheRefreshTokenResponse","serverRequestId","requestStateObj","id_token","auth_time","client_info","key_id","generateCacheRecord","cacheContext","beforeCacheAccess","generateAuthenticationResult","afterCacheAccess","claimsTenantId","cachedIdToken","cachedAccount","buildAccountToCache","cachedAccessToken","access_token","responseScopes","expiresIn","expires_in","extExpiresIn","ext_expires_in","refreshIn","refresh_in","tokenExpirationSeconds","extendedTokenExpirationSeconds","refreshOnSeconds","token_type","cachedRefreshToken","rtExpiresOn","refresh_token_expires_in","foci","cachedAppMetadata","fromTokenCache","popKid","popTokenGenerator","spa_accountid","uniqueId","fromCache","spa_code","fromNativeBroker","baseAccountKey","find","baseAccount","cloud_graph_host_name","msgraph_host","newTenantProfile","getClientAssertion","AuthorizationCodeClient","includeRedirectUri","oidcDefaultScopes","getAuthCodeUrl","createAuthCodeUrlQueryString","acquireToken","executeTokenRequest","responseHandler","handleFragmentResponse","serverParams","getLogoutUri","logoutRequest","createLogoutUrlQueryString","queryParametersString","requestBody","createTokenRequestBody","assertion","assertionType","reqCnfData","sshJwk","enableSpaAuthorizationCode","extraQueryParameters","extraScopesToConsent","domainHintFromRequest","sidFromRequest","accountSid","extractAccountSid","accountLoginHintClaim","extractLoginHint","loginHintFromClaim","sidFromClaim","loginHintFromRequest","loginHintFromUpn","addExtraQueryParams","platformBroker","ServerTelemetryManager","telemetryRequest","cacheOutcome","apiId","wrapperVer","telemetryCacheKey","platformFieldsArr","nativeBrokerErrorCode","getNativeBrokerErrorCode","platformFields","requestWithRegionDiscoveryFields","getRegionDiscoveryFields","lastRequests","getLastRequests","maxErrors","maxErrorsToSend","failedRequests","errorCount","cacheHits","cacheFailedRequest","incrementCacheHits","numErrorsFlushed","serverTelemEntity","serverTelemetryEntity","dataSize","regionDiscoveryFields","regionUsed","regionSource","regionOutcome","updateRegionDiscoveryMetadata","setCacheOutcome","setNativeBrokerErrorCode","clearNativeBrokerErrorCode","makeExtraSkuString","skus","extensionName","extensionVersion","skuMap","skuArr","skuName","skuVersion","setSku","BaseInteractionClient","storageImpl","nativeMessageHandler","clearCacheOnLogout","getRedirectUri","requestRedirectUri","initializeServerTelemetryManager","forceRefresh","telemetryPayload","getDiscoveredAuthority","instanceAwareEQ","requestExtraQueryParameters","resolvedAuthority","requestAuthority","resolvedInstanceAware","userAuthority","builtAuthority","requestAzureCloudOptions","discoveredAuthority","generatePkceCodes","generateCodeVerifier","verifier","challenge","generateCodeChallengeFromVerifier","buffer","pkceCodeVerifier","pkceHashedCodeVerifier","initializeBaseRequest","validatedRequest","initializeSilentRequest","baseRequest","StandardInteractionClient","initializeAuthorizationCodeRequest","pkceCodes","generatedPkceParams","initializeLogoutRequest","validLogoutRequest","getLogoutHintFromIdTokenClaims","createAuthCodeClient","clientConfig","getClientConfiguration","initializeAuthorizationRequest","browserState","userSwitch","NativeAuthErrorMessages","NativeAuthError","description","ext","isFatalNativeAuthError","createNativeAuthError","SilentFlowClient","acquireCachedToken","lastCacheOutcome","requestTenantId","getTenantFromAuthorityString","generateResultFromCacheRecord","SilentCacheClient","silentRequest","silentAuthClient","authResponse","logout","NativeInteractionClient","provider","nativeStorageImpl","nativeStorageManager","silentCacheClient","getExtensionId","getExtensionVersion","addRequestSKUs","extraParameters","cacheLookupPolicy","nativeATMeasurement","nativeRequest","initializeNativeRequest","acquireTokensFromCache","isNativeBroker","nativeTokenRequest","messageBody","sendMessage","validatedResponse","validateNativeResponse","handleNativeResponse","subErrorCode","createSilentCacheRequest","fullAccount","acquireTokenRedirect","rootMeasurement","remainingParameters","onRedirectNavigate","navigationOptions","handleRedirectPromise","res","createHomeAccountIdentifier","cachedhomeAccountId","cacheAccount","cacheNativeTokens","generateScopes","generatePopAccessToken","shr","shrParameters","mats","addTelemetryFromNativeResponse","accountProperties","properties","responseAccessToken","isResponseFromCache","nativeCacheRecord","getMATSFromResponse","extensionId","matsBrokerVersion","broker_version","matsAccountJoinOnStart","account_join_on_start","matsAccountJoinOnEnd","account_join_on_end","matsDeviceJoin","device_join","matsPromptBehavior","prompt_behavior","matsApiErrorCode","api_error_code","matsUiVisible","ui_visible","matsSilentCode","silent_code","matsSilentBiSubCode","silent_bi_sub_code","matsSilentMessage","silent_message","matsSilentStatus","silent_status","matsHttpStatus","http_status","matsHttpEventCount","http_event_count","MATS","is_cached","remainingProperties","getPrompt","windowTitleSubstring","title","extendedExpiryToken","handleExtraBrokerParams","generatedReqCnfData","hasExtraBrokerParams","child_client_id","child_redirect_uri","NativeMessageHandler","handshakeTimeoutMs","resolvers","handshakeResolvers","messageChannel","MessageChannel","windowListener","onWindowMessage","handshakeEvent","req","channel","responseId","port1","createProvider","preferredProvider","sendHandshakeRequest","backupProvider","extensionHandshakeTimeoutMs","onmessage","onChannelMessage","port2","timeoutId","extensionHandshakeTimedOut","handshakeResolver","extensionInstalled","resolver","isPlatformBrokerAvailable","nativeExtensionProvider","InteractionHandler","authCodeModule","authModule","handleCodeResponse","authCodeResponse","handleCodeResponseFromServer","validateNonce","cloud_instance_host_name","createCcsCredentials","deserializeResponse","responseLocation","PopupClient","unloadWindow","nativeStorage","popupParams","popupName","generatePopupName","popupWindowAttributes","popupWindowParent","isAsyncPopup","acquireTokenPopupAsync","popup","openSizedPopup","generateLogoutPopupName","mainWindowRedirectUri","logoutPopupAsync","validRequest","Popup","authClient","isPlatformBroker","fetchNativeAccountIdMeasurement","navigateUrl","interactionHandler","popupWindow","initiateAuthRequest","monitorPopupForHash","nativeInteractionClient","absoluteUrl","logoutUri","openPopup","requestUrl","intervalId","setInterval","closed","clearInterval","responseType","finally","cleanPopup","urlNavigate","focus","currentWindow","winLeft","screenLeft","screenX","winTop","screenTop","screenY","winWidth","innerWidth","documentElement","clientWidth","winHeight","innerHeight","clientHeight","width","popupSize","height","top","popupPosition","left","RedirectHandler","redirectStartPage","redirectTimeout","nonceKey","cachedNonce","cachedCcsCred","checkCcsCredentials","tokenResponse","RedirectClient","Redirect","handleBackButton","persisted","getRedirectStartPage","parentMeasurement","getRedirectResponse","performance","getEntriesByType","navigationEntries","getNavigationType","loginRequestUrl","urlParts","replaceHash","handleResponse","processHashOnRedirect","homepage","getHomepage","userProvidedResponse","platformStateObj","validateInteractionType","contentWindow","replaceState","cachedHash","currentAuthority","requestStartPage","loadFrame","loadFrameSync","monitorIframeForHash","iframe","removeHiddenIframe","frameHandle","createHiddenIframe","src","authFrame","visibility","position","border","parentNode","SilentIframeClient","inputRequest","Silent","silentTokenHelper","retryError","retrySilentRequest","msalFrame","RefreshTokenClient","forceCache","acquireTokenByRefreshToken","acquireTokenWithCachedRefreshToken","noFamilyRTInCache","clientMismatchErrorWithFamilyRT","refreshTokenExpirationOffsetSeconds","rtExpiresOnMs","refreshTokenRequest","badRefreshTokenKey","SilentRefreshClient","refreshTokenClient","createRefreshTokenClient","authorityUrl","TokenCache","loadExternalTokens","cacheRecordAccount","loadAccount","loadIdToken","loadAccessToken","loadRefreshToken","accessTokenEntity","refreshTokenEntity","HybridSpaAuthorizationCodeClient","SilentAuthCodeClient","cloudInstanceHostName","getAccountType","performanceEvent","operatingContext","redirectResponse","hybridAuthCodeResponses","rawCloudDiscoveryMetadata","buildStaticAuthorityOptions","nativeCacheOptions","nativeInternalStorage","activeSilentTokenRequests","trackPageVisibility","trackPageVisibilityWithMeasurement","createController","controller","visibilityChangeCount","initCorrelationId","getRequestCorrelationId","initMeasurement","preGeneratePkceCodes","redirectResponseKey","handleRedirectPromiseInternal","loggedInAccounts","useNative","nativeClient","redirectClient","createRedirectClient","accountType","eventError","atrMeasurement","scenarioId","onRedirectNavigateCb","configOnRedirectNavigateCb","isLoggedIn","canUsePlatformBroker","getNativeAccountId","acquireTokenPopup","atPopupMeasurement","pkce","getPreGeneratedPkceCodes","acquireTokenNative","createPopupClient","accessTokenSize","idTokenSize","ssoSilentMeasurement","acquireTokenByCodeAsyncMeasurement","ssoSilent","createSilentIframeClient","acquireTokenByCode","atbcMeasurement","hybridAuthCode","acquireTokenByCodeAsync","silentAuthCodeClient","createSilentAuthCodeClient","tokenRenewalError","acquireTokenFromCache","commonRequest","createSilentCacheClient","silentRefreshClient","createSilentRefreshClient","acquireTokenBySilentIframe","silentIframeClient","logoutRedirect","logoutPopup","clearCache","isInBrowser","getAccountByUsername","getAccountByHomeId","getAccountByLocalId","enableAccountStorageEvents","disableAccountStorageEvents","getTokenCache","setLogger","initializeWrapperLibrary","setNavigationClient","getConfiguration","getPerformanceClient","isBrowserEnv","loginRedirect","loginPopup","acquireTokenSilent","atsMeasurement","acquireTokenSilentDeduped","silentRequestKey","inProgressRequest","activeRequest","acquireTokenSilentAsync","acquireTokenSilentNoIframe","refreshTokenError","shouldTryToResolveSilently","noInteractionRequired","refreshTokenRefreshRequired","isSilentlyResolvable","tryIframeRenewal","checkIfRefreshTokenErrorCanBeResolvedSilently","activeIframeRequest","activePromise","activeCorrelationId","awaitConcurrentIframeMeasure","awaitIframeCorrelationId","activePromiseResult","_resolve","iframeResult","cacheError","pkceCode","usePreGeneratedPkce","PublicClientApplication","createPublicClientApplication","standard","createV3Controller","localId","userName","InvalidTokenError","jwtDecode","token","pos","part","output","charCodeAt","b64DecodeUnicode","base64UrlDecode","styleTagTransform","domAPI","insertStyleElement","locals","_asyncToGenerator","msalInstance","checkEmail","_ref","_data$exists","exists","t0","_x","_useState2","_slicedToArray","useState","officeReady","setOfficeReady","_useState4","loading","setLoading","_useState6","showError","setShowError","_useState8","setError","useEffect","runLogin","_ref2","_callee2","decodedToken","_context2","React","color","logError","alt","dismiss","logo","getAccessTokenAsync","allowConsentPrompt","allowSignInPrompt","forMSGraphAccess","_ref3","_callee3","emailCheck","_context3","_x2","selectedOptions","setSelectedOptions","isOpen","setIsOpen","hoveredItem","setHoveredItem","dropdownRef","useRef","handleSelect","prevSelected","handleClickOutside","contains","BottomIcon","option","RadioColor","RadioBase","NeedHelp","tabs","tabData","All","Tables","Text","Images","files","activeTab","setActiveTab","tab","SearchIcon","placeholder","headingText","Rangedata","headingfirst","ClassName","setData","toggleExpand","prevData","_objectSpread","expanded","_item$RangeName","RangeName","word","documentSearchIcon","bottomIcon","tableIcon","Sheet","checked","setChecked","file","setfile","IconCheck","DismissIcon","UserIcon","NeedHelpIcon","Arrow_white_Import","UpdateIcon","MultiSelectDropdown","CustomTabs","onChange","Checkactive","Checkhover","InsertIcon","ExpandableTable","isArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","_arrayLikeToArray","SetRangedata","_useState10","showpopup","SetShowpopup","_useState12","extractNamedRangeAsHtml","rangeName","namedRange","rowCount","columnCount","textValues","html","j","cell","bgColor","fontColor","fontSize","fontName","bold","workbook","names","getRange","load","sync","getCell","format","fill","font","getDetectRange","getRanges","_callee4","_context4","Excel","run","_ref4","fileName","_iterator","_step","namedItem","range","image","_range","htmlData","_value","sheet","shapes","imageShapes","_iterator2","_step2","shape","_image","imagePayload","_createForOfIteratorHelper","items","getImage","user","worksheets","getActiveWorksheet","uploadData","getAsImage","PictureFormat","png","t1","t2","_x4","_x3","_ref5","_callee5","existingData","updatedData","_context5","_x5","_ref6","_callee7","_context7","_ref7","_callee6","_iterator3","_step3","_iterator4","_step4","_context6","filename","_x6","TableSearch","ArrowExport","ArrowLeft","SignOutIcon","HomeScreen","ExcelImport","ExportExcel","SignOutUser","SLOT_RENDER_FUNCTION_SYMBOL","SLOT_ELEMENT_TYPE_SYMBOL","isSlot","createJSX","runtime","slotRuntime","overrideProps","self","createCompatSlotComponent","getMetadataFromSlotComponent","baseElementType","renderFunction","propsWithoutMetadata","elementType","Runtime","slotProps","TextDirectionContext","TextDirectionProvider","dir","ProviderContext","providerContextDefaultValue","targetDocument","useFluent","_React_useContext","ThemeContext","ThemeProvider","ThemeClassNameProvider","CustomStyleHooksContext","CustomStyleHooksProvider","TooltipVisibilityProvider","OverridesContext","OverridesProvider","IconDirectionContextProvider","__GLOBAL__","__NAMESPACE_PREFIX__","getGlobalVar","defaultValue","DEFINITION_LOOKUP_TABLE","styleBucketOrderingMap","acc","cur","getStyleSheetForBucket","bucketName","insertionPoint","renderer","_a","_b","isMediaBucket","priority","stylesheetKey","getStyleSheetKey","stylesheets","tag","stylesheet","elementAttributes","__cssRulesForSSR","attrName","insertRule","rule","cssRules","cssRule","createIsomorphicStyleSheet","styleElementAttributes","insertBefore","targetBucket","targetOrder","comparer","el","styleElements","querySelectorAll","mediaElements","compareMediaQueries","isSameInsertionKey","nextSibling","findInsertionPoint","safeInsertRule","ruleCSS","lastIndex","defaultCompareMediaQueries","createDOMRenderer","classNameHashSalt","unstable_filterCSSRule","insertionCache","freeze","insertCSSRules","styleBucketName","cssRulesForBucket","RendererContext","useRenderer","isHTMLElement","_typedElement_ownerDocument","typedElement","_options_constructorName","ownerDocument","defaultView","constructorName","_canUseWeakRef","WeakRef","WeakRefInstance","instance","_weakRef","_instance","deref","isDisposed","KEYBORG_FOCUSIN","_canOverrideNativeFocus","_lastId","KeyborgCore","win","_isNavigatingWithKeyboard_DO_NOT_USE","_onFocusIn","_isMouseOrTouchUsedTimer","isNavigatingWithKeyboard","details","detail","relatedTarget","isFocusedProgrammatically","_onMouseDown","buttons","clientX","clientY","_onMouseOrTouch","_win","_onKeyDown","_shouldDismissKeyboardNavigation","_scheduleDismiss","_shouldTriggerKeyboardNavigation","doc","triggerKeys","dismissKeys","_triggerKeys","_dismissKeys","kwin","HTMLElement","origFocus","isCustomFocusCalled","canOverrideNativeFocus","__keyborgNativeFocus","shadowTargets","focusOutHandler","CustomEvent","cancelable","bubbles","composed","originalEvent","dispatchEvent","focusInHandler","node","composedPath","currentShadows","nodeType","Node","DOCUMENT_FRAGMENT_NODE","shadowRootWeakRef","shadowRoot","onFocusIn","lastFocusedProgrammatically","__keyborgData","keyborgNativeFocusEvent","activeElement","setupFocusEvent","update","dispose","_dismissTimer","proto","disposeFocusEvent","keyborgs","__keyborg","Keyborg","isTriggerKey","keyCode","isEditable","isContentEditable","was","_Keyborg","_cb","_id","_core","core","subscribe","unsubscribe","setVal","FOCUS_VISIBLE_ATTR","applyFocusVisiblePolyfill","targetWindow","alreadyInScope","keyborg","registerElementIfNavigating","disposeCurrentElement","removeAttribute","keyborgListener","blurListener","focusVisible","parentElement","useFocusVisible","contextValue","scopeRef","_options_targetDocument","always","resolveShorthand","propsWithMetadata","toObjectMap","baseElementEvents","baseElementProperties","microdataProperties","htmlElementProperties","labelProperties","audioProperties","videoProperties","olProperties","liProperties","anchorProperties","timeProperties","buttonProperties","nativeElementMap","label","audio","video","ol","li","textarea","select","table","tr","th","td","colGroup","col","fieldset","img","dialog","getIntrinsicElementProps","excludedPropNames","_props_as","allowedPropNames","getNativeProps","getNativeElementProps","useMergedRefs","mergedCallback","SSRContext","IdPrefixContext","useId","providedId","idPrefix","_useId","generatedId","escapedId","insertionFactory","hashSequence","classes","sequenceIds","hashLength","padEndHash","len","reduceToClassName","classMap","classString","propertyHash","classNameMapping","hasRTLClassName","reduceToClassNameForSlots","classesMapBySlot","classNamesForSlots","slotName","slotClasses","slotClassesHash","sequenceHash","resultSlotClasses","__styles","factory","insertStyles","ltrClassNamesForSlots","rtlClassNamesForSlots","isLTR","mergeClassesCachedResults","fluentProviderClassNames","useStyles","root","sj55zd","De3pzq","fsow6f","Bahqtrf","Be2twd7","Bhrd7zp","Bg96gwp","useInsertionEffect","DEFAULT_STYLE_HOOKS","DEFAULT_RENDERER_ATTRIBUTES","useFluentProvider_unstable","parentContext","parentTheme","parentOverrides","parentCustomStyleHooks","applyStylesToPortals","customStyleHooks_unstable","theme","overrides_unstable","overrides","mergedTheme","shallowMerge","mergedOverrides","mergedCustomStyleHooks","_renderer_styleElementAttributes","styleTagId","rendererAttributes","styleTag","selector","cssVarRule","cssVar","createCSSRuleFromTheme","themeStyleElement","getElementById","useHandleSSRStyleElements","ssrStyleElement","createStyleTag","deleteRule","insertSheet","_styleTag_current","remove","useFluentProviderThemeStyleTag","themeClassName","serverStyleProps","FluentProvider","styles","resultClassName","sequenceMatch","sequencesIds","sequenceIndex","sequenceId","substr","SEQUENCE_PREFIX","mergeClassesResult","sequenceMappings","sequenceMapping","resultClassesMap","atomicClasses","classesMapHash","newSequenceHash","newClassName","mergeClasses","useFluentProviderStyles_unstable","contextValues","tooltip","iconDirection","textDirection","useFluentProviderContextValues_unstable","dangerouslySetInnerHTML","__html","renderFluentProvider_unstable","grey","whiteAlpha","blackAlpha","white","cranberry","shade50","shade40","shade30","shade20","shade10","primary","tint10","tint20","tint30","tint40","tint50","tint60","green","statusSharedColors","red","darkOrange","yellow","berry","lightGreen","marigold","personaSharedColors","darkRed","pumpkin","peach","gold","brass","brown","forest","seafoam","darkGreen","lightTeal","teal","steel","blue","royalBlue","cornflower","navy","lavender","purple","grape","lilac","pink","magenta","plum","beige","mink","platinum","anchor","mappedStatusColors","orange","statusColorMapping","danger","statusColorPaletteTokens","sharedColor","sharedColorTokens","colorPaletteYellowForeground1","colorPaletteRedForegroundInverted","colorPaletteGreenForegroundInverted","colorPaletteYellowForegroundInverted","personaColorPaletteTokens","colorPaletteTokens","colorStatusTokens","statusColor","statusColorTokens","colorStatusDangerBackground3Hover","colorStatusDangerBackground3Pressed","colorStatusWarningForeground1","colorStatusWarningForeground3","colorStatusWarningBorder2","borderRadius","borderRadiusNone","borderRadiusSmall","borderRadiusMedium","borderRadiusLarge","borderRadiusXLarge","borderRadiusCircular","fontSizes","fontSizeBase100","fontSizeBase200","fontSizeBase300","fontSizeBase400","fontSizeBase500","fontSizeBase600","fontSizeHero700","fontSizeHero800","fontSizeHero900","fontSizeHero1000","lineHeights","lineHeightBase100","lineHeightBase200","lineHeightBase300","lineHeightBase400","lineHeightBase500","lineHeightBase600","lineHeightHero700","lineHeightHero800","lineHeightHero900","lineHeightHero1000","fontWeights","fontWeightRegular","fontWeightMedium","fontWeightSemibold","fontWeightBold","fontFamilies","fontFamilyBase","fontFamilyMonospace","fontFamilyNumeric","strokeWidths","strokeWidthThin","strokeWidthThick","strokeWidthThicker","strokeWidthThickest","createShadowTokens","ambientColor","keyColor","tokenSuffix","durations","durationUltraFast","durationFaster","durationFast","durationNormal","durationGentle","durationSlow","durationSlower","durationUltraSlow","curves","curveAccelerateMax","curveAccelerateMid","curveAccelerateMin","curveDecelerateMax","curveDecelerateMid","curveDecelerateMin","curveEasyEaseMax","curveEasyEase","curveLinear","spacings","horizontalSpacings","spacingHorizontalNone","spacingHorizontalXXS","spacingHorizontalXS","spacingHorizontalSNudge","spacingHorizontalS","spacingHorizontalMNudge","spacingHorizontalM","spacingHorizontalL","spacingHorizontalXL","spacingHorizontalXXL","spacingHorizontalXXXL","verticalSpacings","spacingVerticalNone","spacingVerticalXXS","spacingVerticalXS","spacingVerticalSNudge","spacingVerticalS","spacingVerticalMNudge","spacingVerticalM","spacingVerticalL","spacingVerticalXL","spacingVerticalXXL","spacingVerticalXXXL","webLightTheme","colorTokens","brand","colorNeutralForeground1","colorNeutralForeground1Hover","colorNeutralForeground1Pressed","colorNeutralForeground1Selected","colorNeutralForeground2","colorNeutralForeground2Hover","colorNeutralForeground2Pressed","colorNeutralForeground2Selected","colorNeutralForeground2BrandHover","colorNeutralForeground2BrandPressed","colorNeutralForeground2BrandSelected","colorNeutralForeground3","colorNeutralForeground3Hover","colorNeutralForeground3Pressed","colorNeutralForeground3Selected","colorNeutralForeground3BrandHover","colorNeutralForeground3BrandPressed","colorNeutralForeground3BrandSelected","colorNeutralForeground4","colorNeutralForegroundDisabled","colorNeutralForegroundInvertedDisabled","colorBrandForegroundLink","colorBrandForegroundLinkHover","colorBrandForegroundLinkPressed","colorBrandForegroundLinkSelected","colorNeutralForeground2Link","colorNeutralForeground2LinkHover","colorNeutralForeground2LinkPressed","colorNeutralForeground2LinkSelected","colorCompoundBrandForeground1","colorCompoundBrandForeground1Hover","colorCompoundBrandForeground1Pressed","colorBrandForeground1","colorBrandForeground2","colorBrandForeground2Hover","colorBrandForeground2Pressed","colorNeutralForeground1Static","colorNeutralForegroundStaticInverted","colorNeutralForegroundInverted","colorNeutralForegroundInvertedHover","colorNeutralForegroundInvertedPressed","colorNeutralForegroundInvertedSelected","colorNeutralForegroundInverted2","colorNeutralForegroundOnBrand","colorNeutralForegroundInvertedLink","colorNeutralForegroundInvertedLinkHover","colorNeutralForegroundInvertedLinkPressed","colorNeutralForegroundInvertedLinkSelected","colorBrandForegroundInverted","colorBrandForegroundInvertedHover","colorBrandForegroundInvertedPressed","colorBrandForegroundOnLight","colorBrandForegroundOnLightHover","colorBrandForegroundOnLightPressed","colorBrandForegroundOnLightSelected","colorNeutralBackground1","colorNeutralBackground1Hover","colorNeutralBackground1Pressed","colorNeutralBackground1Selected","colorNeutralBackground2","colorNeutralBackground2Hover","colorNeutralBackground2Pressed","colorNeutralBackground2Selected","colorNeutralBackground3","colorNeutralBackground3Hover","colorNeutralBackground3Pressed","colorNeutralBackground3Selected","colorNeutralBackground4","colorNeutralBackground4Hover","colorNeutralBackground4Pressed","colorNeutralBackground4Selected","colorNeutralBackground5","colorNeutralBackground5Hover","colorNeutralBackground5Pressed","colorNeutralBackground5Selected","colorNeutralBackground6","colorNeutralBackgroundInverted","colorNeutralBackgroundStatic","colorNeutralBackgroundAlpha","colorNeutralBackgroundAlpha2","colorSubtleBackground","colorSubtleBackgroundHover","colorSubtleBackgroundPressed","colorSubtleBackgroundSelected","colorSubtleBackgroundLightAlphaHover","colorSubtleBackgroundLightAlphaPressed","colorSubtleBackgroundLightAlphaSelected","colorSubtleBackgroundInverted","colorSubtleBackgroundInvertedHover","colorSubtleBackgroundInvertedPressed","colorSubtleBackgroundInvertedSelected","colorTransparentBackground","colorTransparentBackgroundHover","colorTransparentBackgroundPressed","colorTransparentBackgroundSelected","colorNeutralBackgroundDisabled","colorNeutralBackgroundInvertedDisabled","colorNeutralStencil1","colorNeutralStencil2","colorNeutralStencil1Alpha","colorNeutralStencil2Alpha","colorBackgroundOverlay","colorScrollbarOverlay","colorBrandBackground","colorBrandBackgroundHover","colorBrandBackgroundPressed","colorBrandBackgroundSelected","colorCompoundBrandBackground","colorCompoundBrandBackgroundHover","colorCompoundBrandBackgroundPressed","colorBrandBackgroundStatic","colorBrandBackground2","colorBrandBackground2Hover","colorBrandBackground2Pressed","colorBrandBackground3Static","colorBrandBackground4Static","colorBrandBackgroundInverted","colorBrandBackgroundInvertedHover","colorBrandBackgroundInvertedPressed","colorBrandBackgroundInvertedSelected","colorNeutralCardBackground","colorNeutralCardBackgroundHover","colorNeutralCardBackgroundPressed","colorNeutralCardBackgroundSelected","colorNeutralCardBackgroundDisabled","colorNeutralStrokeAccessible","colorNeutralStrokeAccessibleHover","colorNeutralStrokeAccessiblePressed","colorNeutralStrokeAccessibleSelected","colorNeutralStroke1","colorNeutralStroke1Hover","colorNeutralStroke1Pressed","colorNeutralStroke1Selected","colorNeutralStroke2","colorNeutralStroke3","colorNeutralStrokeSubtle","colorNeutralStrokeOnBrand","colorNeutralStrokeOnBrand2","colorNeutralStrokeOnBrand2Hover","colorNeutralStrokeOnBrand2Pressed","colorNeutralStrokeOnBrand2Selected","colorBrandStroke1","colorBrandStroke2","colorBrandStroke2Hover","colorBrandStroke2Pressed","colorBrandStroke2Contrast","colorCompoundBrandStroke","colorCompoundBrandStrokeHover","colorCompoundBrandStrokePressed","colorNeutralStrokeDisabled","colorNeutralStrokeInvertedDisabled","colorTransparentStroke","colorTransparentStrokeInteractive","colorTransparentStrokeDisabled","colorNeutralStrokeAlpha","colorNeutralStrokeAlpha2","colorStrokeFocus1","colorStrokeFocus2","colorNeutralShadowAmbient","colorNeutralShadowKey","colorNeutralShadowAmbientLighter","colorNeutralShadowKeyLighter","colorNeutralShadowAmbientDarker","colorNeutralShadowKeyDarker","colorBrandShadowAmbient","colorBrandShadowKey","generateColorTokens","createLightTheme","rootElement","App","stylesInDOM","getIndexByIdentifier","identifier","modulesToDom","idCountMap","identifiers","base","indexByIdentifier","sourceMap","references","updater","addElementStyle","byIndex","api","newObj","lastIdentifiers","newList","newLastIdentifiers","_i","_index","removeStyleElement"],"sourceRoot":""}